apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: virtualgateways.appmesh.aws.kubeform.com
spec:
  group: appmesh.aws.kubeform.com
  names:
    kind: VirtualGateway
    listKind: VirtualGatewayList
    plural: virtualgateways
    singular: virtualgateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              createdDate:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  createdDate:
                    type: string
                  id:
                    type: string
                  lastUpdatedDate:
                    type: string
                  meshName:
                    type: string
                  meshOwner:
                    type: string
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  resourceOwner:
                    type: string
                  spec:
                    properties:
                      backendDefaults:
                        properties:
                          clientPolicy:
                            properties:
                              tls:
                                properties:
                                  certificate:
                                    properties:
                                      file:
                                        properties:
                                          certificateChain:
                                            type: string
                                          privateKey:
                                            type: string
                                        required:
                                        - certificateChain
                                        - privateKey
                                        type: object
                                      sds:
                                        properties:
                                          secretName:
                                            type: string
                                        required:
                                        - secretName
                                        type: object
                                    type: object
                                  enforce:
                                    type: boolean
                                  ports:
                                    items:
                                      format: int64
                                      type: integer
                                    type: array
                                  validation:
                                    properties:
                                      subjectAlternativeNames:
                                        properties:
                                          match:
                                            properties:
                                              exact:
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - exact
                                            type: object
                                        required:
                                        - match
                                        type: object
                                      trust:
                                        properties:
                                          acm:
                                            properties:
                                              certificateAuthorityArns:
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - certificateAuthorityArns
                                            type: object
                                          file:
                                            properties:
                                              certificateChain:
                                                type: string
                                            required:
                                            - certificateChain
                                            type: object
                                          sds:
                                            properties:
                                              secretName:
                                                type: string
                                            required:
                                            - secretName
                                            type: object
                                        type: object
                                    required:
                                    - trust
                                    type: object
                                required:
                                - validation
                                type: object
                            type: object
                        type: object
                      listener:
                        properties:
                          connectionPool:
                            properties:
                              grpc:
                                properties:
                                  maxRequests:
                                    format: int64
                                    type: integer
                                required:
                                - maxRequests
                                type: object
                              http:
                                properties:
                                  maxConnections:
                                    format: int64
                                    type: integer
                                  maxPendingRequests:
                                    format: int64
                                    type: integer
                                required:
                                - maxConnections
                                type: object
                              http2:
                                properties:
                                  maxRequests:
                                    format: int64
                                    type: integer
                                required:
                                - maxRequests
                                type: object
                            type: object
                          healthCheck:
                            properties:
                              healthyThreshold:
                                format: int64
                                type: integer
                              intervalMillis:
                                format: int64
                                type: integer
                              path:
                                type: string
                              port:
                                format: int64
                                type: integer
                              protocol:
                                type: string
                              timeoutMillis:
                                format: int64
                                type: integer
                              unhealthyThreshold:
                                format: int64
                                type: integer
                            required:
                            - healthyThreshold
                            - intervalMillis
                            - protocol
                            - timeoutMillis
                            - unhealthyThreshold
                            type: object
                          portMapping:
                            properties:
                              port:
                                format: int64
                                type: integer
                              protocol:
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          tls:
                            properties:
                              certificate:
                                properties:
                                  acm:
                                    properties:
                                      certificateArn:
                                        type: string
                                    required:
                                    - certificateArn
                                    type: object
                                  file:
                                    properties:
                                      certificateChain:
                                        type: string
                                      privateKey:
                                        type: string
                                    required:
                                    - certificateChain
                                    - privateKey
                                    type: object
                                  sds:
                                    properties:
                                      secretName:
                                        type: string
                                    required:
                                    - secretName
                                    type: object
                                type: object
                              mode:
                                type: string
                              validation:
                                properties:
                                  subjectAlternativeNames:
                                    properties:
                                      match:
                                        properties:
                                          exact:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - exact
                                        type: object
                                    required:
                                    - match
                                    type: object
                                  trust:
                                    properties:
                                      file:
                                        properties:
                                          certificateChain:
                                            type: string
                                        required:
                                        - certificateChain
                                        type: object
                                      sds:
                                        properties:
                                          secretName:
                                            type: string
                                        required:
                                        - secretName
                                        type: object
                                    type: object
                                required:
                                - trust
                                type: object
                            required:
                            - certificate
                            - mode
                            type: object
                        required:
                        - portMapping
                        type: object
                      logging:
                        properties:
                          accessLog:
                            properties:
                              file:
                                properties:
                                  path:
                                    type: string
                                required:
                                - path
                                type: object
                            type: object
                        type: object
                    required:
                    - listener
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - meshName
                - name
                - providerRef
                - spec
                type: object
              lastUpdatedDate:
                type: string
              meshName:
                type: string
              meshOwner:
                type: string
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resourceOwner:
                type: string
              spec:
                properties:
                  backendDefaults:
                    properties:
                      clientPolicy:
                        properties:
                          tls:
                            properties:
                              certificate:
                                properties:
                                  file:
                                    properties:
                                      certificateChain:
                                        type: string
                                      privateKey:
                                        type: string
                                    required:
                                    - certificateChain
                                    - privateKey
                                    type: object
                                  sds:
                                    properties:
                                      secretName:
                                        type: string
                                    required:
                                    - secretName
                                    type: object
                                type: object
                              enforce:
                                type: boolean
                              ports:
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              validation:
                                properties:
                                  subjectAlternativeNames:
                                    properties:
                                      match:
                                        properties:
                                          exact:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - exact
                                        type: object
                                    required:
                                    - match
                                    type: object
                                  trust:
                                    properties:
                                      acm:
                                        properties:
                                          certificateAuthorityArns:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - certificateAuthorityArns
                                        type: object
                                      file:
                                        properties:
                                          certificateChain:
                                            type: string
                                        required:
                                        - certificateChain
                                        type: object
                                      sds:
                                        properties:
                                          secretName:
                                            type: string
                                        required:
                                        - secretName
                                        type: object
                                    type: object
                                required:
                                - trust
                                type: object
                            required:
                            - validation
                            type: object
                        type: object
                    type: object
                  listener:
                    properties:
                      connectionPool:
                        properties:
                          grpc:
                            properties:
                              maxRequests:
                                format: int64
                                type: integer
                            required:
                            - maxRequests
                            type: object
                          http:
                            properties:
                              maxConnections:
                                format: int64
                                type: integer
                              maxPendingRequests:
                                format: int64
                                type: integer
                            required:
                            - maxConnections
                            type: object
                          http2:
                            properties:
                              maxRequests:
                                format: int64
                                type: integer
                            required:
                            - maxRequests
                            type: object
                        type: object
                      healthCheck:
                        properties:
                          healthyThreshold:
                            format: int64
                            type: integer
                          intervalMillis:
                            format: int64
                            type: integer
                          path:
                            type: string
                          port:
                            format: int64
                            type: integer
                          protocol:
                            type: string
                          timeoutMillis:
                            format: int64
                            type: integer
                          unhealthyThreshold:
                            format: int64
                            type: integer
                        required:
                        - healthyThreshold
                        - intervalMillis
                        - protocol
                        - timeoutMillis
                        - unhealthyThreshold
                        type: object
                      portMapping:
                        properties:
                          port:
                            format: int64
                            type: integer
                          protocol:
                            type: string
                        required:
                        - port
                        - protocol
                        type: object
                      tls:
                        properties:
                          certificate:
                            properties:
                              acm:
                                properties:
                                  certificateArn:
                                    type: string
                                required:
                                - certificateArn
                                type: object
                              file:
                                properties:
                                  certificateChain:
                                    type: string
                                  privateKey:
                                    type: string
                                required:
                                - certificateChain
                                - privateKey
                                type: object
                              sds:
                                properties:
                                  secretName:
                                    type: string
                                required:
                                - secretName
                                type: object
                            type: object
                          mode:
                            type: string
                          validation:
                            properties:
                              subjectAlternativeNames:
                                properties:
                                  match:
                                    properties:
                                      exact:
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - exact
                                    type: object
                                required:
                                - match
                                type: object
                              trust:
                                properties:
                                  file:
                                    properties:
                                      certificateChain:
                                        type: string
                                    required:
                                    - certificateChain
                                    type: object
                                  sds:
                                    properties:
                                      secretName:
                                        type: string
                                    required:
                                    - secretName
                                    type: object
                                type: object
                            required:
                            - trust
                            type: object
                        required:
                        - certificate
                        - mode
                        type: object
                    required:
                    - portMapping
                    type: object
                  logging:
                    properties:
                      accessLog:
                        properties:
                          file:
                            properties:
                              path:
                                type: string
                            required:
                            - path
                            type: object
                        type: object
                    type: object
                required:
                - listener
                type: object
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - meshName
            - name
            - providerRef
            - spec
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: gatewayroutes.appmesh.aws.kubeform.com
spec:
  group: appmesh.aws.kubeform.com
  names:
    kind: GatewayRoute
    listKind: GatewayRouteList
    plural: gatewayroutes
    singular: gatewayroute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              createdDate:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  createdDate:
                    type: string
                  id:
                    type: string
                  lastUpdatedDate:
                    type: string
                  meshName:
                    type: string
                  meshOwner:
                    type: string
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  resourceOwner:
                    type: string
                  spec:
                    properties:
                      grpcRoute:
                        properties:
                          action:
                            properties:
                              target:
                                properties:
                                  virtualService:
                                    properties:
                                      virtualServiceName:
                                        type: string
                                    required:
                                    - virtualServiceName
                                    type: object
                                required:
                                - virtualService
                                type: object
                            required:
                            - target
                            type: object
                          match:
                            properties:
                              serviceName:
                                type: string
                            required:
                            - serviceName
                            type: object
                        required:
                        - action
                        - match
                        type: object
                      http2Route:
                        properties:
                          action:
                            properties:
                              target:
                                properties:
                                  virtualService:
                                    properties:
                                      virtualServiceName:
                                        type: string
                                    required:
                                    - virtualServiceName
                                    type: object
                                required:
                                - virtualService
                                type: object
                            required:
                            - target
                            type: object
                          match:
                            properties:
                              prefix:
                                type: string
                            required:
                            - prefix
                            type: object
                        required:
                        - action
                        - match
                        type: object
                      httpRoute:
                        properties:
                          action:
                            properties:
                              target:
                                properties:
                                  virtualService:
                                    properties:
                                      virtualServiceName:
                                        type: string
                                    required:
                                    - virtualServiceName
                                    type: object
                                required:
                                - virtualService
                                type: object
                            required:
                            - target
                            type: object
                          match:
                            properties:
                              prefix:
                                type: string
                            required:
                            - prefix
                            type: object
                        required:
                        - action
                        - match
                        type: object
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  virtualGatewayName:
                    type: string
                required:
                - meshName
                - name
                - providerRef
                - spec
                - virtualGatewayName
                type: object
              lastUpdatedDate:
                type: string
              meshName:
                type: string
              meshOwner:
                type: string
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resourceOwner:
                type: string
              spec:
                properties:
                  grpcRoute:
                    properties:
                      action:
                        properties:
                          target:
                            properties:
                              virtualService:
                                properties:
                                  virtualServiceName:
                                    type: string
                                required:
                                - virtualServiceName
                                type: object
                            required:
                            - virtualService
                            type: object
                        required:
                        - target
                        type: object
                      match:
                        properties:
                          serviceName:
                            type: string
                        required:
                        - serviceName
                        type: object
                    required:
                    - action
                    - match
                    type: object
                  http2Route:
                    properties:
                      action:
                        properties:
                          target:
                            properties:
                              virtualService:
                                properties:
                                  virtualServiceName:
                                    type: string
                                required:
                                - virtualServiceName
                                type: object
                            required:
                            - virtualService
                            type: object
                        required:
                        - target
                        type: object
                      match:
                        properties:
                          prefix:
                            type: string
                        required:
                        - prefix
                        type: object
                    required:
                    - action
                    - match
                    type: object
                  httpRoute:
                    properties:
                      action:
                        properties:
                          target:
                            properties:
                              virtualService:
                                properties:
                                  virtualServiceName:
                                    type: string
                                required:
                                - virtualServiceName
                                type: object
                            required:
                            - virtualService
                            type: object
                        required:
                        - target
                        type: object
                      match:
                        properties:
                          prefix:
                            type: string
                        required:
                        - prefix
                        type: object
                    required:
                    - action
                    - match
                    type: object
                type: object
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              virtualGatewayName:
                type: string
            required:
            - meshName
            - name
            - providerRef
            - spec
            - virtualGatewayName
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: virtualservices.appmesh.aws.kubeform.com
spec:
  group: appmesh.aws.kubeform.com
  names:
    kind: VirtualService
    listKind: VirtualServiceList
    plural: virtualservices
    singular: virtualservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              createdDate:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  createdDate:
                    type: string
                  id:
                    type: string
                  lastUpdatedDate:
                    type: string
                  meshName:
                    type: string
                  meshOwner:
                    type: string
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  resourceOwner:
                    type: string
                  spec:
                    properties:
                      provider:
                        properties:
                          virtualNode:
                            properties:
                              virtualNodeName:
                                type: string
                            required:
                            - virtualNodeName
                            type: object
                          virtualRouter:
                            properties:
                              virtualRouterName:
                                type: string
                            required:
                            - virtualRouterName
                            type: object
                        type: object
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - meshName
                - name
                - providerRef
                - spec
                type: object
              lastUpdatedDate:
                type: string
              meshName:
                type: string
              meshOwner:
                type: string
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resourceOwner:
                type: string
              spec:
                properties:
                  provider:
                    properties:
                      virtualNode:
                        properties:
                          virtualNodeName:
                            type: string
                        required:
                        - virtualNodeName
                        type: object
                      virtualRouter:
                        properties:
                          virtualRouterName:
                            type: string
                        required:
                        - virtualRouterName
                        type: object
                    type: object
                type: object
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - meshName
            - name
            - providerRef
            - spec
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: meshes.appmesh.aws.kubeform.com
spec:
  group: appmesh.aws.kubeform.com
  names:
    kind: Mesh
    listKind: MeshList
    plural: meshes
    singular: mesh
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              createdDate:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  createdDate:
                    type: string
                  id:
                    type: string
                  lastUpdatedDate:
                    type: string
                  meshOwner:
                    type: string
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  resourceOwner:
                    type: string
                  spec:
                    properties:
                      egressFilter:
                        properties:
                          type:
                            type: string
                        type: object
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - name
                - providerRef
                type: object
              lastUpdatedDate:
                type: string
              meshOwner:
                type: string
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resourceOwner:
                type: string
              spec:
                properties:
                  egressFilter:
                    properties:
                      type:
                        type: string
                    type: object
                type: object
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: routes.appmesh.aws.kubeform.com
spec:
  group: appmesh.aws.kubeform.com
  names:
    kind: Route
    listKind: RouteList
    plural: routes
    singular: route
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              createdDate:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  createdDate:
                    type: string
                  id:
                    type: string
                  lastUpdatedDate:
                    type: string
                  meshName:
                    type: string
                  meshOwner:
                    type: string
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  resourceOwner:
                    type: string
                  spec:
                    properties:
                      grpcRoute:
                        properties:
                          action:
                            properties:
                              weightedTarget:
                                items:
                                  properties:
                                    virtualNode:
                                      type: string
                                    weight:
                                      format: int64
                                      type: integer
                                  required:
                                  - virtualNode
                                  - weight
                                  type: object
                                maxItems: 10
                                minItems: 1
                                type: array
                            required:
                            - weightedTarget
                            type: object
                          match:
                            properties:
                              metadata:
                                items:
                                  properties:
                                    invert:
                                      type: boolean
                                    match:
                                      properties:
                                        exact:
                                          type: string
                                        prefix:
                                          type: string
                                        range:
                                          properties:
                                            end:
                                              format: int64
                                              type: integer
                                            start:
                                              format: int64
                                              type: integer
                                          required:
                                          - end
                                          - start
                                          type: object
                                        regex:
                                          type: string
                                        suffix:
                                          type: string
                                      type: object
                                    name:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                maxItems: 10
                                type: array
                              methodName:
                                type: string
                              prefix:
                                type: string
                              serviceName:
                                type: string
                            type: object
                          retryPolicy:
                            properties:
                              grpcRetryEvents:
                                items:
                                  type: string
                                type: array
                              httpRetryEvents:
                                items:
                                  type: string
                                type: array
                              maxRetries:
                                format: int64
                                type: integer
                              perRetryTimeout:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                              tcpRetryEvents:
                                items:
                                  type: string
                                type: array
                            required:
                            - maxRetries
                            - perRetryTimeout
                            type: object
                          timeout:
                            properties:
                              idle:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                              perRequest:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                            type: object
                        required:
                        - action
                        type: object
                      http2Route:
                        properties:
                          action:
                            properties:
                              weightedTarget:
                                items:
                                  properties:
                                    virtualNode:
                                      type: string
                                    weight:
                                      format: int64
                                      type: integer
                                  required:
                                  - virtualNode
                                  - weight
                                  type: object
                                maxItems: 10
                                minItems: 1
                                type: array
                            required:
                            - weightedTarget
                            type: object
                          match:
                            properties:
                              header:
                                items:
                                  properties:
                                    invert:
                                      type: boolean
                                    match:
                                      properties:
                                        exact:
                                          type: string
                                        prefix:
                                          type: string
                                        range:
                                          properties:
                                            end:
                                              format: int64
                                              type: integer
                                            start:
                                              format: int64
                                              type: integer
                                          required:
                                          - end
                                          - start
                                          type: object
                                        regex:
                                          type: string
                                        suffix:
                                          type: string
                                      type: object
                                    name:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                maxItems: 10
                                type: array
                              method:
                                type: string
                              prefix:
                                type: string
                              scheme:
                                type: string
                            required:
                            - prefix
                            type: object
                          retryPolicy:
                            properties:
                              httpRetryEvents:
                                items:
                                  type: string
                                type: array
                              maxRetries:
                                format: int64
                                type: integer
                              perRetryTimeout:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                              tcpRetryEvents:
                                items:
                                  type: string
                                type: array
                            required:
                            - maxRetries
                            - perRetryTimeout
                            type: object
                          timeout:
                            properties:
                              idle:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                              perRequest:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                            type: object
                        required:
                        - action
                        - match
                        type: object
                      httpRoute:
                        properties:
                          action:
                            properties:
                              weightedTarget:
                                items:
                                  properties:
                                    virtualNode:
                                      type: string
                                    weight:
                                      format: int64
                                      type: integer
                                  required:
                                  - virtualNode
                                  - weight
                                  type: object
                                maxItems: 10
                                minItems: 1
                                type: array
                            required:
                            - weightedTarget
                            type: object
                          match:
                            properties:
                              header:
                                items:
                                  properties:
                                    invert:
                                      type: boolean
                                    match:
                                      properties:
                                        exact:
                                          type: string
                                        prefix:
                                          type: string
                                        range:
                                          properties:
                                            end:
                                              format: int64
                                              type: integer
                                            start:
                                              format: int64
                                              type: integer
                                          required:
                                          - end
                                          - start
                                          type: object
                                        regex:
                                          type: string
                                        suffix:
                                          type: string
                                      type: object
                                    name:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                maxItems: 10
                                type: array
                              method:
                                type: string
                              prefix:
                                type: string
                              scheme:
                                type: string
                            required:
                            - prefix
                            type: object
                          retryPolicy:
                            properties:
                              httpRetryEvents:
                                items:
                                  type: string
                                type: array
                              maxRetries:
                                format: int64
                                type: integer
                              perRetryTimeout:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                              tcpRetryEvents:
                                items:
                                  type: string
                                type: array
                            required:
                            - maxRetries
                            - perRetryTimeout
                            type: object
                          timeout:
                            properties:
                              idle:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                              perRequest:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                            type: object
                        required:
                        - action
                        - match
                        type: object
                      priority:
                        format: int64
                        type: integer
                      tcpRoute:
                        properties:
                          action:
                            properties:
                              weightedTarget:
                                items:
                                  properties:
                                    virtualNode:
                                      type: string
                                    weight:
                                      format: int64
                                      type: integer
                                  required:
                                  - virtualNode
                                  - weight
                                  type: object
                                maxItems: 10
                                minItems: 1
                                type: array
                            required:
                            - weightedTarget
                            type: object
                          timeout:
                            properties:
                              idle:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                            type: object
                        required:
                        - action
                        type: object
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  virtualRouterName:
                    type: string
                required:
                - meshName
                - name
                - providerRef
                - spec
                - virtualRouterName
                type: object
              lastUpdatedDate:
                type: string
              meshName:
                type: string
              meshOwner:
                type: string
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resourceOwner:
                type: string
              spec:
                properties:
                  grpcRoute:
                    properties:
                      action:
                        properties:
                          weightedTarget:
                            items:
                              properties:
                                virtualNode:
                                  type: string
                                weight:
                                  format: int64
                                  type: integer
                              required:
                              - virtualNode
                              - weight
                              type: object
                            maxItems: 10
                            minItems: 1
                            type: array
                        required:
                        - weightedTarget
                        type: object
                      match:
                        properties:
                          metadata:
                            items:
                              properties:
                                invert:
                                  type: boolean
                                match:
                                  properties:
                                    exact:
                                      type: string
                                    prefix:
                                      type: string
                                    range:
                                      properties:
                                        end:
                                          format: int64
                                          type: integer
                                        start:
                                          format: int64
                                          type: integer
                                      required:
                                      - end
                                      - start
                                      type: object
                                    regex:
                                      type: string
                                    suffix:
                                      type: string
                                  type: object
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                            maxItems: 10
                            type: array
                          methodName:
                            type: string
                          prefix:
                            type: string
                          serviceName:
                            type: string
                        type: object
                      retryPolicy:
                        properties:
                          grpcRetryEvents:
                            items:
                              type: string
                            type: array
                          httpRetryEvents:
                            items:
                              type: string
                            type: array
                          maxRetries:
                            format: int64
                            type: integer
                          perRetryTimeout:
                            properties:
                              unit:
                                type: string
                              value:
                                format: int64
                                type: integer
                            required:
                            - unit
                            - value
                            type: object
                          tcpRetryEvents:
                            items:
                              type: string
                            type: array
                        required:
                        - maxRetries
                        - perRetryTimeout
                        type: object
                      timeout:
                        properties:
                          idle:
                            properties:
                              unit:
                                type: string
                              value:
                                format: int64
                                type: integer
                            required:
                            - unit
                            - value
                            type: object
                          perRequest:
                            properties:
                              unit:
                                type: string
                              value:
                                format: int64
                                type: integer
                            required:
                            - unit
                            - value
                            type: object
                        type: object
                    required:
                    - action
                    type: object
                  http2Route:
                    properties:
                      action:
                        properties:
                          weightedTarget:
                            items:
                              properties:
                                virtualNode:
                                  type: string
                                weight:
                                  format: int64
                                  type: integer
                              required:
                              - virtualNode
                              - weight
                              type: object
                            maxItems: 10
                            minItems: 1
                            type: array
                        required:
                        - weightedTarget
                        type: object
                      match:
                        properties:
                          header:
                            items:
                              properties:
                                invert:
                                  type: boolean
                                match:
                                  properties:
                                    exact:
                                      type: string
                                    prefix:
                                      type: string
                                    range:
                                      properties:
                                        end:
                                          format: int64
                                          type: integer
                                        start:
                                          format: int64
                                          type: integer
                                      required:
                                      - end
                                      - start
                                      type: object
                                    regex:
                                      type: string
                                    suffix:
                                      type: string
                                  type: object
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                            maxItems: 10
                            type: array
                          method:
                            type: string
                          prefix:
                            type: string
                          scheme:
                            type: string
                        required:
                        - prefix
                        type: object
                      retryPolicy:
                        properties:
                          httpRetryEvents:
                            items:
                              type: string
                            type: array
                          maxRetries:
                            format: int64
                            type: integer
                          perRetryTimeout:
                            properties:
                              unit:
                                type: string
                              value:
                                format: int64
                                type: integer
                            required:
                            - unit
                            - value
                            type: object
                          tcpRetryEvents:
                            items:
                              type: string
                            type: array
                        required:
                        - maxRetries
                        - perRetryTimeout
                        type: object
                      timeout:
                        properties:
                          idle:
                            properties:
                              unit:
                                type: string
                              value:
                                format: int64
                                type: integer
                            required:
                            - unit
                            - value
                            type: object
                          perRequest:
                            properties:
                              unit:
                                type: string
                              value:
                                format: int64
                                type: integer
                            required:
                            - unit
                            - value
                            type: object
                        type: object
                    required:
                    - action
                    - match
                    type: object
                  httpRoute:
                    properties:
                      action:
                        properties:
                          weightedTarget:
                            items:
                              properties:
                                virtualNode:
                                  type: string
                                weight:
                                  format: int64
                                  type: integer
                              required:
                              - virtualNode
                              - weight
                              type: object
                            maxItems: 10
                            minItems: 1
                            type: array
                        required:
                        - weightedTarget
                        type: object
                      match:
                        properties:
                          header:
                            items:
                              properties:
                                invert:
                                  type: boolean
                                match:
                                  properties:
                                    exact:
                                      type: string
                                    prefix:
                                      type: string
                                    range:
                                      properties:
                                        end:
                                          format: int64
                                          type: integer
                                        start:
                                          format: int64
                                          type: integer
                                      required:
                                      - end
                                      - start
                                      type: object
                                    regex:
                                      type: string
                                    suffix:
                                      type: string
                                  type: object
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                            maxItems: 10
                            type: array
                          method:
                            type: string
                          prefix:
                            type: string
                          scheme:
                            type: string
                        required:
                        - prefix
                        type: object
                      retryPolicy:
                        properties:
                          httpRetryEvents:
                            items:
                              type: string
                            type: array
                          maxRetries:
                            format: int64
                            type: integer
                          perRetryTimeout:
                            properties:
                              unit:
                                type: string
                              value:
                                format: int64
                                type: integer
                            required:
                            - unit
                            - value
                            type: object
                          tcpRetryEvents:
                            items:
                              type: string
                            type: array
                        required:
                        - maxRetries
                        - perRetryTimeout
                        type: object
                      timeout:
                        properties:
                          idle:
                            properties:
                              unit:
                                type: string
                              value:
                                format: int64
                                type: integer
                            required:
                            - unit
                            - value
                            type: object
                          perRequest:
                            properties:
                              unit:
                                type: string
                              value:
                                format: int64
                                type: integer
                            required:
                            - unit
                            - value
                            type: object
                        type: object
                    required:
                    - action
                    - match
                    type: object
                  priority:
                    format: int64
                    type: integer
                  tcpRoute:
                    properties:
                      action:
                        properties:
                          weightedTarget:
                            items:
                              properties:
                                virtualNode:
                                  type: string
                                weight:
                                  format: int64
                                  type: integer
                              required:
                              - virtualNode
                              - weight
                              type: object
                            maxItems: 10
                            minItems: 1
                            type: array
                        required:
                        - weightedTarget
                        type: object
                      timeout:
                        properties:
                          idle:
                            properties:
                              unit:
                                type: string
                              value:
                                format: int64
                                type: integer
                            required:
                            - unit
                            - value
                            type: object
                        type: object
                    required:
                    - action
                    type: object
                type: object
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              virtualRouterName:
                type: string
            required:
            - meshName
            - name
            - providerRef
            - spec
            - virtualRouterName
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: virtualrouters.appmesh.aws.kubeform.com
spec:
  group: appmesh.aws.kubeform.com
  names:
    kind: VirtualRouter
    listKind: VirtualRouterList
    plural: virtualrouters
    singular: virtualrouter
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              createdDate:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  createdDate:
                    type: string
                  id:
                    type: string
                  lastUpdatedDate:
                    type: string
                  meshName:
                    type: string
                  meshOwner:
                    type: string
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  resourceOwner:
                    type: string
                  spec:
                    properties:
                      listener:
                        properties:
                          portMapping:
                            properties:
                              port:
                                format: int64
                                type: integer
                              protocol:
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                        required:
                        - portMapping
                        type: object
                    required:
                    - listener
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - meshName
                - name
                - providerRef
                - spec
                type: object
              lastUpdatedDate:
                type: string
              meshName:
                type: string
              meshOwner:
                type: string
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resourceOwner:
                type: string
              spec:
                properties:
                  listener:
                    properties:
                      portMapping:
                        properties:
                          port:
                            format: int64
                            type: integer
                          protocol:
                            type: string
                        required:
                        - port
                        - protocol
                        type: object
                    required:
                    - portMapping
                    type: object
                required:
                - listener
                type: object
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - meshName
            - name
            - providerRef
            - spec
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: virtualnodes.appmesh.aws.kubeform.com
spec:
  group: appmesh.aws.kubeform.com
  names:
    kind: VirtualNode
    listKind: VirtualNodeList
    plural: virtualnodes
    singular: virtualnode
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              createdDate:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  createdDate:
                    type: string
                  id:
                    type: string
                  lastUpdatedDate:
                    type: string
                  meshName:
                    type: string
                  meshOwner:
                    type: string
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  resourceOwner:
                    type: string
                  spec:
                    properties:
                      backend:
                        items:
                          properties:
                            virtualService:
                              properties:
                                clientPolicy:
                                  properties:
                                    tls:
                                      properties:
                                        certificate:
                                          properties:
                                            file:
                                              properties:
                                                certificateChain:
                                                  type: string
                                                privateKey:
                                                  type: string
                                              required:
                                              - certificateChain
                                              - privateKey
                                              type: object
                                            sds:
                                              properties:
                                                secretName:
                                                  type: string
                                              required:
                                              - secretName
                                              type: object
                                          type: object
                                        enforce:
                                          type: boolean
                                        ports:
                                          items:
                                            format: int64
                                            type: integer
                                          type: array
                                        validation:
                                          properties:
                                            subjectAlternativeNames:
                                              properties:
                                                match:
                                                  properties:
                                                    exact:
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - exact
                                                  type: object
                                              required:
                                              - match
                                              type: object
                                            trust:
                                              properties:
                                                acm:
                                                  properties:
                                                    certificateAuthorityArns:
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - certificateAuthorityArns
                                                  type: object
                                                file:
                                                  properties:
                                                    certificateChain:
                                                      type: string
                                                  required:
                                                  - certificateChain
                                                  type: object
                                                sds:
                                                  properties:
                                                    secretName:
                                                      type: string
                                                  required:
                                                  - secretName
                                                  type: object
                                              type: object
                                          required:
                                          - trust
                                          type: object
                                      required:
                                      - validation
                                      type: object
                                  type: object
                                virtualServiceName:
                                  type: string
                              required:
                              - virtualServiceName
                              type: object
                          required:
                          - virtualService
                          type: object
                        maxItems: 25
                        type: array
                      backendDefaults:
                        properties:
                          clientPolicy:
                            properties:
                              tls:
                                properties:
                                  certificate:
                                    properties:
                                      file:
                                        properties:
                                          certificateChain:
                                            type: string
                                          privateKey:
                                            type: string
                                        required:
                                        - certificateChain
                                        - privateKey
                                        type: object
                                      sds:
                                        properties:
                                          secretName:
                                            type: string
                                        required:
                                        - secretName
                                        type: object
                                    type: object
                                  enforce:
                                    type: boolean
                                  ports:
                                    items:
                                      format: int64
                                      type: integer
                                    type: array
                                  validation:
                                    properties:
                                      subjectAlternativeNames:
                                        properties:
                                          match:
                                            properties:
                                              exact:
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - exact
                                            type: object
                                        required:
                                        - match
                                        type: object
                                      trust:
                                        properties:
                                          acm:
                                            properties:
                                              certificateAuthorityArns:
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - certificateAuthorityArns
                                            type: object
                                          file:
                                            properties:
                                              certificateChain:
                                                type: string
                                            required:
                                            - certificateChain
                                            type: object
                                          sds:
                                            properties:
                                              secretName:
                                                type: string
                                            required:
                                            - secretName
                                            type: object
                                        type: object
                                    required:
                                    - trust
                                    type: object
                                required:
                                - validation
                                type: object
                            type: object
                        type: object
                      listener:
                        properties:
                          connectionPool:
                            properties:
                              grpc:
                                properties:
                                  maxRequests:
                                    format: int64
                                    type: integer
                                required:
                                - maxRequests
                                type: object
                              http:
                                properties:
                                  maxConnections:
                                    format: int64
                                    type: integer
                                  maxPendingRequests:
                                    format: int64
                                    type: integer
                                required:
                                - maxConnections
                                type: object
                              http2:
                                properties:
                                  maxRequests:
                                    format: int64
                                    type: integer
                                required:
                                - maxRequests
                                type: object
                              tcp:
                                properties:
                                  maxConnections:
                                    format: int64
                                    type: integer
                                required:
                                - maxConnections
                                type: object
                            type: object
                          healthCheck:
                            properties:
                              healthyThreshold:
                                format: int64
                                type: integer
                              intervalMillis:
                                format: int64
                                type: integer
                              path:
                                type: string
                              port:
                                format: int64
                                type: integer
                              protocol:
                                type: string
                              timeoutMillis:
                                format: int64
                                type: integer
                              unhealthyThreshold:
                                format: int64
                                type: integer
                            required:
                            - healthyThreshold
                            - intervalMillis
                            - protocol
                            - timeoutMillis
                            - unhealthyThreshold
                            type: object
                          outlierDetection:
                            properties:
                              baseEjectionDuration:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                              interval:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                              maxEjectionPercent:
                                format: int64
                                type: integer
                              maxServerErrors:
                                format: int64
                                type: integer
                            required:
                            - baseEjectionDuration
                            - interval
                            - maxEjectionPercent
                            - maxServerErrors
                            type: object
                          portMapping:
                            properties:
                              port:
                                format: int64
                                type: integer
                              protocol:
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          timeout:
                            properties:
                              grpc:
                                properties:
                                  idle:
                                    properties:
                                      unit:
                                        type: string
                                      value:
                                        format: int64
                                        type: integer
                                    required:
                                    - unit
                                    - value
                                    type: object
                                  perRequest:
                                    properties:
                                      unit:
                                        type: string
                                      value:
                                        format: int64
                                        type: integer
                                    required:
                                    - unit
                                    - value
                                    type: object
                                type: object
                              http:
                                properties:
                                  idle:
                                    properties:
                                      unit:
                                        type: string
                                      value:
                                        format: int64
                                        type: integer
                                    required:
                                    - unit
                                    - value
                                    type: object
                                  perRequest:
                                    properties:
                                      unit:
                                        type: string
                                      value:
                                        format: int64
                                        type: integer
                                    required:
                                    - unit
                                    - value
                                    type: object
                                type: object
                              http2:
                                properties:
                                  idle:
                                    properties:
                                      unit:
                                        type: string
                                      value:
                                        format: int64
                                        type: integer
                                    required:
                                    - unit
                                    - value
                                    type: object
                                  perRequest:
                                    properties:
                                      unit:
                                        type: string
                                      value:
                                        format: int64
                                        type: integer
                                    required:
                                    - unit
                                    - value
                                    type: object
                                type: object
                              tcp:
                                properties:
                                  idle:
                                    properties:
                                      unit:
                                        type: string
                                      value:
                                        format: int64
                                        type: integer
                                    required:
                                    - unit
                                    - value
                                    type: object
                                type: object
                            type: object
                          tls:
                            properties:
                              certificate:
                                properties:
                                  acm:
                                    properties:
                                      certificateArn:
                                        type: string
                                    required:
                                    - certificateArn
                                    type: object
                                  file:
                                    properties:
                                      certificateChain:
                                        type: string
                                      privateKey:
                                        type: string
                                    required:
                                    - certificateChain
                                    - privateKey
                                    type: object
                                  sds:
                                    properties:
                                      secretName:
                                        type: string
                                    required:
                                    - secretName
                                    type: object
                                type: object
                              mode:
                                type: string
                              validation:
                                properties:
                                  subjectAlternativeNames:
                                    properties:
                                      match:
                                        properties:
                                          exact:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - exact
                                        type: object
                                    required:
                                    - match
                                    type: object
                                  trust:
                                    properties:
                                      file:
                                        properties:
                                          certificateChain:
                                            type: string
                                        required:
                                        - certificateChain
                                        type: object
                                      sds:
                                        properties:
                                          secretName:
                                            type: string
                                        required:
                                        - secretName
                                        type: object
                                    type: object
                                required:
                                - trust
                                type: object
                            required:
                            - certificate
                            - mode
                            type: object
                        required:
                        - portMapping
                        type: object
                      logging:
                        properties:
                          accessLog:
                            properties:
                              file:
                                properties:
                                  path:
                                    type: string
                                required:
                                - path
                                type: object
                            type: object
                        type: object
                      serviceDiscovery:
                        properties:
                          awsCloudMap:
                            properties:
                              attributes:
                                additionalProperties:
                                  type: string
                                type: object
                              namespaceName:
                                type: string
                              serviceName:
                                type: string
                            required:
                            - namespaceName
                            - serviceName
                            type: object
                          dns:
                            properties:
                              hostname:
                                type: string
                            required:
                            - hostname
                            type: object
                        type: object
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - meshName
                - name
                - providerRef
                - spec
                type: object
              lastUpdatedDate:
                type: string
              meshName:
                type: string
              meshOwner:
                type: string
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resourceOwner:
                type: string
              spec:
                properties:
                  backend:
                    items:
                      properties:
                        virtualService:
                          properties:
                            clientPolicy:
                              properties:
                                tls:
                                  properties:
                                    certificate:
                                      properties:
                                        file:
                                          properties:
                                            certificateChain:
                                              type: string
                                            privateKey:
                                              type: string
                                          required:
                                          - certificateChain
                                          - privateKey
                                          type: object
                                        sds:
                                          properties:
                                            secretName:
                                              type: string
                                          required:
                                          - secretName
                                          type: object
                                      type: object
                                    enforce:
                                      type: boolean
                                    ports:
                                      items:
                                        format: int64
                                        type: integer
                                      type: array
                                    validation:
                                      properties:
                                        subjectAlternativeNames:
                                          properties:
                                            match:
                                              properties:
                                                exact:
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - exact
                                              type: object
                                          required:
                                          - match
                                          type: object
                                        trust:
                                          properties:
                                            acm:
                                              properties:
                                                certificateAuthorityArns:
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - certificateAuthorityArns
                                              type: object
                                            file:
                                              properties:
                                                certificateChain:
                                                  type: string
                                              required:
                                              - certificateChain
                                              type: object
                                            sds:
                                              properties:
                                                secretName:
                                                  type: string
                                              required:
                                              - secretName
                                              type: object
                                          type: object
                                      required:
                                      - trust
                                      type: object
                                  required:
                                  - validation
                                  type: object
                              type: object
                            virtualServiceName:
                              type: string
                          required:
                          - virtualServiceName
                          type: object
                      required:
                      - virtualService
                      type: object
                    maxItems: 25
                    type: array
                  backendDefaults:
                    properties:
                      clientPolicy:
                        properties:
                          tls:
                            properties:
                              certificate:
                                properties:
                                  file:
                                    properties:
                                      certificateChain:
                                        type: string
                                      privateKey:
                                        type: string
                                    required:
                                    - certificateChain
                                    - privateKey
                                    type: object
                                  sds:
                                    properties:
                                      secretName:
                                        type: string
                                    required:
                                    - secretName
                                    type: object
                                type: object
                              enforce:
                                type: boolean
                              ports:
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              validation:
                                properties:
                                  subjectAlternativeNames:
                                    properties:
                                      match:
                                        properties:
                                          exact:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - exact
                                        type: object
                                    required:
                                    - match
                                    type: object
                                  trust:
                                    properties:
                                      acm:
                                        properties:
                                          certificateAuthorityArns:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - certificateAuthorityArns
                                        type: object
                                      file:
                                        properties:
                                          certificateChain:
                                            type: string
                                        required:
                                        - certificateChain
                                        type: object
                                      sds:
                                        properties:
                                          secretName:
                                            type: string
                                        required:
                                        - secretName
                                        type: object
                                    type: object
                                required:
                                - trust
                                type: object
                            required:
                            - validation
                            type: object
                        type: object
                    type: object
                  listener:
                    properties:
                      connectionPool:
                        properties:
                          grpc:
                            properties:
                              maxRequests:
                                format: int64
                                type: integer
                            required:
                            - maxRequests
                            type: object
                          http:
                            properties:
                              maxConnections:
                                format: int64
                                type: integer
                              maxPendingRequests:
                                format: int64
                                type: integer
                            required:
                            - maxConnections
                            type: object
                          http2:
                            properties:
                              maxRequests:
                                format: int64
                                type: integer
                            required:
                            - maxRequests
                            type: object
                          tcp:
                            properties:
                              maxConnections:
                                format: int64
                                type: integer
                            required:
                            - maxConnections
                            type: object
                        type: object
                      healthCheck:
                        properties:
                          healthyThreshold:
                            format: int64
                            type: integer
                          intervalMillis:
                            format: int64
                            type: integer
                          path:
                            type: string
                          port:
                            format: int64
                            type: integer
                          protocol:
                            type: string
                          timeoutMillis:
                            format: int64
                            type: integer
                          unhealthyThreshold:
                            format: int64
                            type: integer
                        required:
                        - healthyThreshold
                        - intervalMillis
                        - protocol
                        - timeoutMillis
                        - unhealthyThreshold
                        type: object
                      outlierDetection:
                        properties:
                          baseEjectionDuration:
                            properties:
                              unit:
                                type: string
                              value:
                                format: int64
                                type: integer
                            required:
                            - unit
                            - value
                            type: object
                          interval:
                            properties:
                              unit:
                                type: string
                              value:
                                format: int64
                                type: integer
                            required:
                            - unit
                            - value
                            type: object
                          maxEjectionPercent:
                            format: int64
                            type: integer
                          maxServerErrors:
                            format: int64
                            type: integer
                        required:
                        - baseEjectionDuration
                        - interval
                        - maxEjectionPercent
                        - maxServerErrors
                        type: object
                      portMapping:
                        properties:
                          port:
                            format: int64
                            type: integer
                          protocol:
                            type: string
                        required:
                        - port
                        - protocol
                        type: object
                      timeout:
                        properties:
                          grpc:
                            properties:
                              idle:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                              perRequest:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                            type: object
                          http:
                            properties:
                              idle:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                              perRequest:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                            type: object
                          http2:
                            properties:
                              idle:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                              perRequest:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                            type: object
                          tcp:
                            properties:
                              idle:
                                properties:
                                  unit:
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                required:
                                - unit
                                - value
                                type: object
                            type: object
                        type: object
                      tls:
                        properties:
                          certificate:
                            properties:
                              acm:
                                properties:
                                  certificateArn:
                                    type: string
                                required:
                                - certificateArn
                                type: object
                              file:
                                properties:
                                  certificateChain:
                                    type: string
                                  privateKey:
                                    type: string
                                required:
                                - certificateChain
                                - privateKey
                                type: object
                              sds:
                                properties:
                                  secretName:
                                    type: string
                                required:
                                - secretName
                                type: object
                            type: object
                          mode:
                            type: string
                          validation:
                            properties:
                              subjectAlternativeNames:
                                properties:
                                  match:
                                    properties:
                                      exact:
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - exact
                                    type: object
                                required:
                                - match
                                type: object
                              trust:
                                properties:
                                  file:
                                    properties:
                                      certificateChain:
                                        type: string
                                    required:
                                    - certificateChain
                                    type: object
                                  sds:
                                    properties:
                                      secretName:
                                        type: string
                                    required:
                                    - secretName
                                    type: object
                                type: object
                            required:
                            - trust
                            type: object
                        required:
                        - certificate
                        - mode
                        type: object
                    required:
                    - portMapping
                    type: object
                  logging:
                    properties:
                      accessLog:
                        properties:
                          file:
                            properties:
                              path:
                                type: string
                            required:
                            - path
                            type: object
                        type: object
                    type: object
                  serviceDiscovery:
                    properties:
                      awsCloudMap:
                        properties:
                          attributes:
                            additionalProperties:
                              type: string
                            type: object
                          namespaceName:
                            type: string
                          serviceName:
                            type: string
                        required:
                        - namespaceName
                        - serviceName
                        type: object
                      dns:
                        properties:
                          hostname:
                            type: string
                        required:
                        - hostname
                        type: object
                    type: object
                type: object
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - meshName
            - name
            - providerRef
            - spec
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
