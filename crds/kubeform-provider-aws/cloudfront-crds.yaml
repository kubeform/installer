apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: cachepolicies.cloudfront.aws.kubeform.com
spec:
  group: cloudfront.aws.kubeform.com
  names:
    kind: CachePolicy
    listKind: CachePolicyList
    plural: cachepolicies
    singular: cachepolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              comment:
                type: string
              defaultTtl:
                format: int64
                type: integer
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  comment:
                    type: string
                  defaultTtl:
                    format: int64
                    type: integer
                  etag:
                    type: string
                  id:
                    type: string
                  maxTtl:
                    format: int64
                    type: integer
                  minTtl:
                    format: int64
                    type: integer
                  name:
                    type: string
                  parametersInCacheKeyAndForwardedToOrigin:
                    properties:
                      cookiesConfig:
                        properties:
                          cookieBehavior:
                            type: string
                          cookies:
                            properties:
                              items:
                                items:
                                  type: string
                                type: array
                            type: object
                        required:
                        - cookieBehavior
                        type: object
                      enableAcceptEncodingBrotli:
                        type: boolean
                      enableAcceptEncodingGzip:
                        type: boolean
                      headersConfig:
                        properties:
                          headerBehavior:
                            type: string
                          headers:
                            properties:
                              items:
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                      queryStringsConfig:
                        properties:
                          queryStringBehavior:
                            type: string
                          queryStrings:
                            properties:
                              items:
                                items:
                                  type: string
                                type: array
                            type: object
                        required:
                        - queryStringBehavior
                        type: object
                    required:
                    - cookiesConfig
                    - headersConfig
                    - queryStringsConfig
                    type: object
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - name
                - providerRef
                type: object
              maxTtl:
                format: int64
                type: integer
              minTtl:
                format: int64
                type: integer
              name:
                type: string
              parametersInCacheKeyAndForwardedToOrigin:
                properties:
                  cookiesConfig:
                    properties:
                      cookieBehavior:
                        type: string
                      cookies:
                        properties:
                          items:
                            items:
                              type: string
                            type: array
                        type: object
                    required:
                    - cookieBehavior
                    type: object
                  enableAcceptEncodingBrotli:
                    type: boolean
                  enableAcceptEncodingGzip:
                    type: boolean
                  headersConfig:
                    properties:
                      headerBehavior:
                        type: string
                      headers:
                        properties:
                          items:
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  queryStringsConfig:
                    properties:
                      queryStringBehavior:
                        type: string
                      queryStrings:
                        properties:
                          items:
                            items:
                              type: string
                            type: array
                        type: object
                    required:
                    - queryStringBehavior
                    type: object
                required:
                - cookiesConfig
                - headersConfig
                - queryStringsConfig
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: distributions.cloudfront.aws.kubeform.com
spec:
  group: cloudfront.aws.kubeform.com
  names:
    kind: Distribution
    listKind: DistributionList
    plural: distributions
    singular: distribution
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              aliases:
                items:
                  type: string
                type: array
              arn:
                type: string
              callerReference:
                type: string
              comment:
                type: string
              customErrorResponse:
                items:
                  properties:
                    errorCachingMinTtl:
                      format: int64
                      type: integer
                    errorCode:
                      format: int64
                      type: integer
                    responseCode:
                      format: int64
                      type: integer
                    responsePagePath:
                      type: string
                  required:
                  - errorCode
                  type: object
                type: array
              defaultCacheBehavior:
                properties:
                  allowedMethods:
                    items:
                      type: string
                    type: array
                  cachePolicyID:
                    type: string
                  cachedMethods:
                    items:
                      type: string
                    type: array
                  compress:
                    type: boolean
                  defaultTtl:
                    format: int64
                    type: integer
                  fieldLevelEncryptionID:
                    type: string
                  forwardedValues:
                    properties:
                      cookies:
                        properties:
                          forward:
                            type: string
                          whitelistedNames:
                            items:
                              type: string
                            type: array
                        required:
                        - forward
                        type: object
                      headers:
                        items:
                          type: string
                        type: array
                      queryString:
                        type: boolean
                      queryStringCacheKeys:
                        items:
                          type: string
                        type: array
                    required:
                    - cookies
                    - queryString
                    type: object
                  lambdaFunctionAssociation:
                    items:
                      properties:
                        eventType:
                          type: string
                        includeBody:
                          type: boolean
                        lambdaArn:
                          type: string
                      required:
                      - eventType
                      - lambdaArn
                      type: object
                    maxItems: 4
                    type: array
                  maxTtl:
                    format: int64
                    type: integer
                  minTtl:
                    format: int64
                    type: integer
                  originRequestPolicyID:
                    type: string
                  realtimeLogConfigArn:
                    type: string
                  smoothStreaming:
                    type: boolean
                  targetOriginID:
                    type: string
                  trustedKeyGroups:
                    items:
                      type: string
                    type: array
                  trustedSigners:
                    items:
                      type: string
                    type: array
                  viewerProtocolPolicy:
                    type: string
                required:
                - allowedMethods
                - cachedMethods
                - targetOriginID
                - viewerProtocolPolicy
                type: object
              defaultRootObject:
                type: string
              domainName:
                type: string
              enabled:
                type: boolean
              etag:
                type: string
              hostedZoneID:
                type: string
              httpVersion:
                type: string
              id:
                type: string
              inProgressValidationBatches:
                format: int64
                type: integer
              isIpv6Enabled:
                type: boolean
              kubeformOutput:
                properties:
                  aliases:
                    items:
                      type: string
                    type: array
                  arn:
                    type: string
                  callerReference:
                    type: string
                  comment:
                    type: string
                  customErrorResponse:
                    items:
                      properties:
                        errorCachingMinTtl:
                          format: int64
                          type: integer
                        errorCode:
                          format: int64
                          type: integer
                        responseCode:
                          format: int64
                          type: integer
                        responsePagePath:
                          type: string
                      required:
                      - errorCode
                      type: object
                    type: array
                  defaultCacheBehavior:
                    properties:
                      allowedMethods:
                        items:
                          type: string
                        type: array
                      cachePolicyID:
                        type: string
                      cachedMethods:
                        items:
                          type: string
                        type: array
                      compress:
                        type: boolean
                      defaultTtl:
                        format: int64
                        type: integer
                      fieldLevelEncryptionID:
                        type: string
                      forwardedValues:
                        properties:
                          cookies:
                            properties:
                              forward:
                                type: string
                              whitelistedNames:
                                items:
                                  type: string
                                type: array
                            required:
                            - forward
                            type: object
                          headers:
                            items:
                              type: string
                            type: array
                          queryString:
                            type: boolean
                          queryStringCacheKeys:
                            items:
                              type: string
                            type: array
                        required:
                        - cookies
                        - queryString
                        type: object
                      lambdaFunctionAssociation:
                        items:
                          properties:
                            eventType:
                              type: string
                            includeBody:
                              type: boolean
                            lambdaArn:
                              type: string
                          required:
                          - eventType
                          - lambdaArn
                          type: object
                        maxItems: 4
                        type: array
                      maxTtl:
                        format: int64
                        type: integer
                      minTtl:
                        format: int64
                        type: integer
                      originRequestPolicyID:
                        type: string
                      realtimeLogConfigArn:
                        type: string
                      smoothStreaming:
                        type: boolean
                      targetOriginID:
                        type: string
                      trustedKeyGroups:
                        items:
                          type: string
                        type: array
                      trustedSigners:
                        items:
                          type: string
                        type: array
                      viewerProtocolPolicy:
                        type: string
                    required:
                    - allowedMethods
                    - cachedMethods
                    - targetOriginID
                    - viewerProtocolPolicy
                    type: object
                  defaultRootObject:
                    type: string
                  domainName:
                    type: string
                  enabled:
                    type: boolean
                  etag:
                    type: string
                  hostedZoneID:
                    type: string
                  httpVersion:
                    type: string
                  id:
                    type: string
                  inProgressValidationBatches:
                    format: int64
                    type: integer
                  isIpv6Enabled:
                    type: boolean
                  lastModifiedTime:
                    type: string
                  loggingConfig:
                    properties:
                      bucket:
                        type: string
                      includeCookies:
                        type: boolean
                      prefix:
                        type: string
                    required:
                    - bucket
                    type: object
                  orderedCacheBehavior:
                    items:
                      properties:
                        allowedMethods:
                          items:
                            type: string
                          type: array
                        cachePolicyID:
                          type: string
                        cachedMethods:
                          items:
                            type: string
                          type: array
                        compress:
                          type: boolean
                        defaultTtl:
                          format: int64
                          type: integer
                        fieldLevelEncryptionID:
                          type: string
                        forwardedValues:
                          properties:
                            cookies:
                              properties:
                                forward:
                                  type: string
                                whitelistedNames:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - forward
                              type: object
                            headers:
                              items:
                                type: string
                              type: array
                            queryString:
                              type: boolean
                            queryStringCacheKeys:
                              items:
                                type: string
                              type: array
                          required:
                          - cookies
                          - queryString
                          type: object
                        lambdaFunctionAssociation:
                          items:
                            properties:
                              eventType:
                                type: string
                              includeBody:
                                type: boolean
                              lambdaArn:
                                type: string
                            required:
                            - eventType
                            - lambdaArn
                            type: object
                          maxItems: 4
                          type: array
                        maxTtl:
                          format: int64
                          type: integer
                        minTtl:
                          format: int64
                          type: integer
                        originRequestPolicyID:
                          type: string
                        pathPattern:
                          type: string
                        realtimeLogConfigArn:
                          type: string
                        smoothStreaming:
                          type: boolean
                        targetOriginID:
                          type: string
                        trustedKeyGroups:
                          items:
                            type: string
                          type: array
                        trustedSigners:
                          items:
                            type: string
                          type: array
                        viewerProtocolPolicy:
                          type: string
                      required:
                      - allowedMethods
                      - cachedMethods
                      - pathPattern
                      - targetOriginID
                      - viewerProtocolPolicy
                      type: object
                    type: array
                  origin:
                    items:
                      properties:
                        customHeader:
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        customOriginConfig:
                          properties:
                            httpPort:
                              format: int64
                              type: integer
                            httpsPort:
                              format: int64
                              type: integer
                            originKeepaliveTimeout:
                              format: int64
                              type: integer
                            originProtocolPolicy:
                              type: string
                            originReadTimeout:
                              format: int64
                              type: integer
                            originSSLProtocols:
                              items:
                                type: string
                              type: array
                          required:
                          - httpPort
                          - httpsPort
                          - originProtocolPolicy
                          - originSSLProtocols
                          type: object
                        domainName:
                          type: string
                        originID:
                          type: string
                        originPath:
                          type: string
                        s3OriginConfig:
                          properties:
                            originAccessIdentity:
                              type: string
                          required:
                          - originAccessIdentity
                          type: object
                      required:
                      - domainName
                      - originID
                      type: object
                    type: array
                  originGroup:
                    items:
                      properties:
                        failoverCriteria:
                          properties:
                            statusCodes:
                              items:
                                format: int64
                                type: integer
                              type: array
                          required:
                          - statusCodes
                          type: object
                        member:
                          items:
                            properties:
                              originID:
                                type: string
                            required:
                            - originID
                            type: object
                          maxItems: 2
                          minItems: 2
                          type: array
                        originID:
                          type: string
                      required:
                      - failoverCriteria
                      - member
                      - originID
                      type: object
                    type: array
                  priceClass:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  restrictions:
                    properties:
                      geoRestriction:
                        properties:
                          locations:
                            items:
                              type: string
                            type: array
                          restrictionType:
                            type: string
                        required:
                        - restrictionType
                        type: object
                    required:
                    - geoRestriction
                    type: object
                  retainOnDelete:
                    type: boolean
                  status:
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  trustedKeyGroups:
                    items:
                      properties:
                        enabled:
                          type: boolean
                        items:
                          items:
                            properties:
                              keyGroupID:
                                type: string
                              keyPairIDS:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  trustedSigners:
                    items:
                      properties:
                        enabled:
                          type: boolean
                        items:
                          items:
                            properties:
                              awsAccountNumber:
                                type: string
                              keyPairIDS:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  viewerCertificate:
                    properties:
                      acmCertificateArn:
                        type: string
                      cloudfrontDefaultCertificate:
                        type: boolean
                      iamCertificateID:
                        type: string
                      minimumProtocolVersion:
                        type: string
                      sslSupportMethod:
                        type: string
                    type: object
                  waitForDeployment:
                    type: boolean
                  webACLID:
                    type: string
                required:
                - defaultCacheBehavior
                - enabled
                - origin
                - providerRef
                - restrictions
                - viewerCertificate
                type: object
              lastModifiedTime:
                type: string
              loggingConfig:
                properties:
                  bucket:
                    type: string
                  includeCookies:
                    type: boolean
                  prefix:
                    type: string
                required:
                - bucket
                type: object
              orderedCacheBehavior:
                items:
                  properties:
                    allowedMethods:
                      items:
                        type: string
                      type: array
                    cachePolicyID:
                      type: string
                    cachedMethods:
                      items:
                        type: string
                      type: array
                    compress:
                      type: boolean
                    defaultTtl:
                      format: int64
                      type: integer
                    fieldLevelEncryptionID:
                      type: string
                    forwardedValues:
                      properties:
                        cookies:
                          properties:
                            forward:
                              type: string
                            whitelistedNames:
                              items:
                                type: string
                              type: array
                          required:
                          - forward
                          type: object
                        headers:
                          items:
                            type: string
                          type: array
                        queryString:
                          type: boolean
                        queryStringCacheKeys:
                          items:
                            type: string
                          type: array
                      required:
                      - cookies
                      - queryString
                      type: object
                    lambdaFunctionAssociation:
                      items:
                        properties:
                          eventType:
                            type: string
                          includeBody:
                            type: boolean
                          lambdaArn:
                            type: string
                        required:
                        - eventType
                        - lambdaArn
                        type: object
                      maxItems: 4
                      type: array
                    maxTtl:
                      format: int64
                      type: integer
                    minTtl:
                      format: int64
                      type: integer
                    originRequestPolicyID:
                      type: string
                    pathPattern:
                      type: string
                    realtimeLogConfigArn:
                      type: string
                    smoothStreaming:
                      type: boolean
                    targetOriginID:
                      type: string
                    trustedKeyGroups:
                      items:
                        type: string
                      type: array
                    trustedSigners:
                      items:
                        type: string
                      type: array
                    viewerProtocolPolicy:
                      type: string
                  required:
                  - allowedMethods
                  - cachedMethods
                  - pathPattern
                  - targetOriginID
                  - viewerProtocolPolicy
                  type: object
                type: array
              origin:
                items:
                  properties:
                    customHeader:
                      items:
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    customOriginConfig:
                      properties:
                        httpPort:
                          format: int64
                          type: integer
                        httpsPort:
                          format: int64
                          type: integer
                        originKeepaliveTimeout:
                          format: int64
                          type: integer
                        originProtocolPolicy:
                          type: string
                        originReadTimeout:
                          format: int64
                          type: integer
                        originSSLProtocols:
                          items:
                            type: string
                          type: array
                      required:
                      - httpPort
                      - httpsPort
                      - originProtocolPolicy
                      - originSSLProtocols
                      type: object
                    domainName:
                      type: string
                    originID:
                      type: string
                    originPath:
                      type: string
                    s3OriginConfig:
                      properties:
                        originAccessIdentity:
                          type: string
                      required:
                      - originAccessIdentity
                      type: object
                  required:
                  - domainName
                  - originID
                  type: object
                type: array
              originGroup:
                items:
                  properties:
                    failoverCriteria:
                      properties:
                        statusCodes:
                          items:
                            format: int64
                            type: integer
                          type: array
                      required:
                      - statusCodes
                      type: object
                    member:
                      items:
                        properties:
                          originID:
                            type: string
                        required:
                        - originID
                        type: object
                      maxItems: 2
                      minItems: 2
                      type: array
                    originID:
                      type: string
                  required:
                  - failoverCriteria
                  - member
                  - originID
                  type: object
                type: array
              priceClass:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              restrictions:
                properties:
                  geoRestriction:
                    properties:
                      locations:
                        items:
                          type: string
                        type: array
                      restrictionType:
                        type: string
                    required:
                    - restrictionType
                    type: object
                required:
                - geoRestriction
                type: object
              retainOnDelete:
                type: boolean
              status:
                type: string
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              trustedKeyGroups:
                items:
                  properties:
                    enabled:
                      type: boolean
                    items:
                      items:
                        properties:
                          keyGroupID:
                            type: string
                          keyPairIDS:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                  type: object
                type: array
              trustedSigners:
                items:
                  properties:
                    enabled:
                      type: boolean
                    items:
                      items:
                        properties:
                          awsAccountNumber:
                            type: string
                          keyPairIDS:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                  type: object
                type: array
              viewerCertificate:
                properties:
                  acmCertificateArn:
                    type: string
                  cloudfrontDefaultCertificate:
                    type: boolean
                  iamCertificateID:
                    type: string
                  minimumProtocolVersion:
                    type: string
                  sslSupportMethod:
                    type: string
                type: object
              waitForDeployment:
                type: boolean
              webACLID:
                type: string
            required:
            - defaultCacheBehavior
            - enabled
            - origin
            - providerRef
            - restrictions
            - viewerCertificate
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: publickeys.cloudfront.aws.kubeform.com
spec:
  group: cloudfront.aws.kubeform.com
  names:
    kind: PublicKey
    listKind: PublicKeyList
    plural: publickeys
    singular: publickey
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              callerReference:
                type: string
              comment:
                type: string
              encodedKey:
                type: string
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  callerReference:
                    type: string
                  comment:
                    type: string
                  encodedKey:
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  namePrefix:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - encodedKey
                - providerRef
                type: object
              name:
                type: string
              namePrefix:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - encodedKey
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: originaccessidentities.cloudfront.aws.kubeform.com
spec:
  group: cloudfront.aws.kubeform.com
  names:
    kind: OriginAccessIdentity
    listKind: OriginAccessIdentityList
    plural: originaccessidentities
    singular: originaccessidentity
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              callerReference:
                type: string
              cloudfrontAccessIdentityPath:
                type: string
              comment:
                type: string
              etag:
                type: string
              iamArn:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  callerReference:
                    type: string
                  cloudfrontAccessIdentityPath:
                    type: string
                  comment:
                    type: string
                  etag:
                    type: string
                  iamArn:
                    type: string
                  id:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  s3CanonicalUserID:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - providerRef
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              s3CanonicalUserID:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: originrequestpolicies.cloudfront.aws.kubeform.com
spec:
  group: cloudfront.aws.kubeform.com
  names:
    kind: OriginRequestPolicy
    listKind: OriginRequestPolicyList
    plural: originrequestpolicies
    singular: originrequestpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              comment:
                type: string
              cookiesConfig:
                properties:
                  cookieBehavior:
                    type: string
                  cookies:
                    properties:
                      items:
                        items:
                          type: string
                        type: array
                    type: object
                required:
                - cookieBehavior
                type: object
              etag:
                type: string
              headersConfig:
                properties:
                  headerBehavior:
                    type: string
                  headers:
                    properties:
                      items:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  comment:
                    type: string
                  cookiesConfig:
                    properties:
                      cookieBehavior:
                        type: string
                      cookies:
                        properties:
                          items:
                            items:
                              type: string
                            type: array
                        type: object
                    required:
                    - cookieBehavior
                    type: object
                  etag:
                    type: string
                  headersConfig:
                    properties:
                      headerBehavior:
                        type: string
                      headers:
                        properties:
                          items:
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  id:
                    type: string
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  queryStringsConfig:
                    properties:
                      queryStringBehavior:
                        type: string
                      queryStrings:
                        properties:
                          items:
                            items:
                              type: string
                            type: array
                        type: object
                    required:
                    - queryStringBehavior
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - cookiesConfig
                - headersConfig
                - name
                - providerRef
                - queryStringsConfig
                type: object
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              queryStringsConfig:
                properties:
                  queryStringBehavior:
                    type: string
                  queryStrings:
                    properties:
                      items:
                        items:
                          type: string
                        type: array
                    type: object
                required:
                - queryStringBehavior
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - cookiesConfig
            - headersConfig
            - name
            - providerRef
            - queryStringsConfig
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: keygroups.cloudfront.aws.kubeform.com
spec:
  group: cloudfront.aws.kubeform.com
  names:
    kind: KeyGroup
    listKind: KeyGroupList
    plural: keygroups
    singular: keygroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              comment:
                type: string
              etag:
                type: string
              id:
                type: string
              items:
                items:
                  type: string
                type: array
              kubeformOutput:
                properties:
                  comment:
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  items:
                    items:
                      type: string
                    type: array
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - items
                - name
                - providerRef
                type: object
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - items
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: realtimelogconfigs.cloudfront.aws.kubeform.com
spec:
  group: cloudfront.aws.kubeform.com
  names:
    kind: RealtimeLogConfig
    listKind: RealtimeLogConfigList
    plural: realtimelogconfigs
    singular: realtimelogconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              endpoint:
                properties:
                  kinesisStreamConfig:
                    properties:
                      roleArn:
                        type: string
                      streamArn:
                        type: string
                    required:
                    - roleArn
                    - streamArn
                    type: object
                  streamType:
                    type: string
                required:
                - kinesisStreamConfig
                - streamType
                type: object
              fields:
                items:
                  type: string
                type: array
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  endpoint:
                    properties:
                      kinesisStreamConfig:
                        properties:
                          roleArn:
                            type: string
                          streamArn:
                            type: string
                        required:
                        - roleArn
                        - streamArn
                        type: object
                      streamType:
                        type: string
                    required:
                    - kinesisStreamConfig
                    - streamType
                    type: object
                  fields:
                    items:
                      type: string
                    type: array
                  id:
                    type: string
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  samplingRate:
                    format: int64
                    type: integer
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - endpoint
                - fields
                - name
                - providerRef
                - samplingRate
                type: object
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              samplingRate:
                format: int64
                type: integer
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - endpoint
            - fields
            - name
            - providerRef
            - samplingRate
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
