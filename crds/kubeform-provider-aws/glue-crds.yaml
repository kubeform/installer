apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: classifiers.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: Classifier
    listKind: ClassifierList
    plural: classifiers
    singular: classifier
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              csvClassifier:
                properties:
                  allowSingleColumn:
                    type: boolean
                  containsHeader:
                    type: string
                  delimiter:
                    type: string
                  disableValueTrimming:
                    type: boolean
                  header:
                    items:
                      type: string
                    type: array
                  quoteSymbol:
                    type: string
                type: object
              grokClassifier:
                properties:
                  classification:
                    type: string
                  customPatterns:
                    type: string
                  grokPattern:
                    type: string
                required:
                - classification
                - grokPattern
                type: object
              id:
                type: string
              jsonClassifier:
                properties:
                  jsonPath:
                    type: string
                required:
                - jsonPath
                type: object
              kubeformOutput:
                properties:
                  csvClassifier:
                    properties:
                      allowSingleColumn:
                        type: boolean
                      containsHeader:
                        type: string
                      delimiter:
                        type: string
                      disableValueTrimming:
                        type: boolean
                      header:
                        items:
                          type: string
                        type: array
                      quoteSymbol:
                        type: string
                    type: object
                  grokClassifier:
                    properties:
                      classification:
                        type: string
                      customPatterns:
                        type: string
                      grokPattern:
                        type: string
                    required:
                    - classification
                    - grokPattern
                    type: object
                  id:
                    type: string
                  jsonClassifier:
                    properties:
                      jsonPath:
                        type: string
                    required:
                    - jsonPath
                    type: object
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  xmlClassifier:
                    properties:
                      classification:
                        type: string
                      rowTag:
                        type: string
                    required:
                    - classification
                    - rowTag
                    type: object
                required:
                - name
                - providerRef
                type: object
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              xmlClassifier:
                properties:
                  classification:
                    type: string
                  rowTag:
                    type: string
                required:
                - classification
                - rowTag
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: connections.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: Connection
    listKind: ConnectionList
    plural: connections
    singular: connection
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              catalogID:
                type: string
              connectionType:
                type: string
              description:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  catalogID:
                    type: string
                  connectionType:
                    type: string
                  description:
                    type: string
                  id:
                    type: string
                  matchCriteria:
                    items:
                      type: string
                    type: array
                  name:
                    type: string
                  physicalConnectionRequirements:
                    properties:
                      availabilityZone:
                        type: string
                      securityGroupIDList:
                        items:
                          type: string
                        type: array
                      subnetID:
                        type: string
                    type: object
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - name
                - providerRef
                type: object
              matchCriteria:
                items:
                  type: string
                type: array
              name:
                type: string
              physicalConnectionRequirements:
                properties:
                  availabilityZone:
                    type: string
                  securityGroupIDList:
                    items:
                      type: string
                    type: array
                  subnetID:
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: catalogdatabases.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: CatalogDatabase
    listKind: CatalogDatabaseList
    plural: catalogdatabases
    singular: catalogdatabase
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              catalogID:
                type: string
              description:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  catalogID:
                    type: string
                  description:
                    type: string
                  id:
                    type: string
                  locationURI:
                    type: string
                  name:
                    type: string
                  parameters:
                    additionalProperties:
                      type: string
                    type: object
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - name
                - providerRef
                type: object
              locationURI:
                type: string
              name:
                type: string
              parameters:
                additionalProperties:
                  type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: catalogtables.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: CatalogTable
    listKind: CatalogTableList
    plural: catalogtables
    singular: catalogtable
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              catalogID:
                type: string
              databaseName:
                type: string
              description:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  catalogID:
                    type: string
                  databaseName:
                    type: string
                  description:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  owner:
                    type: string
                  parameters:
                    additionalProperties:
                      type: string
                    type: object
                  partitionIndex:
                    items:
                      properties:
                        indexName:
                          type: string
                        indexStatus:
                          type: string
                        keys:
                          items:
                            type: string
                          minItems: 1
                          type: array
                      required:
                      - indexName
                      - keys
                      type: object
                    maxItems: 3
                    type: array
                  partitionKeys:
                    items:
                      properties:
                        comment:
                          type: string
                        name:
                          type: string
                        type:
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  retention:
                    format: int64
                    type: integer
                  storageDescriptor:
                    properties:
                      bucketColumns:
                        items:
                          type: string
                        type: array
                      columns:
                        items:
                          properties:
                            comment:
                              type: string
                            name:
                              type: string
                            parameters:
                              additionalProperties:
                                type: string
                              type: object
                            type:
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      compressed:
                        type: boolean
                      inputFormat:
                        type: string
                      location:
                        type: string
                      numberOfBuckets:
                        format: int64
                        type: integer
                      outputFormat:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      schemaReference:
                        properties:
                          schemaID:
                            properties:
                              registryName:
                                type: string
                              schemaArn:
                                type: string
                              schemaName:
                                type: string
                            type: object
                          schemaVersionID:
                            type: string
                          schemaVersionNumber:
                            format: int64
                            type: integer
                        required:
                        - schemaVersionNumber
                        type: object
                      serDeInfo:
                        properties:
                          name:
                            type: string
                          parameters:
                            additionalProperties:
                              type: string
                            type: object
                          serializationLibrary:
                            type: string
                        type: object
                      skewedInfo:
                        properties:
                          skewedColumnNames:
                            items:
                              type: string
                            type: array
                          skewedColumnValueLocationMaps:
                            additionalProperties:
                              type: string
                            type: object
                          skewedColumnValues:
                            items:
                              type: string
                            type: array
                        type: object
                      sortColumns:
                        items:
                          properties:
                            column:
                              type: string
                            sortOrder:
                              format: int64
                              type: integer
                          required:
                          - column
                          - sortOrder
                          type: object
                        type: array
                      storedAsSubDirectories:
                        type: boolean
                    type: object
                  tableType:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  viewExpandedText:
                    type: string
                  viewOriginalText:
                    type: string
                required:
                - databaseName
                - name
                - providerRef
                type: object
              name:
                type: string
              owner:
                type: string
              parameters:
                additionalProperties:
                  type: string
                type: object
              partitionIndex:
                items:
                  properties:
                    indexName:
                      type: string
                    indexStatus:
                      type: string
                    keys:
                      items:
                        type: string
                      minItems: 1
                      type: array
                  required:
                  - indexName
                  - keys
                  type: object
                maxItems: 3
                type: array
              partitionKeys:
                items:
                  properties:
                    comment:
                      type: string
                    name:
                      type: string
                    type:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              retention:
                format: int64
                type: integer
              storageDescriptor:
                properties:
                  bucketColumns:
                    items:
                      type: string
                    type: array
                  columns:
                    items:
                      properties:
                        comment:
                          type: string
                        name:
                          type: string
                        parameters:
                          additionalProperties:
                            type: string
                          type: object
                        type:
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  compressed:
                    type: boolean
                  inputFormat:
                    type: string
                  location:
                    type: string
                  numberOfBuckets:
                    format: int64
                    type: integer
                  outputFormat:
                    type: string
                  parameters:
                    additionalProperties:
                      type: string
                    type: object
                  schemaReference:
                    properties:
                      schemaID:
                        properties:
                          registryName:
                            type: string
                          schemaArn:
                            type: string
                          schemaName:
                            type: string
                        type: object
                      schemaVersionID:
                        type: string
                      schemaVersionNumber:
                        format: int64
                        type: integer
                    required:
                    - schemaVersionNumber
                    type: object
                  serDeInfo:
                    properties:
                      name:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      serializationLibrary:
                        type: string
                    type: object
                  skewedInfo:
                    properties:
                      skewedColumnNames:
                        items:
                          type: string
                        type: array
                      skewedColumnValueLocationMaps:
                        additionalProperties:
                          type: string
                        type: object
                      skewedColumnValues:
                        items:
                          type: string
                        type: array
                    type: object
                  sortColumns:
                    items:
                      properties:
                        column:
                          type: string
                        sortOrder:
                          format: int64
                          type: integer
                      required:
                      - column
                      - sortOrder
                      type: object
                    type: array
                  storedAsSubDirectories:
                    type: boolean
                type: object
              tableType:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              viewExpandedText:
                type: string
              viewOriginalText:
                type: string
            required:
            - databaseName
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: workflows.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: Workflow
    listKind: WorkflowList
    plural: workflows
    singular: workflow
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              defaultRunProperties:
                additionalProperties:
                  type: string
                type: object
              description:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  defaultRunProperties:
                    additionalProperties:
                      type: string
                    type: object
                  description:
                    type: string
                  id:
                    type: string
                  maxConcurrentRuns:
                    format: int64
                    type: integer
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - providerRef
                type: object
              maxConcurrentRuns:
                format: int64
                type: integer
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: mltransforms.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: MlTransform
    listKind: MlTransformList
    plural: mltransforms
    singular: mltransform
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              description:
                type: string
              glueVersion:
                type: string
              id:
                type: string
              inputRecordTables:
                items:
                  properties:
                    catalogID:
                      type: string
                    connectionName:
                      type: string
                    databaseName:
                      type: string
                    tableName:
                      type: string
                  required:
                  - databaseName
                  - tableName
                  type: object
                type: array
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  description:
                    type: string
                  glueVersion:
                    type: string
                  id:
                    type: string
                  inputRecordTables:
                    items:
                      properties:
                        catalogID:
                          type: string
                        connectionName:
                          type: string
                        databaseName:
                          type: string
                        tableName:
                          type: string
                      required:
                      - databaseName
                      - tableName
                      type: object
                    type: array
                  labelCount:
                    format: int64
                    type: integer
                  maxCapacity:
                    format: double
                    type: number
                  maxRetries:
                    format: int64
                    type: integer
                  name:
                    type: string
                  numberOfWorkers:
                    format: int64
                    type: integer
                  parameters:
                    properties:
                      findMatchesParameters:
                        properties:
                          accuracyCostTradeOff:
                            format: double
                            type: number
                          enforceProvidedLabels:
                            type: boolean
                          precisionRecallTradeOff:
                            format: double
                            type: number
                          primaryKeyColumnName:
                            type: string
                        type: object
                      transformType:
                        type: string
                    required:
                    - findMatchesParameters
                    - transformType
                    type: object
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  roleArn:
                    type: string
                  schema:
                    items:
                      properties:
                        dataType:
                          type: string
                        name:
                          type: string
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeout:
                    format: int64
                    type: integer
                  workerType:
                    type: string
                required:
                - inputRecordTables
                - name
                - parameters
                - providerRef
                - roleArn
                type: object
              labelCount:
                format: int64
                type: integer
              maxCapacity:
                format: double
                type: number
              maxRetries:
                format: int64
                type: integer
              name:
                type: string
              numberOfWorkers:
                format: int64
                type: integer
              parameters:
                properties:
                  findMatchesParameters:
                    properties:
                      accuracyCostTradeOff:
                        format: double
                        type: number
                      enforceProvidedLabels:
                        type: boolean
                      precisionRecallTradeOff:
                        format: double
                        type: number
                      primaryKeyColumnName:
                        type: string
                    type: object
                  transformType:
                    type: string
                required:
                - findMatchesParameters
                - transformType
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              roleArn:
                type: string
              schema:
                items:
                  properties:
                    dataType:
                      type: string
                    name:
                      type: string
                  type: object
                type: array
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeout:
                format: int64
                type: integer
              workerType:
                type: string
            required:
            - inputRecordTables
            - name
            - parameters
            - providerRef
            - roleArn
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: userdefinedfunctions.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: UserDefinedFunction
    listKind: UserDefinedFunctionList
    plural: userdefinedfunctions
    singular: userdefinedfunction
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              catalogID:
                type: string
              className:
                type: string
              createTime:
                type: string
              databaseName:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  catalogID:
                    type: string
                  className:
                    type: string
                  createTime:
                    type: string
                  databaseName:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  ownerName:
                    type: string
                  ownerType:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  resourceUris:
                    items:
                      properties:
                        resourceType:
                          type: string
                        uri:
                          type: string
                      required:
                      - resourceType
                      - uri
                      type: object
                    maxItems: 1000
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - className
                - databaseName
                - name
                - ownerName
                - ownerType
                - providerRef
                type: object
              name:
                type: string
              ownerName:
                type: string
              ownerType:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resourceUris:
                items:
                  properties:
                    resourceType:
                      type: string
                    uri:
                      type: string
                  required:
                  - resourceType
                  - uri
                  type: object
                maxItems: 1000
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - className
            - databaseName
            - name
            - ownerName
            - ownerType
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: registries.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: Registry
    listKind: RegistryList
    plural: registries
    singular: registry
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              description:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  description:
                    type: string
                  id:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  registryName:
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - providerRef
                - registryName
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              registryName:
                type: string
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - providerRef
            - registryName
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: schemas.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: Schema
    listKind: SchemaList
    plural: schemas
    singular: schema
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              compatibility:
                type: string
              dataFormat:
                type: string
              description:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  compatibility:
                    type: string
                  dataFormat:
                    type: string
                  description:
                    type: string
                  id:
                    type: string
                  latestSchemaVersion:
                    format: int64
                    type: integer
                  nextSchemaVersion:
                    format: int64
                    type: integer
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  registryArn:
                    type: string
                  registryName:
                    type: string
                  schemaCheckpoint:
                    format: int64
                    type: integer
                  schemaDefinition:
                    type: string
                  schemaName:
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - compatibility
                - dataFormat
                - providerRef
                - schemaDefinition
                - schemaName
                type: object
              latestSchemaVersion:
                format: int64
                type: integer
              nextSchemaVersion:
                format: int64
                type: integer
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              registryArn:
                type: string
              registryName:
                type: string
              schemaCheckpoint:
                format: int64
                type: integer
              schemaDefinition:
                type: string
              schemaName:
                type: string
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - compatibility
            - dataFormat
            - providerRef
            - schemaDefinition
            - schemaName
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: jobs.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: Job
    listKind: JobList
    plural: jobs
    singular: job
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              command:
                properties:
                  name:
                    type: string
                  pythonVersion:
                    type: string
                  scriptLocation:
                    type: string
                required:
                - scriptLocation
                type: object
              connections:
                items:
                  type: string
                type: array
              defaultArguments:
                additionalProperties:
                  type: string
                type: object
              description:
                type: string
              executionProperty:
                properties:
                  maxConcurrentRuns:
                    format: int64
                    type: integer
                type: object
              glueVersion:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  command:
                    properties:
                      name:
                        type: string
                      pythonVersion:
                        type: string
                      scriptLocation:
                        type: string
                    required:
                    - scriptLocation
                    type: object
                  connections:
                    items:
                      type: string
                    type: array
                  defaultArguments:
                    additionalProperties:
                      type: string
                    type: object
                  description:
                    type: string
                  executionProperty:
                    properties:
                      maxConcurrentRuns:
                        format: int64
                        type: integer
                    type: object
                  glueVersion:
                    type: string
                  id:
                    type: string
                  maxCapacity:
                    format: double
                    type: number
                  maxRetries:
                    format: int64
                    type: integer
                  name:
                    type: string
                  nonOverridableArguments:
                    additionalProperties:
                      type: string
                    type: object
                  notificationProperty:
                    properties:
                      notifyDelayAfter:
                        format: int64
                        type: integer
                    type: object
                  numberOfWorkers:
                    format: int64
                    type: integer
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  roleArn:
                    type: string
                  securityConfiguration:
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeout:
                    format: int64
                    type: integer
                  workerType:
                    type: string
                required:
                - command
                - name
                - providerRef
                - roleArn
                type: object
              maxCapacity:
                format: double
                type: number
              maxRetries:
                format: int64
                type: integer
              name:
                type: string
              nonOverridableArguments:
                additionalProperties:
                  type: string
                type: object
              notificationProperty:
                properties:
                  notifyDelayAfter:
                    format: int64
                    type: integer
                type: object
              numberOfWorkers:
                format: int64
                type: integer
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              roleArn:
                type: string
              securityConfiguration:
                type: string
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeout:
                format: int64
                type: integer
              workerType:
                type: string
            required:
            - command
            - name
            - providerRef
            - roleArn
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: triggers.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: Trigger
    listKind: TriggerList
    plural: triggers
    singular: trigger
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              actions:
                items:
                  properties:
                    arguments:
                      additionalProperties:
                        type: string
                      type: object
                    crawlerName:
                      type: string
                    jobName:
                      type: string
                    notificationProperty:
                      properties:
                        notifyDelayAfter:
                          format: int64
                          type: integer
                      type: object
                    securityConfiguration:
                      type: string
                    timeout:
                      format: int64
                      type: integer
                  type: object
                minItems: 1
                type: array
              arn:
                type: string
              description:
                type: string
              enabled:
                type: boolean
              id:
                type: string
              kubeformOutput:
                properties:
                  actions:
                    items:
                      properties:
                        arguments:
                          additionalProperties:
                            type: string
                          type: object
                        crawlerName:
                          type: string
                        jobName:
                          type: string
                        notificationProperty:
                          properties:
                            notifyDelayAfter:
                              format: int64
                              type: integer
                          type: object
                        securityConfiguration:
                          type: string
                        timeout:
                          format: int64
                          type: integer
                      type: object
                    minItems: 1
                    type: array
                  arn:
                    type: string
                  description:
                    type: string
                  enabled:
                    type: boolean
                  id:
                    type: string
                  name:
                    type: string
                  predicate:
                    properties:
                      conditions:
                        items:
                          properties:
                            crawlState:
                              type: string
                            crawlerName:
                              type: string
                            jobName:
                              type: string
                            logicalOperator:
                              type: string
                            state:
                              type: string
                          type: object
                        minItems: 1
                        type: array
                      logical:
                        type: string
                    required:
                    - conditions
                    type: object
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  schedule:
                    type: string
                  state:
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    type: string
                  workflowName:
                    type: string
                required:
                - actions
                - name
                - providerRef
                - type
                type: object
              name:
                type: string
              predicate:
                properties:
                  conditions:
                    items:
                      properties:
                        crawlState:
                          type: string
                        crawlerName:
                          type: string
                        jobName:
                          type: string
                        logicalOperator:
                          type: string
                        state:
                          type: string
                      type: object
                    minItems: 1
                    type: array
                  logical:
                    type: string
                required:
                - conditions
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              schedule:
                type: string
              state:
                type: string
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              type:
                type: string
              workflowName:
                type: string
            required:
            - actions
            - name
            - providerRef
            - type
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: devendpoints.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: DevEndpoint
    listKind: DevEndpointList
    plural: devendpoints
    singular: devendpoint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arguments:
                additionalProperties:
                  type: string
                type: object
              arn:
                type: string
              availabilityZone:
                type: string
              extraJarsS3Path:
                type: string
              extraPythonLibsS3Path:
                type: string
              failureReason:
                type: string
              glueVersion:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arguments:
                    additionalProperties:
                      type: string
                    type: object
                  arn:
                    type: string
                  availabilityZone:
                    type: string
                  extraJarsS3Path:
                    type: string
                  extraPythonLibsS3Path:
                    type: string
                  failureReason:
                    type: string
                  glueVersion:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  numberOfNodes:
                    format: int64
                    type: integer
                  numberOfWorkers:
                    format: int64
                    type: integer
                  privateAddress:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  publicAddress:
                    type: string
                  publicKey:
                    type: string
                  publicKeys:
                    items:
                      type: string
                    maxItems: 5
                    type: array
                  roleArn:
                    type: string
                  securityConfiguration:
                    type: string
                  securityGroupIDS:
                    items:
                      type: string
                    type: array
                  status:
                    type: string
                  subnetID:
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  vpcID:
                    type: string
                  workerType:
                    type: string
                  yarnEndpointAddress:
                    type: string
                  zeppelinRemoteSparkInterpreterPort:
                    format: int64
                    type: integer
                required:
                - name
                - providerRef
                - roleArn
                type: object
              name:
                type: string
              numberOfNodes:
                format: int64
                type: integer
              numberOfWorkers:
                format: int64
                type: integer
              privateAddress:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              publicAddress:
                type: string
              publicKey:
                type: string
              publicKeys:
                items:
                  type: string
                maxItems: 5
                type: array
              roleArn:
                type: string
              securityConfiguration:
                type: string
              securityGroupIDS:
                items:
                  type: string
                type: array
              status:
                type: string
              subnetID:
                type: string
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              vpcID:
                type: string
              workerType:
                type: string
              yarnEndpointAddress:
                type: string
              zeppelinRemoteSparkInterpreterPort:
                format: int64
                type: integer
            required:
            - name
            - providerRef
            - roleArn
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: datacatalogencryptionsettings.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: DataCatalogEncryptionSettings
    listKind: DataCatalogEncryptionSettingsList
    plural: datacatalogencryptionsettings
    singular: datacatalogencryptionsettings
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              catalogID:
                type: string
              dataCatalogEncryptionSettings:
                properties:
                  connectionPasswordEncryption:
                    properties:
                      awsKmsKeyID:
                        type: string
                      returnConnectionPasswordEncrypted:
                        type: boolean
                    required:
                    - returnConnectionPasswordEncrypted
                    type: object
                  encryptionAtRest:
                    properties:
                      catalogEncryptionMode:
                        type: string
                      sseAwsKmsKeyID:
                        type: string
                    required:
                    - catalogEncryptionMode
                    type: object
                required:
                - connectionPasswordEncryption
                - encryptionAtRest
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  catalogID:
                    type: string
                  dataCatalogEncryptionSettings:
                    properties:
                      connectionPasswordEncryption:
                        properties:
                          awsKmsKeyID:
                            type: string
                          returnConnectionPasswordEncrypted:
                            type: boolean
                        required:
                        - returnConnectionPasswordEncrypted
                        type: object
                      encryptionAtRest:
                        properties:
                          catalogEncryptionMode:
                            type: string
                          sseAwsKmsKeyID:
                            type: string
                        required:
                        - catalogEncryptionMode
                        type: object
                    required:
                    - connectionPasswordEncryption
                    - encryptionAtRest
                    type: object
                  id:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - dataCatalogEncryptionSettings
                - providerRef
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - dataCatalogEncryptionSettings
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: partitions.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: Partition
    listKind: PartitionList
    plural: partitions
    singular: partition
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              catalogID:
                type: string
              creationTime:
                type: string
              databaseName:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  catalogID:
                    type: string
                  creationTime:
                    type: string
                  databaseName:
                    type: string
                  id:
                    type: string
                  lastAccessedTime:
                    type: string
                  lastAnalyzedTime:
                    type: string
                  parameters:
                    additionalProperties:
                      type: string
                    type: object
                  partitionValues:
                    items:
                      type: string
                    type: array
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  storageDescriptor:
                    properties:
                      bucketColumns:
                        items:
                          type: string
                        type: array
                      columns:
                        items:
                          properties:
                            comment:
                              type: string
                            name:
                              type: string
                            type:
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      compressed:
                        type: boolean
                      inputFormat:
                        type: string
                      location:
                        type: string
                      numberOfBuckets:
                        format: int64
                        type: integer
                      outputFormat:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      serDeInfo:
                        properties:
                          name:
                            type: string
                          parameters:
                            additionalProperties:
                              type: string
                            type: object
                          serializationLibrary:
                            type: string
                        type: object
                      skewedInfo:
                        properties:
                          skewedColumnNames:
                            items:
                              type: string
                            type: array
                          skewedColumnValueLocationMaps:
                            additionalProperties:
                              type: string
                            type: object
                          skewedColumnValues:
                            items:
                              type: string
                            type: array
                        type: object
                      sortColumns:
                        items:
                          properties:
                            column:
                              type: string
                            sortOrder:
                              format: int64
                              type: integer
                          required:
                          - column
                          - sortOrder
                          type: object
                        type: array
                      storedAsSubDirectories:
                        type: boolean
                    type: object
                  tableName:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - databaseName
                - partitionValues
                - providerRef
                - tableName
                type: object
              lastAccessedTime:
                type: string
              lastAnalyzedTime:
                type: string
              parameters:
                additionalProperties:
                  type: string
                type: object
              partitionValues:
                items:
                  type: string
                type: array
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              storageDescriptor:
                properties:
                  bucketColumns:
                    items:
                      type: string
                    type: array
                  columns:
                    items:
                      properties:
                        comment:
                          type: string
                        name:
                          type: string
                        type:
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  compressed:
                    type: boolean
                  inputFormat:
                    type: string
                  location:
                    type: string
                  numberOfBuckets:
                    format: int64
                    type: integer
                  outputFormat:
                    type: string
                  parameters:
                    additionalProperties:
                      type: string
                    type: object
                  serDeInfo:
                    properties:
                      name:
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        type: object
                      serializationLibrary:
                        type: string
                    type: object
                  skewedInfo:
                    properties:
                      skewedColumnNames:
                        items:
                          type: string
                        type: array
                      skewedColumnValueLocationMaps:
                        additionalProperties:
                          type: string
                        type: object
                      skewedColumnValues:
                        items:
                          type: string
                        type: array
                    type: object
                  sortColumns:
                    items:
                      properties:
                        column:
                          type: string
                        sortOrder:
                          format: int64
                          type: integer
                      required:
                      - column
                      - sortOrder
                      type: object
                    type: array
                  storedAsSubDirectories:
                    type: boolean
                type: object
              tableName:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - databaseName
            - partitionValues
            - providerRef
            - tableName
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: resourcepolicies.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: ResourcePolicy
    listKind: ResourcePolicyList
    plural: resourcepolicies
    singular: resourcepolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  policy:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - policy
                - providerRef
                type: object
              policy:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - policy
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: securityconfigurations.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: SecurityConfiguration
    listKind: SecurityConfigurationList
    plural: securityconfigurations
    singular: securityconfiguration
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              encryptionConfiguration:
                properties:
                  cloudwatchEncryption:
                    properties:
                      cloudwatchEncryptionMode:
                        type: string
                      kmsKeyArn:
                        type: string
                    type: object
                  jobBookmarksEncryption:
                    properties:
                      jobBookmarksEncryptionMode:
                        type: string
                      kmsKeyArn:
                        type: string
                    type: object
                  s3Encryption:
                    properties:
                      kmsKeyArn:
                        type: string
                      s3EncryptionMode:
                        type: string
                    type: object
                required:
                - cloudwatchEncryption
                - jobBookmarksEncryption
                - s3Encryption
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  encryptionConfiguration:
                    properties:
                      cloudwatchEncryption:
                        properties:
                          cloudwatchEncryptionMode:
                            type: string
                          kmsKeyArn:
                            type: string
                        type: object
                      jobBookmarksEncryption:
                        properties:
                          jobBookmarksEncryptionMode:
                            type: string
                          kmsKeyArn:
                            type: string
                        type: object
                      s3Encryption:
                        properties:
                          kmsKeyArn:
                            type: string
                          s3EncryptionMode:
                            type: string
                        type: object
                    required:
                    - cloudwatchEncryption
                    - jobBookmarksEncryption
                    - s3Encryption
                    type: object
                  id:
                    type: string
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - encryptionConfiguration
                - name
                - providerRef
                type: object
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - encryptionConfiguration
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: crawlers.glue.aws.kubeform.com
spec:
  group: glue.aws.kubeform.com
  names:
    kind: Crawler
    listKind: CrawlerList
    plural: crawlers
    singular: crawler
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              catalogTarget:
                items:
                  properties:
                    databaseName:
                      type: string
                    tables:
                      items:
                        type: string
                      type: array
                  required:
                  - databaseName
                  - tables
                  type: object
                minItems: 1
                type: array
              classifiers:
                items:
                  type: string
                type: array
              configuration:
                type: string
              databaseName:
                type: string
              description:
                type: string
              dynamodbTarget:
                items:
                  properties:
                    path:
                      type: string
                    scanAll:
                      type: boolean
                    scanRate:
                      format: double
                      type: number
                  required:
                  - path
                  type: object
                minItems: 1
                type: array
              id:
                type: string
              jdbcTarget:
                items:
                  properties:
                    connectionName:
                      type: string
                    exclusions:
                      items:
                        type: string
                      type: array
                    path:
                      type: string
                  required:
                  - connectionName
                  - path
                  type: object
                minItems: 1
                type: array
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  catalogTarget:
                    items:
                      properties:
                        databaseName:
                          type: string
                        tables:
                          items:
                            type: string
                          type: array
                      required:
                      - databaseName
                      - tables
                      type: object
                    minItems: 1
                    type: array
                  classifiers:
                    items:
                      type: string
                    type: array
                  configuration:
                    type: string
                  databaseName:
                    type: string
                  description:
                    type: string
                  dynamodbTarget:
                    items:
                      properties:
                        path:
                          type: string
                        scanAll:
                          type: boolean
                        scanRate:
                          format: double
                          type: number
                      required:
                      - path
                      type: object
                    minItems: 1
                    type: array
                  id:
                    type: string
                  jdbcTarget:
                    items:
                      properties:
                        connectionName:
                          type: string
                        exclusions:
                          items:
                            type: string
                          type: array
                        path:
                          type: string
                      required:
                      - connectionName
                      - path
                      type: object
                    minItems: 1
                    type: array
                  lineageConfiguration:
                    properties:
                      crawlerLineageSettings:
                        type: string
                    type: object
                  mongodbTarget:
                    items:
                      properties:
                        connectionName:
                          type: string
                        path:
                          type: string
                        scanAll:
                          type: boolean
                      required:
                      - connectionName
                      - path
                      type: object
                    minItems: 1
                    type: array
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  recrawlPolicy:
                    properties:
                      recrawlBehavior:
                        type: string
                    type: object
                  role:
                    type: string
                  s3Target:
                    items:
                      properties:
                        connectionName:
                          type: string
                        exclusions:
                          items:
                            type: string
                          type: array
                        path:
                          type: string
                      required:
                      - path
                      type: object
                    minItems: 1
                    type: array
                  schedule:
                    type: string
                  schemaChangePolicy:
                    properties:
                      deleteBehavior:
                        type: string
                      updateBehavior:
                        type: string
                    type: object
                  securityConfiguration:
                    type: string
                  tablePrefix:
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - databaseName
                - name
                - providerRef
                - role
                type: object
              lineageConfiguration:
                properties:
                  crawlerLineageSettings:
                    type: string
                type: object
              mongodbTarget:
                items:
                  properties:
                    connectionName:
                      type: string
                    path:
                      type: string
                    scanAll:
                      type: boolean
                  required:
                  - connectionName
                  - path
                  type: object
                minItems: 1
                type: array
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              recrawlPolicy:
                properties:
                  recrawlBehavior:
                    type: string
                type: object
              role:
                type: string
              s3Target:
                items:
                  properties:
                    connectionName:
                      type: string
                    exclusions:
                      items:
                        type: string
                      type: array
                    path:
                      type: string
                  required:
                  - path
                  type: object
                minItems: 1
                type: array
              schedule:
                type: string
              schemaChangePolicy:
                properties:
                  deleteBehavior:
                    type: string
                  updateBehavior:
                    type: string
                type: object
              securityConfiguration:
                type: string
              tablePrefix:
                type: string
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - databaseName
            - name
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
