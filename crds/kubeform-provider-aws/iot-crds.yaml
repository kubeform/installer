apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: certificates.iot.aws.kubeform.com
spec:
  group: iot.aws.kubeform.com
  names:
    kind: Certificate
    listKind: CertificateList
    plural: certificates
    singular: certificate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              active:
                type: boolean
              arn:
                type: string
              csr:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  active:
                    type: boolean
                  arn:
                    type: string
                  csr:
                    type: string
                  id:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - active
                - providerRef
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - active
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: things.iot.aws.kubeform.com
spec:
  group: iot.aws.kubeform.com
  names:
    kind: Thing
    listKind: ThingList
    plural: things
    singular: thing
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              attributes:
                additionalProperties:
                  type: string
                type: object
              defaultClientID:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  attributes:
                    additionalProperties:
                      type: string
                    type: object
                  defaultClientID:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  thingTypeName:
                    type: string
                  version:
                    format: int64
                    type: integer
                required:
                - name
                - providerRef
                type: object
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              thingTypeName:
                type: string
              version:
                format: int64
                type: integer
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: rolealiases.iot.aws.kubeform.com
spec:
  group: iot.aws.kubeform.com
  names:
    kind: RoleAlias
    listKind: RoleAliasList
    plural: rolealiases
    singular: rolealias
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              alias:
                type: string
              arn:
                type: string
              credentialDuration:
                format: int64
                type: integer
              id:
                type: string
              kubeformOutput:
                properties:
                  alias:
                    type: string
                  arn:
                    type: string
                  credentialDuration:
                    format: int64
                    type: integer
                  id:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  roleArn:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - alias
                - providerRef
                - roleArn
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              roleArn:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - alias
            - providerRef
            - roleArn
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: policies.iot.aws.kubeform.com
spec:
  group: iot.aws.kubeform.com
  names:
    kind: Policy
    listKind: PolicyList
    plural: policies
    singular: policy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              defaultVersionID:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  defaultVersionID:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  policy:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - name
                - policy
                - providerRef
                type: object
              name:
                type: string
              policy:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - name
            - policy
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: policyattachments.iot.aws.kubeform.com
spec:
  group: iot.aws.kubeform.com
  names:
    kind: PolicyAttachment
    listKind: PolicyAttachmentList
    plural: policyattachments
    singular: policyattachment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  policy:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  target:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - policy
                - providerRef
                - target
                type: object
              policy:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              target:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - policy
            - providerRef
            - target
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: thingtypes.iot.aws.kubeform.com
spec:
  group: iot.aws.kubeform.com
  names:
    kind: ThingType
    listKind: ThingTypeList
    plural: thingtypes
    singular: thingtype
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              deprecated:
                type: boolean
              id:
                type: string
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  deprecated:
                    type: boolean
                  id:
                    type: string
                  name:
                    type: string
                  properties:
                    properties:
                      description:
                        type: string
                      searchableAttributes:
                        items:
                          type: string
                        maxItems: 3
                        type: array
                    type: object
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - name
                - providerRef
                type: object
              name:
                type: string
              properties:
                properties:
                  description:
                    type: string
                  searchableAttributes:
                    items:
                      type: string
                    maxItems: 3
                    type: array
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: topicrules.iot.aws.kubeform.com
spec:
  group: iot.aws.kubeform.com
  names:
    kind: TopicRule
    listKind: TopicRuleList
    plural: topicrules
    singular: topicrule
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arn:
                type: string
              cloudwatchAlarm:
                items:
                  properties:
                    alarmName:
                      type: string
                    roleArn:
                      type: string
                    stateReason:
                      type: string
                    stateValue:
                      type: string
                  required:
                  - alarmName
                  - roleArn
                  - stateReason
                  - stateValue
                  type: object
                type: array
              cloudwatchMetric:
                items:
                  properties:
                    metricName:
                      type: string
                    metricNamespace:
                      type: string
                    metricTimestamp:
                      type: string
                    metricUnit:
                      type: string
                    metricValue:
                      type: string
                    roleArn:
                      type: string
                  required:
                  - metricName
                  - metricNamespace
                  - metricUnit
                  - metricValue
                  - roleArn
                  type: object
                type: array
              description:
                type: string
              dynamodb:
                items:
                  properties:
                    hashKeyField:
                      type: string
                    hashKeyType:
                      type: string
                    hashKeyValue:
                      type: string
                    operation:
                      type: string
                    payloadField:
                      type: string
                    rangeKeyField:
                      type: string
                    rangeKeyType:
                      type: string
                    rangeKeyValue:
                      type: string
                    roleArn:
                      type: string
                    tableName:
                      type: string
                  required:
                  - hashKeyField
                  - hashKeyValue
                  - roleArn
                  - tableName
                  type: object
                type: array
              dynamodbv2:
                items:
                  properties:
                    putItem:
                      properties:
                        tableName:
                          type: string
                      required:
                      - tableName
                      type: object
                    roleArn:
                      type: string
                  required:
                  - roleArn
                  type: object
                type: array
              elasticsearch:
                items:
                  properties:
                    ID:
                      type: string
                    endpoint:
                      type: string
                    index:
                      type: string
                    roleArn:
                      type: string
                    type:
                      type: string
                  required:
                  - ID
                  - endpoint
                  - index
                  - roleArn
                  - type
                  type: object
                type: array
              enabled:
                type: boolean
              errorAction:
                properties:
                  cloudwatchAlarm:
                    properties:
                      alarmName:
                        type: string
                      roleArn:
                        type: string
                      stateReason:
                        type: string
                      stateValue:
                        type: string
                    required:
                    - alarmName
                    - roleArn
                    - stateReason
                    - stateValue
                    type: object
                  cloudwatchMetric:
                    properties:
                      metricName:
                        type: string
                      metricNamespace:
                        type: string
                      metricTimestamp:
                        type: string
                      metricUnit:
                        type: string
                      metricValue:
                        type: string
                      roleArn:
                        type: string
                    required:
                    - metricName
                    - metricNamespace
                    - metricUnit
                    - metricValue
                    - roleArn
                    type: object
                  dynamodb:
                    properties:
                      hashKeyField:
                        type: string
                      hashKeyType:
                        type: string
                      hashKeyValue:
                        type: string
                      operation:
                        type: string
                      payloadField:
                        type: string
                      rangeKeyField:
                        type: string
                      rangeKeyType:
                        type: string
                      rangeKeyValue:
                        type: string
                      roleArn:
                        type: string
                      tableName:
                        type: string
                    required:
                    - hashKeyField
                    - hashKeyValue
                    - roleArn
                    - tableName
                    type: object
                  dynamodbv2:
                    properties:
                      putItem:
                        properties:
                          tableName:
                            type: string
                        required:
                        - tableName
                        type: object
                      roleArn:
                        type: string
                    required:
                    - roleArn
                    type: object
                  elasticsearch:
                    properties:
                      ID:
                        type: string
                      endpoint:
                        type: string
                      index:
                        type: string
                      roleArn:
                        type: string
                      type:
                        type: string
                    required:
                    - ID
                    - endpoint
                    - index
                    - roleArn
                    - type
                    type: object
                  firehose:
                    properties:
                      deliveryStreamName:
                        type: string
                      roleArn:
                        type: string
                      separator:
                        type: string
                    required:
                    - deliveryStreamName
                    - roleArn
                    type: object
                  iotAnalytics:
                    properties:
                      channelName:
                        type: string
                      roleArn:
                        type: string
                    required:
                    - channelName
                    - roleArn
                    type: object
                  iotEvents:
                    properties:
                      inputName:
                        type: string
                      messageID:
                        type: string
                      roleArn:
                        type: string
                    required:
                    - inputName
                    - roleArn
                    type: object
                  kinesis:
                    properties:
                      partitionKey:
                        type: string
                      roleArn:
                        type: string
                      streamName:
                        type: string
                    required:
                    - roleArn
                    - streamName
                    type: object
                  lambda:
                    properties:
                      functionArn:
                        type: string
                    required:
                    - functionArn
                    type: object
                  republish:
                    properties:
                      qos:
                        format: int64
                        type: integer
                      roleArn:
                        type: string
                      topic:
                        type: string
                    required:
                    - roleArn
                    - topic
                    type: object
                  s3:
                    properties:
                      bucketName:
                        type: string
                      key:
                        type: string
                      roleArn:
                        type: string
                    required:
                    - bucketName
                    - key
                    - roleArn
                    type: object
                  sns:
                    properties:
                      messageFormat:
                        type: string
                      roleArn:
                        type: string
                      targetArn:
                        type: string
                    required:
                    - roleArn
                    - targetArn
                    type: object
                  sqs:
                    properties:
                      queueURL:
                        type: string
                      roleArn:
                        type: string
                      useBase64:
                        type: boolean
                    required:
                    - queueURL
                    - roleArn
                    - useBase64
                    type: object
                  stepFunctions:
                    properties:
                      executionNamePrefix:
                        type: string
                      roleArn:
                        type: string
                      stateMachineName:
                        type: string
                    required:
                    - roleArn
                    - stateMachineName
                    type: object
                type: object
              firehose:
                items:
                  properties:
                    deliveryStreamName:
                      type: string
                    roleArn:
                      type: string
                    separator:
                      type: string
                  required:
                  - deliveryStreamName
                  - roleArn
                  type: object
                type: array
              id:
                type: string
              iotAnalytics:
                items:
                  properties:
                    channelName:
                      type: string
                    roleArn:
                      type: string
                  required:
                  - channelName
                  - roleArn
                  type: object
                type: array
              iotEvents:
                items:
                  properties:
                    inputName:
                      type: string
                    messageID:
                      type: string
                    roleArn:
                      type: string
                  required:
                  - inputName
                  - roleArn
                  type: object
                type: array
              kinesis:
                items:
                  properties:
                    partitionKey:
                      type: string
                    roleArn:
                      type: string
                    streamName:
                      type: string
                  required:
                  - roleArn
                  - streamName
                  type: object
                type: array
              kubeformOutput:
                properties:
                  arn:
                    type: string
                  cloudwatchAlarm:
                    items:
                      properties:
                        alarmName:
                          type: string
                        roleArn:
                          type: string
                        stateReason:
                          type: string
                        stateValue:
                          type: string
                      required:
                      - alarmName
                      - roleArn
                      - stateReason
                      - stateValue
                      type: object
                    type: array
                  cloudwatchMetric:
                    items:
                      properties:
                        metricName:
                          type: string
                        metricNamespace:
                          type: string
                        metricTimestamp:
                          type: string
                        metricUnit:
                          type: string
                        metricValue:
                          type: string
                        roleArn:
                          type: string
                      required:
                      - metricName
                      - metricNamespace
                      - metricUnit
                      - metricValue
                      - roleArn
                      type: object
                    type: array
                  description:
                    type: string
                  dynamodb:
                    items:
                      properties:
                        hashKeyField:
                          type: string
                        hashKeyType:
                          type: string
                        hashKeyValue:
                          type: string
                        operation:
                          type: string
                        payloadField:
                          type: string
                        rangeKeyField:
                          type: string
                        rangeKeyType:
                          type: string
                        rangeKeyValue:
                          type: string
                        roleArn:
                          type: string
                        tableName:
                          type: string
                      required:
                      - hashKeyField
                      - hashKeyValue
                      - roleArn
                      - tableName
                      type: object
                    type: array
                  dynamodbv2:
                    items:
                      properties:
                        putItem:
                          properties:
                            tableName:
                              type: string
                          required:
                          - tableName
                          type: object
                        roleArn:
                          type: string
                      required:
                      - roleArn
                      type: object
                    type: array
                  elasticsearch:
                    items:
                      properties:
                        ID:
                          type: string
                        endpoint:
                          type: string
                        index:
                          type: string
                        roleArn:
                          type: string
                        type:
                          type: string
                      required:
                      - ID
                      - endpoint
                      - index
                      - roleArn
                      - type
                      type: object
                    type: array
                  enabled:
                    type: boolean
                  errorAction:
                    properties:
                      cloudwatchAlarm:
                        properties:
                          alarmName:
                            type: string
                          roleArn:
                            type: string
                          stateReason:
                            type: string
                          stateValue:
                            type: string
                        required:
                        - alarmName
                        - roleArn
                        - stateReason
                        - stateValue
                        type: object
                      cloudwatchMetric:
                        properties:
                          metricName:
                            type: string
                          metricNamespace:
                            type: string
                          metricTimestamp:
                            type: string
                          metricUnit:
                            type: string
                          metricValue:
                            type: string
                          roleArn:
                            type: string
                        required:
                        - metricName
                        - metricNamespace
                        - metricUnit
                        - metricValue
                        - roleArn
                        type: object
                      dynamodb:
                        properties:
                          hashKeyField:
                            type: string
                          hashKeyType:
                            type: string
                          hashKeyValue:
                            type: string
                          operation:
                            type: string
                          payloadField:
                            type: string
                          rangeKeyField:
                            type: string
                          rangeKeyType:
                            type: string
                          rangeKeyValue:
                            type: string
                          roleArn:
                            type: string
                          tableName:
                            type: string
                        required:
                        - hashKeyField
                        - hashKeyValue
                        - roleArn
                        - tableName
                        type: object
                      dynamodbv2:
                        properties:
                          putItem:
                            properties:
                              tableName:
                                type: string
                            required:
                            - tableName
                            type: object
                          roleArn:
                            type: string
                        required:
                        - roleArn
                        type: object
                      elasticsearch:
                        properties:
                          ID:
                            type: string
                          endpoint:
                            type: string
                          index:
                            type: string
                          roleArn:
                            type: string
                          type:
                            type: string
                        required:
                        - ID
                        - endpoint
                        - index
                        - roleArn
                        - type
                        type: object
                      firehose:
                        properties:
                          deliveryStreamName:
                            type: string
                          roleArn:
                            type: string
                          separator:
                            type: string
                        required:
                        - deliveryStreamName
                        - roleArn
                        type: object
                      iotAnalytics:
                        properties:
                          channelName:
                            type: string
                          roleArn:
                            type: string
                        required:
                        - channelName
                        - roleArn
                        type: object
                      iotEvents:
                        properties:
                          inputName:
                            type: string
                          messageID:
                            type: string
                          roleArn:
                            type: string
                        required:
                        - inputName
                        - roleArn
                        type: object
                      kinesis:
                        properties:
                          partitionKey:
                            type: string
                          roleArn:
                            type: string
                          streamName:
                            type: string
                        required:
                        - roleArn
                        - streamName
                        type: object
                      lambda:
                        properties:
                          functionArn:
                            type: string
                        required:
                        - functionArn
                        type: object
                      republish:
                        properties:
                          qos:
                            format: int64
                            type: integer
                          roleArn:
                            type: string
                          topic:
                            type: string
                        required:
                        - roleArn
                        - topic
                        type: object
                      s3:
                        properties:
                          bucketName:
                            type: string
                          key:
                            type: string
                          roleArn:
                            type: string
                        required:
                        - bucketName
                        - key
                        - roleArn
                        type: object
                      sns:
                        properties:
                          messageFormat:
                            type: string
                          roleArn:
                            type: string
                          targetArn:
                            type: string
                        required:
                        - roleArn
                        - targetArn
                        type: object
                      sqs:
                        properties:
                          queueURL:
                            type: string
                          roleArn:
                            type: string
                          useBase64:
                            type: boolean
                        required:
                        - queueURL
                        - roleArn
                        - useBase64
                        type: object
                      stepFunctions:
                        properties:
                          executionNamePrefix:
                            type: string
                          roleArn:
                            type: string
                          stateMachineName:
                            type: string
                        required:
                        - roleArn
                        - stateMachineName
                        type: object
                    type: object
                  firehose:
                    items:
                      properties:
                        deliveryStreamName:
                          type: string
                        roleArn:
                          type: string
                        separator:
                          type: string
                      required:
                      - deliveryStreamName
                      - roleArn
                      type: object
                    type: array
                  id:
                    type: string
                  iotAnalytics:
                    items:
                      properties:
                        channelName:
                          type: string
                        roleArn:
                          type: string
                      required:
                      - channelName
                      - roleArn
                      type: object
                    type: array
                  iotEvents:
                    items:
                      properties:
                        inputName:
                          type: string
                        messageID:
                          type: string
                        roleArn:
                          type: string
                      required:
                      - inputName
                      - roleArn
                      type: object
                    type: array
                  kinesis:
                    items:
                      properties:
                        partitionKey:
                          type: string
                        roleArn:
                          type: string
                        streamName:
                          type: string
                      required:
                      - roleArn
                      - streamName
                      type: object
                    type: array
                  lambda:
                    items:
                      properties:
                        functionArn:
                          type: string
                      required:
                      - functionArn
                      type: object
                    type: array
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  republish:
                    items:
                      properties:
                        qos:
                          format: int64
                          type: integer
                        roleArn:
                          type: string
                        topic:
                          type: string
                      required:
                      - roleArn
                      - topic
                      type: object
                    type: array
                  s3:
                    items:
                      properties:
                        bucketName:
                          type: string
                        key:
                          type: string
                        roleArn:
                          type: string
                      required:
                      - bucketName
                      - key
                      - roleArn
                      type: object
                    type: array
                  sns:
                    items:
                      properties:
                        messageFormat:
                          type: string
                        roleArn:
                          type: string
                        targetArn:
                          type: string
                      required:
                      - roleArn
                      - targetArn
                      type: object
                    type: array
                  sql:
                    type: string
                  sqlVersion:
                    type: string
                  sqs:
                    items:
                      properties:
                        queueURL:
                          type: string
                        roleArn:
                          type: string
                        useBase64:
                          type: boolean
                      required:
                      - queueURL
                      - roleArn
                      - useBase64
                      type: object
                    type: array
                  stepFunctions:
                    items:
                      properties:
                        executionNamePrefix:
                          type: string
                        roleArn:
                          type: string
                        stateMachineName:
                          type: string
                      required:
                      - roleArn
                      - stateMachineName
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - enabled
                - name
                - providerRef
                - sql
                - sqlVersion
                type: object
              lambda:
                items:
                  properties:
                    functionArn:
                      type: string
                  required:
                  - functionArn
                  type: object
                type: array
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              republish:
                items:
                  properties:
                    qos:
                      format: int64
                      type: integer
                    roleArn:
                      type: string
                    topic:
                      type: string
                  required:
                  - roleArn
                  - topic
                  type: object
                type: array
              s3:
                items:
                  properties:
                    bucketName:
                      type: string
                    key:
                      type: string
                    roleArn:
                      type: string
                  required:
                  - bucketName
                  - key
                  - roleArn
                  type: object
                type: array
              sns:
                items:
                  properties:
                    messageFormat:
                      type: string
                    roleArn:
                      type: string
                    targetArn:
                      type: string
                  required:
                  - roleArn
                  - targetArn
                  type: object
                type: array
              sql:
                type: string
              sqlVersion:
                type: string
              sqs:
                items:
                  properties:
                    queueURL:
                      type: string
                    roleArn:
                      type: string
                    useBase64:
                      type: boolean
                  required:
                  - queueURL
                  - roleArn
                  - useBase64
                  type: object
                type: array
              stepFunctions:
                items:
                  properties:
                    executionNamePrefix:
                      type: string
                    roleArn:
                      type: string
                    stateMachineName:
                      type: string
                  required:
                  - roleArn
                  - stateMachineName
                  type: object
                type: array
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - enabled
            - name
            - providerRef
            - sql
            - sqlVersion
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: thingprincipalattachments.iot.aws.kubeform.com
spec:
  group: iot.aws.kubeform.com
  names:
    kind: ThingPrincipalAttachment
    listKind: ThingPrincipalAttachmentList
    plural: thingprincipalattachments
    singular: thingprincipalattachment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  principal:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  thing:
                    type: string
                required:
                - principal
                - providerRef
                - thing
                type: object
              principal:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              thing:
                type: string
            required:
            - principal
            - providerRef
            - thing
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
