apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: accountpublicaccessblocks.s3.aws.kubeform.com
spec:
  group: s3.aws.kubeform.com
  names:
    kind: AccountPublicAccessBlock
    listKind: AccountPublicAccessBlockList
    plural: accountpublicaccessblocks
    singular: accountpublicaccessblock
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              accountID:
                type: string
              blockPublicAcls:
                type: boolean
              blockPublicPolicy:
                type: boolean
              id:
                type: string
              ignorePublicAcls:
                type: boolean
              kubeformOutput:
                properties:
                  accountID:
                    type: string
                  blockPublicAcls:
                    type: boolean
                  blockPublicPolicy:
                    type: boolean
                  id:
                    type: string
                  ignorePublicAcls:
                    type: boolean
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  restrictPublicBuckets:
                    type: boolean
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - providerRef
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              restrictPublicBuckets:
                type: boolean
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: accesspoints.s3.aws.kubeform.com
spec:
  group: s3.aws.kubeform.com
  names:
    kind: AccessPoint
    listKind: AccessPointList
    plural: accesspoints
    singular: accesspoint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              accountID:
                type: string
              arn:
                type: string
              bucket:
                type: string
              domainName:
                type: string
              hasPublicAccessPolicy:
                type: boolean
              id:
                type: string
              kubeformOutput:
                properties:
                  accountID:
                    type: string
                  arn:
                    type: string
                  bucket:
                    type: string
                  domainName:
                    type: string
                  hasPublicAccessPolicy:
                    type: boolean
                  id:
                    type: string
                  name:
                    type: string
                  networkOrigin:
                    type: string
                  policy:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  publicAccessBlockConfiguration:
                    properties:
                      blockPublicAcls:
                        type: boolean
                      blockPublicPolicy:
                        type: boolean
                      ignorePublicAcls:
                        type: boolean
                      restrictPublicBuckets:
                        type: boolean
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  vpcConfiguration:
                    properties:
                      vpcID:
                        type: string
                    required:
                    - vpcID
                    type: object
                required:
                - bucket
                - name
                - providerRef
                type: object
              name:
                type: string
              networkOrigin:
                type: string
              policy:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              publicAccessBlockConfiguration:
                properties:
                  blockPublicAcls:
                    type: boolean
                  blockPublicPolicy:
                    type: boolean
                  ignorePublicAcls:
                    type: boolean
                  restrictPublicBuckets:
                    type: boolean
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              vpcConfiguration:
                properties:
                  vpcID:
                    type: string
                required:
                - vpcID
                type: object
            required:
            - bucket
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: buckets.s3.aws.kubeform.com
spec:
  group: s3.aws.kubeform.com
  names:
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              accelerationStatus:
                type: string
              acl:
                type: string
              arn:
                type: string
              bucket:
                type: string
              bucketDomainName:
                type: string
              bucketPrefix:
                type: string
              bucketRegionalDomainName:
                type: string
              corsRule:
                items:
                  properties:
                    allowedHeaders:
                      items:
                        type: string
                      type: array
                    allowedMethods:
                      items:
                        type: string
                      type: array
                    allowedOrigins:
                      items:
                        type: string
                      type: array
                    exposeHeaders:
                      items:
                        type: string
                      type: array
                    maxAgeSeconds:
                      format: int64
                      type: integer
                  required:
                  - allowedMethods
                  - allowedOrigins
                  type: object
                type: array
              forceDestroy:
                type: boolean
              grant:
                items:
                  properties:
                    ID:
                      type: string
                    permissions:
                      items:
                        type: string
                      type: array
                    type:
                      type: string
                    uri:
                      type: string
                  required:
                  - permissions
                  - type
                  type: object
                type: array
              hostedZoneID:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  accelerationStatus:
                    type: string
                  acl:
                    type: string
                  arn:
                    type: string
                  bucket:
                    type: string
                  bucketDomainName:
                    type: string
                  bucketPrefix:
                    type: string
                  bucketRegionalDomainName:
                    type: string
                  corsRule:
                    items:
                      properties:
                        allowedHeaders:
                          items:
                            type: string
                          type: array
                        allowedMethods:
                          items:
                            type: string
                          type: array
                        allowedOrigins:
                          items:
                            type: string
                          type: array
                        exposeHeaders:
                          items:
                            type: string
                          type: array
                        maxAgeSeconds:
                          format: int64
                          type: integer
                      required:
                      - allowedMethods
                      - allowedOrigins
                      type: object
                    type: array
                  forceDestroy:
                    type: boolean
                  grant:
                    items:
                      properties:
                        ID:
                          type: string
                        permissions:
                          items:
                            type: string
                          type: array
                        type:
                          type: string
                        uri:
                          type: string
                      required:
                      - permissions
                      - type
                      type: object
                    type: array
                  hostedZoneID:
                    type: string
                  id:
                    type: string
                  lifecycleRule:
                    items:
                      properties:
                        ID:
                          type: string
                        abortIncompleteMultipartUploadDays:
                          format: int64
                          type: integer
                        enabled:
                          type: boolean
                        expiration:
                          properties:
                            date:
                              type: string
                            days:
                              format: int64
                              type: integer
                            expiredObjectDeleteMarker:
                              type: boolean
                          type: object
                        noncurrentVersionExpiration:
                          properties:
                            days:
                              format: int64
                              type: integer
                          type: object
                        noncurrentVersionTransition:
                          items:
                            properties:
                              days:
                                format: int64
                                type: integer
                              storageClass:
                                type: string
                            required:
                            - storageClass
                            type: object
                          type: array
                        prefix:
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          type: object
                        transition:
                          items:
                            properties:
                              date:
                                type: string
                              days:
                                format: int64
                                type: integer
                              storageClass:
                                type: string
                            required:
                            - storageClass
                            type: object
                          type: array
                      required:
                      - enabled
                      type: object
                    type: array
                  logging:
                    items:
                      properties:
                        targetBucket:
                          type: string
                        targetPrefix:
                          type: string
                      required:
                      - targetBucket
                      type: object
                    type: array
                  objectLockConfiguration:
                    properties:
                      objectLockEnabled:
                        type: string
                      rule:
                        properties:
                          defaultRetention:
                            properties:
                              days:
                                format: int64
                                type: integer
                              mode:
                                type: string
                              years:
                                format: int64
                                type: integer
                            required:
                            - mode
                            type: object
                        required:
                        - defaultRetention
                        type: object
                    required:
                    - objectLockEnabled
                    type: object
                  policy:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    type: string
                  replicationConfiguration:
                    properties:
                      role:
                        type: string
                      rules:
                        items:
                          properties:
                            ID:
                              type: string
                            destination:
                              properties:
                                accessControlTranslation:
                                  properties:
                                    owner:
                                      type: string
                                  required:
                                  - owner
                                  type: object
                                accountID:
                                  type: string
                                bucket:
                                  type: string
                                replicaKmsKeyID:
                                  type: string
                                storageClass:
                                  type: string
                              required:
                              - bucket
                              type: object
                            filter:
                              properties:
                                prefix:
                                  type: string
                                tags:
                                  additionalProperties:
                                    type: string
                                  type: object
                              type: object
                            prefix:
                              type: string
                            priority:
                              format: int64
                              type: integer
                            sourceSelectionCriteria:
                              properties:
                                sseKmsEncryptedObjects:
                                  properties:
                                    enabled:
                                      type: boolean
                                  required:
                                  - enabled
                                  type: object
                              type: object
                            status:
                              type: string
                          required:
                          - destination
                          - status
                          type: object
                        type: array
                    required:
                    - role
                    - rules
                    type: object
                  requestPayer:
                    type: string
                  serverSideEncryptionConfiguration:
                    properties:
                      rule:
                        properties:
                          applyServerSideEncryptionByDefault:
                            properties:
                              kmsMasterKeyID:
                                type: string
                              sseAlgorithm:
                                type: string
                            required:
                            - sseAlgorithm
                            type: object
                          bucketKeyEnabled:
                            type: boolean
                        required:
                        - applyServerSideEncryptionByDefault
                        type: object
                    required:
                    - rule
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  versioning:
                    properties:
                      enabled:
                        type: boolean
                      mfaDelete:
                        type: boolean
                    type: object
                  website:
                    properties:
                      errorDocument:
                        type: string
                      indexDocument:
                        type: string
                      redirectAllRequestsTo:
                        type: string
                      routingRules:
                        type: string
                    type: object
                  websiteDomain:
                    type: string
                  websiteEndpoint:
                    type: string
                required:
                - providerRef
                type: object
              lifecycleRule:
                items:
                  properties:
                    ID:
                      type: string
                    abortIncompleteMultipartUploadDays:
                      format: int64
                      type: integer
                    enabled:
                      type: boolean
                    expiration:
                      properties:
                        date:
                          type: string
                        days:
                          format: int64
                          type: integer
                        expiredObjectDeleteMarker:
                          type: boolean
                      type: object
                    noncurrentVersionExpiration:
                      properties:
                        days:
                          format: int64
                          type: integer
                      type: object
                    noncurrentVersionTransition:
                      items:
                        properties:
                          days:
                            format: int64
                            type: integer
                          storageClass:
                            type: string
                        required:
                        - storageClass
                        type: object
                      type: array
                    prefix:
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      type: object
                    transition:
                      items:
                        properties:
                          date:
                            type: string
                          days:
                            format: int64
                            type: integer
                          storageClass:
                            type: string
                        required:
                        - storageClass
                        type: object
                      type: array
                  required:
                  - enabled
                  type: object
                type: array
              logging:
                items:
                  properties:
                    targetBucket:
                      type: string
                    targetPrefix:
                      type: string
                  required:
                  - targetBucket
                  type: object
                type: array
              objectLockConfiguration:
                properties:
                  objectLockEnabled:
                    type: string
                  rule:
                    properties:
                      defaultRetention:
                        properties:
                          days:
                            format: int64
                            type: integer
                          mode:
                            type: string
                          years:
                            format: int64
                            type: integer
                        required:
                        - mode
                        type: object
                    required:
                    - defaultRetention
                    type: object
                required:
                - objectLockEnabled
                type: object
              policy:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                type: string
              replicationConfiguration:
                properties:
                  role:
                    type: string
                  rules:
                    items:
                      properties:
                        ID:
                          type: string
                        destination:
                          properties:
                            accessControlTranslation:
                              properties:
                                owner:
                                  type: string
                              required:
                              - owner
                              type: object
                            accountID:
                              type: string
                            bucket:
                              type: string
                            replicaKmsKeyID:
                              type: string
                            storageClass:
                              type: string
                          required:
                          - bucket
                          type: object
                        filter:
                          properties:
                            prefix:
                              type: string
                            tags:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                        prefix:
                          type: string
                        priority:
                          format: int64
                          type: integer
                        sourceSelectionCriteria:
                          properties:
                            sseKmsEncryptedObjects:
                              properties:
                                enabled:
                                  type: boolean
                              required:
                              - enabled
                              type: object
                          type: object
                        status:
                          type: string
                      required:
                      - destination
                      - status
                      type: object
                    type: array
                required:
                - role
                - rules
                type: object
              requestPayer:
                type: string
              serverSideEncryptionConfiguration:
                properties:
                  rule:
                    properties:
                      applyServerSideEncryptionByDefault:
                        properties:
                          kmsMasterKeyID:
                            type: string
                          sseAlgorithm:
                            type: string
                        required:
                        - sseAlgorithm
                        type: object
                      bucketKeyEnabled:
                        type: boolean
                    required:
                    - applyServerSideEncryptionByDefault
                    type: object
                required:
                - rule
                type: object
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              versioning:
                properties:
                  enabled:
                    type: boolean
                  mfaDelete:
                    type: boolean
                type: object
              website:
                properties:
                  errorDocument:
                    type: string
                  indexDocument:
                    type: string
                  redirectAllRequestsTo:
                    type: string
                  routingRules:
                    type: string
                type: object
              websiteDomain:
                type: string
              websiteEndpoint:
                type: string
            required:
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: bucketanalyticsconfigurations.s3.aws.kubeform.com
spec:
  group: s3.aws.kubeform.com
  names:
    kind: BucketAnalyticsConfiguration
    listKind: BucketAnalyticsConfigurationList
    plural: bucketanalyticsconfigurations
    singular: bucketanalyticsconfiguration
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                type: string
              filter:
                properties:
                  prefix:
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    type: string
                  filter:
                    properties:
                      prefix:
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  id:
                    type: string
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  storageClassAnalysis:
                    properties:
                      dataExport:
                        properties:
                          destination:
                            properties:
                              s3BucketDestination:
                                properties:
                                  bucketAccountID:
                                    type: string
                                  bucketArn:
                                    type: string
                                  format:
                                    type: string
                                  prefix:
                                    type: string
                                required:
                                - bucketArn
                                type: object
                            required:
                            - s3BucketDestination
                            type: object
                          outputSchemaVersion:
                            type: string
                        required:
                        - destination
                        type: object
                    required:
                    - dataExport
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - bucket
                - name
                - providerRef
                type: object
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              storageClassAnalysis:
                properties:
                  dataExport:
                    properties:
                      destination:
                        properties:
                          s3BucketDestination:
                            properties:
                              bucketAccountID:
                                type: string
                              bucketArn:
                                type: string
                              format:
                                type: string
                              prefix:
                                type: string
                            required:
                            - bucketArn
                            type: object
                        required:
                        - s3BucketDestination
                        type: object
                      outputSchemaVersion:
                        type: string
                    required:
                    - destination
                    type: object
                required:
                - dataExport
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - bucket
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: bucketinventories.s3.aws.kubeform.com
spec:
  group: s3.aws.kubeform.com
  names:
    kind: BucketInventory
    listKind: BucketInventoryList
    plural: bucketinventories
    singular: bucketinventory
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                type: string
              destination:
                properties:
                  bucket:
                    properties:
                      accountID:
                        type: string
                      bucketArn:
                        type: string
                      encryption:
                        properties:
                          sseKms:
                            properties:
                              keyID:
                                type: string
                            required:
                            - keyID
                            type: object
                          sseS3:
                            type: object
                        type: object
                      format:
                        type: string
                      prefix:
                        type: string
                    required:
                    - bucketArn
                    - format
                    type: object
                required:
                - bucket
                type: object
              enabled:
                type: boolean
              filter:
                properties:
                  prefix:
                    type: string
                type: object
              id:
                type: string
              includedObjectVersions:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    type: string
                  destination:
                    properties:
                      bucket:
                        properties:
                          accountID:
                            type: string
                          bucketArn:
                            type: string
                          encryption:
                            properties:
                              sseKms:
                                properties:
                                  keyID:
                                    type: string
                                required:
                                - keyID
                                type: object
                              sseS3:
                                type: object
                            type: object
                          format:
                            type: string
                          prefix:
                            type: string
                        required:
                        - bucketArn
                        - format
                        type: object
                    required:
                    - bucket
                    type: object
                  enabled:
                    type: boolean
                  filter:
                    properties:
                      prefix:
                        type: string
                    type: object
                  id:
                    type: string
                  includedObjectVersions:
                    type: string
                  name:
                    type: string
                  optionalFields:
                    items:
                      type: string
                    type: array
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  schedule:
                    properties:
                      frequency:
                        type: string
                    required:
                    - frequency
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - bucket
                - destination
                - includedObjectVersions
                - name
                - providerRef
                - schedule
                type: object
              name:
                type: string
              optionalFields:
                items:
                  type: string
                type: array
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              schedule:
                properties:
                  frequency:
                    type: string
                required:
                - frequency
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - bucket
            - destination
            - includedObjectVersions
            - name
            - providerRef
            - schedule
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: bucketpublicaccessblocks.s3.aws.kubeform.com
spec:
  group: s3.aws.kubeform.com
  names:
    kind: BucketPublicAccessBlock
    listKind: BucketPublicAccessBlockList
    plural: bucketpublicaccessblocks
    singular: bucketpublicaccessblock
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              blockPublicAcls:
                type: boolean
              blockPublicPolicy:
                type: boolean
              bucket:
                type: string
              id:
                type: string
              ignorePublicAcls:
                type: boolean
              kubeformOutput:
                properties:
                  blockPublicAcls:
                    type: boolean
                  blockPublicPolicy:
                    type: boolean
                  bucket:
                    type: string
                  id:
                    type: string
                  ignorePublicAcls:
                    type: boolean
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  restrictPublicBuckets:
                    type: boolean
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - bucket
                - providerRef
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              restrictPublicBuckets:
                type: boolean
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - bucket
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: bucketownershipcontrols.s3.aws.kubeform.com
spec:
  group: s3.aws.kubeform.com
  names:
    kind: BucketOwnershipControls
    listKind: BucketOwnershipControlsList
    plural: bucketownershipcontrols
    singular: bucketownershipcontrols
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    type: string
                  id:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  rule:
                    properties:
                      objectOwnership:
                        type: string
                    required:
                    - objectOwnership
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - bucket
                - providerRef
                - rule
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              rule:
                properties:
                  objectOwnership:
                    type: string
                required:
                - objectOwnership
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - bucket
            - providerRef
            - rule
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: bucketnotifications.s3.aws.kubeform.com
spec:
  group: s3.aws.kubeform.com
  names:
    kind: BucketNotification
    listKind: BucketNotificationList
    plural: bucketnotifications
    singular: bucketnotification
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    type: string
                  id:
                    type: string
                  lambdaFunction:
                    items:
                      properties:
                        ID:
                          type: string
                        events:
                          items:
                            type: string
                          type: array
                        filterPrefix:
                          type: string
                        filterSuffix:
                          type: string
                        lambdaFunctionArn:
                          type: string
                      required:
                      - events
                      type: object
                    type: array
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  queue:
                    items:
                      properties:
                        ID:
                          type: string
                        events:
                          items:
                            type: string
                          type: array
                        filterPrefix:
                          type: string
                        filterSuffix:
                          type: string
                        queueArn:
                          type: string
                      required:
                      - events
                      - queueArn
                      type: object
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  topic:
                    items:
                      properties:
                        ID:
                          type: string
                        events:
                          items:
                            type: string
                          type: array
                        filterPrefix:
                          type: string
                        filterSuffix:
                          type: string
                        topicArn:
                          type: string
                      required:
                      - events
                      - topicArn
                      type: object
                    type: array
                required:
                - bucket
                - providerRef
                type: object
              lambdaFunction:
                items:
                  properties:
                    ID:
                      type: string
                    events:
                      items:
                        type: string
                      type: array
                    filterPrefix:
                      type: string
                    filterSuffix:
                      type: string
                    lambdaFunctionArn:
                      type: string
                  required:
                  - events
                  type: object
                type: array
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              queue:
                items:
                  properties:
                    ID:
                      type: string
                    events:
                      items:
                        type: string
                      type: array
                    filterPrefix:
                      type: string
                    filterSuffix:
                      type: string
                    queueArn:
                      type: string
                  required:
                  - events
                  - queueArn
                  type: object
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              topic:
                items:
                  properties:
                    ID:
                      type: string
                    events:
                      items:
                        type: string
                      type: array
                    filterPrefix:
                      type: string
                    filterSuffix:
                      type: string
                    topicArn:
                      type: string
                  required:
                  - events
                  - topicArn
                  type: object
                type: array
            required:
            - bucket
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: bucketobjects.s3.aws.kubeform.com
spec:
  group: s3.aws.kubeform.com
  names:
    kind: BucketObject
    listKind: BucketObjectList
    plural: bucketobjects
    singular: bucketobject
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              acl:
                type: string
              bucket:
                type: string
              bucketKeyEnabled:
                type: boolean
              cacheControl:
                type: string
              content:
                type: string
              contentBase64:
                type: string
              contentDisposition:
                type: string
              contentEncoding:
                type: string
              contentLanguage:
                type: string
              contentType:
                type: string
              etag:
                type: string
              forceDestroy:
                type: boolean
              id:
                type: string
              key:
                type: string
              kmsKeyID:
                type: string
              kubeformOutput:
                properties:
                  acl:
                    type: string
                  bucket:
                    type: string
                  bucketKeyEnabled:
                    type: boolean
                  cacheControl:
                    type: string
                  content:
                    type: string
                  contentBase64:
                    type: string
                  contentDisposition:
                    type: string
                  contentEncoding:
                    type: string
                  contentLanguage:
                    type: string
                  contentType:
                    type: string
                  etag:
                    type: string
                  forceDestroy:
                    type: boolean
                  id:
                    type: string
                  key:
                    type: string
                  kmsKeyID:
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    type: object
                  objectLockLegalHoldStatus:
                    type: string
                  objectLockMode:
                    type: string
                  objectLockRetainUntilDate:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  serverSideEncryption:
                    type: string
                  source:
                    type: string
                  storageClass:
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  versionID:
                    type: string
                  websiteRedirect:
                    type: string
                required:
                - bucket
                - key
                - providerRef
                type: object
              metadata:
                additionalProperties:
                  type: string
                type: object
              objectLockLegalHoldStatus:
                type: string
              objectLockMode:
                type: string
              objectLockRetainUntilDate:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              serverSideEncryption:
                type: string
              source:
                type: string
              storageClass:
                type: string
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              versionID:
                type: string
              websiteRedirect:
                type: string
            required:
            - bucket
            - key
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: bucketpolicies.s3.aws.kubeform.com
spec:
  group: s3.aws.kubeform.com
  names:
    kind: BucketPolicy
    listKind: BucketPolicyList
    plural: bucketpolicies
    singular: bucketpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    type: string
                  id:
                    type: string
                  policy:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - bucket
                - policy
                - providerRef
                type: object
              policy:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - bucket
            - policy
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: bucketmetrics.s3.aws.kubeform.com
spec:
  group: s3.aws.kubeform.com
  names:
    kind: BucketMetric
    listKind: BucketMetricList
    plural: bucketmetrics
    singular: bucketmetric
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                type: string
              filter:
                properties:
                  prefix:
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    type: string
                  filter:
                    properties:
                      prefix:
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  id:
                    type: string
                  name:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - bucket
                - name
                - providerRef
                type: object
              name:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - bucket
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: objectcopies.s3.aws.kubeform.com
spec:
  group: s3.aws.kubeform.com
  names:
    kind: ObjectCopy
    listKind: ObjectCopyList
    plural: objectcopies
    singular: objectcopy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              acl:
                type: string
              bucket:
                type: string
              bucketKeyEnabled:
                type: boolean
              cacheControl:
                type: string
              contentDisposition:
                type: string
              contentEncoding:
                type: string
              contentLanguage:
                type: string
              contentType:
                type: string
              copyIfMatch:
                type: string
              copyIfModifiedSince:
                type: string
              copyIfNoneMatch:
                type: string
              copyIfUnmodifiedSince:
                type: string
              customerAlgorithm:
                type: string
              customerKeyMd5:
                type: string
              etag:
                type: string
              expectedBucketOwner:
                type: string
              expectedSourceBucketOwner:
                type: string
              expiration:
                type: string
              expires:
                type: string
              forceDestroy:
                type: boolean
              grant:
                items:
                  properties:
                    ID:
                      type: string
                    email:
                      type: string
                    permissions:
                      items:
                        type: string
                      type: array
                    type:
                      type: string
                    uri:
                      type: string
                  required:
                  - permissions
                  - type
                  type: object
                type: array
              id:
                type: string
              key:
                type: string
              kubeformOutput:
                properties:
                  acl:
                    type: string
                  bucket:
                    type: string
                  bucketKeyEnabled:
                    type: boolean
                  cacheControl:
                    type: string
                  contentDisposition:
                    type: string
                  contentEncoding:
                    type: string
                  contentLanguage:
                    type: string
                  contentType:
                    type: string
                  copyIfMatch:
                    type: string
                  copyIfModifiedSince:
                    type: string
                  copyIfNoneMatch:
                    type: string
                  copyIfUnmodifiedSince:
                    type: string
                  customerAlgorithm:
                    type: string
                  customerKeyMd5:
                    type: string
                  etag:
                    type: string
                  expectedBucketOwner:
                    type: string
                  expectedSourceBucketOwner:
                    type: string
                  expiration:
                    type: string
                  expires:
                    type: string
                  forceDestroy:
                    type: boolean
                  grant:
                    items:
                      properties:
                        ID:
                          type: string
                        email:
                          type: string
                        permissions:
                          items:
                            type: string
                          type: array
                        type:
                          type: string
                        uri:
                          type: string
                      required:
                      - permissions
                      - type
                      type: object
                    type: array
                  id:
                    type: string
                  key:
                    type: string
                  lastModified:
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    type: object
                  metadataDirective:
                    type: string
                  objectLockLegalHoldStatus:
                    type: string
                  objectLockMode:
                    type: string
                  objectLockRetainUntilDate:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  requestCharged:
                    type: boolean
                  requestPayer:
                    type: string
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  serverSideEncryption:
                    type: string
                  source:
                    type: string
                  sourceCustomerAlgorithm:
                    type: string
                  sourceCustomerKeyMd5:
                    type: string
                  sourceVersionID:
                    type: string
                  storageClass:
                    type: string
                  taggingDirective:
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  versionID:
                    type: string
                  websiteRedirect:
                    type: string
                required:
                - bucket
                - key
                - providerRef
                - source
                type: object
              lastModified:
                type: string
              metadata:
                additionalProperties:
                  type: string
                type: object
              metadataDirective:
                type: string
              objectLockLegalHoldStatus:
                type: string
              objectLockMode:
                type: string
              objectLockRetainUntilDate:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              requestCharged:
                type: boolean
              requestPayer:
                type: string
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              serverSideEncryption:
                type: string
              source:
                type: string
              sourceCustomerAlgorithm:
                type: string
              sourceCustomerKeyMd5:
                type: string
              sourceVersionID:
                type: string
              storageClass:
                type: string
              taggingDirective:
                type: string
              tags:
                additionalProperties:
                  type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              versionID:
                type: string
              websiteRedirect:
                type: string
            required:
            - bucket
            - key
            - providerRef
            - source
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
