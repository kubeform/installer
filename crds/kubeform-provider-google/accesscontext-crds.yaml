apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: manageraccesslevelconditions.accesscontext.google.kubeform.com
spec:
  group: accesscontext.google.kubeform.com
  names:
    kind: ManagerAccessLevelCondition
    listKind: ManagerAccessLevelConditionList
    plural: manageraccesslevelconditions
    singular: manageraccesslevelcondition
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              accessLevel:
                description: The name of the Access Level to add this condition to.
                type: string
              devicePolicy:
                description: Device specific restrictions, all restrictions must hold
                  for the Condition to be true. If not specified, all devices are
                  allowed.
                properties:
                  allowedDeviceManagementLevels:
                    description: 'A list of allowed device management levels. An empty
                      list allows all management levels. Possible values: ["MANAGEMENT_UNSPECIFIED",
                      "NONE", "BASIC", "COMPLETE"]'
                    items:
                      type: string
                    type: array
                  allowedEncryptionStatuses:
                    description: 'A list of allowed encryptions statuses. An empty
                      list allows all statuses. Possible values: ["ENCRYPTION_UNSPECIFIED",
                      "ENCRYPTION_UNSUPPORTED", "UNENCRYPTED", "ENCRYPTED"]'
                    items:
                      type: string
                    type: array
                  osConstraints:
                    description: A list of allowed OS versions. An empty list allows
                      all types and all versions.
                    items:
                      properties:
                        minimumVersion:
                          description: 'The minimum allowed OS version. If not set,
                            any version of this OS satisfies the constraint. Format:
                            "major.minor.patch" such as "10.5.301", "9.2.1".'
                          type: string
                        osType:
                          description: 'The operating system type of the device. Possible
                            values: ["OS_UNSPECIFIED", "DESKTOP_MAC", "DESKTOP_WINDOWS",
                            "DESKTOP_LINUX", "DESKTOP_CHROME_OS"]'
                          type: string
                      required:
                      - osType
                      type: object
                    type: array
                  requireAdminApproval:
                    description: Whether the device needs to be approved by the customer
                      admin.
                    type: boolean
                  requireCorpOwned:
                    description: Whether the device needs to be corp owned.
                    type: boolean
                  requireScreenLock:
                    description: Whether or not screenlock is required for the DevicePolicy
                      to be true. Defaults to false.
                    type: boolean
                type: object
              id:
                type: string
              ipSubnetworks:
                description: A list of CIDR block IP subnetwork specification. May
                  be IPv4 or IPv6. Note that for a CIDR IP address block, the specified
                  IP address portion must be properly truncated (i.e. all the host
                  bits must be zero) or the input is considered malformed. For example,
                  "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly,
                  for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32" is
                  not. The originating IP of a request must be in one of the listed
                  subnets in order for this Condition to be true. If empty, all IP
                  addresses are allowed.
                items:
                  type: string
                type: array
              kubeformOutput:
                properties:
                  accessLevel:
                    description: The name of the Access Level to add this condition
                      to.
                    type: string
                  devicePolicy:
                    description: Device specific restrictions, all restrictions must
                      hold for the Condition to be true. If not specified, all devices
                      are allowed.
                    properties:
                      allowedDeviceManagementLevels:
                        description: 'A list of allowed device management levels.
                          An empty list allows all management levels. Possible values:
                          ["MANAGEMENT_UNSPECIFIED", "NONE", "BASIC", "COMPLETE"]'
                        items:
                          type: string
                        type: array
                      allowedEncryptionStatuses:
                        description: 'A list of allowed encryptions statuses. An empty
                          list allows all statuses. Possible values: ["ENCRYPTION_UNSPECIFIED",
                          "ENCRYPTION_UNSUPPORTED", "UNENCRYPTED", "ENCRYPTED"]'
                        items:
                          type: string
                        type: array
                      osConstraints:
                        description: A list of allowed OS versions. An empty list
                          allows all types and all versions.
                        items:
                          properties:
                            minimumVersion:
                              description: 'The minimum allowed OS version. If not
                                set, any version of this OS satisfies the constraint.
                                Format: "major.minor.patch" such as "10.5.301", "9.2.1".'
                              type: string
                            osType:
                              description: 'The operating system type of the device.
                                Possible values: ["OS_UNSPECIFIED", "DESKTOP_MAC",
                                "DESKTOP_WINDOWS", "DESKTOP_LINUX", "DESKTOP_CHROME_OS"]'
                              type: string
                          required:
                          - osType
                          type: object
                        type: array
                      requireAdminApproval:
                        description: Whether the device needs to be approved by the
                          customer admin.
                        type: boolean
                      requireCorpOwned:
                        description: Whether the device needs to be corp owned.
                        type: boolean
                      requireScreenLock:
                        description: Whether or not screenlock is required for the
                          DevicePolicy to be true. Defaults to false.
                        type: boolean
                    type: object
                  id:
                    type: string
                  ipSubnetworks:
                    description: A list of CIDR block IP subnetwork specification.
                      May be IPv4 or IPv6. Note that for a CIDR IP address block,
                      the specified IP address portion must be properly truncated
                      (i.e. all the host bits must be zero) or the input is considered
                      malformed. For example, "192.0.2.0/24" is accepted but "192.0.2.1/24"
                      is not. Similarly, for IPv6, "2001:db8::/32" is accepted whereas
                      "2001:db8::1/32" is not. The originating IP of a request must
                      be in one of the listed subnets in order for this Condition
                      to be true. If empty, all IP addresses are allowed.
                    items:
                      type: string
                    type: array
                  members:
                    description: "An allowed list of members (users, service accounts).
                      Using groups is not supported yet. \n The signed-in user originating
                      the request must be a part of one of the provided members. If
                      not specified, a request may come from any user (logged in/not
                      logged in, not present in any groups, etc.). Formats: 'user:{emailid}',
                      'serviceAccount:{emailid}'"
                    items:
                      type: string
                    type: array
                  negate:
                    description: Whether to negate the Condition. If true, the Condition
                      becomes a NAND over its non-empty fields, each field must be
                      false for the Condition overall to be satisfied. Defaults to
                      false.
                    type: boolean
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  regions:
                    description: 'The request must originate from one of the provided
                      countries/regions. Format: A valid ISO 3166-1 alpha-2 code.'
                    items:
                      type: string
                    type: array
                  requiredAccessLevels:
                    description: 'A list of other access levels defined in the same
                      Policy, referenced by resource name. Referencing an AccessLevel
                      which does not exist is an error. All access levels listed must
                      be granted for the Condition to be true. Format: accessPolicies/{policy_id}/accessLevels/{short_name}'
                    items:
                      type: string
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - accessLevel
                - providerRef
                type: object
              members:
                description: "An allowed list of members (users, service accounts).
                  Using groups is not supported yet. \n The signed-in user originating
                  the request must be a part of one of the provided members. If not
                  specified, a request may come from any user (logged in/not logged
                  in, not present in any groups, etc.). Formats: 'user:{emailid}',
                  'serviceAccount:{emailid}'"
                items:
                  type: string
                type: array
              negate:
                description: Whether to negate the Condition. If true, the Condition
                  becomes a NAND over its non-empty fields, each field must be false
                  for the Condition overall to be satisfied. Defaults to false.
                type: boolean
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              regions:
                description: 'The request must originate from one of the provided
                  countries/regions. Format: A valid ISO 3166-1 alpha-2 code.'
                items:
                  type: string
                type: array
              requiredAccessLevels:
                description: 'A list of other access levels defined in the same Policy,
                  referenced by resource name. Referencing an AccessLevel which does
                  not exist is an error. All access levels listed must be granted
                  for the Condition to be true. Format: accessPolicies/{policy_id}/accessLevels/{short_name}'
                items:
                  type: string
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - accessLevel
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: manageraccesslevels.accesscontext.google.kubeform.com
spec:
  group: accesscontext.google.kubeform.com
  names:
    kind: ManagerAccessLevel
    listKind: ManagerAccessLevelList
    plural: manageraccesslevels
    singular: manageraccesslevel
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              basic:
                description: A set of predefined conditions for the access level and
                  a combining function.
                properties:
                  combiningFunction:
                    description: 'How the conditions list should be combined to determine
                      if a request is granted this AccessLevel. If AND is used, each
                      Condition in conditions must be satisfied for the AccessLevel
                      to be applied. If OR is used, at least one Condition in conditions
                      must be satisfied for the AccessLevel to be applied. Default
                      value: "AND" Possible values: ["AND", "OR"]'
                    type: string
                  conditions:
                    description: A set of requirements for the AccessLevel to be granted.
                    items:
                      properties:
                        devicePolicy:
                          description: Device specific restrictions, all restrictions
                            must hold for the Condition to be true. If not specified,
                            all devices are allowed.
                          properties:
                            allowedDeviceManagementLevels:
                              description: 'A list of allowed device management levels.
                                An empty list allows all management levels. Possible
                                values: ["MANAGEMENT_UNSPECIFIED", "NONE", "BASIC",
                                "COMPLETE"]'
                              items:
                                type: string
                              type: array
                            allowedEncryptionStatuses:
                              description: 'A list of allowed encryptions statuses.
                                An empty list allows all statuses. Possible values:
                                ["ENCRYPTION_UNSPECIFIED", "ENCRYPTION_UNSUPPORTED",
                                "UNENCRYPTED", "ENCRYPTED"]'
                              items:
                                type: string
                              type: array
                            osConstraints:
                              description: A list of allowed OS versions. An empty
                                list allows all types and all versions.
                              items:
                                properties:
                                  minimumVersion:
                                    description: 'The minimum allowed OS version.
                                      If not set, any version of this OS satisfies
                                      the constraint. Format: "major.minor.patch"
                                      such as "10.5.301", "9.2.1".'
                                    type: string
                                  osType:
                                    description: 'The operating system type of the
                                      device. Possible values: ["OS_UNSPECIFIED",
                                      "DESKTOP_MAC", "DESKTOP_WINDOWS", "DESKTOP_LINUX",
                                      "DESKTOP_CHROME_OS"]'
                                    type: string
                                required:
                                - osType
                                type: object
                              type: array
                            requireAdminApproval:
                              description: Whether the device needs to be approved
                                by the customer admin.
                              type: boolean
                            requireCorpOwned:
                              description: Whether the device needs to be corp owned.
                              type: boolean
                            requireScreenLock:
                              description: Whether or not screenlock is required for
                                the DevicePolicy to be true. Defaults to false.
                              type: boolean
                          type: object
                        ipSubnetworks:
                          description: A list of CIDR block IP subnetwork specification.
                            May be IPv4 or IPv6. Note that for a CIDR IP address block,
                            the specified IP address portion must be properly truncated
                            (i.e. all the host bits must be zero) or the input is
                            considered malformed. For example, "192.0.2.0/24" is accepted
                            but "192.0.2.1/24" is not. Similarly, for IPv6, "2001:db8::/32"
                            is accepted whereas "2001:db8::1/32" is not. The originating
                            IP of a request must be in one of the listed subnets in
                            order for this Condition to be true. If empty, all IP
                            addresses are allowed.
                          items:
                            type: string
                          type: array
                        members:
                          description: "An allowed list of members (users, service
                            accounts). Using groups is not supported yet. \n The signed-in
                            user originating the request must be a part of one of
                            the provided members. If not specified, a request may
                            come from any user (logged in/not logged in, not present
                            in any groups, etc.). Formats: 'user:{emailid}', 'serviceAccount:{emailid}'"
                          items:
                            type: string
                          type: array
                        negate:
                          description: Whether to negate the Condition. If true, the
                            Condition becomes a NAND over its non-empty fields, each
                            field must be false for the Condition overall to be satisfied.
                            Defaults to false.
                          type: boolean
                        regions:
                          description: 'The request must originate from one of the
                            provided countries/regions. Format: A valid ISO 3166-1
                            alpha-2 code.'
                          items:
                            type: string
                          type: array
                        requiredAccessLevels:
                          description: 'A list of other access levels defined in the
                            same Policy, referenced by resource name. Referencing
                            an AccessLevel which does not exist is an error. All access
                            levels listed must be granted for the Condition to be
                            true. Format: accessPolicies/{policy_id}/accessLevels/{short_name}'
                          items:
                            type: string
                          type: array
                      type: object
                    minItems: 1
                    type: array
                required:
                - conditions
                type: object
              custom:
                description: 'Custom access level conditions are set using the Cloud
                  Common Expression Language to represent the necessary conditions
                  for the level to apply to a request. See CEL spec at: https://github.com/google/cel-spec.'
                properties:
                  expr:
                    description: Represents a textual expression in the Common Expression
                      Language (CEL) syntax. CEL is a C-like expression language.
                      This page details the objects and attributes that are used to
                      the build the CEL expressions for custom access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.
                    properties:
                      description:
                        description: Description of the expression
                        type: string
                      expression:
                        description: Textual representation of an expression in Common
                          Expression Language syntax.
                        type: string
                      location:
                        description: String indicating the location of the expression
                          for error reporting, e.g. a file name and a position in
                          the file
                        type: string
                      title:
                        description: Title for the expression, i.e. a short string
                          describing its purpose.
                        type: string
                    required:
                    - expression
                    type: object
                required:
                - expr
                type: object
              description:
                description: Description of the AccessLevel and its use. Does not
                  affect behavior.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  basic:
                    description: A set of predefined conditions for the access level
                      and a combining function.
                    properties:
                      combiningFunction:
                        description: 'How the conditions list should be combined to
                          determine if a request is granted this AccessLevel. If AND
                          is used, each Condition in conditions must be satisfied
                          for the AccessLevel to be applied. If OR is used, at least
                          one Condition in conditions must be satisfied for the AccessLevel
                          to be applied. Default value: "AND" Possible values: ["AND",
                          "OR"]'
                        type: string
                      conditions:
                        description: A set of requirements for the AccessLevel to
                          be granted.
                        items:
                          properties:
                            devicePolicy:
                              description: Device specific restrictions, all restrictions
                                must hold for the Condition to be true. If not specified,
                                all devices are allowed.
                              properties:
                                allowedDeviceManagementLevels:
                                  description: 'A list of allowed device management
                                    levels. An empty list allows all management levels.
                                    Possible values: ["MANAGEMENT_UNSPECIFIED", "NONE",
                                    "BASIC", "COMPLETE"]'
                                  items:
                                    type: string
                                  type: array
                                allowedEncryptionStatuses:
                                  description: 'A list of allowed encryptions statuses.
                                    An empty list allows all statuses. Possible values:
                                    ["ENCRYPTION_UNSPECIFIED", "ENCRYPTION_UNSUPPORTED",
                                    "UNENCRYPTED", "ENCRYPTED"]'
                                  items:
                                    type: string
                                  type: array
                                osConstraints:
                                  description: A list of allowed OS versions. An empty
                                    list allows all types and all versions.
                                  items:
                                    properties:
                                      minimumVersion:
                                        description: 'The minimum allowed OS version.
                                          If not set, any version of this OS satisfies
                                          the constraint. Format: "major.minor.patch"
                                          such as "10.5.301", "9.2.1".'
                                        type: string
                                      osType:
                                        description: 'The operating system type of
                                          the device. Possible values: ["OS_UNSPECIFIED",
                                          "DESKTOP_MAC", "DESKTOP_WINDOWS", "DESKTOP_LINUX",
                                          "DESKTOP_CHROME_OS"]'
                                        type: string
                                    required:
                                    - osType
                                    type: object
                                  type: array
                                requireAdminApproval:
                                  description: Whether the device needs to be approved
                                    by the customer admin.
                                  type: boolean
                                requireCorpOwned:
                                  description: Whether the device needs to be corp
                                    owned.
                                  type: boolean
                                requireScreenLock:
                                  description: Whether or not screenlock is required
                                    for the DevicePolicy to be true. Defaults to false.
                                  type: boolean
                              type: object
                            ipSubnetworks:
                              description: A list of CIDR block IP subnetwork specification.
                                May be IPv4 or IPv6. Note that for a CIDR IP address
                                block, the specified IP address portion must be properly
                                truncated (i.e. all the host bits must be zero) or
                                the input is considered malformed. For example, "192.0.2.0/24"
                                is accepted but "192.0.2.1/24" is not. Similarly,
                                for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32"
                                is not. The originating IP of a request must be in
                                one of the listed subnets in order for this Condition
                                to be true. If empty, all IP addresses are allowed.
                              items:
                                type: string
                              type: array
                            members:
                              description: "An allowed list of members (users, service
                                accounts). Using groups is not supported yet. \n The
                                signed-in user originating the request must be a part
                                of one of the provided members. If not specified,
                                a request may come from any user (logged in/not logged
                                in, not present in any groups, etc.). Formats: 'user:{emailid}',
                                'serviceAccount:{emailid}'"
                              items:
                                type: string
                              type: array
                            negate:
                              description: Whether to negate the Condition. If true,
                                the Condition becomes a NAND over its non-empty fields,
                                each field must be false for the Condition overall
                                to be satisfied. Defaults to false.
                              type: boolean
                            regions:
                              description: 'The request must originate from one of
                                the provided countries/regions. Format: A valid ISO
                                3166-1 alpha-2 code.'
                              items:
                                type: string
                              type: array
                            requiredAccessLevels:
                              description: 'A list of other access levels defined
                                in the same Policy, referenced by resource name. Referencing
                                an AccessLevel which does not exist is an error. All
                                access levels listed must be granted for the Condition
                                to be true. Format: accessPolicies/{policy_id}/accessLevels/{short_name}'
                              items:
                                type: string
                              type: array
                          type: object
                        minItems: 1
                        type: array
                    required:
                    - conditions
                    type: object
                  custom:
                    description: 'Custom access level conditions are set using the
                      Cloud Common Expression Language to represent the necessary
                      conditions for the level to apply to a request. See CEL spec
                      at: https://github.com/google/cel-spec.'
                    properties:
                      expr:
                        description: Represents a textual expression in the Common
                          Expression Language (CEL) syntax. CEL is a C-like expression
                          language. This page details the objects and attributes that
                          are used to the build the CEL expressions for custom access
                          levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.
                        properties:
                          description:
                            description: Description of the expression
                            type: string
                          expression:
                            description: Textual representation of an expression in
                              Common Expression Language syntax.
                            type: string
                          location:
                            description: String indicating the location of the expression
                              for error reporting, e.g. a file name and a position
                              in the file
                            type: string
                          title:
                            description: Title for the expression, i.e. a short string
                              describing its purpose.
                            type: string
                        required:
                        - expression
                        type: object
                    required:
                    - expr
                    type: object
                  description:
                    description: Description of the AccessLevel and its use. Does
                      not affect behavior.
                    type: string
                  id:
                    type: string
                  name:
                    description: 'Resource name for the Access Level. The short_name
                      component must begin with a letter and only include alphanumeric
                      and ''_''. Format: accessPolicies/{policy_id}/accessLevels/{short_name}'
                    type: string
                  parent:
                    description: 'The AccessPolicy this AccessLevel lives in. Format:
                      accessPolicies/{policy_id}'
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  title:
                    description: Human readable title. Must be unique within the Policy.
                    type: string
                required:
                - name
                - parent
                - providerRef
                - title
                type: object
              name:
                description: 'Resource name for the Access Level. The short_name component
                  must begin with a letter and only include alphanumeric and ''_''.
                  Format: accessPolicies/{policy_id}/accessLevels/{short_name}'
                type: string
              parent:
                description: 'The AccessPolicy this AccessLevel lives in. Format:
                  accessPolicies/{policy_id}'
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              title:
                description: Human readable title. Must be unique within the Policy.
                type: string
            required:
            - name
            - parent
            - providerRef
            - title
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: manageraccesslevelbatches.accesscontext.google.kubeform.com
spec:
  group: accesscontext.google.kubeform.com
  names:
    kind: ManagerAccessLevelBatch
    listKind: ManagerAccessLevelBatchList
    plural: manageraccesslevelbatches
    singular: manageraccesslevelbatch
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              accessLevels:
                description: The desired Access Levels that should replace all existing
                  Access Levels in the Access Policy.
                items:
                  properties:
                    basic:
                      description: A set of predefined conditions for the access level
                        and a combining function.
                      properties:
                        combiningFunction:
                          description: 'How the conditions list should be combined
                            to determine if a request is granted this AccessLevel.
                            If AND is used, each Condition in conditions must be satisfied
                            for the AccessLevel to be applied. If OR is used, at least
                            one Condition in conditions must be satisfied for the
                            AccessLevel to be applied. Default value: "AND" Possible
                            values: ["AND", "OR"]'
                          type: string
                        conditions:
                          description: A set of requirements for the AccessLevel to
                            be granted.
                          items:
                            properties:
                              devicePolicy:
                                description: Device specific restrictions, all restrictions
                                  must hold for the Condition to be true. If not specified,
                                  all devices are allowed.
                                properties:
                                  allowedDeviceManagementLevels:
                                    description: 'A list of allowed device management
                                      levels. An empty list allows all management
                                      levels. Possible values: ["MANAGEMENT_UNSPECIFIED",
                                      "NONE", "BASIC", "COMPLETE"]'
                                    items:
                                      type: string
                                    type: array
                                  allowedEncryptionStatuses:
                                    description: 'A list of allowed encryptions statuses.
                                      An empty list allows all statuses. Possible
                                      values: ["ENCRYPTION_UNSPECIFIED", "ENCRYPTION_UNSUPPORTED",
                                      "UNENCRYPTED", "ENCRYPTED"]'
                                    items:
                                      type: string
                                    type: array
                                  osConstraints:
                                    description: A list of allowed OS versions. An
                                      empty list allows all types and all versions.
                                    items:
                                      properties:
                                        minimumVersion:
                                          description: 'The minimum allowed OS version.
                                            If not set, any version of this OS satisfies
                                            the constraint. Format: "major.minor.patch"
                                            such as "10.5.301", "9.2.1".'
                                          type: string
                                        osType:
                                          description: 'The operating system type
                                            of the device. Possible values: ["OS_UNSPECIFIED",
                                            "DESKTOP_MAC", "DESKTOP_WINDOWS", "DESKTOP_LINUX",
                                            "DESKTOP_CHROME_OS"]'
                                          type: string
                                      required:
                                      - osType
                                      type: object
                                    type: array
                                  requireAdminApproval:
                                    description: Whether the device needs to be approved
                                      by the customer admin.
                                    type: boolean
                                  requireCorpOwned:
                                    description: Whether the device needs to be corp
                                      owned.
                                    type: boolean
                                  requireScreenLock:
                                    description: Whether or not screenlock is required
                                      for the DevicePolicy to be true. Defaults to
                                      false.
                                    type: boolean
                                type: object
                              ipSubnetworks:
                                description: A list of CIDR block IP subnetwork specification.
                                  May be IPv4 or IPv6. Note that for a CIDR IP address
                                  block, the specified IP address portion must be
                                  properly truncated (i.e. all the host bits must
                                  be zero) or the input is considered malformed. For
                                  example, "192.0.2.0/24" is accepted but "192.0.2.1/24"
                                  is not. Similarly, for IPv6, "2001:db8::/32" is
                                  accepted whereas "2001:db8::1/32" is not. The originating
                                  IP of a request must be in one of the listed subnets
                                  in order for this Condition to be true. If empty,
                                  all IP addresses are allowed.
                                items:
                                  type: string
                                type: array
                              members:
                                description: "An allowed list of members (users, service
                                  accounts). Using groups is not supported yet. \n
                                  The signed-in user originating the request must
                                  be a part of one of the provided members. If not
                                  specified, a request may come from any user (logged
                                  in/not logged in, not present in any groups, etc.).
                                  Formats: 'user:{emailid}', 'serviceAccount:{emailid}'"
                                items:
                                  type: string
                                type: array
                              negate:
                                description: Whether to negate the Condition. If true,
                                  the Condition becomes a NAND over its non-empty
                                  fields, each field must be false for the Condition
                                  overall to be satisfied. Defaults to false.
                                type: boolean
                              regions:
                                description: 'The request must originate from one
                                  of the provided countries/regions. Format: A valid
                                  ISO 3166-1 alpha-2 code.'
                                items:
                                  type: string
                                type: array
                              requiredAccessLevels:
                                description: 'A list of other access levels defined
                                  in the same Policy, referenced by resource name.
                                  Referencing an AccessLevel which does not exist
                                  is an error. All access levels listed must be granted
                                  for the Condition to be true. Format: accessPolicies/{policy_id}/accessLevels/{short_name}'
                                items:
                                  type: string
                                type: array
                            type: object
                          minItems: 1
                          type: array
                      required:
                      - conditions
                      type: object
                    custom:
                      description: 'Custom access level conditions are set using the
                        Cloud Common Expression Language to represent the necessary
                        conditions for the level to apply to a request. See CEL spec
                        at: https://github.com/google/cel-spec.'
                      properties:
                        expr:
                          description: Represents a textual expression in the Common
                            Expression Language (CEL) syntax. CEL is a C-like expression
                            language. This page details the objects and attributes
                            that are used to the build the CEL expressions for custom
                            access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.
                          properties:
                            description:
                              description: Description of the expression
                              type: string
                            expression:
                              description: Textual representation of an expression
                                in Common Expression Language syntax.
                              type: string
                            location:
                              description: String indicating the location of the expression
                                for error reporting, e.g. a file name and a position
                                in the file
                              type: string
                            title:
                              description: Title for the expression, i.e. a short
                                string describing its purpose.
                              type: string
                          required:
                          - expression
                          type: object
                      required:
                      - expr
                      type: object
                    description:
                      description: Description of the AccessLevel and its use. Does
                        not affect behavior.
                      type: string
                    name:
                      description: 'Resource name for the Access Level. The short_name
                        component must begin with a letter and only include alphanumeric
                        and ''_''. Format: accessPolicies/{policy_id}/accessLevels/{short_name}'
                      type: string
                    title:
                      description: Human readable title. Must be unique within the
                        Policy.
                      type: string
                  required:
                  - name
                  - title
                  type: object
                type: array
              id:
                type: string
              kubeformOutput:
                properties:
                  accessLevels:
                    description: The desired Access Levels that should replace all
                      existing Access Levels in the Access Policy.
                    items:
                      properties:
                        basic:
                          description: A set of predefined conditions for the access
                            level and a combining function.
                          properties:
                            combiningFunction:
                              description: 'How the conditions list should be combined
                                to determine if a request is granted this AccessLevel.
                                If AND is used, each Condition in conditions must
                                be satisfied for the AccessLevel to be applied. If
                                OR is used, at least one Condition in conditions must
                                be satisfied for the AccessLevel to be applied. Default
                                value: "AND" Possible values: ["AND", "OR"]'
                              type: string
                            conditions:
                              description: A set of requirements for the AccessLevel
                                to be granted.
                              items:
                                properties:
                                  devicePolicy:
                                    description: Device specific restrictions, all
                                      restrictions must hold for the Condition to
                                      be true. If not specified, all devices are allowed.
                                    properties:
                                      allowedDeviceManagementLevels:
                                        description: 'A list of allowed device management
                                          levels. An empty list allows all management
                                          levels. Possible values: ["MANAGEMENT_UNSPECIFIED",
                                          "NONE", "BASIC", "COMPLETE"]'
                                        items:
                                          type: string
                                        type: array
                                      allowedEncryptionStatuses:
                                        description: 'A list of allowed encryptions
                                          statuses. An empty list allows all statuses.
                                          Possible values: ["ENCRYPTION_UNSPECIFIED",
                                          "ENCRYPTION_UNSUPPORTED", "UNENCRYPTED",
                                          "ENCRYPTED"]'
                                        items:
                                          type: string
                                        type: array
                                      osConstraints:
                                        description: A list of allowed OS versions.
                                          An empty list allows all types and all versions.
                                        items:
                                          properties:
                                            minimumVersion:
                                              description: 'The minimum allowed OS
                                                version. If not set, any version of
                                                this OS satisfies the constraint.
                                                Format: "major.minor.patch" such as
                                                "10.5.301", "9.2.1".'
                                              type: string
                                            osType:
                                              description: 'The operating system type
                                                of the device. Possible values: ["OS_UNSPECIFIED",
                                                "DESKTOP_MAC", "DESKTOP_WINDOWS",
                                                "DESKTOP_LINUX", "DESKTOP_CHROME_OS"]'
                                              type: string
                                          required:
                                          - osType
                                          type: object
                                        type: array
                                      requireAdminApproval:
                                        description: Whether the device needs to be
                                          approved by the customer admin.
                                        type: boolean
                                      requireCorpOwned:
                                        description: Whether the device needs to be
                                          corp owned.
                                        type: boolean
                                      requireScreenLock:
                                        description: Whether or not screenlock is
                                          required for the DevicePolicy to be true.
                                          Defaults to false.
                                        type: boolean
                                    type: object
                                  ipSubnetworks:
                                    description: A list of CIDR block IP subnetwork
                                      specification. May be IPv4 or IPv6. Note that
                                      for a CIDR IP address block, the specified IP
                                      address portion must be properly truncated (i.e.
                                      all the host bits must be zero) or the input
                                      is considered malformed. For example, "192.0.2.0/24"
                                      is accepted but "192.0.2.1/24" is not. Similarly,
                                      for IPv6, "2001:db8::/32" is accepted whereas
                                      "2001:db8::1/32" is not. The originating IP
                                      of a request must be in one of the listed subnets
                                      in order for this Condition to be true. If empty,
                                      all IP addresses are allowed.
                                    items:
                                      type: string
                                    type: array
                                  members:
                                    description: "An allowed list of members (users,
                                      service accounts). Using groups is not supported
                                      yet. \n The signed-in user originating the request
                                      must be a part of one of the provided members.
                                      If not specified, a request may come from any
                                      user (logged in/not logged in, not present in
                                      any groups, etc.). Formats: 'user:{emailid}',
                                      'serviceAccount:{emailid}'"
                                    items:
                                      type: string
                                    type: array
                                  negate:
                                    description: Whether to negate the Condition.
                                      If true, the Condition becomes a NAND over its
                                      non-empty fields, each field must be false for
                                      the Condition overall to be satisfied. Defaults
                                      to false.
                                    type: boolean
                                  regions:
                                    description: 'The request must originate from
                                      one of the provided countries/regions. Format:
                                      A valid ISO 3166-1 alpha-2 code.'
                                    items:
                                      type: string
                                    type: array
                                  requiredAccessLevels:
                                    description: 'A list of other access levels defined
                                      in the same Policy, referenced by resource name.
                                      Referencing an AccessLevel which does not exist
                                      is an error. All access levels listed must be
                                      granted for the Condition to be true. Format:
                                      accessPolicies/{policy_id}/accessLevels/{short_name}'
                                    items:
                                      type: string
                                    type: array
                                type: object
                              minItems: 1
                              type: array
                          required:
                          - conditions
                          type: object
                        custom:
                          description: 'Custom access level conditions are set using
                            the Cloud Common Expression Language to represent the
                            necessary conditions for the level to apply to a request.
                            See CEL spec at: https://github.com/google/cel-spec.'
                          properties:
                            expr:
                              description: Represents a textual expression in the
                                Common Expression Language (CEL) syntax. CEL is a
                                C-like expression language. This page details the
                                objects and attributes that are used to the build
                                the CEL expressions for custom access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.
                              properties:
                                description:
                                  description: Description of the expression
                                  type: string
                                expression:
                                  description: Textual representation of an expression
                                    in Common Expression Language syntax.
                                  type: string
                                location:
                                  description: String indicating the location of the
                                    expression for error reporting, e.g. a file name
                                    and a position in the file
                                  type: string
                                title:
                                  description: Title for the expression, i.e. a short
                                    string describing its purpose.
                                  type: string
                              required:
                              - expression
                              type: object
                          required:
                          - expr
                          type: object
                        description:
                          description: Description of the AccessLevel and its use.
                            Does not affect behavior.
                          type: string
                        name:
                          description: 'Resource name for the Access Level. The short_name
                            component must begin with a letter and only include alphanumeric
                            and ''_''. Format: accessPolicies/{policy_id}/accessLevels/{short_name}'
                          type: string
                        title:
                          description: Human readable title. Must be unique within
                            the Policy.
                          type: string
                      required:
                      - name
                      - title
                      type: object
                    type: array
                  id:
                    type: string
                  parent:
                    description: 'The AccessPolicy this AccessLevel lives in. Format:
                      accessPolicies/{policy_id}'
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - parent
                - providerRef
                type: object
              parent:
                description: 'The AccessPolicy this AccessLevel lives in. Format:
                  accessPolicies/{policy_id}'
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - parent
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: managerserviceperimeterbatches.accesscontext.google.kubeform.com
spec:
  group: accesscontext.google.kubeform.com
  names:
    kind: ManagerServicePerimeterBatch
    listKind: ManagerServicePerimeterBatchList
    plural: managerserviceperimeterbatches
    singular: managerserviceperimeterbatch
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  parent:
                    description: 'The AccessPolicy this ServicePerimeter lives in.
                      Format: accessPolicies/{policy_id}'
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  servicePerimeters:
                    description: The desired Service Perimeters that should replace
                      all existing Service Perimeters in the Access Policy.
                    items:
                      properties:
                        createTime:
                          description: Time the AccessPolicy was created in UTC.
                          type: string
                        description:
                          description: Description of the ServicePerimeter and its
                            use. Does not affect behavior.
                          type: string
                        name:
                          description: 'Resource name for the ServicePerimeter. The
                            short_name component must begin with a letter and only
                            include alphanumeric and ''_''. Format: accessPolicies/{policy_id}/servicePerimeters/{short_name}'
                          type: string
                        perimeterType:
                          description: "Specifies the type of the Perimeter. There
                            are two types: regular and bridge. Regular Service Perimeter
                            contains resources, access levels, and restricted services.
                            Every resource can be in at most ONE regular Service Perimeter.
                            \n In addition to being in a regular service perimeter,
                            a resource can also be in zero or more perimeter bridges.
                            A perimeter bridge only contains resources. Cross project
                            operations are permitted if all effected resources share
                            some perimeter (whether bridge or regular). Perimeter
                            Bridge does not contain access levels or services: those
                            are governed entirely by the regular perimeter that resource
                            is in. \n Perimeter Bridges are typically useful when
                            building more complex topologies with many independent
                            perimeters that need to share some data with a common
                            perimeter, but should not be able to share data among
                            themselves. Default value: \"PERIMETER_TYPE_REGULAR\"
                            Possible values: [\"PERIMETER_TYPE_REGULAR\", \"PERIMETER_TYPE_BRIDGE\"]"
                          type: string
                        spec:
                          description: Proposed (or dry run) ServicePerimeter configuration.
                            This configuration allows to specify and test ServicePerimeter
                            configuration without enforcing actual access restrictions.
                            Only allowed to be set when the 'useExplicitDryRunSpec'
                            flag is set.
                          properties:
                            accessLevels:
                              description: "A list of AccessLevel resource names that
                                allow resources within the ServicePerimeter to be
                                accessed from the internet. AccessLevels listed must
                                be in the same policy as this ServicePerimeter. Referencing
                                a nonexistent AccessLevel is a syntax error. If no
                                AccessLevel names are listed, resources within the
                                perimeter can only be accessed via GCP calls with
                                request origins within the perimeter. For Service
                                Perimeter Bridge, must be empty. \n Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}"
                              items:
                                type: string
                              type: array
                            egressPolicies:
                              description: List of EgressPolicies to apply to the
                                perimeter. A perimeter may have multiple EgressPolicies,
                                each of which is evaluated separately. Access is granted
                                if any EgressPolicy grants it. Must be empty for a
                                perimeter bridge.
                              items:
                                properties:
                                  egressFrom:
                                    description: Defines conditions on the source
                                      of a request causing this 'EgressPolicy' to
                                      apply.
                                    properties:
                                      identities:
                                        description: A list of identities that are
                                          allowed access through this 'EgressPolicy'.
                                          Should be in the format of email address.
                                          The email address should represent individual
                                          user or service account only.
                                        items:
                                          type: string
                                        type: array
                                      identityType:
                                        description: 'Specifies the type of identities
                                          that are allowed access to outside the perimeter.
                                          If left unspecified, then members of ''identities''
                                          field will be allowed access. Possible values:
                                          ["IDENTITY_TYPE_UNSPECIFIED", "ANY_IDENTITY",
                                          "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                                        type: string
                                    type: object
                                  egressTo:
                                    description: Defines the conditions on the 'ApiOperation'
                                      and destination resources that cause this 'EgressPolicy'
                                      to apply.
                                    properties:
                                      operations:
                                        description: A list of 'ApiOperations' that
                                          this egress rule applies to. A request matches
                                          if it contains an operation/service in this
                                          list.
                                        items:
                                          properties:
                                            methodSelectors:
                                              description: API methods or permissions
                                                to allow. Method or permission must
                                                belong to the service specified by
                                                'serviceName' field. A single MethodSelector
                                                entry with '*' specified for the 'method'
                                                field will allow all methods AND permissions
                                                for the service specified in 'serviceName'.
                                              items:
                                                properties:
                                                  method:
                                                    description: Value for 'method'
                                                      should be a valid method name
                                                      for the corresponding 'serviceName'
                                                      in 'ApiOperation'. If '*' used
                                                      as value for method, then ALL
                                                      methods and permissions are
                                                      allowed.
                                                    type: string
                                                  permission:
                                                    description: Value for permission
                                                      should be a valid Cloud IAM
                                                      permission for the corresponding
                                                      'serviceName' in 'ApiOperation'.
                                                    type: string
                                                type: object
                                              type: array
                                            serviceName:
                                              description: The name of the API whose
                                                methods or permissions the 'IngressPolicy'
                                                or 'EgressPolicy' want to allow. A
                                                single 'ApiOperation' with serviceName
                                                field set to '*' will allow all methods
                                                AND permissions for all services.
                                              type: string
                                          type: object
                                        type: array
                                      resources:
                                        description: A list of resources, currently
                                          only projects in the form 'projects/<projectnumber>',
                                          that match this to stanza. A request matches
                                          if it contains a resource in this list.
                                          If * is specified for resources, then this
                                          'EgressTo' rule will authorize access to
                                          all resources outside the perimeter.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                type: object
                              type: array
                            ingressPolicies:
                              description: List of 'IngressPolicies' to apply to the
                                perimeter. A perimeter may have multiple 'IngressPolicies',
                                each of which is evaluated separately. Access is granted
                                if any 'Ingress Policy' grants it. Must be empty for
                                a perimeter bridge.
                              items:
                                properties:
                                  ingressFrom:
                                    description: Defines the conditions on the source
                                      of a request causing this 'IngressPolicy' to
                                      apply.
                                    properties:
                                      identities:
                                        description: A list of identities that are
                                          allowed access through this ingress policy.
                                          Should be in the format of email address.
                                          The email address should represent individual
                                          user or service account only.
                                        items:
                                          type: string
                                        type: array
                                      identityType:
                                        description: 'Specifies the type of identities
                                          that are allowed access from outside the
                                          perimeter. If left unspecified, then members
                                          of ''identities'' field will be allowed
                                          access. Possible values: ["IDENTITY_TYPE_UNSPECIFIED",
                                          "ANY_IDENTITY", "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                                        type: string
                                      sources:
                                        description: Sources that this 'IngressPolicy'
                                          authorizes access from.
                                        items:
                                          properties:
                                            accessLevel:
                                              description: An 'AccessLevel' resource
                                                name that allow resources within the
                                                'ServicePerimeters' to be accessed
                                                from the internet. 'AccessLevels'
                                                listed must be in the same policy
                                                as this 'ServicePerimeter'. Referencing
                                                a nonexistent 'AccessLevel' will cause
                                                an error. If no 'AccessLevel' names
                                                are listed, resources within the perimeter
                                                can only be accessed via Google Cloud
                                                calls with request origins within
                                                the perimeter. Example 'accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.'
                                                If * is specified, then all IngressSources
                                                will be allowed.
                                              type: string
                                            resource:
                                              description: A Google Cloud resource
                                                that is allowed to ingress the perimeter.
                                                Requests from these resources will
                                                be allowed to access perimeter data.
                                                Currently only projects are allowed.
                                                Format 'projects/{project_number}'
                                                The project may be in any Google Cloud
                                                organization, not just the organization
                                                that the perimeter is defined in.
                                                '*' is not allowed, the case of allowing
                                                all Google Cloud resources only is
                                                not supported.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  ingressTo:
                                    description: Defines the conditions on the 'ApiOperation'
                                      and request destination that cause this 'IngressPolicy'
                                      to apply.
                                    properties:
                                      operations:
                                        description: A list of 'ApiOperations' the
                                          sources specified in corresponding 'IngressFrom'
                                          are allowed to perform in this 'ServicePerimeter'.
                                        items:
                                          properties:
                                            methodSelectors:
                                              description: API methods or permissions
                                                to allow. Method or permission must
                                                belong to the service specified by
                                                serviceName field. A single 'MethodSelector'
                                                entry with '*' specified for the method
                                                field will allow all methods AND permissions
                                                for the service specified in 'serviceName'.
                                              items:
                                                properties:
                                                  method:
                                                    description: Value for method
                                                      should be a valid method name
                                                      for the corresponding serviceName
                                                      in 'ApiOperation'. If '*' used
                                                      as value for 'method', then
                                                      ALL methods and permissions
                                                      are allowed.
                                                    type: string
                                                  permission:
                                                    description: Value for permission
                                                      should be a valid Cloud IAM
                                                      permission for the corresponding
                                                      'serviceName' in 'ApiOperation'.
                                                    type: string
                                                type: object
                                              type: array
                                            serviceName:
                                              description: The name of the API whose
                                                methods or permissions the 'IngressPolicy'
                                                or 'EgressPolicy' want to allow. A
                                                single 'ApiOperation' with 'serviceName'
                                                field set to '*' will allow all methods
                                                AND permissions for all services.
                                              type: string
                                          type: object
                                        type: array
                                      resources:
                                        description: A list of resources, currently
                                          only projects in the form 'projects/<projectnumber>',
                                          protected by this 'ServicePerimeter' that
                                          are allowed to be accessed by sources defined
                                          in the corresponding 'IngressFrom'. A request
                                          matches if it contains a resource in this
                                          list. If '*' is specified for resources,
                                          then this 'IngressTo' rule will authorize
                                          access to all resources inside the perimeter,
                                          provided that the request also matches the
                                          'operations' field.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                type: object
                              type: array
                            resources:
                              description: 'A list of GCP resources that are inside
                                of the service perimeter. Currently only projects
                                are allowed. Format: projects/{project_number}'
                              items:
                                type: string
                              type: array
                            restrictedServices:
                              description: GCP services that are subject to the Service
                                Perimeter restrictions. Must contain a list of services.
                                For example, if 'storage.googleapis.com' is specified,
                                access to the storage buckets inside the perimeter
                                must meet the perimeter's access restrictions.
                              items:
                                type: string
                              type: array
                            vpcAccessibleServices:
                              description: Specifies how APIs are allowed to communicate
                                within the Service Perimeter.
                              properties:
                                allowedServices:
                                  description: The list of APIs usable within the
                                    Service Perimeter. Must be empty unless 'enableRestriction'
                                    is True.
                                  items:
                                    type: string
                                  type: array
                                enableRestriction:
                                  description: Whether to restrict API calls within
                                    the Service Perimeter to the list of APIs specified
                                    in 'allowedServices'.
                                  type: boolean
                              type: object
                          type: object
                        status:
                          description: ServicePerimeter configuration. Specifies sets
                            of resources, restricted services and access levels that
                            determine perimeter content and boundaries.
                          properties:
                            accessLevels:
                              description: "A list of AccessLevel resource names that
                                allow resources within the ServicePerimeter to be
                                accessed from the internet. AccessLevels listed must
                                be in the same policy as this ServicePerimeter. Referencing
                                a nonexistent AccessLevel is a syntax error. If no
                                AccessLevel names are listed, resources within the
                                perimeter can only be accessed via GCP calls with
                                request origins within the perimeter. For Service
                                Perimeter Bridge, must be empty. \n Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}"
                              items:
                                type: string
                              type: array
                            egressPolicies:
                              description: List of EgressPolicies to apply to the
                                perimeter. A perimeter may have multiple EgressPolicies,
                                each of which is evaluated separately. Access is granted
                                if any EgressPolicy grants it. Must be empty for a
                                perimeter bridge.
                              items:
                                properties:
                                  egressFrom:
                                    description: Defines conditions on the source
                                      of a request causing this 'EgressPolicy' to
                                      apply.
                                    properties:
                                      identities:
                                        description: A list of identities that are
                                          allowed access through this 'EgressPolicy'.
                                          Should be in the format of email address.
                                          The email address should represent individual
                                          user or service account only.
                                        items:
                                          type: string
                                        type: array
                                      identityType:
                                        description: 'Specifies the type of identities
                                          that are allowed access to outside the perimeter.
                                          If left unspecified, then members of ''identities''
                                          field will be allowed access. Possible values:
                                          ["IDENTITY_TYPE_UNSPECIFIED", "ANY_IDENTITY",
                                          "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                                        type: string
                                    type: object
                                  egressTo:
                                    description: Defines the conditions on the 'ApiOperation'
                                      and destination resources that cause this 'EgressPolicy'
                                      to apply.
                                    properties:
                                      operations:
                                        description: A list of 'ApiOperations' that
                                          this egress rule applies to. A request matches
                                          if it contains an operation/service in this
                                          list.
                                        items:
                                          properties:
                                            methodSelectors:
                                              description: API methods or permissions
                                                to allow. Method or permission must
                                                belong to the service specified by
                                                'serviceName' field. A single MethodSelector
                                                entry with '*' specified for the 'method'
                                                field will allow all methods AND permissions
                                                for the service specified in 'serviceName'.
                                              items:
                                                properties:
                                                  method:
                                                    description: Value for 'method'
                                                      should be a valid method name
                                                      for the corresponding 'serviceName'
                                                      in 'ApiOperation'. If '*' used
                                                      as value for method, then ALL
                                                      methods and permissions are
                                                      allowed.
                                                    type: string
                                                  permission:
                                                    description: Value for permission
                                                      should be a valid Cloud IAM
                                                      permission for the corresponding
                                                      'serviceName' in 'ApiOperation'.
                                                    type: string
                                                type: object
                                              type: array
                                            serviceName:
                                              description: The name of the API whose
                                                methods or permissions the 'IngressPolicy'
                                                or 'EgressPolicy' want to allow. A
                                                single 'ApiOperation' with serviceName
                                                field set to '*' will allow all methods
                                                AND permissions for all services.
                                              type: string
                                          type: object
                                        type: array
                                      resources:
                                        description: A list of resources, currently
                                          only projects in the form 'projects/<projectnumber>',
                                          that match this to stanza. A request matches
                                          if it contains a resource in this list.
                                          If * is specified for resources, then this
                                          'EgressTo' rule will authorize access to
                                          all resources outside the perimeter.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                type: object
                              type: array
                            ingressPolicies:
                              description: List of 'IngressPolicies' to apply to the
                                perimeter. A perimeter may have multiple 'IngressPolicies',
                                each of which is evaluated separately. Access is granted
                                if any 'Ingress Policy' grants it. Must be empty for
                                a perimeter bridge.
                              items:
                                properties:
                                  ingressFrom:
                                    description: Defines the conditions on the source
                                      of a request causing this 'IngressPolicy' to
                                      apply.
                                    properties:
                                      identities:
                                        description: A list of identities that are
                                          allowed access through this ingress policy.
                                          Should be in the format of email address.
                                          The email address should represent individual
                                          user or service account only.
                                        items:
                                          type: string
                                        type: array
                                      identityType:
                                        description: 'Specifies the type of identities
                                          that are allowed access from outside the
                                          perimeter. If left unspecified, then members
                                          of ''identities'' field will be allowed
                                          access. Possible values: ["IDENTITY_TYPE_UNSPECIFIED",
                                          "ANY_IDENTITY", "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                                        type: string
                                      sources:
                                        description: Sources that this 'IngressPolicy'
                                          authorizes access from.
                                        items:
                                          properties:
                                            accessLevel:
                                              description: An 'AccessLevel' resource
                                                name that allow resources within the
                                                'ServicePerimeters' to be accessed
                                                from the internet. 'AccessLevels'
                                                listed must be in the same policy
                                                as this 'ServicePerimeter'. Referencing
                                                a nonexistent 'AccessLevel' will cause
                                                an error. If no 'AccessLevel' names
                                                are listed, resources within the perimeter
                                                can only be accessed via Google Cloud
                                                calls with request origins within
                                                the perimeter. Example 'accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.'
                                                If * is specified, then all IngressSources
                                                will be allowed.
                                              type: string
                                            resource:
                                              description: A Google Cloud resource
                                                that is allowed to ingress the perimeter.
                                                Requests from these resources will
                                                be allowed to access perimeter data.
                                                Currently only projects are allowed.
                                                Format 'projects/{project_number}'
                                                The project may be in any Google Cloud
                                                organization, not just the organization
                                                that the perimeter is defined in.
                                                '*' is not allowed, the case of allowing
                                                all Google Cloud resources only is
                                                not supported.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  ingressTo:
                                    description: Defines the conditions on the 'ApiOperation'
                                      and request destination that cause this 'IngressPolicy'
                                      to apply.
                                    properties:
                                      operations:
                                        description: A list of 'ApiOperations' the
                                          sources specified in corresponding 'IngressFrom'
                                          are allowed to perform in this 'ServicePerimeter'.
                                        items:
                                          properties:
                                            methodSelectors:
                                              description: API methods or permissions
                                                to allow. Method or permission must
                                                belong to the service specified by
                                                serviceName field. A single 'MethodSelector'
                                                entry with '*' specified for the method
                                                field will allow all methods AND permissions
                                                for the service specified in 'serviceName'.
                                              items:
                                                properties:
                                                  method:
                                                    description: Value for method
                                                      should be a valid method name
                                                      for the corresponding serviceName
                                                      in 'ApiOperation'. If '*' used
                                                      as value for 'method', then
                                                      ALL methods and permissions
                                                      are allowed.
                                                    type: string
                                                  permission:
                                                    description: Value for permission
                                                      should be a valid Cloud IAM
                                                      permission for the corresponding
                                                      'serviceName' in 'ApiOperation'.
                                                    type: string
                                                type: object
                                              type: array
                                            serviceName:
                                              description: The name of the API whose
                                                methods or permissions the 'IngressPolicy'
                                                or 'EgressPolicy' want to allow. A
                                                single 'ApiOperation' with 'serviceName'
                                                field set to '*' will allow all methods
                                                AND permissions for all services.
                                              type: string
                                          type: object
                                        type: array
                                      resources:
                                        description: A list of resources, currently
                                          only projects in the form 'projects/<projectnumber>',
                                          protected by this 'ServicePerimeter' that
                                          are allowed to be accessed by sources defined
                                          in the corresponding 'IngressFrom'. A request
                                          matches if it contains a resource in this
                                          list. If '*' is specified for resources,
                                          then this 'IngressTo' rule will authorize
                                          access to all resources inside the perimeter,
                                          provided that the request also matches the
                                          'operations' field.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                type: object
                              type: array
                            resources:
                              description: 'A list of GCP resources that are inside
                                of the service perimeter. Currently only projects
                                are allowed. Format: projects/{project_number}'
                              items:
                                type: string
                              type: array
                            restrictedServices:
                              description: GCP services that are subject to the Service
                                Perimeter restrictions. Must contain a list of services.
                                For example, if 'storage.googleapis.com' is specified,
                                access to the storage buckets inside the perimeter
                                must meet the perimeter's access restrictions.
                              items:
                                type: string
                              type: array
                            vpcAccessibleServices:
                              description: Specifies how APIs are allowed to communicate
                                within the Service Perimeter.
                              properties:
                                allowedServices:
                                  description: The list of APIs usable within the
                                    Service Perimeter. Must be empty unless 'enableRestriction'
                                    is True.
                                  items:
                                    type: string
                                  type: array
                                enableRestriction:
                                  description: Whether to restrict API calls within
                                    the Service Perimeter to the list of APIs specified
                                    in 'allowedServices'.
                                  type: boolean
                              type: object
                          type: object
                        title:
                          description: Human readable title. Must be unique within
                            the Policy.
                          type: string
                        updateTime:
                          description: Time the AccessPolicy was updated in UTC.
                          type: string
                        useExplicitDryRunSpec:
                          description: Use explicit dry run spec flag. Ordinarily,
                            a dry-run spec implicitly exists for all Service Perimeters,
                            and that spec is identical to the status for those Service
                            Perimeters. When this flag is set, it inhibits the generation
                            of the implicit spec, thereby allowing the user to explicitly
                            provide a configuration ("spec") to use in a dry-run version
                            of the Service Perimeter. This allows the user to test
                            changes to the enforced config ("status") without actually
                            enforcing them. This testing is done through analyzing
                            the differences between currently enforced and suggested
                            restrictions. useExplicitDryRunSpec must bet set to True
                            if any of the fields in the spec are set to non-default
                            values.
                          type: boolean
                      required:
                      - name
                      - title
                      type: object
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - parent
                - providerRef
                type: object
              parent:
                description: 'The AccessPolicy this ServicePerimeter lives in. Format:
                  accessPolicies/{policy_id}'
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              servicePerimeters:
                description: The desired Service Perimeters that should replace all
                  existing Service Perimeters in the Access Policy.
                items:
                  properties:
                    createTime:
                      description: Time the AccessPolicy was created in UTC.
                      type: string
                    description:
                      description: Description of the ServicePerimeter and its use.
                        Does not affect behavior.
                      type: string
                    name:
                      description: 'Resource name for the ServicePerimeter. The short_name
                        component must begin with a letter and only include alphanumeric
                        and ''_''. Format: accessPolicies/{policy_id}/servicePerimeters/{short_name}'
                      type: string
                    perimeterType:
                      description: "Specifies the type of the Perimeter. There are
                        two types: regular and bridge. Regular Service Perimeter contains
                        resources, access levels, and restricted services. Every resource
                        can be in at most ONE regular Service Perimeter. \n In addition
                        to being in a regular service perimeter, a resource can also
                        be in zero or more perimeter bridges. A perimeter bridge only
                        contains resources. Cross project operations are permitted
                        if all effected resources share some perimeter (whether bridge
                        or regular). Perimeter Bridge does not contain access levels
                        or services: those are governed entirely by the regular perimeter
                        that resource is in. \n Perimeter Bridges are typically useful
                        when building more complex topologies with many independent
                        perimeters that need to share some data with a common perimeter,
                        but should not be able to share data among themselves. Default
                        value: \"PERIMETER_TYPE_REGULAR\" Possible values: [\"PERIMETER_TYPE_REGULAR\",
                        \"PERIMETER_TYPE_BRIDGE\"]"
                      type: string
                    spec:
                      description: Proposed (or dry run) ServicePerimeter configuration.
                        This configuration allows to specify and test ServicePerimeter
                        configuration without enforcing actual access restrictions.
                        Only allowed to be set when the 'useExplicitDryRunSpec' flag
                        is set.
                      properties:
                        accessLevels:
                          description: "A list of AccessLevel resource names that
                            allow resources within the ServicePerimeter to be accessed
                            from the internet. AccessLevels listed must be in the
                            same policy as this ServicePerimeter. Referencing a nonexistent
                            AccessLevel is a syntax error. If no AccessLevel names
                            are listed, resources within the perimeter can only be
                            accessed via GCP calls with request origins within the
                            perimeter. For Service Perimeter Bridge, must be empty.
                            \n Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}"
                          items:
                            type: string
                          type: array
                        egressPolicies:
                          description: List of EgressPolicies to apply to the perimeter.
                            A perimeter may have multiple EgressPolicies, each of
                            which is evaluated separately. Access is granted if any
                            EgressPolicy grants it. Must be empty for a perimeter
                            bridge.
                          items:
                            properties:
                              egressFrom:
                                description: Defines conditions on the source of a
                                  request causing this 'EgressPolicy' to apply.
                                properties:
                                  identities:
                                    description: A list of identities that are allowed
                                      access through this 'EgressPolicy'. Should be
                                      in the format of email address. The email address
                                      should represent individual user or service
                                      account only.
                                    items:
                                      type: string
                                    type: array
                                  identityType:
                                    description: 'Specifies the type of identities
                                      that are allowed access to outside the perimeter.
                                      If left unspecified, then members of ''identities''
                                      field will be allowed access. Possible values:
                                      ["IDENTITY_TYPE_UNSPECIFIED", "ANY_IDENTITY",
                                      "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                                    type: string
                                type: object
                              egressTo:
                                description: Defines the conditions on the 'ApiOperation'
                                  and destination resources that cause this 'EgressPolicy'
                                  to apply.
                                properties:
                                  operations:
                                    description: A list of 'ApiOperations' that this
                                      egress rule applies to. A request matches if
                                      it contains an operation/service in this list.
                                    items:
                                      properties:
                                        methodSelectors:
                                          description: API methods or permissions
                                            to allow. Method or permission must belong
                                            to the service specified by 'serviceName'
                                            field. A single MethodSelector entry with
                                            '*' specified for the 'method' field will
                                            allow all methods AND permissions for
                                            the service specified in 'serviceName'.
                                          items:
                                            properties:
                                              method:
                                                description: Value for 'method' should
                                                  be a valid method name for the corresponding
                                                  'serviceName' in 'ApiOperation'.
                                                  If '*' used as value for method,
                                                  then ALL methods and permissions
                                                  are allowed.
                                                type: string
                                              permission:
                                                description: Value for permission
                                                  should be a valid Cloud IAM permission
                                                  for the corresponding 'serviceName'
                                                  in 'ApiOperation'.
                                                type: string
                                            type: object
                                          type: array
                                        serviceName:
                                          description: The name of the API whose methods
                                            or permissions the 'IngressPolicy' or
                                            'EgressPolicy' want to allow. A single
                                            'ApiOperation' with serviceName field
                                            set to '*' will allow all methods AND
                                            permissions for all services.
                                          type: string
                                      type: object
                                    type: array
                                  resources:
                                    description: A list of resources, currently only
                                      projects in the form 'projects/<projectnumber>',
                                      that match this to stanza. A request matches
                                      if it contains a resource in this list. If *
                                      is specified for resources, then this 'EgressTo'
                                      rule will authorize access to all resources
                                      outside the perimeter.
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          type: array
                        ingressPolicies:
                          description: List of 'IngressPolicies' to apply to the perimeter.
                            A perimeter may have multiple 'IngressPolicies', each
                            of which is evaluated separately. Access is granted if
                            any 'Ingress Policy' grants it. Must be empty for a perimeter
                            bridge.
                          items:
                            properties:
                              ingressFrom:
                                description: Defines the conditions on the source
                                  of a request causing this 'IngressPolicy' to apply.
                                properties:
                                  identities:
                                    description: A list of identities that are allowed
                                      access through this ingress policy. Should be
                                      in the format of email address. The email address
                                      should represent individual user or service
                                      account only.
                                    items:
                                      type: string
                                    type: array
                                  identityType:
                                    description: 'Specifies the type of identities
                                      that are allowed access from outside the perimeter.
                                      If left unspecified, then members of ''identities''
                                      field will be allowed access. Possible values:
                                      ["IDENTITY_TYPE_UNSPECIFIED", "ANY_IDENTITY",
                                      "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                                    type: string
                                  sources:
                                    description: Sources that this 'IngressPolicy'
                                      authorizes access from.
                                    items:
                                      properties:
                                        accessLevel:
                                          description: An 'AccessLevel' resource name
                                            that allow resources within the 'ServicePerimeters'
                                            to be accessed from the internet. 'AccessLevels'
                                            listed must be in the same policy as this
                                            'ServicePerimeter'. Referencing a nonexistent
                                            'AccessLevel' will cause an error. If
                                            no 'AccessLevel' names are listed, resources
                                            within the perimeter can only be accessed
                                            via Google Cloud calls with request origins
                                            within the perimeter. Example 'accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.'
                                            If * is specified, then all IngressSources
                                            will be allowed.
                                          type: string
                                        resource:
                                          description: A Google Cloud resource that
                                            is allowed to ingress the perimeter. Requests
                                            from these resources will be allowed to
                                            access perimeter data. Currently only
                                            projects are allowed. Format 'projects/{project_number}'
                                            The project may be in any Google Cloud
                                            organization, not just the organization
                                            that the perimeter is defined in. '*'
                                            is not allowed, the case of allowing all
                                            Google Cloud resources only is not supported.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              ingressTo:
                                description: Defines the conditions on the 'ApiOperation'
                                  and request destination that cause this 'IngressPolicy'
                                  to apply.
                                properties:
                                  operations:
                                    description: A list of 'ApiOperations' the sources
                                      specified in corresponding 'IngressFrom' are
                                      allowed to perform in this 'ServicePerimeter'.
                                    items:
                                      properties:
                                        methodSelectors:
                                          description: API methods or permissions
                                            to allow. Method or permission must belong
                                            to the service specified by serviceName
                                            field. A single 'MethodSelector' entry
                                            with '*' specified for the method field
                                            will allow all methods AND permissions
                                            for the service specified in 'serviceName'.
                                          items:
                                            properties:
                                              method:
                                                description: Value for method should
                                                  be a valid method name for the corresponding
                                                  serviceName in 'ApiOperation'. If
                                                  '*' used as value for 'method',
                                                  then ALL methods and permissions
                                                  are allowed.
                                                type: string
                                              permission:
                                                description: Value for permission
                                                  should be a valid Cloud IAM permission
                                                  for the corresponding 'serviceName'
                                                  in 'ApiOperation'.
                                                type: string
                                            type: object
                                          type: array
                                        serviceName:
                                          description: The name of the API whose methods
                                            or permissions the 'IngressPolicy' or
                                            'EgressPolicy' want to allow. A single
                                            'ApiOperation' with 'serviceName' field
                                            set to '*' will allow all methods AND
                                            permissions for all services.
                                          type: string
                                      type: object
                                    type: array
                                  resources:
                                    description: A list of resources, currently only
                                      projects in the form 'projects/<projectnumber>',
                                      protected by this 'ServicePerimeter' that are
                                      allowed to be accessed by sources defined in
                                      the corresponding 'IngressFrom'. A request matches
                                      if it contains a resource in this list. If '*'
                                      is specified for resources, then this 'IngressTo'
                                      rule will authorize access to all resources
                                      inside the perimeter, provided that the request
                                      also matches the 'operations' field.
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          type: array
                        resources:
                          description: 'A list of GCP resources that are inside of
                            the service perimeter. Currently only projects are allowed.
                            Format: projects/{project_number}'
                          items:
                            type: string
                          type: array
                        restrictedServices:
                          description: GCP services that are subject to the Service
                            Perimeter restrictions. Must contain a list of services.
                            For example, if 'storage.googleapis.com' is specified,
                            access to the storage buckets inside the perimeter must
                            meet the perimeter's access restrictions.
                          items:
                            type: string
                          type: array
                        vpcAccessibleServices:
                          description: Specifies how APIs are allowed to communicate
                            within the Service Perimeter.
                          properties:
                            allowedServices:
                              description: The list of APIs usable within the Service
                                Perimeter. Must be empty unless 'enableRestriction'
                                is True.
                              items:
                                type: string
                              type: array
                            enableRestriction:
                              description: Whether to restrict API calls within the
                                Service Perimeter to the list of APIs specified in
                                'allowedServices'.
                              type: boolean
                          type: object
                      type: object
                    status:
                      description: ServicePerimeter configuration. Specifies sets
                        of resources, restricted services and access levels that determine
                        perimeter content and boundaries.
                      properties:
                        accessLevels:
                          description: "A list of AccessLevel resource names that
                            allow resources within the ServicePerimeter to be accessed
                            from the internet. AccessLevels listed must be in the
                            same policy as this ServicePerimeter. Referencing a nonexistent
                            AccessLevel is a syntax error. If no AccessLevel names
                            are listed, resources within the perimeter can only be
                            accessed via GCP calls with request origins within the
                            perimeter. For Service Perimeter Bridge, must be empty.
                            \n Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}"
                          items:
                            type: string
                          type: array
                        egressPolicies:
                          description: List of EgressPolicies to apply to the perimeter.
                            A perimeter may have multiple EgressPolicies, each of
                            which is evaluated separately. Access is granted if any
                            EgressPolicy grants it. Must be empty for a perimeter
                            bridge.
                          items:
                            properties:
                              egressFrom:
                                description: Defines conditions on the source of a
                                  request causing this 'EgressPolicy' to apply.
                                properties:
                                  identities:
                                    description: A list of identities that are allowed
                                      access through this 'EgressPolicy'. Should be
                                      in the format of email address. The email address
                                      should represent individual user or service
                                      account only.
                                    items:
                                      type: string
                                    type: array
                                  identityType:
                                    description: 'Specifies the type of identities
                                      that are allowed access to outside the perimeter.
                                      If left unspecified, then members of ''identities''
                                      field will be allowed access. Possible values:
                                      ["IDENTITY_TYPE_UNSPECIFIED", "ANY_IDENTITY",
                                      "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                                    type: string
                                type: object
                              egressTo:
                                description: Defines the conditions on the 'ApiOperation'
                                  and destination resources that cause this 'EgressPolicy'
                                  to apply.
                                properties:
                                  operations:
                                    description: A list of 'ApiOperations' that this
                                      egress rule applies to. A request matches if
                                      it contains an operation/service in this list.
                                    items:
                                      properties:
                                        methodSelectors:
                                          description: API methods or permissions
                                            to allow. Method or permission must belong
                                            to the service specified by 'serviceName'
                                            field. A single MethodSelector entry with
                                            '*' specified for the 'method' field will
                                            allow all methods AND permissions for
                                            the service specified in 'serviceName'.
                                          items:
                                            properties:
                                              method:
                                                description: Value for 'method' should
                                                  be a valid method name for the corresponding
                                                  'serviceName' in 'ApiOperation'.
                                                  If '*' used as value for method,
                                                  then ALL methods and permissions
                                                  are allowed.
                                                type: string
                                              permission:
                                                description: Value for permission
                                                  should be a valid Cloud IAM permission
                                                  for the corresponding 'serviceName'
                                                  in 'ApiOperation'.
                                                type: string
                                            type: object
                                          type: array
                                        serviceName:
                                          description: The name of the API whose methods
                                            or permissions the 'IngressPolicy' or
                                            'EgressPolicy' want to allow. A single
                                            'ApiOperation' with serviceName field
                                            set to '*' will allow all methods AND
                                            permissions for all services.
                                          type: string
                                      type: object
                                    type: array
                                  resources:
                                    description: A list of resources, currently only
                                      projects in the form 'projects/<projectnumber>',
                                      that match this to stanza. A request matches
                                      if it contains a resource in this list. If *
                                      is specified for resources, then this 'EgressTo'
                                      rule will authorize access to all resources
                                      outside the perimeter.
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          type: array
                        ingressPolicies:
                          description: List of 'IngressPolicies' to apply to the perimeter.
                            A perimeter may have multiple 'IngressPolicies', each
                            of which is evaluated separately. Access is granted if
                            any 'Ingress Policy' grants it. Must be empty for a perimeter
                            bridge.
                          items:
                            properties:
                              ingressFrom:
                                description: Defines the conditions on the source
                                  of a request causing this 'IngressPolicy' to apply.
                                properties:
                                  identities:
                                    description: A list of identities that are allowed
                                      access through this ingress policy. Should be
                                      in the format of email address. The email address
                                      should represent individual user or service
                                      account only.
                                    items:
                                      type: string
                                    type: array
                                  identityType:
                                    description: 'Specifies the type of identities
                                      that are allowed access from outside the perimeter.
                                      If left unspecified, then members of ''identities''
                                      field will be allowed access. Possible values:
                                      ["IDENTITY_TYPE_UNSPECIFIED", "ANY_IDENTITY",
                                      "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                                    type: string
                                  sources:
                                    description: Sources that this 'IngressPolicy'
                                      authorizes access from.
                                    items:
                                      properties:
                                        accessLevel:
                                          description: An 'AccessLevel' resource name
                                            that allow resources within the 'ServicePerimeters'
                                            to be accessed from the internet. 'AccessLevels'
                                            listed must be in the same policy as this
                                            'ServicePerimeter'. Referencing a nonexistent
                                            'AccessLevel' will cause an error. If
                                            no 'AccessLevel' names are listed, resources
                                            within the perimeter can only be accessed
                                            via Google Cloud calls with request origins
                                            within the perimeter. Example 'accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.'
                                            If * is specified, then all IngressSources
                                            will be allowed.
                                          type: string
                                        resource:
                                          description: A Google Cloud resource that
                                            is allowed to ingress the perimeter. Requests
                                            from these resources will be allowed to
                                            access perimeter data. Currently only
                                            projects are allowed. Format 'projects/{project_number}'
                                            The project may be in any Google Cloud
                                            organization, not just the organization
                                            that the perimeter is defined in. '*'
                                            is not allowed, the case of allowing all
                                            Google Cloud resources only is not supported.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              ingressTo:
                                description: Defines the conditions on the 'ApiOperation'
                                  and request destination that cause this 'IngressPolicy'
                                  to apply.
                                properties:
                                  operations:
                                    description: A list of 'ApiOperations' the sources
                                      specified in corresponding 'IngressFrom' are
                                      allowed to perform in this 'ServicePerimeter'.
                                    items:
                                      properties:
                                        methodSelectors:
                                          description: API methods or permissions
                                            to allow. Method or permission must belong
                                            to the service specified by serviceName
                                            field. A single 'MethodSelector' entry
                                            with '*' specified for the method field
                                            will allow all methods AND permissions
                                            for the service specified in 'serviceName'.
                                          items:
                                            properties:
                                              method:
                                                description: Value for method should
                                                  be a valid method name for the corresponding
                                                  serviceName in 'ApiOperation'. If
                                                  '*' used as value for 'method',
                                                  then ALL methods and permissions
                                                  are allowed.
                                                type: string
                                              permission:
                                                description: Value for permission
                                                  should be a valid Cloud IAM permission
                                                  for the corresponding 'serviceName'
                                                  in 'ApiOperation'.
                                                type: string
                                            type: object
                                          type: array
                                        serviceName:
                                          description: The name of the API whose methods
                                            or permissions the 'IngressPolicy' or
                                            'EgressPolicy' want to allow. A single
                                            'ApiOperation' with 'serviceName' field
                                            set to '*' will allow all methods AND
                                            permissions for all services.
                                          type: string
                                      type: object
                                    type: array
                                  resources:
                                    description: A list of resources, currently only
                                      projects in the form 'projects/<projectnumber>',
                                      protected by this 'ServicePerimeter' that are
                                      allowed to be accessed by sources defined in
                                      the corresponding 'IngressFrom'. A request matches
                                      if it contains a resource in this list. If '*'
                                      is specified for resources, then this 'IngressTo'
                                      rule will authorize access to all resources
                                      inside the perimeter, provided that the request
                                      also matches the 'operations' field.
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          type: array
                        resources:
                          description: 'A list of GCP resources that are inside of
                            the service perimeter. Currently only projects are allowed.
                            Format: projects/{project_number}'
                          items:
                            type: string
                          type: array
                        restrictedServices:
                          description: GCP services that are subject to the Service
                            Perimeter restrictions. Must contain a list of services.
                            For example, if 'storage.googleapis.com' is specified,
                            access to the storage buckets inside the perimeter must
                            meet the perimeter's access restrictions.
                          items:
                            type: string
                          type: array
                        vpcAccessibleServices:
                          description: Specifies how APIs are allowed to communicate
                            within the Service Perimeter.
                          properties:
                            allowedServices:
                              description: The list of APIs usable within the Service
                                Perimeter. Must be empty unless 'enableRestriction'
                                is True.
                              items:
                                type: string
                              type: array
                            enableRestriction:
                              description: Whether to restrict API calls within the
                                Service Perimeter to the list of APIs specified in
                                'allowedServices'.
                              type: boolean
                          type: object
                      type: object
                    title:
                      description: Human readable title. Must be unique within the
                        Policy.
                      type: string
                    updateTime:
                      description: Time the AccessPolicy was updated in UTC.
                      type: string
                    useExplicitDryRunSpec:
                      description: Use explicit dry run spec flag. Ordinarily, a dry-run
                        spec implicitly exists for all Service Perimeters, and that
                        spec is identical to the status for those Service Perimeters.
                        When this flag is set, it inhibits the generation of the implicit
                        spec, thereby allowing the user to explicitly provide a configuration
                        ("spec") to use in a dry-run version of the Service Perimeter.
                        This allows the user to test changes to the enforced config
                        ("status") without actually enforcing them. This testing is
                        done through analyzing the differences between currently enforced
                        and suggested restrictions. useExplicitDryRunSpec must bet
                        set to True if any of the fields in the spec are set to non-default
                        values.
                      type: boolean
                  required:
                  - name
                  - title
                  type: object
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - parent
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: managergcpuseraccessbindings.accesscontext.google.kubeform.com
spec:
  group: accesscontext.google.kubeform.com
  names:
    kind: ManagerGcpUserAccessBinding
    listKind: ManagerGcpUserAccessBindingList
    plural: managergcpuseraccessbindings
    singular: managergcpuseraccessbinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              accessLevels:
                description: 'Required. Access level that a user must have to be granted
                  access. Only one access level is supported, not multiple. This repeated
                  field must have exactly one element. Example: "accessPolicies/9522/accessLevels/device_trusted"'
                items:
                  type: string
                type: array
              groupKey:
                description: 'Required. Immutable. Google Group id whose members are
                  subject to this binding''s restrictions. See "id" in the G Suite
                  Directory API''s Groups resource. If a group''s email address/alias
                  is changed, this resource will continue to point at the changed
                  group. This field does not accept group email addresses or aliases.
                  Example: "01d520gv4vjcrht"'
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  accessLevels:
                    description: 'Required. Access level that a user must have to
                      be granted access. Only one access level is supported, not multiple.
                      This repeated field must have exactly one element. Example:
                      "accessPolicies/9522/accessLevels/device_trusted"'
                    items:
                      type: string
                    type: array
                  groupKey:
                    description: 'Required. Immutable. Google Group id whose members
                      are subject to this binding''s restrictions. See "id" in the
                      G Suite Directory API''s Groups resource. If a group''s email
                      address/alias is changed, this resource will continue to point
                      at the changed group. This field does not accept group email
                      addresses or aliases. Example: "01d520gv4vjcrht"'
                    type: string
                  id:
                    type: string
                  name:
                    description: 'Immutable. Assigned by the server during creation.
                      The last segment has an arbitrary length and has only URI unreserved
                      characters (as defined by RFC 3986 Section 2.3). Should not
                      be specified by the client during creation. Example: "organizations/256/gcpUserAccessBindings/b3-BhcX_Ud5N"'
                    type: string
                  organizationID:
                    description: Required. ID of the parent organization.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - accessLevels
                - groupKey
                - organizationID
                - providerRef
                type: object
              name:
                description: 'Immutable. Assigned by the server during creation. The
                  last segment has an arbitrary length and has only URI unreserved
                  characters (as defined by RFC 3986 Section 2.3). Should not be specified
                  by the client during creation. Example: "organizations/256/gcpUserAccessBindings/b3-BhcX_Ud5N"'
                type: string
              organizationID:
                description: Required. ID of the parent organization.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - accessLevels
            - groupKey
            - organizationID
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: managerserviceperimeters.accesscontext.google.kubeform.com
spec:
  group: accesscontext.google.kubeform.com
  names:
    kind: ManagerServicePerimeter
    listKind: ManagerServicePerimeterList
    plural: managerserviceperimeters
    singular: managerserviceperimeter
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              createTime:
                description: Time the AccessPolicy was created in UTC.
                type: string
              description:
                description: Description of the ServicePerimeter and its use. Does
                  not affect behavior.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  createTime:
                    description: Time the AccessPolicy was created in UTC.
                    type: string
                  description:
                    description: Description of the ServicePerimeter and its use.
                      Does not affect behavior.
                    type: string
                  id:
                    type: string
                  name:
                    description: 'Resource name for the ServicePerimeter. The short_name
                      component must begin with a letter and only include alphanumeric
                      and ''_''. Format: accessPolicies/{policy_id}/servicePerimeters/{short_name}'
                    type: string
                  parent:
                    description: 'The AccessPolicy this ServicePerimeter lives in.
                      Format: accessPolicies/{policy_id}'
                    type: string
                  perimeterType:
                    description: "Specifies the type of the Perimeter. There are two
                      types: regular and bridge. Regular Service Perimeter contains
                      resources, access levels, and restricted services. Every resource
                      can be in at most ONE regular Service Perimeter. \n In addition
                      to being in a regular service perimeter, a resource can also
                      be in zero or more perimeter bridges. A perimeter bridge only
                      contains resources. Cross project operations are permitted if
                      all effected resources share some perimeter (whether bridge
                      or regular). Perimeter Bridge does not contain access levels
                      or services: those are governed entirely by the regular perimeter
                      that resource is in. \n Perimeter Bridges are typically useful
                      when building more complex topologies with many independent
                      perimeters that need to share some data with a common perimeter,
                      but should not be able to share data among themselves. Default
                      value: \"PERIMETER_TYPE_REGULAR\" Possible values: [\"PERIMETER_TYPE_REGULAR\",
                      \"PERIMETER_TYPE_BRIDGE\"]"
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  spec:
                    description: Proposed (or dry run) ServicePerimeter configuration.
                      This configuration allows to specify and test ServicePerimeter
                      configuration without enforcing actual access restrictions.
                      Only allowed to be set when the 'useExplicitDryRunSpec' flag
                      is set.
                    properties:
                      accessLevels:
                        description: "A list of AccessLevel resource names that allow
                          resources within the ServicePerimeter to be accessed from
                          the internet. AccessLevels listed must be in the same policy
                          as this ServicePerimeter. Referencing a nonexistent AccessLevel
                          is a syntax error. If no AccessLevel names are listed, resources
                          within the perimeter can only be accessed via GCP calls
                          with request origins within the perimeter. For Service Perimeter
                          Bridge, must be empty. \n Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}"
                        items:
                          type: string
                        type: array
                      egressPolicies:
                        description: List of EgressPolicies to apply to the perimeter.
                          A perimeter may have multiple EgressPolicies, each of which
                          is evaluated separately. Access is granted if any EgressPolicy
                          grants it. Must be empty for a perimeter bridge.
                        items:
                          properties:
                            egressFrom:
                              description: Defines conditions on the source of a request
                                causing this 'EgressPolicy' to apply.
                              properties:
                                identities:
                                  description: A list of identities that are allowed
                                    access through this 'EgressPolicy'. Should be
                                    in the format of email address. The email address
                                    should represent individual user or service account
                                    only.
                                  items:
                                    type: string
                                  type: array
                                identityType:
                                  description: 'Specifies the type of identities that
                                    are allowed access to outside the perimeter. If
                                    left unspecified, then members of ''identities''
                                    field will be allowed access. Possible values:
                                    ["IDENTITY_TYPE_UNSPECIFIED", "ANY_IDENTITY",
                                    "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                                  type: string
                              type: object
                            egressTo:
                              description: Defines the conditions on the 'ApiOperation'
                                and destination resources that cause this 'EgressPolicy'
                                to apply.
                              properties:
                                operations:
                                  description: A list of 'ApiOperations' that this
                                    egress rule applies to. A request matches if it
                                    contains an operation/service in this list.
                                  items:
                                    properties:
                                      methodSelectors:
                                        description: API methods or permissions to
                                          allow. Method or permission must belong
                                          to the service specified by 'serviceName'
                                          field. A single MethodSelector entry with
                                          '*' specified for the 'method' field will
                                          allow all methods AND permissions for the
                                          service specified in 'serviceName'.
                                        items:
                                          properties:
                                            method:
                                              description: Value for 'method' should
                                                be a valid method name for the corresponding
                                                'serviceName' in 'ApiOperation'. If
                                                '*' used as value for method, then
                                                ALL methods and permissions are allowed.
                                              type: string
                                            permission:
                                              description: Value for permission should
                                                be a valid Cloud IAM permission for
                                                the corresponding 'serviceName' in
                                                'ApiOperation'.
                                              type: string
                                          type: object
                                        type: array
                                      serviceName:
                                        description: The name of the API whose methods
                                          or permissions the 'IngressPolicy' or 'EgressPolicy'
                                          want to allow. A single 'ApiOperation' with
                                          serviceName field set to '*' will allow
                                          all methods AND permissions for all services.
                                        type: string
                                    type: object
                                  type: array
                                resources:
                                  description: A list of resources, currently only
                                    projects in the form 'projects/<projectnumber>',
                                    that match this to stanza. A request matches if
                                    it contains a resource in this list. If * is specified
                                    for resources, then this 'EgressTo' rule will
                                    authorize access to all resources outside the
                                    perimeter.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      ingressPolicies:
                        description: List of 'IngressPolicies' to apply to the perimeter.
                          A perimeter may have multiple 'IngressPolicies', each of
                          which is evaluated separately. Access is granted if any
                          'Ingress Policy' grants it. Must be empty for a perimeter
                          bridge.
                        items:
                          properties:
                            ingressFrom:
                              description: Defines the conditions on the source of
                                a request causing this 'IngressPolicy' to apply.
                              properties:
                                identities:
                                  description: A list of identities that are allowed
                                    access through this ingress policy. Should be
                                    in the format of email address. The email address
                                    should represent individual user or service account
                                    only.
                                  items:
                                    type: string
                                  type: array
                                identityType:
                                  description: 'Specifies the type of identities that
                                    are allowed access from outside the perimeter.
                                    If left unspecified, then members of ''identities''
                                    field will be allowed access. Possible values:
                                    ["IDENTITY_TYPE_UNSPECIFIED", "ANY_IDENTITY",
                                    "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                                  type: string
                                sources:
                                  description: Sources that this 'IngressPolicy' authorizes
                                    access from.
                                  items:
                                    properties:
                                      accessLevel:
                                        description: An 'AccessLevel' resource name
                                          that allow resources within the 'ServicePerimeters'
                                          to be accessed from the internet. 'AccessLevels'
                                          listed must be in the same policy as this
                                          'ServicePerimeter'. Referencing a nonexistent
                                          'AccessLevel' will cause an error. If no
                                          'AccessLevel' names are listed, resources
                                          within the perimeter can only be accessed
                                          via Google Cloud calls with request origins
                                          within the perimeter. Example 'accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.'
                                          If * is specified, then all IngressSources
                                          will be allowed.
                                        type: string
                                      resource:
                                        description: A Google Cloud resource that
                                          is allowed to ingress the perimeter. Requests
                                          from these resources will be allowed to
                                          access perimeter data. Currently only projects
                                          are allowed. Format 'projects/{project_number}'
                                          The project may be in any Google Cloud organization,
                                          not just the organization that the perimeter
                                          is defined in. '*' is not allowed, the case
                                          of allowing all Google Cloud resources only
                                          is not supported.
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            ingressTo:
                              description: Defines the conditions on the 'ApiOperation'
                                and request destination that cause this 'IngressPolicy'
                                to apply.
                              properties:
                                operations:
                                  description: A list of 'ApiOperations' the sources
                                    specified in corresponding 'IngressFrom' are allowed
                                    to perform in this 'ServicePerimeter'.
                                  items:
                                    properties:
                                      methodSelectors:
                                        description: API methods or permissions to
                                          allow. Method or permission must belong
                                          to the service specified by serviceName
                                          field. A single 'MethodSelector' entry with
                                          '*' specified for the method field will
                                          allow all methods AND permissions for the
                                          service specified in 'serviceName'.
                                        items:
                                          properties:
                                            method:
                                              description: Value for method should
                                                be a valid method name for the corresponding
                                                serviceName in 'ApiOperation'. If
                                                '*' used as value for 'method', then
                                                ALL methods and permissions are allowed.
                                              type: string
                                            permission:
                                              description: Value for permission should
                                                be a valid Cloud IAM permission for
                                                the corresponding 'serviceName' in
                                                'ApiOperation'.
                                              type: string
                                          type: object
                                        type: array
                                      serviceName:
                                        description: The name of the API whose methods
                                          or permissions the 'IngressPolicy' or 'EgressPolicy'
                                          want to allow. A single 'ApiOperation' with
                                          'serviceName' field set to '*' will allow
                                          all methods AND permissions for all services.
                                        type: string
                                    type: object
                                  type: array
                                resources:
                                  description: A list of resources, currently only
                                    projects in the form 'projects/<projectnumber>',
                                    protected by this 'ServicePerimeter' that are
                                    allowed to be accessed by sources defined in the
                                    corresponding 'IngressFrom'. A request matches
                                    if it contains a resource in this list. If '*'
                                    is specified for resources, then this 'IngressTo'
                                    rule will authorize access to all resources inside
                                    the perimeter, provided that the request also
                                    matches the 'operations' field.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      resources:
                        description: 'A list of GCP resources that are inside of the
                          service perimeter. Currently only projects are allowed.
                          Format: projects/{project_number}'
                        items:
                          type: string
                        type: array
                      restrictedServices:
                        description: GCP services that are subject to the Service
                          Perimeter restrictions. Must contain a list of services.
                          For example, if 'storage.googleapis.com' is specified, access
                          to the storage buckets inside the perimeter must meet the
                          perimeter's access restrictions.
                        items:
                          type: string
                        type: array
                      vpcAccessibleServices:
                        description: Specifies how APIs are allowed to communicate
                          within the Service Perimeter.
                        properties:
                          allowedServices:
                            description: The list of APIs usable within the Service
                              Perimeter. Must be empty unless 'enableRestriction'
                              is True.
                            items:
                              type: string
                            type: array
                          enableRestriction:
                            description: Whether to restrict API calls within the
                              Service Perimeter to the list of APIs specified in 'allowedServices'.
                            type: boolean
                        type: object
                    type: object
                  status:
                    description: ServicePerimeter configuration. Specifies sets of
                      resources, restricted services and access levels that determine
                      perimeter content and boundaries.
                    properties:
                      accessLevels:
                        description: "A list of AccessLevel resource names that allow
                          resources within the ServicePerimeter to be accessed from
                          the internet. AccessLevels listed must be in the same policy
                          as this ServicePerimeter. Referencing a nonexistent AccessLevel
                          is a syntax error. If no AccessLevel names are listed, resources
                          within the perimeter can only be accessed via GCP calls
                          with request origins within the perimeter. For Service Perimeter
                          Bridge, must be empty. \n Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}"
                        items:
                          type: string
                        type: array
                      egressPolicies:
                        description: List of EgressPolicies to apply to the perimeter.
                          A perimeter may have multiple EgressPolicies, each of which
                          is evaluated separately. Access is granted if any EgressPolicy
                          grants it. Must be empty for a perimeter bridge.
                        items:
                          properties:
                            egressFrom:
                              description: Defines conditions on the source of a request
                                causing this 'EgressPolicy' to apply.
                              properties:
                                identities:
                                  description: A list of identities that are allowed
                                    access through this 'EgressPolicy'. Should be
                                    in the format of email address. The email address
                                    should represent individual user or service account
                                    only.
                                  items:
                                    type: string
                                  type: array
                                identityType:
                                  description: 'Specifies the type of identities that
                                    are allowed access to outside the perimeter. If
                                    left unspecified, then members of ''identities''
                                    field will be allowed access. Possible values:
                                    ["IDENTITY_TYPE_UNSPECIFIED", "ANY_IDENTITY",
                                    "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                                  type: string
                              type: object
                            egressTo:
                              description: Defines the conditions on the 'ApiOperation'
                                and destination resources that cause this 'EgressPolicy'
                                to apply.
                              properties:
                                operations:
                                  description: A list of 'ApiOperations' that this
                                    egress rule applies to. A request matches if it
                                    contains an operation/service in this list.
                                  items:
                                    properties:
                                      methodSelectors:
                                        description: API methods or permissions to
                                          allow. Method or permission must belong
                                          to the service specified by 'serviceName'
                                          field. A single MethodSelector entry with
                                          '*' specified for the 'method' field will
                                          allow all methods AND permissions for the
                                          service specified in 'serviceName'.
                                        items:
                                          properties:
                                            method:
                                              description: Value for 'method' should
                                                be a valid method name for the corresponding
                                                'serviceName' in 'ApiOperation'. If
                                                '*' used as value for method, then
                                                ALL methods and permissions are allowed.
                                              type: string
                                            permission:
                                              description: Value for permission should
                                                be a valid Cloud IAM permission for
                                                the corresponding 'serviceName' in
                                                'ApiOperation'.
                                              type: string
                                          type: object
                                        type: array
                                      serviceName:
                                        description: The name of the API whose methods
                                          or permissions the 'IngressPolicy' or 'EgressPolicy'
                                          want to allow. A single 'ApiOperation' with
                                          serviceName field set to '*' will allow
                                          all methods AND permissions for all services.
                                        type: string
                                    type: object
                                  type: array
                                resources:
                                  description: A list of resources, currently only
                                    projects in the form 'projects/<projectnumber>',
                                    that match this to stanza. A request matches if
                                    it contains a resource in this list. If * is specified
                                    for resources, then this 'EgressTo' rule will
                                    authorize access to all resources outside the
                                    perimeter.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      ingressPolicies:
                        description: List of 'IngressPolicies' to apply to the perimeter.
                          A perimeter may have multiple 'IngressPolicies', each of
                          which is evaluated separately. Access is granted if any
                          'Ingress Policy' grants it. Must be empty for a perimeter
                          bridge.
                        items:
                          properties:
                            ingressFrom:
                              description: Defines the conditions on the source of
                                a request causing this 'IngressPolicy' to apply.
                              properties:
                                identities:
                                  description: A list of identities that are allowed
                                    access through this ingress policy. Should be
                                    in the format of email address. The email address
                                    should represent individual user or service account
                                    only.
                                  items:
                                    type: string
                                  type: array
                                identityType:
                                  description: 'Specifies the type of identities that
                                    are allowed access from outside the perimeter.
                                    If left unspecified, then members of ''identities''
                                    field will be allowed access. Possible values:
                                    ["IDENTITY_TYPE_UNSPECIFIED", "ANY_IDENTITY",
                                    "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                                  type: string
                                sources:
                                  description: Sources that this 'IngressPolicy' authorizes
                                    access from.
                                  items:
                                    properties:
                                      accessLevel:
                                        description: An 'AccessLevel' resource name
                                          that allow resources within the 'ServicePerimeters'
                                          to be accessed from the internet. 'AccessLevels'
                                          listed must be in the same policy as this
                                          'ServicePerimeter'. Referencing a nonexistent
                                          'AccessLevel' will cause an error. If no
                                          'AccessLevel' names are listed, resources
                                          within the perimeter can only be accessed
                                          via Google Cloud calls with request origins
                                          within the perimeter. Example 'accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.'
                                          If * is specified, then all IngressSources
                                          will be allowed.
                                        type: string
                                      resource:
                                        description: A Google Cloud resource that
                                          is allowed to ingress the perimeter. Requests
                                          from these resources will be allowed to
                                          access perimeter data. Currently only projects
                                          are allowed. Format 'projects/{project_number}'
                                          The project may be in any Google Cloud organization,
                                          not just the organization that the perimeter
                                          is defined in. '*' is not allowed, the case
                                          of allowing all Google Cloud resources only
                                          is not supported.
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            ingressTo:
                              description: Defines the conditions on the 'ApiOperation'
                                and request destination that cause this 'IngressPolicy'
                                to apply.
                              properties:
                                operations:
                                  description: A list of 'ApiOperations' the sources
                                    specified in corresponding 'IngressFrom' are allowed
                                    to perform in this 'ServicePerimeter'.
                                  items:
                                    properties:
                                      methodSelectors:
                                        description: API methods or permissions to
                                          allow. Method or permission must belong
                                          to the service specified by serviceName
                                          field. A single 'MethodSelector' entry with
                                          '*' specified for the method field will
                                          allow all methods AND permissions for the
                                          service specified in 'serviceName'.
                                        items:
                                          properties:
                                            method:
                                              description: Value for method should
                                                be a valid method name for the corresponding
                                                serviceName in 'ApiOperation'. If
                                                '*' used as value for 'method', then
                                                ALL methods and permissions are allowed.
                                              type: string
                                            permission:
                                              description: Value for permission should
                                                be a valid Cloud IAM permission for
                                                the corresponding 'serviceName' in
                                                'ApiOperation'.
                                              type: string
                                          type: object
                                        type: array
                                      serviceName:
                                        description: The name of the API whose methods
                                          or permissions the 'IngressPolicy' or 'EgressPolicy'
                                          want to allow. A single 'ApiOperation' with
                                          'serviceName' field set to '*' will allow
                                          all methods AND permissions for all services.
                                        type: string
                                    type: object
                                  type: array
                                resources:
                                  description: A list of resources, currently only
                                    projects in the form 'projects/<projectnumber>',
                                    protected by this 'ServicePerimeter' that are
                                    allowed to be accessed by sources defined in the
                                    corresponding 'IngressFrom'. A request matches
                                    if it contains a resource in this list. If '*'
                                    is specified for resources, then this 'IngressTo'
                                    rule will authorize access to all resources inside
                                    the perimeter, provided that the request also
                                    matches the 'operations' field.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      resources:
                        description: 'A list of GCP resources that are inside of the
                          service perimeter. Currently only projects are allowed.
                          Format: projects/{project_number}'
                        items:
                          type: string
                        type: array
                      restrictedServices:
                        description: GCP services that are subject to the Service
                          Perimeter restrictions. Must contain a list of services.
                          For example, if 'storage.googleapis.com' is specified, access
                          to the storage buckets inside the perimeter must meet the
                          perimeter's access restrictions.
                        items:
                          type: string
                        type: array
                      vpcAccessibleServices:
                        description: Specifies how APIs are allowed to communicate
                          within the Service Perimeter.
                        properties:
                          allowedServices:
                            description: The list of APIs usable within the Service
                              Perimeter. Must be empty unless 'enableRestriction'
                              is True.
                            items:
                              type: string
                            type: array
                          enableRestriction:
                            description: Whether to restrict API calls within the
                              Service Perimeter to the list of APIs specified in 'allowedServices'.
                            type: boolean
                        type: object
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  title:
                    description: Human readable title. Must be unique within the Policy.
                    type: string
                  updateTime:
                    description: Time the AccessPolicy was updated in UTC.
                    type: string
                  useExplicitDryRunSpec:
                    description: Use explicit dry run spec flag. Ordinarily, a dry-run
                      spec implicitly exists for all Service Perimeters, and that
                      spec is identical to the status for those Service Perimeters.
                      When this flag is set, it inhibits the generation of the implicit
                      spec, thereby allowing the user to explicitly provide a configuration
                      ("spec") to use in a dry-run version of the Service Perimeter.
                      This allows the user to test changes to the enforced config
                      ("status") without actually enforcing them. This testing is
                      done through analyzing the differences between currently enforced
                      and suggested restrictions. useExplicitDryRunSpec must bet set
                      to True if any of the fields in the spec are set to non-default
                      values.
                    type: boolean
                required:
                - name
                - parent
                - providerRef
                - title
                type: object
              name:
                description: 'Resource name for the ServicePerimeter. The short_name
                  component must begin with a letter and only include alphanumeric
                  and ''_''. Format: accessPolicies/{policy_id}/servicePerimeters/{short_name}'
                type: string
              parent:
                description: 'The AccessPolicy this ServicePerimeter lives in. Format:
                  accessPolicies/{policy_id}'
                type: string
              perimeterType:
                description: "Specifies the type of the Perimeter. There are two types:
                  regular and bridge. Regular Service Perimeter contains resources,
                  access levels, and restricted services. Every resource can be in
                  at most ONE regular Service Perimeter. \n In addition to being in
                  a regular service perimeter, a resource can also be in zero or more
                  perimeter bridges. A perimeter bridge only contains resources. Cross
                  project operations are permitted if all effected resources share
                  some perimeter (whether bridge or regular). Perimeter Bridge does
                  not contain access levels or services: those are governed entirely
                  by the regular perimeter that resource is in. \n Perimeter Bridges
                  are typically useful when building more complex topologies with
                  many independent perimeters that need to share some data with a
                  common perimeter, but should not be able to share data among themselves.
                  Default value: \"PERIMETER_TYPE_REGULAR\" Possible values: [\"PERIMETER_TYPE_REGULAR\",
                  \"PERIMETER_TYPE_BRIDGE\"]"
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              spec:
                description: Proposed (or dry run) ServicePerimeter configuration.
                  This configuration allows to specify and test ServicePerimeter configuration
                  without enforcing actual access restrictions. Only allowed to be
                  set when the 'useExplicitDryRunSpec' flag is set.
                properties:
                  accessLevels:
                    description: "A list of AccessLevel resource names that allow
                      resources within the ServicePerimeter to be accessed from the
                      internet. AccessLevels listed must be in the same policy as
                      this ServicePerimeter. Referencing a nonexistent AccessLevel
                      is a syntax error. If no AccessLevel names are listed, resources
                      within the perimeter can only be accessed via GCP calls with
                      request origins within the perimeter. For Service Perimeter
                      Bridge, must be empty. \n Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}"
                    items:
                      type: string
                    type: array
                  egressPolicies:
                    description: List of EgressPolicies to apply to the perimeter.
                      A perimeter may have multiple EgressPolicies, each of which
                      is evaluated separately. Access is granted if any EgressPolicy
                      grants it. Must be empty for a perimeter bridge.
                    items:
                      properties:
                        egressFrom:
                          description: Defines conditions on the source of a request
                            causing this 'EgressPolicy' to apply.
                          properties:
                            identities:
                              description: A list of identities that are allowed access
                                through this 'EgressPolicy'. Should be in the format
                                of email address. The email address should represent
                                individual user or service account only.
                              items:
                                type: string
                              type: array
                            identityType:
                              description: 'Specifies the type of identities that
                                are allowed access to outside the perimeter. If left
                                unspecified, then members of ''identities'' field
                                will be allowed access. Possible values: ["IDENTITY_TYPE_UNSPECIFIED",
                                "ANY_IDENTITY", "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                              type: string
                          type: object
                        egressTo:
                          description: Defines the conditions on the 'ApiOperation'
                            and destination resources that cause this 'EgressPolicy'
                            to apply.
                          properties:
                            operations:
                              description: A list of 'ApiOperations' that this egress
                                rule applies to. A request matches if it contains
                                an operation/service in this list.
                              items:
                                properties:
                                  methodSelectors:
                                    description: API methods or permissions to allow.
                                      Method or permission must belong to the service
                                      specified by 'serviceName' field. A single MethodSelector
                                      entry with '*' specified for the 'method' field
                                      will allow all methods AND permissions for the
                                      service specified in 'serviceName'.
                                    items:
                                      properties:
                                        method:
                                          description: Value for 'method' should be
                                            a valid method name for the corresponding
                                            'serviceName' in 'ApiOperation'. If '*'
                                            used as value for method, then ALL methods
                                            and permissions are allowed.
                                          type: string
                                        permission:
                                          description: Value for permission should
                                            be a valid Cloud IAM permission for the
                                            corresponding 'serviceName' in 'ApiOperation'.
                                          type: string
                                      type: object
                                    type: array
                                  serviceName:
                                    description: The name of the API whose methods
                                      or permissions the 'IngressPolicy' or 'EgressPolicy'
                                      want to allow. A single 'ApiOperation' with
                                      serviceName field set to '*' will allow all
                                      methods AND permissions for all services.
                                    type: string
                                type: object
                              type: array
                            resources:
                              description: A list of resources, currently only projects
                                in the form 'projects/<projectnumber>', that match
                                this to stanza. A request matches if it contains a
                                resource in this list. If * is specified for resources,
                                then this 'EgressTo' rule will authorize access to
                                all resources outside the perimeter.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    type: array
                  ingressPolicies:
                    description: List of 'IngressPolicies' to apply to the perimeter.
                      A perimeter may have multiple 'IngressPolicies', each of which
                      is evaluated separately. Access is granted if any 'Ingress Policy'
                      grants it. Must be empty for a perimeter bridge.
                    items:
                      properties:
                        ingressFrom:
                          description: Defines the conditions on the source of a request
                            causing this 'IngressPolicy' to apply.
                          properties:
                            identities:
                              description: A list of identities that are allowed access
                                through this ingress policy. Should be in the format
                                of email address. The email address should represent
                                individual user or service account only.
                              items:
                                type: string
                              type: array
                            identityType:
                              description: 'Specifies the type of identities that
                                are allowed access from outside the perimeter. If
                                left unspecified, then members of ''identities'' field
                                will be allowed access. Possible values: ["IDENTITY_TYPE_UNSPECIFIED",
                                "ANY_IDENTITY", "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                              type: string
                            sources:
                              description: Sources that this 'IngressPolicy' authorizes
                                access from.
                              items:
                                properties:
                                  accessLevel:
                                    description: An 'AccessLevel' resource name that
                                      allow resources within the 'ServicePerimeters'
                                      to be accessed from the internet. 'AccessLevels'
                                      listed must be in the same policy as this 'ServicePerimeter'.
                                      Referencing a nonexistent 'AccessLevel' will
                                      cause an error. If no 'AccessLevel' names are
                                      listed, resources within the perimeter can only
                                      be accessed via Google Cloud calls with request
                                      origins within the perimeter. Example 'accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.'
                                      If * is specified, then all IngressSources will
                                      be allowed.
                                    type: string
                                  resource:
                                    description: A Google Cloud resource that is allowed
                                      to ingress the perimeter. Requests from these
                                      resources will be allowed to access perimeter
                                      data. Currently only projects are allowed. Format
                                      'projects/{project_number}' The project may
                                      be in any Google Cloud organization, not just
                                      the organization that the perimeter is defined
                                      in. '*' is not allowed, the case of allowing
                                      all Google Cloud resources only is not supported.
                                    type: string
                                type: object
                              type: array
                          type: object
                        ingressTo:
                          description: Defines the conditions on the 'ApiOperation'
                            and request destination that cause this 'IngressPolicy'
                            to apply.
                          properties:
                            operations:
                              description: A list of 'ApiOperations' the sources specified
                                in corresponding 'IngressFrom' are allowed to perform
                                in this 'ServicePerimeter'.
                              items:
                                properties:
                                  methodSelectors:
                                    description: API methods or permissions to allow.
                                      Method or permission must belong to the service
                                      specified by serviceName field. A single 'MethodSelector'
                                      entry with '*' specified for the method field
                                      will allow all methods AND permissions for the
                                      service specified in 'serviceName'.
                                    items:
                                      properties:
                                        method:
                                          description: Value for method should be
                                            a valid method name for the corresponding
                                            serviceName in 'ApiOperation'. If '*'
                                            used as value for 'method', then ALL methods
                                            and permissions are allowed.
                                          type: string
                                        permission:
                                          description: Value for permission should
                                            be a valid Cloud IAM permission for the
                                            corresponding 'serviceName' in 'ApiOperation'.
                                          type: string
                                      type: object
                                    type: array
                                  serviceName:
                                    description: The name of the API whose methods
                                      or permissions the 'IngressPolicy' or 'EgressPolicy'
                                      want to allow. A single 'ApiOperation' with
                                      'serviceName' field set to '*' will allow all
                                      methods AND permissions for all services.
                                    type: string
                                type: object
                              type: array
                            resources:
                              description: A list of resources, currently only projects
                                in the form 'projects/<projectnumber>', protected
                                by this 'ServicePerimeter' that are allowed to be
                                accessed by sources defined in the corresponding 'IngressFrom'.
                                A request matches if it contains a resource in this
                                list. If '*' is specified for resources, then this
                                'IngressTo' rule will authorize access to all resources
                                inside the perimeter, provided that the request also
                                matches the 'operations' field.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    type: array
                  resources:
                    description: 'A list of GCP resources that are inside of the service
                      perimeter. Currently only projects are allowed. Format: projects/{project_number}'
                    items:
                      type: string
                    type: array
                  restrictedServices:
                    description: GCP services that are subject to the Service Perimeter
                      restrictions. Must contain a list of services. For example,
                      if 'storage.googleapis.com' is specified, access to the storage
                      buckets inside the perimeter must meet the perimeter's access
                      restrictions.
                    items:
                      type: string
                    type: array
                  vpcAccessibleServices:
                    description: Specifies how APIs are allowed to communicate within
                      the Service Perimeter.
                    properties:
                      allowedServices:
                        description: The list of APIs usable within the Service Perimeter.
                          Must be empty unless 'enableRestriction' is True.
                        items:
                          type: string
                        type: array
                      enableRestriction:
                        description: Whether to restrict API calls within the Service
                          Perimeter to the list of APIs specified in 'allowedServices'.
                        type: boolean
                    type: object
                type: object
              status:
                description: ServicePerimeter configuration. Specifies sets of resources,
                  restricted services and access levels that determine perimeter content
                  and boundaries.
                properties:
                  accessLevels:
                    description: "A list of AccessLevel resource names that allow
                      resources within the ServicePerimeter to be accessed from the
                      internet. AccessLevels listed must be in the same policy as
                      this ServicePerimeter. Referencing a nonexistent AccessLevel
                      is a syntax error. If no AccessLevel names are listed, resources
                      within the perimeter can only be accessed via GCP calls with
                      request origins within the perimeter. For Service Perimeter
                      Bridge, must be empty. \n Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}"
                    items:
                      type: string
                    type: array
                  egressPolicies:
                    description: List of EgressPolicies to apply to the perimeter.
                      A perimeter may have multiple EgressPolicies, each of which
                      is evaluated separately. Access is granted if any EgressPolicy
                      grants it. Must be empty for a perimeter bridge.
                    items:
                      properties:
                        egressFrom:
                          description: Defines conditions on the source of a request
                            causing this 'EgressPolicy' to apply.
                          properties:
                            identities:
                              description: A list of identities that are allowed access
                                through this 'EgressPolicy'. Should be in the format
                                of email address. The email address should represent
                                individual user or service account only.
                              items:
                                type: string
                              type: array
                            identityType:
                              description: 'Specifies the type of identities that
                                are allowed access to outside the perimeter. If left
                                unspecified, then members of ''identities'' field
                                will be allowed access. Possible values: ["IDENTITY_TYPE_UNSPECIFIED",
                                "ANY_IDENTITY", "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                              type: string
                          type: object
                        egressTo:
                          description: Defines the conditions on the 'ApiOperation'
                            and destination resources that cause this 'EgressPolicy'
                            to apply.
                          properties:
                            operations:
                              description: A list of 'ApiOperations' that this egress
                                rule applies to. A request matches if it contains
                                an operation/service in this list.
                              items:
                                properties:
                                  methodSelectors:
                                    description: API methods or permissions to allow.
                                      Method or permission must belong to the service
                                      specified by 'serviceName' field. A single MethodSelector
                                      entry with '*' specified for the 'method' field
                                      will allow all methods AND permissions for the
                                      service specified in 'serviceName'.
                                    items:
                                      properties:
                                        method:
                                          description: Value for 'method' should be
                                            a valid method name for the corresponding
                                            'serviceName' in 'ApiOperation'. If '*'
                                            used as value for method, then ALL methods
                                            and permissions are allowed.
                                          type: string
                                        permission:
                                          description: Value for permission should
                                            be a valid Cloud IAM permission for the
                                            corresponding 'serviceName' in 'ApiOperation'.
                                          type: string
                                      type: object
                                    type: array
                                  serviceName:
                                    description: The name of the API whose methods
                                      or permissions the 'IngressPolicy' or 'EgressPolicy'
                                      want to allow. A single 'ApiOperation' with
                                      serviceName field set to '*' will allow all
                                      methods AND permissions for all services.
                                    type: string
                                type: object
                              type: array
                            resources:
                              description: A list of resources, currently only projects
                                in the form 'projects/<projectnumber>', that match
                                this to stanza. A request matches if it contains a
                                resource in this list. If * is specified for resources,
                                then this 'EgressTo' rule will authorize access to
                                all resources outside the perimeter.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    type: array
                  ingressPolicies:
                    description: List of 'IngressPolicies' to apply to the perimeter.
                      A perimeter may have multiple 'IngressPolicies', each of which
                      is evaluated separately. Access is granted if any 'Ingress Policy'
                      grants it. Must be empty for a perimeter bridge.
                    items:
                      properties:
                        ingressFrom:
                          description: Defines the conditions on the source of a request
                            causing this 'IngressPolicy' to apply.
                          properties:
                            identities:
                              description: A list of identities that are allowed access
                                through this ingress policy. Should be in the format
                                of email address. The email address should represent
                                individual user or service account only.
                              items:
                                type: string
                              type: array
                            identityType:
                              description: 'Specifies the type of identities that
                                are allowed access from outside the perimeter. If
                                left unspecified, then members of ''identities'' field
                                will be allowed access. Possible values: ["IDENTITY_TYPE_UNSPECIFIED",
                                "ANY_IDENTITY", "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"]'
                              type: string
                            sources:
                              description: Sources that this 'IngressPolicy' authorizes
                                access from.
                              items:
                                properties:
                                  accessLevel:
                                    description: An 'AccessLevel' resource name that
                                      allow resources within the 'ServicePerimeters'
                                      to be accessed from the internet. 'AccessLevels'
                                      listed must be in the same policy as this 'ServicePerimeter'.
                                      Referencing a nonexistent 'AccessLevel' will
                                      cause an error. If no 'AccessLevel' names are
                                      listed, resources within the perimeter can only
                                      be accessed via Google Cloud calls with request
                                      origins within the perimeter. Example 'accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.'
                                      If * is specified, then all IngressSources will
                                      be allowed.
                                    type: string
                                  resource:
                                    description: A Google Cloud resource that is allowed
                                      to ingress the perimeter. Requests from these
                                      resources will be allowed to access perimeter
                                      data. Currently only projects are allowed. Format
                                      'projects/{project_number}' The project may
                                      be in any Google Cloud organization, not just
                                      the organization that the perimeter is defined
                                      in. '*' is not allowed, the case of allowing
                                      all Google Cloud resources only is not supported.
                                    type: string
                                type: object
                              type: array
                          type: object
                        ingressTo:
                          description: Defines the conditions on the 'ApiOperation'
                            and request destination that cause this 'IngressPolicy'
                            to apply.
                          properties:
                            operations:
                              description: A list of 'ApiOperations' the sources specified
                                in corresponding 'IngressFrom' are allowed to perform
                                in this 'ServicePerimeter'.
                              items:
                                properties:
                                  methodSelectors:
                                    description: API methods or permissions to allow.
                                      Method or permission must belong to the service
                                      specified by serviceName field. A single 'MethodSelector'
                                      entry with '*' specified for the method field
                                      will allow all methods AND permissions for the
                                      service specified in 'serviceName'.
                                    items:
                                      properties:
                                        method:
                                          description: Value for method should be
                                            a valid method name for the corresponding
                                            serviceName in 'ApiOperation'. If '*'
                                            used as value for 'method', then ALL methods
                                            and permissions are allowed.
                                          type: string
                                        permission:
                                          description: Value for permission should
                                            be a valid Cloud IAM permission for the
                                            corresponding 'serviceName' in 'ApiOperation'.
                                          type: string
                                      type: object
                                    type: array
                                  serviceName:
                                    description: The name of the API whose methods
                                      or permissions the 'IngressPolicy' or 'EgressPolicy'
                                      want to allow. A single 'ApiOperation' with
                                      'serviceName' field set to '*' will allow all
                                      methods AND permissions for all services.
                                    type: string
                                type: object
                              type: array
                            resources:
                              description: A list of resources, currently only projects
                                in the form 'projects/<projectnumber>', protected
                                by this 'ServicePerimeter' that are allowed to be
                                accessed by sources defined in the corresponding 'IngressFrom'.
                                A request matches if it contains a resource in this
                                list. If '*' is specified for resources, then this
                                'IngressTo' rule will authorize access to all resources
                                inside the perimeter, provided that the request also
                                matches the 'operations' field.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    type: array
                  resources:
                    description: 'A list of GCP resources that are inside of the service
                      perimeter. Currently only projects are allowed. Format: projects/{project_number}'
                    items:
                      type: string
                    type: array
                  restrictedServices:
                    description: GCP services that are subject to the Service Perimeter
                      restrictions. Must contain a list of services. For example,
                      if 'storage.googleapis.com' is specified, access to the storage
                      buckets inside the perimeter must meet the perimeter's access
                      restrictions.
                    items:
                      type: string
                    type: array
                  vpcAccessibleServices:
                    description: Specifies how APIs are allowed to communicate within
                      the Service Perimeter.
                    properties:
                      allowedServices:
                        description: The list of APIs usable within the Service Perimeter.
                          Must be empty unless 'enableRestriction' is True.
                        items:
                          type: string
                        type: array
                      enableRestriction:
                        description: Whether to restrict API calls within the Service
                          Perimeter to the list of APIs specified in 'allowedServices'.
                        type: boolean
                    type: object
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              title:
                description: Human readable title. Must be unique within the Policy.
                type: string
              updateTime:
                description: Time the AccessPolicy was updated in UTC.
                type: string
              useExplicitDryRunSpec:
                description: Use explicit dry run spec flag. Ordinarily, a dry-run
                  spec implicitly exists for all Service Perimeters, and that spec
                  is identical to the status for those Service Perimeters. When this
                  flag is set, it inhibits the generation of the implicit spec, thereby
                  allowing the user to explicitly provide a configuration ("spec")
                  to use in a dry-run version of the Service Perimeter. This allows
                  the user to test changes to the enforced config ("status") without
                  actually enforcing them. This testing is done through analyzing
                  the differences between currently enforced and suggested restrictions.
                  useExplicitDryRunSpec must bet set to True if any of the fields
                  in the spec are set to non-default values.
                type: boolean
            required:
            - name
            - parent
            - providerRef
            - title
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: managerserviceperimeterresources.accesscontext.google.kubeform.com
spec:
  group: accesscontext.google.kubeform.com
  names:
    kind: ManagerServicePerimeterResource
    listKind: ManagerServicePerimeterResourceList
    plural: managerserviceperimeterresources
    singular: managerserviceperimeterresource
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  perimeterName:
                    description: The name of the Service Perimeter to add this resource
                      to.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  resource:
                    description: 'A GCP resource that is inside of the service perimeter.
                      Currently only projects are allowed. Format: projects/{project_number}'
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - perimeterName
                - providerRef
                - resource
                type: object
              perimeterName:
                description: The name of the Service Perimeter to add this resource
                  to.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                description: 'A GCP resource that is inside of the service perimeter.
                  Currently only projects are allowed. Format: projects/{project_number}'
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - perimeterName
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: manageraccesspolicies.accesscontext.google.kubeform.com
spec:
  group: accesscontext.google.kubeform.com
  names:
    kind: ManagerAccessPolicy
    listKind: ManagerAccessPolicyList
    plural: manageraccesspolicies
    singular: manageraccesspolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              createTime:
                description: Time the AccessPolicy was created in UTC.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  createTime:
                    description: Time the AccessPolicy was created in UTC.
                    type: string
                  id:
                    type: string
                  name:
                    description: 'Resource name of the AccessPolicy. Format: {policy_id}'
                    type: string
                  parent:
                    description: 'The parent of this AccessPolicy in the Cloud Resource
                      Hierarchy. Format: organizations/{organization_id}'
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  title:
                    description: Human readable title. Does not affect behavior.
                    type: string
                  updateTime:
                    description: Time the AccessPolicy was updated in UTC.
                    type: string
                required:
                - parent
                - providerRef
                - title
                type: object
              name:
                description: 'Resource name of the AccessPolicy. Format: {policy_id}'
                type: string
              parent:
                description: 'The parent of this AccessPolicy in the Cloud Resource
                  Hierarchy. Format: organizations/{organization_id}'
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              title:
                description: Human readable title. Does not affect behavior.
                type: string
              updateTime:
                description: Time the AccessPolicy was updated in UTC.
                type: string
            required:
            - parent
            - providerRef
            - title
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
