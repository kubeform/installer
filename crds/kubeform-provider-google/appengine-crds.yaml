apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: applicationurldispatchrules.appengine.google.kubeform.com
spec:
  group: appengine.google.kubeform.com
  names:
    kind: ApplicationURLDispatchRules
    listKind: ApplicationURLDispatchRulesList
    plural: applicationurldispatchrules
    singular: applicationurldispatchrules
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              dispatchRules:
                description: Rules to match an HTTP request and dispatch that request
                  to a service.
                items:
                  properties:
                    domain:
                      description: 'Domain name to match against. The wildcard "*"
                        is supported if specified before a period: "*.". Defaults
                        to matching all domains: "*".'
                      type: string
                    path:
                      description: Pathname within the host. Must start with a "/".
                        A single "*" can be included at the end of the path. The sum
                        of the lengths of the domain and path may not exceed 100 characters.
                      type: string
                    service:
                      description: Pathname within the host. Must start with a "/".
                        A single "*" can be included at the end of the path. The sum
                        of the lengths of the domain and path may not exceed 100 characters.
                      type: string
                  required:
                  - path
                  - service
                  type: object
                type: array
              id:
                type: string
              kubeformOutput:
                properties:
                  dispatchRules:
                    description: Rules to match an HTTP request and dispatch that
                      request to a service.
                    items:
                      properties:
                        domain:
                          description: 'Domain name to match against. The wildcard
                            "*" is supported if specified before a period: "*.". Defaults
                            to matching all domains: "*".'
                          type: string
                        path:
                          description: Pathname within the host. Must start with a
                            "/". A single "*" can be included at the end of the path.
                            The sum of the lengths of the domain and path may not
                            exceed 100 characters.
                          type: string
                        service:
                          description: Pathname within the host. Must start with a
                            "/". A single "*" can be included at the end of the path.
                            The sum of the lengths of the domain and path may not
                            exceed 100 characters.
                          type: string
                      required:
                      - path
                      - service
                      type: object
                    type: array
                  id:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - dispatchRules
                - providerRef
                type: object
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - dispatchRules
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: flexibleappversions.appengine.google.kubeform.com
spec:
  group: appengine.google.kubeform.com
  names:
    kind: FlexibleAppVersion
    listKind: FlexibleAppVersionList
    plural: flexibleappversions
    singular: flexibleappversion
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              apiConfig:
                description: Serving configuration for Google Cloud Endpoints.
                properties:
                  authFailAction:
                    description: 'Action to take when users access resources that
                      require authentication. Default value: "AUTH_FAIL_ACTION_REDIRECT"
                      Possible values: ["AUTH_FAIL_ACTION_REDIRECT", "AUTH_FAIL_ACTION_UNAUTHORIZED"]'
                    type: string
                  login:
                    description: 'Level of login required to access this resource.
                      Default value: "LOGIN_OPTIONAL" Possible values: ["LOGIN_OPTIONAL",
                      "LOGIN_ADMIN", "LOGIN_REQUIRED"]'
                    type: string
                  script:
                    description: Path to the script from the application root directory.
                    type: string
                  securityLevel:
                    description: 'Security (HTTPS) enforcement for this URL. Possible
                      values: ["SECURE_DEFAULT", "SECURE_NEVER", "SECURE_OPTIONAL",
                      "SECURE_ALWAYS"]'
                    type: string
                  url:
                    description: URL to serve the endpoint at.
                    type: string
                required:
                - script
                type: object
              automaticScaling:
                description: Automatic scaling is based on request rate, response
                  latencies, and other application metrics.
                properties:
                  coolDownPeriod:
                    description: 'The time period that the Autoscaler should wait
                      before it starts collecting information from a new instance.
                      This prevents the autoscaler from collecting information when
                      the instance is initializing, during which the collected usage
                      would not be reliable. Default: 120s'
                    type: string
                  cpuUtilization:
                    description: Target scaling by CPU usage.
                    properties:
                      aggregationWindowLength:
                        description: Period of time over which CPU utilization is
                          calculated.
                        type: string
                      targetUtilization:
                        description: Target CPU utilization ratio to maintain when
                          scaling. Must be between 0 and 1.
                        format: double
                        type: number
                    required:
                    - targetUtilization
                    type: object
                  diskUtilization:
                    description: Target scaling by disk usage.
                    properties:
                      targetReadBytesPerSecond:
                        description: Target bytes read per second.
                        format: int64
                        type: integer
                      targetReadOpsPerSecond:
                        description: Target ops read per seconds.
                        format: int64
                        type: integer
                      targetWriteBytesPerSecond:
                        description: Target bytes written per second.
                        format: int64
                        type: integer
                      targetWriteOpsPerSecond:
                        description: Target ops written per second.
                        format: int64
                        type: integer
                    type: object
                  maxConcurrentRequests:
                    description: "Number of concurrent requests an automatic scaling
                      instance can accept before the scheduler spawns a new instance.
                      \n Defaults to a runtime-specific value."
                    format: int64
                    type: integer
                  maxIdleInstances:
                    description: Maximum number of idle instances that should be maintained
                      for this version.
                    format: int64
                    type: integer
                  maxPendingLatency:
                    description: Maximum amount of time that a request should wait
                      in the pending queue before starting a new instance to handle
                      it.
                    type: string
                  maxTotalInstances:
                    description: 'Maximum number of instances that should be started
                      to handle requests for this version. Default: 20'
                    format: int64
                    type: integer
                  minIdleInstances:
                    description: Minimum number of idle instances that should be maintained
                      for this version. Only applicable for the default version of
                      a service.
                    format: int64
                    type: integer
                  minPendingLatency:
                    description: Minimum amount of time a request should wait in the
                      pending queue before starting a new instance to handle it.
                    type: string
                  minTotalInstances:
                    description: 'Minimum number of running instances that should
                      be maintained for this version. Default: 2'
                    format: int64
                    type: integer
                  networkUtilization:
                    description: Target scaling by network usage.
                    properties:
                      targetReceivedBytesPerSecond:
                        description: Target bytes received per second.
                        format: int64
                        type: integer
                      targetReceivedPacketsPerSecond:
                        description: Target packets received per second.
                        format: int64
                        type: integer
                      targetSentBytesPerSecond:
                        description: Target bytes sent per second.
                        format: int64
                        type: integer
                      targetSentPacketsPerSecond:
                        description: Target packets sent per second.
                        format: int64
                        type: integer
                    type: object
                  requestUtilization:
                    description: Target scaling by request utilization.
                    properties:
                      targetConcurrentRequests:
                        description: Target number of concurrent requests.
                        format: double
                        type: number
                      targetRequestCountPerSecond:
                        description: Target requests per second.
                        type: string
                    type: object
                required:
                - cpuUtilization
                type: object
              betaSettings:
                additionalProperties:
                  type: string
                description: Metadata settings that are supplied to this version to
                  enable beta runtime features.
                type: object
              defaultExpiration:
                description: Duration that static files should be cached by web proxies
                  and browsers. Only applicable if the corresponding StaticFilesHandler
                  does not specify its own expiration time.
                type: string
              deleteServiceOnDestroy:
                type: boolean
              deployment:
                description: Code and application artifacts that make up this version.
                properties:
                  cloudBuildOptions:
                    description: Options for the build operations performed as a part
                      of the version deployment. Only applicable when creating a version
                      using source code directly.
                    properties:
                      appYamlPath:
                        description: Path to the yaml file used in deployment, used
                          to determine runtime configuration details.
                        type: string
                      cloudBuildTimeout:
                        description: "The Cloud Build timeout used as part of any
                          dependent builds performed by version creation. Defaults
                          to 10 minutes. \n A duration in seconds with up to nine
                          fractional digits, terminated by 's'. Example: \"3.5s\"."
                        type: string
                    required:
                    - appYamlPath
                    type: object
                  container:
                    description: The Docker image for the container that runs the
                      version.
                    properties:
                      image:
                        description: 'URI to the hosted container image in Google
                          Container Registry. The URI must be fully qualified and
                          include a tag or digest. Examples: "gcr.io/my-project/image:tag"
                          or "gcr.io/my-project/image@digest"'
                        type: string
                    required:
                    - image
                    type: object
                  files:
                    description: Manifest of the files stored in Google Cloud Storage
                      that are included as part of this version. All files must be
                      readable using the credentials supplied with this call.
                    items:
                      properties:
                        name:
                          type: string
                        sha1Sum:
                          description: SHA1 checksum of the file
                          type: string
                        sourceURL:
                          description: Source URL
                          type: string
                      required:
                      - name
                      - sourceURL
                      type: object
                    type: array
                  zip:
                    description: Zip File
                    properties:
                      filesCount:
                        description: files count
                        format: int64
                        type: integer
                      sourceURL:
                        description: Source URL
                        type: string
                    required:
                    - sourceURL
                    type: object
                type: object
              endpointsAPIService:
                description: Code and application artifacts that make up this version.
                properties:
                  configID:
                    description: "Endpoints service configuration ID as specified
                      by the Service Management API. For example \"2016-09-19r1\".
                      \n By default, the rollout strategy for Endpoints is \"FIXED\".
                      This means that Endpoints starts up with a particular configuration
                      ID. When a new configuration is rolled out, Endpoints must be
                      given the new configuration ID. The configId field is used to
                      give the configuration ID and is required in this case. \n Endpoints
                      also has a rollout strategy called \"MANAGED\". When using this,
                      Endpoints fetches the latest configuration and does not need
                      the configuration ID. In this case, configId must be omitted."
                    type: string
                  disableTraceSampling:
                    description: Enable or disable trace sampling. By default, this
                      is set to false for enabled.
                    type: boolean
                  name:
                    description: Endpoints service name which is the name of the "service"
                      resource in the Service Management API. For example "myapi.endpoints.myproject.cloud.goog"
                    type: string
                  rolloutStrategy:
                    description: 'Endpoints rollout strategy. If FIXED, configId must
                      be specified. If MANAGED, configId must be omitted. Default
                      value: "FIXED" Possible values: ["FIXED", "MANAGED"]'
                    type: string
                required:
                - name
                type: object
              entrypoint:
                description: The entrypoint for the application.
                properties:
                  shell:
                    description: The format should be a shell command that can be
                      fed to bash -c.
                    type: string
                required:
                - shell
                type: object
              envVariables:
                additionalProperties:
                  type: string
                description: Environment variables available to the application.  As
                  these are not returned in the API request, Terraform will not detect
                  any changes made outside of the Terraform config.
                type: object
              handlers:
                description: An ordered list of URL-matching patterns that should
                  be applied to incoming requests. The first matching URL handles
                  the request and other request handlers are not attempted.
                items:
                  properties:
                    authFailAction:
                      description: 'Actions to take when the user is not logged in.
                        Possible values: ["AUTH_FAIL_ACTION_REDIRECT", "AUTH_FAIL_ACTION_UNAUTHORIZED"]'
                      type: string
                    login:
                      description: 'Methods to restrict access to a URL based on login
                        status. Possible values: ["LOGIN_OPTIONAL", "LOGIN_ADMIN",
                        "LOGIN_REQUIRED"]'
                      type: string
                    redirectHTTPResponseCode:
                      description: '30x code to use when performing redirects for
                        the secure field. Possible values: ["REDIRECT_HTTP_RESPONSE_CODE_301",
                        "REDIRECT_HTTP_RESPONSE_CODE_302", "REDIRECT_HTTP_RESPONSE_CODE_303",
                        "REDIRECT_HTTP_RESPONSE_CODE_307"]'
                      type: string
                    script:
                      description: Executes a script to handle the requests that match
                        this URL pattern. Only the auto value is supported for Node.js
                        in the App Engine standard environment, for example "script:"
                        "auto".
                      properties:
                        scriptPath:
                          description: Path to the script from the application root
                            directory.
                          type: string
                      required:
                      - scriptPath
                      type: object
                    securityLevel:
                      description: 'Security (HTTPS) enforcement for this URL. Possible
                        values: ["SECURE_DEFAULT", "SECURE_NEVER", "SECURE_OPTIONAL",
                        "SECURE_ALWAYS"]'
                      type: string
                    staticFiles:
                      description: Files served directly to the user for a given URL,
                        such as images, CSS stylesheets, or JavaScript source files.
                        Static file handlers describe which files in the application
                        directory are static files, and which URLs serve them.
                      properties:
                        applicationReadable:
                          description: Whether files should also be uploaded as code
                            data. By default, files declared in static file handlers
                            are uploaded as static data and are only served to end
                            users; they cannot be read by the application. If enabled,
                            uploads are charged against both your code and static
                            data storage resource quotas.
                          type: boolean
                        expiration:
                          description: Time a static file served by this handler should
                            be cached by web proxies and browsers. A duration in seconds
                            with up to nine fractional digits, terminated by 's'.
                            Example "3.5s". Default is '0s'
                          type: string
                        httpHeaders:
                          additionalProperties:
                            type: string
                          description: HTTP headers to use for all responses from
                            these URLs. An object containing a list of "key:value"
                            value pairs.".
                          type: object
                        mimeType:
                          description: MIME type used to serve all files served by
                            this handler. Defaults to file-specific MIME types, which
                            are derived from each file's filename extension.
                          type: string
                        path:
                          description: Path to the static files matched by the URL
                            pattern, from the application root directory. The path
                            can refer to text matched in groupings in the URL pattern.
                          type: string
                        requireMatchingFile:
                          description: Whether this handler should match the request
                            if the file referenced by the handler does not exist.
                          type: boolean
                        uploadPathRegex:
                          description: Regular expression that matches the file paths
                            for all files that should be referenced by this handler.
                          type: string
                      type: object
                    urlRegex:
                      description: URL prefix. Uses regular expression syntax, which
                        means regexp special characters must be escaped, but should
                        not contain groupings. All URLs that begin with this prefix
                        are handled by this handler, using the portion of the URL
                        after the prefix as part of the file path.
                      type: string
                  type: object
                type: array
              id:
                type: string
              inboundServices:
                description: 'A list of the types of messages that this application
                  is able to receive. Possible values: ["INBOUND_SERVICE_MAIL", "INBOUND_SERVICE_MAIL_BOUNCE",
                  "INBOUND_SERVICE_XMPP_ERROR", "INBOUND_SERVICE_XMPP_MESSAGE", "INBOUND_SERVICE_XMPP_SUBSCRIBE",
                  "INBOUND_SERVICE_XMPP_PRESENCE", "INBOUND_SERVICE_CHANNEL_PRESENCE",
                  "INBOUND_SERVICE_WARMUP"]'
                items:
                  type: string
                type: array
              instanceClass:
                description: 'Instance class that is used to run this version. Valid
                  values are AutomaticScaling: F1, F2, F4, F4_1G ManualScaling: B1,
                  B2, B4, B8, B4_1G Defaults to F1 for AutomaticScaling and B1 for
                  ManualScaling.'
                type: string
              kubeformOutput:
                properties:
                  apiConfig:
                    description: Serving configuration for Google Cloud Endpoints.
                    properties:
                      authFailAction:
                        description: 'Action to take when users access resources that
                          require authentication. Default value: "AUTH_FAIL_ACTION_REDIRECT"
                          Possible values: ["AUTH_FAIL_ACTION_REDIRECT", "AUTH_FAIL_ACTION_UNAUTHORIZED"]'
                        type: string
                      login:
                        description: 'Level of login required to access this resource.
                          Default value: "LOGIN_OPTIONAL" Possible values: ["LOGIN_OPTIONAL",
                          "LOGIN_ADMIN", "LOGIN_REQUIRED"]'
                        type: string
                      script:
                        description: Path to the script from the application root
                          directory.
                        type: string
                      securityLevel:
                        description: 'Security (HTTPS) enforcement for this URL. Possible
                          values: ["SECURE_DEFAULT", "SECURE_NEVER", "SECURE_OPTIONAL",
                          "SECURE_ALWAYS"]'
                        type: string
                      url:
                        description: URL to serve the endpoint at.
                        type: string
                    required:
                    - script
                    type: object
                  automaticScaling:
                    description: Automatic scaling is based on request rate, response
                      latencies, and other application metrics.
                    properties:
                      coolDownPeriod:
                        description: 'The time period that the Autoscaler should wait
                          before it starts collecting information from a new instance.
                          This prevents the autoscaler from collecting information
                          when the instance is initializing, during which the collected
                          usage would not be reliable. Default: 120s'
                        type: string
                      cpuUtilization:
                        description: Target scaling by CPU usage.
                        properties:
                          aggregationWindowLength:
                            description: Period of time over which CPU utilization
                              is calculated.
                            type: string
                          targetUtilization:
                            description: Target CPU utilization ratio to maintain
                              when scaling. Must be between 0 and 1.
                            format: double
                            type: number
                        required:
                        - targetUtilization
                        type: object
                      diskUtilization:
                        description: Target scaling by disk usage.
                        properties:
                          targetReadBytesPerSecond:
                            description: Target bytes read per second.
                            format: int64
                            type: integer
                          targetReadOpsPerSecond:
                            description: Target ops read per seconds.
                            format: int64
                            type: integer
                          targetWriteBytesPerSecond:
                            description: Target bytes written per second.
                            format: int64
                            type: integer
                          targetWriteOpsPerSecond:
                            description: Target ops written per second.
                            format: int64
                            type: integer
                        type: object
                      maxConcurrentRequests:
                        description: "Number of concurrent requests an automatic scaling
                          instance can accept before the scheduler spawns a new instance.
                          \n Defaults to a runtime-specific value."
                        format: int64
                        type: integer
                      maxIdleInstances:
                        description: Maximum number of idle instances that should
                          be maintained for this version.
                        format: int64
                        type: integer
                      maxPendingLatency:
                        description: Maximum amount of time that a request should
                          wait in the pending queue before starting a new instance
                          to handle it.
                        type: string
                      maxTotalInstances:
                        description: 'Maximum number of instances that should be started
                          to handle requests for this version. Default: 20'
                        format: int64
                        type: integer
                      minIdleInstances:
                        description: Minimum number of idle instances that should
                          be maintained for this version. Only applicable for the
                          default version of a service.
                        format: int64
                        type: integer
                      minPendingLatency:
                        description: Minimum amount of time a request should wait
                          in the pending queue before starting a new instance to handle
                          it.
                        type: string
                      minTotalInstances:
                        description: 'Minimum number of running instances that should
                          be maintained for this version. Default: 2'
                        format: int64
                        type: integer
                      networkUtilization:
                        description: Target scaling by network usage.
                        properties:
                          targetReceivedBytesPerSecond:
                            description: Target bytes received per second.
                            format: int64
                            type: integer
                          targetReceivedPacketsPerSecond:
                            description: Target packets received per second.
                            format: int64
                            type: integer
                          targetSentBytesPerSecond:
                            description: Target bytes sent per second.
                            format: int64
                            type: integer
                          targetSentPacketsPerSecond:
                            description: Target packets sent per second.
                            format: int64
                            type: integer
                        type: object
                      requestUtilization:
                        description: Target scaling by request utilization.
                        properties:
                          targetConcurrentRequests:
                            description: Target number of concurrent requests.
                            format: double
                            type: number
                          targetRequestCountPerSecond:
                            description: Target requests per second.
                            type: string
                        type: object
                    required:
                    - cpuUtilization
                    type: object
                  betaSettings:
                    additionalProperties:
                      type: string
                    description: Metadata settings that are supplied to this version
                      to enable beta runtime features.
                    type: object
                  defaultExpiration:
                    description: Duration that static files should be cached by web
                      proxies and browsers. Only applicable if the corresponding StaticFilesHandler
                      does not specify its own expiration time.
                    type: string
                  deleteServiceOnDestroy:
                    type: boolean
                  deployment:
                    description: Code and application artifacts that make up this
                      version.
                    properties:
                      cloudBuildOptions:
                        description: Options for the build operations performed as
                          a part of the version deployment. Only applicable when creating
                          a version using source code directly.
                        properties:
                          appYamlPath:
                            description: Path to the yaml file used in deployment,
                              used to determine runtime configuration details.
                            type: string
                          cloudBuildTimeout:
                            description: "The Cloud Build timeout used as part of
                              any dependent builds performed by version creation.
                              Defaults to 10 minutes. \n A duration in seconds with
                              up to nine fractional digits, terminated by 's'. Example:
                              \"3.5s\"."
                            type: string
                        required:
                        - appYamlPath
                        type: object
                      container:
                        description: The Docker image for the container that runs
                          the version.
                        properties:
                          image:
                            description: 'URI to the hosted container image in Google
                              Container Registry. The URI must be fully qualified
                              and include a tag or digest. Examples: "gcr.io/my-project/image:tag"
                              or "gcr.io/my-project/image@digest"'
                            type: string
                        required:
                        - image
                        type: object
                      files:
                        description: Manifest of the files stored in Google Cloud
                          Storage that are included as part of this version. All files
                          must be readable using the credentials supplied with this
                          call.
                        items:
                          properties:
                            name:
                              type: string
                            sha1Sum:
                              description: SHA1 checksum of the file
                              type: string
                            sourceURL:
                              description: Source URL
                              type: string
                          required:
                          - name
                          - sourceURL
                          type: object
                        type: array
                      zip:
                        description: Zip File
                        properties:
                          filesCount:
                            description: files count
                            format: int64
                            type: integer
                          sourceURL:
                            description: Source URL
                            type: string
                        required:
                        - sourceURL
                        type: object
                    type: object
                  endpointsAPIService:
                    description: Code and application artifacts that make up this
                      version.
                    properties:
                      configID:
                        description: "Endpoints service configuration ID as specified
                          by the Service Management API. For example \"2016-09-19r1\".
                          \n By default, the rollout strategy for Endpoints is \"FIXED\".
                          This means that Endpoints starts up with a particular configuration
                          ID. When a new configuration is rolled out, Endpoints must
                          be given the new configuration ID. The configId field is
                          used to give the configuration ID and is required in this
                          case. \n Endpoints also has a rollout strategy called \"MANAGED\".
                          When using this, Endpoints fetches the latest configuration
                          and does not need the configuration ID. In this case, configId
                          must be omitted."
                        type: string
                      disableTraceSampling:
                        description: Enable or disable trace sampling. By default,
                          this is set to false for enabled.
                        type: boolean
                      name:
                        description: Endpoints service name which is the name of the
                          "service" resource in the Service Management API. For example
                          "myapi.endpoints.myproject.cloud.goog"
                        type: string
                      rolloutStrategy:
                        description: 'Endpoints rollout strategy. If FIXED, configId
                          must be specified. If MANAGED, configId must be omitted.
                          Default value: "FIXED" Possible values: ["FIXED", "MANAGED"]'
                        type: string
                    required:
                    - name
                    type: object
                  entrypoint:
                    description: The entrypoint for the application.
                    properties:
                      shell:
                        description: The format should be a shell command that can
                          be fed to bash -c.
                        type: string
                    required:
                    - shell
                    type: object
                  envVariables:
                    additionalProperties:
                      type: string
                    description: Environment variables available to the application.  As
                      these are not returned in the API request, Terraform will not
                      detect any changes made outside of the Terraform config.
                    type: object
                  handlers:
                    description: An ordered list of URL-matching patterns that should
                      be applied to incoming requests. The first matching URL handles
                      the request and other request handlers are not attempted.
                    items:
                      properties:
                        authFailAction:
                          description: 'Actions to take when the user is not logged
                            in. Possible values: ["AUTH_FAIL_ACTION_REDIRECT", "AUTH_FAIL_ACTION_UNAUTHORIZED"]'
                          type: string
                        login:
                          description: 'Methods to restrict access to a URL based
                            on login status. Possible values: ["LOGIN_OPTIONAL", "LOGIN_ADMIN",
                            "LOGIN_REQUIRED"]'
                          type: string
                        redirectHTTPResponseCode:
                          description: '30x code to use when performing redirects
                            for the secure field. Possible values: ["REDIRECT_HTTP_RESPONSE_CODE_301",
                            "REDIRECT_HTTP_RESPONSE_CODE_302", "REDIRECT_HTTP_RESPONSE_CODE_303",
                            "REDIRECT_HTTP_RESPONSE_CODE_307"]'
                          type: string
                        script:
                          description: Executes a script to handle the requests that
                            match this URL pattern. Only the auto value is supported
                            for Node.js in the App Engine standard environment, for
                            example "script:" "auto".
                          properties:
                            scriptPath:
                              description: Path to the script from the application
                                root directory.
                              type: string
                          required:
                          - scriptPath
                          type: object
                        securityLevel:
                          description: 'Security (HTTPS) enforcement for this URL.
                            Possible values: ["SECURE_DEFAULT", "SECURE_NEVER", "SECURE_OPTIONAL",
                            "SECURE_ALWAYS"]'
                          type: string
                        staticFiles:
                          description: Files served directly to the user for a given
                            URL, such as images, CSS stylesheets, or JavaScript source
                            files. Static file handlers describe which files in the
                            application directory are static files, and which URLs
                            serve them.
                          properties:
                            applicationReadable:
                              description: Whether files should also be uploaded as
                                code data. By default, files declared in static file
                                handlers are uploaded as static data and are only
                                served to end users; they cannot be read by the application.
                                If enabled, uploads are charged against both your
                                code and static data storage resource quotas.
                              type: boolean
                            expiration:
                              description: Time a static file served by this handler
                                should be cached by web proxies and browsers. A duration
                                in seconds with up to nine fractional digits, terminated
                                by 's'. Example "3.5s". Default is '0s'
                              type: string
                            httpHeaders:
                              additionalProperties:
                                type: string
                              description: HTTP headers to use for all responses from
                                these URLs. An object containing a list of "key:value"
                                value pairs.".
                              type: object
                            mimeType:
                              description: MIME type used to serve all files served
                                by this handler. Defaults to file-specific MIME types,
                                which are derived from each file's filename extension.
                              type: string
                            path:
                              description: Path to the static files matched by the
                                URL pattern, from the application root directory.
                                The path can refer to text matched in groupings in
                                the URL pattern.
                              type: string
                            requireMatchingFile:
                              description: Whether this handler should match the request
                                if the file referenced by the handler does not exist.
                              type: boolean
                            uploadPathRegex:
                              description: Regular expression that matches the file
                                paths for all files that should be referenced by this
                                handler.
                              type: string
                          type: object
                        urlRegex:
                          description: URL prefix. Uses regular expression syntax,
                            which means regexp special characters must be escaped,
                            but should not contain groupings. All URLs that begin
                            with this prefix are handled by this handler, using the
                            portion of the URL after the prefix as part of the file
                            path.
                          type: string
                      type: object
                    type: array
                  id:
                    type: string
                  inboundServices:
                    description: 'A list of the types of messages that this application
                      is able to receive. Possible values: ["INBOUND_SERVICE_MAIL",
                      "INBOUND_SERVICE_MAIL_BOUNCE", "INBOUND_SERVICE_XMPP_ERROR",
                      "INBOUND_SERVICE_XMPP_MESSAGE", "INBOUND_SERVICE_XMPP_SUBSCRIBE",
                      "INBOUND_SERVICE_XMPP_PRESENCE", "INBOUND_SERVICE_CHANNEL_PRESENCE",
                      "INBOUND_SERVICE_WARMUP"]'
                    items:
                      type: string
                    type: array
                  instanceClass:
                    description: 'Instance class that is used to run this version.
                      Valid values are AutomaticScaling: F1, F2, F4, F4_1G ManualScaling:
                      B1, B2, B4, B8, B4_1G Defaults to F1 for AutomaticScaling and
                      B1 for ManualScaling.'
                    type: string
                  livenessCheck:
                    description: Health checking configuration for VM instances. Unhealthy
                      instances are killed and replaced with new instances.
                    properties:
                      checkInterval:
                        description: Interval between health checks.
                        type: string
                      failureThreshold:
                        description: 'Number of consecutive failed checks required
                          before considering the VM unhealthy. Default: 4.'
                        format: double
                        type: number
                      host:
                        description: 'Host header to send when performing a HTTP Readiness
                          check. Example: "myapp.appspot.com"'
                        type: string
                      initialDelay:
                        description: 'The initial delay before starting to execute
                          the checks. Default: "300s"'
                        type: string
                      path:
                        description: The request path.
                        type: string
                      successThreshold:
                        description: 'Number of consecutive successful checks required
                          before considering the VM healthy. Default: 2.'
                        format: double
                        type: number
                      timeout:
                        description: 'Time before the check is considered failed.
                          Default: "4s"'
                        type: string
                    required:
                    - path
                    type: object
                  manualScaling:
                    description: A service with manual scaling runs continuously,
                      allowing you to perform complex initialization and rely on the
                      state of its memory over time.
                    properties:
                      instances:
                        description: "Number of instances to assign to the service
                          at the start. \n **Note:** When managing the number of instances
                          at runtime through the App Engine Admin API or the (now
                          deprecated) Python 2 Modules API set_num_instances() you
                          must use 'lifecycle.ignore_changes = [\"manual_scaling\"[0].instances]'
                          to prevent drift detection."
                        format: int64
                        type: integer
                    required:
                    - instances
                    type: object
                  name:
                    description: Full path to the Version resource in the API. Example,
                      "v1".
                    type: string
                  network:
                    description: Extra network settings
                    properties:
                      forwardedPorts:
                        description: List of ports, or port pairs, to forward from
                          the virtual machine to the application container.
                        items:
                          type: string
                        type: array
                      instanceTag:
                        description: Tag to apply to the instance during creation.
                        type: string
                      name:
                        description: Google Compute Engine network where the virtual
                          machines are created. Specify the short name, not the resource
                          path.
                        type: string
                      sessionAffinity:
                        description: Enable session affinity.
                        type: boolean
                      subnetwork:
                        description: "Google Cloud Platform sub-network where the
                          virtual machines are created. Specify the short name, not
                          the resource path. \n If the network that the instance is
                          being created in is a Legacy network, then the IP address
                          is allocated from the IPv4Range. If the network that the
                          instance is being created in is an auto Subnet Mode Network,
                          then only network name should be specified (not the subnetworkName)
                          and the IP address is created from the IPCidrRange of the
                          subnetwork that exists in that zone for that network. If
                          the network that the instance is being created in is a custom
                          Subnet Mode Network, then the subnetworkName must be specified
                          and the IP address is created from the IPCidrRange of the
                          subnetwork. If specified, the subnetwork must exist in the
                          same region as the App Engine flexible environment application."
                        type: string
                    required:
                    - name
                    type: object
                  nobuildFilesRegex:
                    description: Files that match this pattern will not be built into
                      this version. Only applicable for Go runtimes.
                    type: string
                  noopOnDestroy:
                    type: boolean
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  readinessCheck:
                    description: Configures readiness health checking for instances.
                      Unhealthy instances are not put into the backend traffic rotation.
                    properties:
                      appStartTimeout:
                        description: 'A maximum time limit on application initialization,
                          measured from moment the application successfully replies
                          to a healthcheck until it is ready to serve traffic. Default:
                          "300s"'
                        type: string
                      checkInterval:
                        description: 'Interval between health checks.  Default: "5s".'
                        type: string
                      failureThreshold:
                        description: 'Number of consecutive failed checks required
                          before removing traffic. Default: 2.'
                        format: double
                        type: number
                      host:
                        description: 'Host header to send when performing a HTTP Readiness
                          check. Example: "myapp.appspot.com"'
                        type: string
                      path:
                        description: The request path.
                        type: string
                      successThreshold:
                        description: 'Number of consecutive successful checks required
                          before receiving traffic. Default: 2.'
                        format: double
                        type: number
                      timeout:
                        description: 'Time before the check is considered failed.
                          Default: "4s"'
                        type: string
                    required:
                    - path
                    type: object
                  resources:
                    description: Machine resources for a version.
                    properties:
                      cpu:
                        description: Number of CPU cores needed.
                        format: int64
                        type: integer
                      diskGb:
                        description: Disk size (GB) needed.
                        format: int64
                        type: integer
                      memoryGb:
                        description: Memory (GB) needed.
                        format: double
                        type: number
                      volumes:
                        description: List of ports, or port pairs, to forward from
                          the virtual machine to the application container.
                        items:
                          properties:
                            name:
                              description: Unique name for the volume.
                              type: string
                            sizeGb:
                              description: Volume size in gigabytes.
                              format: int64
                              type: integer
                            volumeType:
                              description: Underlying volume type, e.g. 'tmpfs'.
                              type: string
                          required:
                          - name
                          - sizeGb
                          - volumeType
                          type: object
                        type: array
                    type: object
                  runtime:
                    description: Desired runtime. Example python27.
                    type: string
                  runtimeAPIVersion:
                    description: The version of the API in the given runtime environment.
                      Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
                    type: string
                  runtimeChannel:
                    description: The channel of the runtime to use. Only available
                      for some runtimes.
                    type: string
                  runtimeMainExecutablePath:
                    description: The path or name of the app's main executable.
                    type: string
                  service:
                    description: AppEngine service resource
                    type: string
                  servingStatus:
                    description: 'Current serving status of this version. Only the
                      versions with a SERVING status create instances and can be billed.
                      Default value: "SERVING" Possible values: ["SERVING", "STOPPED"]'
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  versionID:
                    description: Relative name of the version within the service.
                      For example, 'v1'. Version names can contain only lowercase
                      letters, numbers, or hyphens. Reserved names,"default", "latest",
                      and any name with the prefix "ah-".
                    type: string
                  vpcAccessConnector:
                    description: Enables VPC connectivity for standard apps.
                    properties:
                      name:
                        description: Full Serverless VPC Access Connector name e.g.
                          /projects/my-project/locations/us-central1/connectors/c1.
                        type: string
                    required:
                    - name
                    type: object
                required:
                - livenessCheck
                - providerRef
                - readinessCheck
                - runtime
                - service
                type: object
              livenessCheck:
                description: Health checking configuration for VM instances. Unhealthy
                  instances are killed and replaced with new instances.
                properties:
                  checkInterval:
                    description: Interval between health checks.
                    type: string
                  failureThreshold:
                    description: 'Number of consecutive failed checks required before
                      considering the VM unhealthy. Default: 4.'
                    format: double
                    type: number
                  host:
                    description: 'Host header to send when performing a HTTP Readiness
                      check. Example: "myapp.appspot.com"'
                    type: string
                  initialDelay:
                    description: 'The initial delay before starting to execute the
                      checks. Default: "300s"'
                    type: string
                  path:
                    description: The request path.
                    type: string
                  successThreshold:
                    description: 'Number of consecutive successful checks required
                      before considering the VM healthy. Default: 2.'
                    format: double
                    type: number
                  timeout:
                    description: 'Time before the check is considered failed. Default:
                      "4s"'
                    type: string
                required:
                - path
                type: object
              manualScaling:
                description: A service with manual scaling runs continuously, allowing
                  you to perform complex initialization and rely on the state of its
                  memory over time.
                properties:
                  instances:
                    description: "Number of instances to assign to the service at
                      the start. \n **Note:** When managing the number of instances
                      at runtime through the App Engine Admin API or the (now deprecated)
                      Python 2 Modules API set_num_instances() you must use 'lifecycle.ignore_changes
                      = [\"manual_scaling\"[0].instances]' to prevent drift detection."
                    format: int64
                    type: integer
                required:
                - instances
                type: object
              name:
                description: Full path to the Version resource in the API. Example,
                  "v1".
                type: string
              network:
                description: Extra network settings
                properties:
                  forwardedPorts:
                    description: List of ports, or port pairs, to forward from the
                      virtual machine to the application container.
                    items:
                      type: string
                    type: array
                  instanceTag:
                    description: Tag to apply to the instance during creation.
                    type: string
                  name:
                    description: Google Compute Engine network where the virtual machines
                      are created. Specify the short name, not the resource path.
                    type: string
                  sessionAffinity:
                    description: Enable session affinity.
                    type: boolean
                  subnetwork:
                    description: "Google Cloud Platform sub-network where the virtual
                      machines are created. Specify the short name, not the resource
                      path. \n If the network that the instance is being created in
                      is a Legacy network, then the IP address is allocated from the
                      IPv4Range. If the network that the instance is being created
                      in is an auto Subnet Mode Network, then only network name should
                      be specified (not the subnetworkName) and the IP address is
                      created from the IPCidrRange of the subnetwork that exists in
                      that zone for that network. If the network that the instance
                      is being created in is a custom Subnet Mode Network, then the
                      subnetworkName must be specified and the IP address is created
                      from the IPCidrRange of the subnetwork. If specified, the subnetwork
                      must exist in the same region as the App Engine flexible environment
                      application."
                    type: string
                required:
                - name
                type: object
              nobuildFilesRegex:
                description: Files that match this pattern will not be built into
                  this version. Only applicable for Go runtimes.
                type: string
              noopOnDestroy:
                type: boolean
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              readinessCheck:
                description: Configures readiness health checking for instances. Unhealthy
                  instances are not put into the backend traffic rotation.
                properties:
                  appStartTimeout:
                    description: 'A maximum time limit on application initialization,
                      measured from moment the application successfully replies to
                      a healthcheck until it is ready to serve traffic. Default: "300s"'
                    type: string
                  checkInterval:
                    description: 'Interval between health checks.  Default: "5s".'
                    type: string
                  failureThreshold:
                    description: 'Number of consecutive failed checks required before
                      removing traffic. Default: 2.'
                    format: double
                    type: number
                  host:
                    description: 'Host header to send when performing a HTTP Readiness
                      check. Example: "myapp.appspot.com"'
                    type: string
                  path:
                    description: The request path.
                    type: string
                  successThreshold:
                    description: 'Number of consecutive successful checks required
                      before receiving traffic. Default: 2.'
                    format: double
                    type: number
                  timeout:
                    description: 'Time before the check is considered failed. Default:
                      "4s"'
                    type: string
                required:
                - path
                type: object
              resources:
                description: Machine resources for a version.
                properties:
                  cpu:
                    description: Number of CPU cores needed.
                    format: int64
                    type: integer
                  diskGb:
                    description: Disk size (GB) needed.
                    format: int64
                    type: integer
                  memoryGb:
                    description: Memory (GB) needed.
                    format: double
                    type: number
                  volumes:
                    description: List of ports, or port pairs, to forward from the
                      virtual machine to the application container.
                    items:
                      properties:
                        name:
                          description: Unique name for the volume.
                          type: string
                        sizeGb:
                          description: Volume size in gigabytes.
                          format: int64
                          type: integer
                        volumeType:
                          description: Underlying volume type, e.g. 'tmpfs'.
                          type: string
                      required:
                      - name
                      - sizeGb
                      - volumeType
                      type: object
                    type: array
                type: object
              runtime:
                description: Desired runtime. Example python27.
                type: string
              runtimeAPIVersion:
                description: The version of the API in the given runtime environment.
                  Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
                type: string
              runtimeChannel:
                description: The channel of the runtime to use. Only available for
                  some runtimes.
                type: string
              runtimeMainExecutablePath:
                description: The path or name of the app's main executable.
                type: string
              service:
                description: AppEngine service resource
                type: string
              servingStatus:
                description: 'Current serving status of this version. Only the versions
                  with a SERVING status create instances and can be billed. Default
                  value: "SERVING" Possible values: ["SERVING", "STOPPED"]'
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              versionID:
                description: Relative name of the version within the service. For
                  example, 'v1'. Version names can contain only lowercase letters,
                  numbers, or hyphens. Reserved names,"default", "latest", and any
                  name with the prefix "ah-".
                type: string
              vpcAccessConnector:
                description: Enables VPC connectivity for standard apps.
                properties:
                  name:
                    description: Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
                    type: string
                required:
                - name
                type: object
            required:
            - livenessCheck
            - providerRef
            - readinessCheck
            - runtime
            - service
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: firewallrules.appengine.google.kubeform.com
spec:
  group: appengine.google.kubeform.com
  names:
    kind: FirewallRule
    listKind: FirewallRuleList
    plural: firewallrules
    singular: firewallrule
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              action:
                description: 'The action to take if this rule matches. Possible values:
                  ["UNSPECIFIED_ACTION", "ALLOW", "DENY"]'
                type: string
              description:
                description: An optional string description of this rule.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  action:
                    description: 'The action to take if this rule matches. Possible
                      values: ["UNSPECIFIED_ACTION", "ALLOW", "DENY"]'
                    type: string
                  description:
                    description: An optional string description of this rule.
                    type: string
                  id:
                    type: string
                  priority:
                    description: "A positive integer that defines the order of rule
                      evaluation. Rules with the lowest priority are evaluated first.
                      \n A default rule at priority Int32.MaxValue matches all IPv4
                      and IPv6 traffic when no previous rule matches. Only the action
                      of this rule can be modified by the user."
                    format: int64
                    type: integer
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  sourceRange:
                    description: IP address or range, defined using CIDR notation,
                      of requests that this rule applies to.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - action
                - providerRef
                - sourceRange
                type: object
              priority:
                description: "A positive integer that defines the order of rule evaluation.
                  Rules with the lowest priority are evaluated first. \n A default
                  rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic
                  when no previous rule matches. Only the action of this rule can
                  be modified by the user."
                format: int64
                type: integer
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              sourceRange:
                description: IP address or range, defined using CIDR notation, of
                  requests that this rule applies to.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - action
            - providerRef
            - sourceRange
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: applications.appengine.google.kubeform.com
spec:
  group: appengine.google.kubeform.com
  names:
    kind: Application
    listKind: ApplicationList
    plural: applications
    singular: application
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              appID:
                description: Identifier of the app.
                type: string
              authDomain:
                description: The domain to authenticate users with when using App
                  Engine's User API.
                type: string
              codeBucket:
                description: The GCS bucket code is being stored in for this app.
                type: string
              databaseType:
                type: string
              defaultBucket:
                description: The GCS bucket content is being stored in for this app.
                type: string
              defaultHostname:
                description: The default hostname for this app.
                type: string
              featureSettings:
                description: 'A block of optional settings to configure specific App
                  Engine features:'
                properties:
                  splitHealthChecks:
                    type: boolean
                required:
                - splitHealthChecks
                type: object
              gcrDomain:
                description: The GCR domain used for storing managed Docker images
                  for this app.
                type: string
              iap:
                description: Settings for enabling Cloud Identity Aware Proxy
                properties:
                  enabled:
                    description: Adapted for use with the app
                    type: boolean
                  oauth2ClientID:
                    description: OAuth2 client ID to use for the authentication flow.
                    type: string
                required:
                - oauth2ClientID
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  appID:
                    description: Identifier of the app.
                    type: string
                  authDomain:
                    description: The domain to authenticate users with when using
                      App Engine's User API.
                    type: string
                  codeBucket:
                    description: The GCS bucket code is being stored in for this app.
                    type: string
                  databaseType:
                    type: string
                  defaultBucket:
                    description: The GCS bucket content is being stored in for this
                      app.
                    type: string
                  defaultHostname:
                    description: The default hostname for this app.
                    type: string
                  featureSettings:
                    description: 'A block of optional settings to configure specific
                      App Engine features:'
                    properties:
                      splitHealthChecks:
                        type: boolean
                    required:
                    - splitHealthChecks
                    type: object
                  gcrDomain:
                    description: The GCR domain used for storing managed Docker images
                      for this app.
                    type: string
                  iap:
                    description: Settings for enabling Cloud Identity Aware Proxy
                    properties:
                      enabled:
                        description: Adapted for use with the app
                        type: boolean
                      oauth2ClientID:
                        description: OAuth2 client ID to use for the authentication
                          flow.
                        type: string
                    required:
                    - oauth2ClientID
                    type: object
                  id:
                    type: string
                  locationID:
                    description: The location to serve the app from.
                    type: string
                  name:
                    description: Unique name of the app.
                    type: string
                  project:
                    description: The project ID to create the application under.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  servingStatus:
                    description: The serving status of the app.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  urlDispatchRule:
                    description: A list of dispatch rule blocks. Each block has a
                      domain, path, and service field.
                    items:
                      properties:
                        domain:
                          type: string
                        path:
                          type: string
                        service:
                          type: string
                      type: object
                    type: array
                required:
                - locationID
                - providerRef
                type: object
              locationID:
                description: The location to serve the app from.
                type: string
              name:
                description: Unique name of the app.
                type: string
              project:
                description: The project ID to create the application under.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              servingStatus:
                description: The serving status of the app.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              urlDispatchRule:
                description: A list of dispatch rule blocks. Each block has a domain,
                  path, and service field.
                items:
                  properties:
                    domain:
                      type: string
                    path:
                      type: string
                    service:
                      type: string
                  type: object
                type: array
            required:
            - locationID
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: domainmappings.appengine.google.kubeform.com
spec:
  group: appengine.google.kubeform.com
  names:
    kind: DomainMapping
    listKind: DomainMappingList
    plural: domainmappings
    singular: domainmapping
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              domainName:
                description: 'Relative name of the domain serving the application.
                  Example: example.com.'
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  domainName:
                    description: 'Relative name of the domain serving the application.
                      Example: example.com.'
                    type: string
                  id:
                    type: string
                  name:
                    description: 'Full path to the DomainMapping resource in the API.
                      Example: apps/myapp/domainMapping/example.com.'
                    type: string
                  overrideStrategy:
                    description: 'Whether the domain creation should override any
                      existing mappings for this domain. By default, overrides are
                      rejected. Default value: "STRICT" Possible values: ["STRICT",
                      "OVERRIDE"]'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  resourceRecords:
                    description: The resource records required to configure this domain
                      mapping. These records must be added to the domain's DNS configuration
                      in order to serve the application via this domain mapping.
                    items:
                      properties:
                        name:
                          description: 'Relative name of the object affected by this
                            record. Only applicable for CNAME records. Example: ''www''.'
                          type: string
                        rrdata:
                          description: Data for this record. Values vary by record
                            type, as defined in RFC 1035 (section 5) and RFC 1034
                            (section 3.6.1).
                          type: string
                        type:
                          description: 'Resource record type. Example: ''AAAA''. Possible
                            values: ["A", "AAAA", "CNAME"]'
                          type: string
                      type: object
                    type: array
                  sslSettings:
                    description: SSL configuration for this domain. If unconfigured,
                      this domain will not serve with SSL.
                    properties:
                      certificateID:
                        description: 'ID of the AuthorizedCertificate resource configuring
                          SSL for the application. Clearing this field will remove
                          SSL support. By default, a managed certificate is automatically
                          created for every domain mapping. To omit SSL support or
                          to configure SSL manually, specify ''SslManagementType.MANUAL''
                          on a ''CREATE'' or ''UPDATE'' request. You must be authorized
                          to administer the ''AuthorizedCertificate'' resource to
                          manually map it to a DomainMapping resource. Example: 12345.'
                        type: string
                      pendingManagedCertificateID:
                        description: ID of the managed 'AuthorizedCertificate' resource
                          currently being provisioned, if applicable. Until the new
                          managed certificate has been successfully provisioned, the
                          previous SSL state will be preserved. Once the provisioning
                          process completes, the 'certificateId' field will reflect
                          the new managed certificate and this field will be left
                          empty. To remove SSL support while there is still a pending
                          managed certificate, clear the 'certificateId' field with
                          an update request.
                        type: string
                      sslManagementType:
                        description: 'SSL management type for this domain. If ''AUTOMATIC'',
                          a managed certificate is automatically provisioned. If ''MANUAL'',
                          ''certificateId'' must be manually specified in order to
                          configure SSL for this domain. Possible values: ["AUTOMATIC",
                          "MANUAL"]'
                        type: string
                    required:
                    - sslManagementType
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - domainName
                - providerRef
                type: object
              name:
                description: 'Full path to the DomainMapping resource in the API.
                  Example: apps/myapp/domainMapping/example.com.'
                type: string
              overrideStrategy:
                description: 'Whether the domain creation should override any existing
                  mappings for this domain. By default, overrides are rejected. Default
                  value: "STRICT" Possible values: ["STRICT", "OVERRIDE"]'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resourceRecords:
                description: The resource records required to configure this domain
                  mapping. These records must be added to the domain's DNS configuration
                  in order to serve the application via this domain mapping.
                items:
                  properties:
                    name:
                      description: 'Relative name of the object affected by this record.
                        Only applicable for CNAME records. Example: ''www''.'
                      type: string
                    rrdata:
                      description: Data for this record. Values vary by record type,
                        as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1).
                      type: string
                    type:
                      description: 'Resource record type. Example: ''AAAA''. Possible
                        values: ["A", "AAAA", "CNAME"]'
                      type: string
                  type: object
                type: array
              sslSettings:
                description: SSL configuration for this domain. If unconfigured, this
                  domain will not serve with SSL.
                properties:
                  certificateID:
                    description: 'ID of the AuthorizedCertificate resource configuring
                      SSL for the application. Clearing this field will remove SSL
                      support. By default, a managed certificate is automatically
                      created for every domain mapping. To omit SSL support or to
                      configure SSL manually, specify ''SslManagementType.MANUAL''
                      on a ''CREATE'' or ''UPDATE'' request. You must be authorized
                      to administer the ''AuthorizedCertificate'' resource to manually
                      map it to a DomainMapping resource. Example: 12345.'
                    type: string
                  pendingManagedCertificateID:
                    description: ID of the managed 'AuthorizedCertificate' resource
                      currently being provisioned, if applicable. Until the new managed
                      certificate has been successfully provisioned, the previous
                      SSL state will be preserved. Once the provisioning process completes,
                      the 'certificateId' field will reflect the new managed certificate
                      and this field will be left empty. To remove SSL support while
                      there is still a pending managed certificate, clear the 'certificateId'
                      field with an update request.
                    type: string
                  sslManagementType:
                    description: 'SSL management type for this domain. If ''AUTOMATIC'',
                      a managed certificate is automatically provisioned. If ''MANUAL'',
                      ''certificateId'' must be manually specified in order to configure
                      SSL for this domain. Possible values: ["AUTOMATIC", "MANUAL"]'
                    type: string
                required:
                - sslManagementType
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - domainName
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: servicesplittraffics.appengine.google.kubeform.com
spec:
  group: appengine.google.kubeform.com
  names:
    kind: ServiceSplitTraffic
    listKind: ServiceSplitTrafficList
    plural: servicesplittraffics
    singular: servicesplittraffic
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  migrateTraffic:
                    description: If set to true traffic will be migrated to this version.
                    type: boolean
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  service:
                    description: The name of the service these settings apply to.
                    type: string
                  split:
                    description: Mapping that defines fractional HTTP traffic diversion
                      to different versions within the service.
                    properties:
                      allocations:
                        additionalProperties:
                          type: string
                        description: Mapping from version IDs within the service to
                          fractional (0.000, 1] allocations of traffic for that version.
                          Each version can be specified only once, but some versions
                          in the service may not have any traffic allocation. Services
                          that have traffic allocated cannot be deleted until either
                          the service is deleted or their traffic allocation is removed.
                          Allocations must sum to 1. Up to two decimal place precision
                          is supported for IP-based splits and up to three decimal
                          places is supported for cookie-based splits.
                        type: object
                      shardBy:
                        description: 'Mechanism used to determine which version a
                          request is sent to. The traffic selection algorithm will
                          be stable for either type until allocations are changed.
                          Possible values: ["UNSPECIFIED", "COOKIE", "IP", "RANDOM"]'
                        type: string
                    required:
                    - allocations
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - providerRef
                - service
                - split
                type: object
              migrateTraffic:
                description: If set to true traffic will be migrated to this version.
                type: boolean
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              service:
                description: The name of the service these settings apply to.
                type: string
              split:
                description: Mapping that defines fractional HTTP traffic diversion
                  to different versions within the service.
                properties:
                  allocations:
                    additionalProperties:
                      type: string
                    description: Mapping from version IDs within the service to fractional
                      (0.000, 1] allocations of traffic for that version. Each version
                      can be specified only once, but some versions in the service
                      may not have any traffic allocation. Services that have traffic
                      allocated cannot be deleted until either the service is deleted
                      or their traffic allocation is removed. Allocations must sum
                      to 1. Up to two decimal place precision is supported for IP-based
                      splits and up to three decimal places is supported for cookie-based
                      splits.
                    type: object
                  shardBy:
                    description: 'Mechanism used to determine which version a request
                      is sent to. The traffic selection algorithm will be stable for
                      either type until allocations are changed. Possible values:
                      ["UNSPECIFIED", "COOKIE", "IP", "RANDOM"]'
                    type: string
                required:
                - allocations
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - providerRef
            - service
            - split
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: standardappversions.appengine.google.kubeform.com
spec:
  group: appengine.google.kubeform.com
  names:
    kind: StandardAppVersion
    listKind: StandardAppVersionList
    plural: standardappversions
    singular: standardappversion
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              automaticScaling:
                description: Automatic scaling is based on request rate, response
                  latencies, and other application metrics.
                properties:
                  maxConcurrentRequests:
                    description: "Number of concurrent requests an automatic scaling
                      instance can accept before the scheduler spawns a new instance.
                      \n Defaults to a runtime-specific value."
                    format: int64
                    type: integer
                  maxIdleInstances:
                    description: Maximum number of idle instances that should be maintained
                      for this version.
                    format: int64
                    type: integer
                  maxPendingLatency:
                    description: 'Maximum amount of time that a request should wait
                      in the pending queue before starting a new instance to handle
                      it. A duration in seconds with up to nine fractional digits,
                      terminated by ''s''. Example: "3.5s".'
                    type: string
                  minIdleInstances:
                    description: Minimum number of idle instances that should be maintained
                      for this version. Only applicable for the default version of
                      a service.
                    format: int64
                    type: integer
                  minPendingLatency:
                    description: 'Minimum amount of time a request should wait in
                      the pending queue before starting a new instance to handle it.
                      A duration in seconds with up to nine fractional digits, terminated
                      by ''s''. Example: "3.5s".'
                    type: string
                  standardSchedulerSettings:
                    description: Scheduler settings for standard environment.
                    properties:
                      maxInstances:
                        description: Maximum number of instances to run for this version.
                          Set to zero to disable maxInstances configuration.
                        format: int64
                        type: integer
                      minInstances:
                        description: Minimum number of instances to run for this version.
                          Set to zero to disable minInstances configuration.
                        format: int64
                        type: integer
                      targetCPUUtilization:
                        description: Target CPU utilization ratio to maintain when
                          scaling. Should be a value in the range [0.50, 0.95], zero,
                          or a negative value.
                        format: double
                        type: number
                      targetThroughputUtilization:
                        description: Target throughput utilization ratio to maintain
                          when scaling. Should be a value in the range [0.50, 0.95],
                          zero, or a negative value.
                        format: double
                        type: number
                    type: object
                type: object
              basicScaling:
                description: Basic scaling creates instances when your application
                  receives requests. Each instance will be shut down when the application
                  becomes idle. Basic scaling is ideal for work that is intermittent
                  or driven by user activity.
                properties:
                  idleTimeout:
                    description: 'Duration of time after the last request that an
                      instance must wait before the instance is shut down. A duration
                      in seconds with up to nine fractional digits, terminated by
                      ''s''. Example: "3.5s". Defaults to 900s.'
                    type: string
                  maxInstances:
                    description: Maximum number of instances to create for this version.
                      Must be in the range [1.0, 200.0].
                    format: int64
                    type: integer
                required:
                - maxInstances
                type: object
              deleteServiceOnDestroy:
                type: boolean
              deployment:
                description: Code and application artifacts that make up this version.
                properties:
                  files:
                    description: Manifest of the files stored in Google Cloud Storage
                      that are included as part of this version. All files must be
                      readable using the credentials supplied with this call.
                    items:
                      properties:
                        name:
                          type: string
                        sha1Sum:
                          description: SHA1 checksum of the file
                          type: string
                        sourceURL:
                          description: Source URL
                          type: string
                      required:
                      - name
                      - sourceURL
                      type: object
                    type: array
                  zip:
                    description: Zip File
                    properties:
                      filesCount:
                        description: files count
                        format: int64
                        type: integer
                      sourceURL:
                        description: Source URL
                        type: string
                    required:
                    - sourceURL
                    type: object
                type: object
              entrypoint:
                description: The entrypoint for the application.
                properties:
                  shell:
                    description: The format should be a shell command that can be
                      fed to bash -c.
                    type: string
                required:
                - shell
                type: object
              envVariables:
                additionalProperties:
                  type: string
                description: Environment variables available to the application.
                type: object
              handlers:
                description: An ordered list of URL-matching patterns that should
                  be applied to incoming requests. The first matching URL handles
                  the request and other request handlers are not attempted.
                items:
                  properties:
                    authFailAction:
                      description: 'Actions to take when the user is not logged in.
                        Possible values: ["AUTH_FAIL_ACTION_REDIRECT", "AUTH_FAIL_ACTION_UNAUTHORIZED"]'
                      type: string
                    login:
                      description: 'Methods to restrict access to a URL based on login
                        status. Possible values: ["LOGIN_OPTIONAL", "LOGIN_ADMIN",
                        "LOGIN_REQUIRED"]'
                      type: string
                    redirectHTTPResponseCode:
                      description: '30x code to use when performing redirects for
                        the secure field. Possible values: ["REDIRECT_HTTP_RESPONSE_CODE_301",
                        "REDIRECT_HTTP_RESPONSE_CODE_302", "REDIRECT_HTTP_RESPONSE_CODE_303",
                        "REDIRECT_HTTP_RESPONSE_CODE_307"]'
                      type: string
                    script:
                      description: Executes a script to handle the requests that match
                        this URL pattern. Only the auto value is supported for Node.js
                        in the App Engine standard environment, for example "script:"
                        "auto".
                      properties:
                        scriptPath:
                          description: Path to the script from the application root
                            directory.
                          type: string
                      required:
                      - scriptPath
                      type: object
                    securityLevel:
                      description: 'Security (HTTPS) enforcement for this URL. Possible
                        values: ["SECURE_DEFAULT", "SECURE_NEVER", "SECURE_OPTIONAL",
                        "SECURE_ALWAYS"]'
                      type: string
                    staticFiles:
                      description: Files served directly to the user for a given URL,
                        such as images, CSS stylesheets, or JavaScript source files.
                        Static file handlers describe which files in the application
                        directory are static files, and which URLs serve them.
                      properties:
                        applicationReadable:
                          description: Whether files should also be uploaded as code
                            data. By default, files declared in static file handlers
                            are uploaded as static data and are only served to end
                            users; they cannot be read by the application. If enabled,
                            uploads are charged against both your code and static
                            data storage resource quotas.
                          type: boolean
                        expiration:
                          description: Time a static file served by this handler should
                            be cached by web proxies and browsers. A duration in seconds
                            with up to nine fractional digits, terminated by 's'.
                            Example "3.5s".
                          type: string
                        httpHeaders:
                          additionalProperties:
                            type: string
                          description: HTTP headers to use for all responses from
                            these URLs. An object containing a list of "key:value"
                            value pairs.".
                          type: object
                        mimeType:
                          description: MIME type used to serve all files served by
                            this handler. Defaults to file-specific MIME types, which
                            are derived from each file's filename extension.
                          type: string
                        path:
                          description: Path to the static files matched by the URL
                            pattern, from the application root directory. The path
                            can refer to text matched in groupings in the URL pattern.
                          type: string
                        requireMatchingFile:
                          description: Whether this handler should match the request
                            if the file referenced by the handler does not exist.
                          type: boolean
                        uploadPathRegex:
                          description: Regular expression that matches the file paths
                            for all files that should be referenced by this handler.
                          type: string
                      type: object
                    urlRegex:
                      description: URL prefix. Uses regular expression syntax, which
                        means regexp special characters must be escaped, but should
                        not contain groupings. All URLs that begin with this prefix
                        are handled by this handler, using the portion of the URL
                        after the prefix as part of the file path.
                      type: string
                  type: object
                type: array
              id:
                type: string
              inboundServices:
                description: 'A list of the types of messages that this application
                  is able to receive. Possible values: ["INBOUND_SERVICE_MAIL", "INBOUND_SERVICE_MAIL_BOUNCE",
                  "INBOUND_SERVICE_XMPP_ERROR", "INBOUND_SERVICE_XMPP_MESSAGE", "INBOUND_SERVICE_XMPP_SUBSCRIBE",
                  "INBOUND_SERVICE_XMPP_PRESENCE", "INBOUND_SERVICE_CHANNEL_PRESENCE",
                  "INBOUND_SERVICE_WARMUP"]'
                items:
                  type: string
                type: array
              instanceClass:
                description: 'Instance class that is used to run this version. Valid
                  values are AutomaticScaling: F1, F2, F4, F4_1G BasicScaling or ManualScaling:
                  B1, B2, B4, B4_1G, B8 Defaults to F1 for AutomaticScaling and B2
                  for ManualScaling and BasicScaling. If no scaling is specified,
                  AutomaticScaling is chosen.'
                type: string
              kubeformOutput:
                properties:
                  automaticScaling:
                    description: Automatic scaling is based on request rate, response
                      latencies, and other application metrics.
                    properties:
                      maxConcurrentRequests:
                        description: "Number of concurrent requests an automatic scaling
                          instance can accept before the scheduler spawns a new instance.
                          \n Defaults to a runtime-specific value."
                        format: int64
                        type: integer
                      maxIdleInstances:
                        description: Maximum number of idle instances that should
                          be maintained for this version.
                        format: int64
                        type: integer
                      maxPendingLatency:
                        description: 'Maximum amount of time that a request should
                          wait in the pending queue before starting a new instance
                          to handle it. A duration in seconds with up to nine fractional
                          digits, terminated by ''s''. Example: "3.5s".'
                        type: string
                      minIdleInstances:
                        description: Minimum number of idle instances that should
                          be maintained for this version. Only applicable for the
                          default version of a service.
                        format: int64
                        type: integer
                      minPendingLatency:
                        description: 'Minimum amount of time a request should wait
                          in the pending queue before starting a new instance to handle
                          it. A duration in seconds with up to nine fractional digits,
                          terminated by ''s''. Example: "3.5s".'
                        type: string
                      standardSchedulerSettings:
                        description: Scheduler settings for standard environment.
                        properties:
                          maxInstances:
                            description: Maximum number of instances to run for this
                              version. Set to zero to disable maxInstances configuration.
                            format: int64
                            type: integer
                          minInstances:
                            description: Minimum number of instances to run for this
                              version. Set to zero to disable minInstances configuration.
                            format: int64
                            type: integer
                          targetCPUUtilization:
                            description: Target CPU utilization ratio to maintain
                              when scaling. Should be a value in the range [0.50,
                              0.95], zero, or a negative value.
                            format: double
                            type: number
                          targetThroughputUtilization:
                            description: Target throughput utilization ratio to maintain
                              when scaling. Should be a value in the range [0.50,
                              0.95], zero, or a negative value.
                            format: double
                            type: number
                        type: object
                    type: object
                  basicScaling:
                    description: Basic scaling creates instances when your application
                      receives requests. Each instance will be shut down when the
                      application becomes idle. Basic scaling is ideal for work that
                      is intermittent or driven by user activity.
                    properties:
                      idleTimeout:
                        description: 'Duration of time after the last request that
                          an instance must wait before the instance is shut down.
                          A duration in seconds with up to nine fractional digits,
                          terminated by ''s''. Example: "3.5s". Defaults to 900s.'
                        type: string
                      maxInstances:
                        description: Maximum number of instances to create for this
                          version. Must be in the range [1.0, 200.0].
                        format: int64
                        type: integer
                    required:
                    - maxInstances
                    type: object
                  deleteServiceOnDestroy:
                    type: boolean
                  deployment:
                    description: Code and application artifacts that make up this
                      version.
                    properties:
                      files:
                        description: Manifest of the files stored in Google Cloud
                          Storage that are included as part of this version. All files
                          must be readable using the credentials supplied with this
                          call.
                        items:
                          properties:
                            name:
                              type: string
                            sha1Sum:
                              description: SHA1 checksum of the file
                              type: string
                            sourceURL:
                              description: Source URL
                              type: string
                          required:
                          - name
                          - sourceURL
                          type: object
                        type: array
                      zip:
                        description: Zip File
                        properties:
                          filesCount:
                            description: files count
                            format: int64
                            type: integer
                          sourceURL:
                            description: Source URL
                            type: string
                        required:
                        - sourceURL
                        type: object
                    type: object
                  entrypoint:
                    description: The entrypoint for the application.
                    properties:
                      shell:
                        description: The format should be a shell command that can
                          be fed to bash -c.
                        type: string
                    required:
                    - shell
                    type: object
                  envVariables:
                    additionalProperties:
                      type: string
                    description: Environment variables available to the application.
                    type: object
                  handlers:
                    description: An ordered list of URL-matching patterns that should
                      be applied to incoming requests. The first matching URL handles
                      the request and other request handlers are not attempted.
                    items:
                      properties:
                        authFailAction:
                          description: 'Actions to take when the user is not logged
                            in. Possible values: ["AUTH_FAIL_ACTION_REDIRECT", "AUTH_FAIL_ACTION_UNAUTHORIZED"]'
                          type: string
                        login:
                          description: 'Methods to restrict access to a URL based
                            on login status. Possible values: ["LOGIN_OPTIONAL", "LOGIN_ADMIN",
                            "LOGIN_REQUIRED"]'
                          type: string
                        redirectHTTPResponseCode:
                          description: '30x code to use when performing redirects
                            for the secure field. Possible values: ["REDIRECT_HTTP_RESPONSE_CODE_301",
                            "REDIRECT_HTTP_RESPONSE_CODE_302", "REDIRECT_HTTP_RESPONSE_CODE_303",
                            "REDIRECT_HTTP_RESPONSE_CODE_307"]'
                          type: string
                        script:
                          description: Executes a script to handle the requests that
                            match this URL pattern. Only the auto value is supported
                            for Node.js in the App Engine standard environment, for
                            example "script:" "auto".
                          properties:
                            scriptPath:
                              description: Path to the script from the application
                                root directory.
                              type: string
                          required:
                          - scriptPath
                          type: object
                        securityLevel:
                          description: 'Security (HTTPS) enforcement for this URL.
                            Possible values: ["SECURE_DEFAULT", "SECURE_NEVER", "SECURE_OPTIONAL",
                            "SECURE_ALWAYS"]'
                          type: string
                        staticFiles:
                          description: Files served directly to the user for a given
                            URL, such as images, CSS stylesheets, or JavaScript source
                            files. Static file handlers describe which files in the
                            application directory are static files, and which URLs
                            serve them.
                          properties:
                            applicationReadable:
                              description: Whether files should also be uploaded as
                                code data. By default, files declared in static file
                                handlers are uploaded as static data and are only
                                served to end users; they cannot be read by the application.
                                If enabled, uploads are charged against both your
                                code and static data storage resource quotas.
                              type: boolean
                            expiration:
                              description: Time a static file served by this handler
                                should be cached by web proxies and browsers. A duration
                                in seconds with up to nine fractional digits, terminated
                                by 's'. Example "3.5s".
                              type: string
                            httpHeaders:
                              additionalProperties:
                                type: string
                              description: HTTP headers to use for all responses from
                                these URLs. An object containing a list of "key:value"
                                value pairs.".
                              type: object
                            mimeType:
                              description: MIME type used to serve all files served
                                by this handler. Defaults to file-specific MIME types,
                                which are derived from each file's filename extension.
                              type: string
                            path:
                              description: Path to the static files matched by the
                                URL pattern, from the application root directory.
                                The path can refer to text matched in groupings in
                                the URL pattern.
                              type: string
                            requireMatchingFile:
                              description: Whether this handler should match the request
                                if the file referenced by the handler does not exist.
                              type: boolean
                            uploadPathRegex:
                              description: Regular expression that matches the file
                                paths for all files that should be referenced by this
                                handler.
                              type: string
                          type: object
                        urlRegex:
                          description: URL prefix. Uses regular expression syntax,
                            which means regexp special characters must be escaped,
                            but should not contain groupings. All URLs that begin
                            with this prefix are handled by this handler, using the
                            portion of the URL after the prefix as part of the file
                            path.
                          type: string
                      type: object
                    type: array
                  id:
                    type: string
                  inboundServices:
                    description: 'A list of the types of messages that this application
                      is able to receive. Possible values: ["INBOUND_SERVICE_MAIL",
                      "INBOUND_SERVICE_MAIL_BOUNCE", "INBOUND_SERVICE_XMPP_ERROR",
                      "INBOUND_SERVICE_XMPP_MESSAGE", "INBOUND_SERVICE_XMPP_SUBSCRIBE",
                      "INBOUND_SERVICE_XMPP_PRESENCE", "INBOUND_SERVICE_CHANNEL_PRESENCE",
                      "INBOUND_SERVICE_WARMUP"]'
                    items:
                      type: string
                    type: array
                  instanceClass:
                    description: 'Instance class that is used to run this version.
                      Valid values are AutomaticScaling: F1, F2, F4, F4_1G BasicScaling
                      or ManualScaling: B1, B2, B4, B4_1G, B8 Defaults to F1 for AutomaticScaling
                      and B2 for ManualScaling and BasicScaling. If no scaling is
                      specified, AutomaticScaling is chosen.'
                    type: string
                  libraries:
                    description: Configuration for third-party Python runtime libraries
                      that are required by the application.
                    items:
                      properties:
                        name:
                          description: Name of the library. Example "django".
                          type: string
                        version:
                          description: Version of the library to select, or "latest".
                          type: string
                      type: object
                    type: array
                  manualScaling:
                    description: A service with manual scaling runs continuously,
                      allowing you to perform complex initialization and rely on the
                      state of its memory over time.
                    properties:
                      instances:
                        description: "Number of instances to assign to the service
                          at the start. \n **Note:** When managing the number of instances
                          at runtime through the App Engine Admin API or the (now
                          deprecated) Python 2 Modules API set_num_instances() you
                          must use 'lifecycle.ignore_changes = [\"manual_scaling\"[0].instances]'
                          to prevent drift detection."
                        format: int64
                        type: integer
                    required:
                    - instances
                    type: object
                  name:
                    description: Full path to the Version resource in the API. Example,
                      "v1".
                    type: string
                  noopOnDestroy:
                    type: boolean
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  runtime:
                    description: Desired runtime. Example python27.
                    type: string
                  runtimeAPIVersion:
                    description: The version of the API in the given runtime environment.
                      Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
                    type: string
                  service:
                    description: AppEngine service resource
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  threadsafe:
                    description: Whether multiple requests can be dispatched to this
                      version at once.
                    type: boolean
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  versionID:
                    description: Relative name of the version within the service.
                      For example, 'v1'. Version names can contain only lowercase
                      letters, numbers, or hyphens. Reserved names,"default", "latest",
                      and any name with the prefix "ah-".
                    type: string
                  vpcAccessConnector:
                    description: Enables VPC connectivity for standard apps.
                    properties:
                      name:
                        description: Full Serverless VPC Access Connector name e.g.
                          /projects/my-project/locations/us-central1/connectors/c1.
                        type: string
                    required:
                    - name
                    type: object
                required:
                - deployment
                - providerRef
                - runtime
                - service
                type: object
              libraries:
                description: Configuration for third-party Python runtime libraries
                  that are required by the application.
                items:
                  properties:
                    name:
                      description: Name of the library. Example "django".
                      type: string
                    version:
                      description: Version of the library to select, or "latest".
                      type: string
                  type: object
                type: array
              manualScaling:
                description: A service with manual scaling runs continuously, allowing
                  you to perform complex initialization and rely on the state of its
                  memory over time.
                properties:
                  instances:
                    description: "Number of instances to assign to the service at
                      the start. \n **Note:** When managing the number of instances
                      at runtime through the App Engine Admin API or the (now deprecated)
                      Python 2 Modules API set_num_instances() you must use 'lifecycle.ignore_changes
                      = [\"manual_scaling\"[0].instances]' to prevent drift detection."
                    format: int64
                    type: integer
                required:
                - instances
                type: object
              name:
                description: Full path to the Version resource in the API. Example,
                  "v1".
                type: string
              noopOnDestroy:
                type: boolean
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              runtime:
                description: Desired runtime. Example python27.
                type: string
              runtimeAPIVersion:
                description: The version of the API in the given runtime environment.
                  Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
                type: string
              service:
                description: AppEngine service resource
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              threadsafe:
                description: Whether multiple requests can be dispatched to this version
                  at once.
                type: boolean
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              versionID:
                description: Relative name of the version within the service. For
                  example, 'v1'. Version names can contain only lowercase letters,
                  numbers, or hyphens. Reserved names,"default", "latest", and any
                  name with the prefix "ah-".
                type: string
              vpcAccessConnector:
                description: Enables VPC connectivity for standard apps.
                properties:
                  name:
                    description: Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
                    type: string
                required:
                - name
                type: object
            required:
            - deployment
            - providerRef
            - runtime
            - service
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
