apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: datatransferconfigs.bigquery.google.kubeform.com
spec:
  group: bigquery.google.kubeform.com
  names:
    kind: DataTransferConfig
    listKind: DataTransferConfigList
    plural: datatransferconfigs
    singular: datatransferconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              dataRefreshWindowDays:
                description: The number of days to look back to automatically refresh
                  the data. For example, if dataRefreshWindowDays = 10, then every
                  day BigQuery reingests data for [today-10, today-1], rather than
                  ingesting data for just [today-1]. Only valid if the data source
                  supports the feature. Set the value to 0 to use the default value.
                format: int64
                type: integer
              dataSourceID:
                description: The data source id. Cannot be changed once the transfer
                  config is created.
                type: string
              destinationDatasetID:
                description: The BigQuery target dataset id.
                type: string
              disabled:
                description: When set to true, no runs are scheduled for a given transfer.
                type: boolean
              displayName:
                description: The user specified display name for the transfer config.
                type: string
              emailPreferences:
                description: Email notifications will be sent according to these preferences
                  to the email address of the user who owns this transfer config.
                properties:
                  enableFailureEmail:
                    description: If true, email notifications will be sent on transfer
                      run failures.
                    type: boolean
                required:
                - enableFailureEmail
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  dataRefreshWindowDays:
                    description: The number of days to look back to automatically
                      refresh the data. For example, if dataRefreshWindowDays = 10,
                      then every day BigQuery reingests data for [today-10, today-1],
                      rather than ingesting data for just [today-1]. Only valid if
                      the data source supports the feature. Set the value to 0 to
                      use the default value.
                    format: int64
                    type: integer
                  dataSourceID:
                    description: The data source id. Cannot be changed once the transfer
                      config is created.
                    type: string
                  destinationDatasetID:
                    description: The BigQuery target dataset id.
                    type: string
                  disabled:
                    description: When set to true, no runs are scheduled for a given
                      transfer.
                    type: boolean
                  displayName:
                    description: The user specified display name for the transfer
                      config.
                    type: string
                  emailPreferences:
                    description: Email notifications will be sent according to these
                      preferences to the email address of the user who owns this transfer
                      config.
                    properties:
                      enableFailureEmail:
                        description: If true, email notifications will be sent on
                          transfer run failures.
                        type: boolean
                    required:
                    - enableFailureEmail
                    type: object
                  id:
                    type: string
                  location:
                    description: 'The geographic location where the transfer config
                      should reside. Examples: US, EU, asia-northeast1. The default
                      value is US.'
                    type: string
                  name:
                    description: The resource name of the transfer config. Transfer
                      config names have the form projects/{projectId}/locations/{location}/transferConfigs/{configId}.
                      Where configId is usually a uuid, but this is not required.
                      The name is ignored when creating a transfer config.
                    type: string
                  notificationPubsubTopic:
                    description: Pub/Sub topic where notifications will be sent after
                      transfer runs associated with this transfer config finish.
                    type: string
                  params:
                    additionalProperties:
                      type: string
                    description: These parameters are specific to each data source.
                    type: object
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  schedule:
                    description: 'Data transfer schedule. If the data source does
                      not support a custom schedule, this should be empty. If it is
                      empty, the default value for the data source will be used. The
                      specified times are in UTC. Examples of valid format: 1st,3rd
                      monday of month 15:30, every wed,fri of jan, jun 13:15, and
                      first sunday of quarter 00:00. See more explanation about the
                      format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format
                      NOTE: the granularity should be at least 8 hours, or less frequent.'
                    type: string
                  scheduleOptions:
                    description: Options customizing the data transfer schedule.
                    properties:
                      disableAutoScheduling:
                        description: If true, automatic scheduling of data transfer
                          runs for this configuration will be disabled. The runs can
                          be started on ad-hoc basis using transferConfigs.startManualRuns
                          API. When automatic scheduling is disabled, the TransferConfig.schedule
                          field will be ignored.
                        type: boolean
                      endTime:
                        description: Defines time to stop scheduling transfer runs.
                          A transfer run cannot be scheduled at or after the end time.
                          The end time can be changed at any moment. The time when
                          a data transfer can be triggered manually is not limited
                          by this option.
                        type: string
                      startTime:
                        description: Specifies time to start scheduling transfer runs.
                          The first run will be scheduled at or after the start time
                          according to a recurrence pattern defined in the schedule
                          string. The start time can be changed at any moment. The
                          time when a data transfer can be triggered manually is not
                          limited by this option.
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  sensitiveParams:
                    description: "Different parameters are configured primarily using
                      the the 'params' field on this resource. This block contains
                      the parameters which contain secrets or passwords so that they
                      can be marked sensitive and hidden from plan output. The name
                      of the field, eg: secret_access_key, will be the key in the
                      'params' map in the api request. \n Credentials may not be specified
                      in both locations and will cause an error. Changing from one
                      location to a different credential configuration in the config
                      will require an apply to update state."
                    type: object
                  serviceAccountName:
                    description: Optional service account name. If this field is set,
                      transfer config will be created with this service account credentials.
                      It requires that requesting user calling this API has permissions
                      to act as this service account.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - dataSourceID
                - destinationDatasetID
                - displayName
                - params
                - providerRef
                type: object
              location:
                description: 'The geographic location where the transfer config should
                  reside. Examples: US, EU, asia-northeast1. The default value is
                  US.'
                type: string
              name:
                description: The resource name of the transfer config. Transfer config
                  names have the form projects/{projectId}/locations/{location}/transferConfigs/{configId}.
                  Where configId is usually a uuid, but this is not required. The
                  name is ignored when creating a transfer config.
                type: string
              notificationPubsubTopic:
                description: Pub/Sub topic where notifications will be sent after
                  transfer runs associated with this transfer config finish.
                type: string
              params:
                additionalProperties:
                  type: string
                description: These parameters are specific to each data source.
                type: object
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              schedule:
                description: 'Data transfer schedule. If the data source does not
                  support a custom schedule, this should be empty. If it is empty,
                  the default value for the data source will be used. The specified
                  times are in UTC. Examples of valid format: 1st,3rd monday of month
                  15:30, every wed,fri of jan, jun 13:15, and first sunday of quarter
                  00:00. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format
                  NOTE: the granularity should be at least 8 hours, or less frequent.'
                type: string
              scheduleOptions:
                description: Options customizing the data transfer schedule.
                properties:
                  disableAutoScheduling:
                    description: If true, automatic scheduling of data transfer runs
                      for this configuration will be disabled. The runs can be started
                      on ad-hoc basis using transferConfigs.startManualRuns API. When
                      automatic scheduling is disabled, the TransferConfig.schedule
                      field will be ignored.
                    type: boolean
                  endTime:
                    description: Defines time to stop scheduling transfer runs. A
                      transfer run cannot be scheduled at or after the end time. The
                      end time can be changed at any moment. The time when a data
                      transfer can be triggered manually is not limited by this option.
                    type: string
                  startTime:
                    description: Specifies time to start scheduling transfer runs.
                      The first run will be scheduled at or after the start time according
                      to a recurrence pattern defined in the schedule string. The
                      start time can be changed at any moment. The time when a data
                      transfer can be triggered manually is not limited by this option.
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              sensitiveParams:
                description: "Different parameters are configured primarily using
                  the the 'params' field on this resource. This block contains the
                  parameters which contain secrets or passwords so that they can be
                  marked sensitive and hidden from plan output. The name of the field,
                  eg: secret_access_key, will be the key in the 'params' map in the
                  api request. \n Credentials may not be specified in both locations
                  and will cause an error. Changing from one location to a different
                  credential configuration in the config will require an apply to
                  update state."
                type: object
              serviceAccountName:
                description: Optional service account name. If this field is set,
                  transfer config will be created with this service account credentials.
                  It requires that requesting user calling this API has permissions
                  to act as this service account.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - dataSourceID
            - destinationDatasetID
            - displayName
            - params
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: datasetiampolicies.bigquery.google.kubeform.com
spec:
  group: bigquery.google.kubeform.com
  names:
    kind: DatasetIamPolicy
    listKind: DatasetIamPolicyList
    plural: datasetiampolicies
    singular: datasetiampolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              datasetID:
                type: string
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  datasetID:
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  policyData:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - datasetID
                - policyData
                - providerRef
                type: object
              policyData:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - datasetID
            - policyData
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: datasets.bigquery.google.kubeform.com
spec:
  group: bigquery.google.kubeform.com
  names:
    kind: Dataset
    listKind: DatasetList
    plural: datasets
    singular: dataset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              access:
                description: An array of objects that define dataset access for one
                  or more entities.
                items:
                  properties:
                    domain:
                      description: A domain to grant access to. Any users signed in
                        with the domain specified will be granted the specified access
                      type: string
                    groupByEmail:
                      description: An email address of a Google Group to grant access
                        to.
                      type: string
                    role:
                      description: Describes the rights granted to the user specified
                        by the other member of the access object. Basic, predefined,
                        and custom roles are supported. Predefined roles that have
                        equivalent basic roles are swapped by the API to their basic
                        counterparts. See [official docs](https://cloud.google.com/bigquery/docs/access-control).
                      type: string
                    specialGroup:
                      description: "A special group to grant access to. Possible values
                        include: \n * 'projectOwners': Owners of the enclosing project.
                        \n * 'projectReaders': Readers of the enclosing project. \n
                        * 'projectWriters': Writers of the enclosing project. \n *
                        'allAuthenticatedUsers': All authenticated BigQuery users."
                      type: string
                    userByEmail:
                      description: 'An email address of a user to grant access to.
                        For example: fred@example.com'
                      type: string
                    view:
                      description: A view from a different dataset to grant access
                        to. Queries executed against that view will have read access
                        to tables in this dataset. The role field is not required
                        when this field is set. If that view is updated by any user,
                        access to the view needs to be granted again via an update
                        operation.
                      properties:
                        datasetID:
                          description: The ID of the dataset containing this table.
                          type: string
                        projectID:
                          description: The ID of the project containing this table.
                          type: string
                        tableID:
                          description: The ID of the table. The ID must contain only
                            letters (a-z, A-Z), numbers (0-9), or underscores (_).
                            The maximum length is 1,024 characters.
                          type: string
                      required:
                      - datasetID
                      - projectID
                      - tableID
                      type: object
                  type: object
                type: array
              creationTime:
                description: The time when this dataset was created, in milliseconds
                  since the epoch.
                format: int64
                type: integer
              datasetID:
                description: A unique ID for this dataset, without the project name.
                  The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores
                  (_). The maximum length is 1,024 characters.
                type: string
              defaultEncryptionConfiguration:
                description: The default encryption key for all tables in the dataset.
                  Once this property is set, all newly-created partitioned tables
                  in the dataset will have encryption key set to this value, unless
                  table creation request (or query) overrides the key.
                properties:
                  kmsKeyName:
                    description: Describes the Cloud KMS encryption key that will
                      be used to protect destination BigQuery table. The BigQuery
                      Service Account associated with your project requires access
                      to this encryption key.
                    type: string
                required:
                - kmsKeyName
                type: object
              defaultPartitionExpirationMs:
                description: "The default partition expiration for all partitioned
                  tables in the dataset, in milliseconds. \n Once this property is
                  set, all newly-created partitioned tables in the dataset will have
                  an 'expirationMs' property in the 'timePartitioning' settings set
                  to this value, and changing the value will only affect new tables,
                  not existing ones. The storage in a partition will have an expiration
                  time of its partition time plus this value. Setting this property
                  overrides the use of 'defaultTableExpirationMs' for partitioned
                  tables: only one of 'defaultTableExpirationMs' and 'defaultPartitionExpirationMs'
                  will be used for any new partitioned table. If you provide an explicit
                  'timePartitioning.expirationMs' when creating or updating a partitioned
                  table, that value takes precedence over the default partition expiration
                  time indicated by this property."
                format: int64
                type: integer
              defaultTableExpirationMs:
                description: "The default lifetime of all tables in the dataset, in
                  milliseconds. The minimum value is 3600000 milliseconds (one hour).
                  \n Once this property is set, all newly-created tables in the dataset
                  will have an 'expirationTime' property set to the creation time
                  plus the value in this property, and changing the value will only
                  affect new tables, not existing ones. When the 'expirationTime'
                  for a given table is reached, that table will be deleted automatically.
                  If a table's 'expirationTime' is modified or removed before the
                  table expires, or if you provide an explicit 'expirationTime' when
                  creating a table, that value takes precedence over the default expiration
                  time indicated by this property."
                format: int64
                type: integer
              deleteContentsOnDestroy:
                type: boolean
              description:
                description: A user-friendly description of the dataset
                type: string
              etag:
                description: A hash of the resource.
                type: string
              friendlyName:
                description: A descriptive name for the dataset
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  access:
                    description: An array of objects that define dataset access for
                      one or more entities.
                    items:
                      properties:
                        domain:
                          description: A domain to grant access to. Any users signed
                            in with the domain specified will be granted the specified
                            access
                          type: string
                        groupByEmail:
                          description: An email address of a Google Group to grant
                            access to.
                          type: string
                        role:
                          description: Describes the rights granted to the user specified
                            by the other member of the access object. Basic, predefined,
                            and custom roles are supported. Predefined roles that
                            have equivalent basic roles are swapped by the API to
                            their basic counterparts. See [official docs](https://cloud.google.com/bigquery/docs/access-control).
                          type: string
                        specialGroup:
                          description: "A special group to grant access to. Possible
                            values include: \n * 'projectOwners': Owners of the enclosing
                            project. \n * 'projectReaders': Readers of the enclosing
                            project. \n * 'projectWriters': Writers of the enclosing
                            project. \n * 'allAuthenticatedUsers': All authenticated
                            BigQuery users."
                          type: string
                        userByEmail:
                          description: 'An email address of a user to grant access
                            to. For example: fred@example.com'
                          type: string
                        view:
                          description: A view from a different dataset to grant access
                            to. Queries executed against that view will have read
                            access to tables in this dataset. The role field is not
                            required when this field is set. If that view is updated
                            by any user, access to the view needs to be granted again
                            via an update operation.
                          properties:
                            datasetID:
                              description: The ID of the dataset containing this table.
                              type: string
                            projectID:
                              description: The ID of the project containing this table.
                              type: string
                            tableID:
                              description: The ID of the table. The ID must contain
                                only letters (a-z, A-Z), numbers (0-9), or underscores
                                (_). The maximum length is 1,024 characters.
                              type: string
                          required:
                          - datasetID
                          - projectID
                          - tableID
                          type: object
                      type: object
                    type: array
                  creationTime:
                    description: The time when this dataset was created, in milliseconds
                      since the epoch.
                    format: int64
                    type: integer
                  datasetID:
                    description: A unique ID for this dataset, without the project
                      name. The ID must contain only letters (a-z, A-Z), numbers (0-9),
                      or underscores (_). The maximum length is 1,024 characters.
                    type: string
                  defaultEncryptionConfiguration:
                    description: The default encryption key for all tables in the
                      dataset. Once this property is set, all newly-created partitioned
                      tables in the dataset will have encryption key set to this value,
                      unless table creation request (or query) overrides the key.
                    properties:
                      kmsKeyName:
                        description: Describes the Cloud KMS encryption key that will
                          be used to protect destination BigQuery table. The BigQuery
                          Service Account associated with your project requires access
                          to this encryption key.
                        type: string
                    required:
                    - kmsKeyName
                    type: object
                  defaultPartitionExpirationMs:
                    description: "The default partition expiration for all partitioned
                      tables in the dataset, in milliseconds. \n Once this property
                      is set, all newly-created partitioned tables in the dataset
                      will have an 'expirationMs' property in the 'timePartitioning'
                      settings set to this value, and changing the value will only
                      affect new tables, not existing ones. The storage in a partition
                      will have an expiration time of its partition time plus this
                      value. Setting this property overrides the use of 'defaultTableExpirationMs'
                      for partitioned tables: only one of 'defaultTableExpirationMs'
                      and 'defaultPartitionExpirationMs' will be used for any new
                      partitioned table. If you provide an explicit 'timePartitioning.expirationMs'
                      when creating or updating a partitioned table, that value takes
                      precedence over the default partition expiration time indicated
                      by this property."
                    format: int64
                    type: integer
                  defaultTableExpirationMs:
                    description: "The default lifetime of all tables in the dataset,
                      in milliseconds. The minimum value is 3600000 milliseconds (one
                      hour). \n Once this property is set, all newly-created tables
                      in the dataset will have an 'expirationTime' property set to
                      the creation time plus the value in this property, and changing
                      the value will only affect new tables, not existing ones. When
                      the 'expirationTime' for a given table is reached, that table
                      will be deleted automatically. If a table's 'expirationTime'
                      is modified or removed before the table expires, or if you provide
                      an explicit 'expirationTime' when creating a table, that value
                      takes precedence over the default expiration time indicated
                      by this property."
                    format: int64
                    type: integer
                  deleteContentsOnDestroy:
                    type: boolean
                  description:
                    description: A user-friendly description of the dataset
                    type: string
                  etag:
                    description: A hash of the resource.
                    type: string
                  friendlyName:
                    description: A descriptive name for the dataset
                    type: string
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: The labels associated with this dataset. You can
                      use these to organize and group your datasets
                    type: object
                  lastModifiedTime:
                    description: The date when this dataset or any of its tables was
                      last modified, in milliseconds since the epoch.
                    format: int64
                    type: integer
                  location:
                    description: "The geographic location where the dataset should
                      reside. See [official docs](https://cloud.google.com/bigquery/docs/dataset-locations).
                      \n There are two types of locations, regional or multi-regional.
                      A regional location is a specific geographic place, such as
                      Tokyo, and a multi-regional location is a large geographic area,
                      such as the United States, that contains at least two geographic
                      places. \n The default value is multi-regional location 'US'.
                      Changing this forces a new resource to be created."
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - datasetID
                - providerRef
                type: object
              labels:
                additionalProperties:
                  type: string
                description: The labels associated with this dataset. You can use
                  these to organize and group your datasets
                type: object
              lastModifiedTime:
                description: The date when this dataset or any of its tables was last
                  modified, in milliseconds since the epoch.
                format: int64
                type: integer
              location:
                description: "The geographic location where the dataset should reside.
                  See [official docs](https://cloud.google.com/bigquery/docs/dataset-locations).
                  \n There are two types of locations, regional or multi-regional.
                  A regional location is a specific geographic place, such as Tokyo,
                  and a multi-regional location is a large geographic area, such as
                  the United States, that contains at least two geographic places.
                  \n The default value is multi-regional location 'US'. Changing this
                  forces a new resource to be created."
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - datasetID
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: datasetiambindings.bigquery.google.kubeform.com
spec:
  group: bigquery.google.kubeform.com
  names:
    kind: DatasetIamBinding
    listKind: DatasetIamBindingList
    plural: datasetiambindings
    singular: datasetiambinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              datasetID:
                type: string
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  datasetID:
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  members:
                    items:
                      type: string
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - datasetID
                - members
                - providerRef
                - role
                type: object
              members:
                items:
                  type: string
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - datasetID
            - members
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: datasetiammembers.bigquery.google.kubeform.com
spec:
  group: bigquery.google.kubeform.com
  names:
    kind: DatasetIamMember
    listKind: DatasetIamMemberList
    plural: datasetiammembers
    singular: datasetiammember
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              datasetID:
                type: string
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  datasetID:
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  member:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - datasetID
                - member
                - providerRef
                - role
                type: object
              member:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - datasetID
            - member
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: reservations.bigquery.google.kubeform.com
spec:
  group: bigquery.google.kubeform.com
  names:
    kind: Reservation
    listKind: ReservationList
    plural: reservations
    singular: reservation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              ignoreIdleSlots:
                description: If false, any query using this reservation will use idle
                  slots from other reservations within the same admin project. If
                  true, a query using this reservation will execute with the slot
                  capacity specified above at most.
                type: boolean
              kubeformOutput:
                properties:
                  id:
                    type: string
                  ignoreIdleSlots:
                    description: If false, any query using this reservation will use
                      idle slots from other reservations within the same admin project.
                      If true, a query using this reservation will execute with the
                      slot capacity specified above at most.
                    type: boolean
                  location:
                    description: 'The geographic location where the transfer config
                      should reside. Examples: US, EU, asia-northeast1. The default
                      value is US.'
                    type: string
                  name:
                    description: The name of the reservation. This field must only
                      contain alphanumeric characters or dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  slotCapacity:
                    description: Minimum slots available to this reservation. A slot
                      is a unit of computational power in BigQuery, and serves as
                      the unit of parallelism. Queries using this reservation might
                      use more slots during runtime if ignoreIdleSlots is set to false.
                    format: int64
                    type: integer
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                - slotCapacity
                type: object
              location:
                description: 'The geographic location where the transfer config should
                  reside. Examples: US, EU, asia-northeast1. The default value is
                  US.'
                type: string
              name:
                description: The name of the reservation. This field must only contain
                  alphanumeric characters or dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              slotCapacity:
                description: Minimum slots available to this reservation. A slot is
                  a unit of computational power in BigQuery, and serves as the unit
                  of parallelism. Queries using this reservation might use more slots
                  during runtime if ignoreIdleSlots is set to false.
                format: int64
                type: integer
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            - slotCapacity
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: datasetaccesses.bigquery.google.kubeform.com
spec:
  group: bigquery.google.kubeform.com
  names:
    kind: DatasetAccess
    listKind: DatasetAccessList
    plural: datasetaccesses
    singular: datasetaccess
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              apiUpdatedMember:
                description: If true, represents that that the iam_member in the config
                  was translated to a different member type by the API, and is stored
                  in state as a different member type
                type: boolean
              datasetID:
                description: A unique ID for this dataset, without the project name.
                  The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores
                  (_). The maximum length is 1,024 characters.
                type: string
              domain:
                description: A domain to grant access to. Any users signed in with
                  the domain specified will be granted the specified access
                type: string
              groupByEmail:
                description: An email address of a Google Group to grant access to.
                type: string
              iamMember:
                description: 'Some other type of member that appears in the IAM Policy
                  but isn''t a user, group, domain, or special group. For example:
                  ''allUsers'''
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  apiUpdatedMember:
                    description: If true, represents that that the iam_member in the
                      config was translated to a different member type by the API,
                      and is stored in state as a different member type
                    type: boolean
                  datasetID:
                    description: A unique ID for this dataset, without the project
                      name. The ID must contain only letters (a-z, A-Z), numbers (0-9),
                      or underscores (_). The maximum length is 1,024 characters.
                    type: string
                  domain:
                    description: A domain to grant access to. Any users signed in
                      with the domain specified will be granted the specified access
                    type: string
                  groupByEmail:
                    description: An email address of a Google Group to grant access
                      to.
                    type: string
                  iamMember:
                    description: 'Some other type of member that appears in the IAM
                      Policy but isn''t a user, group, domain, or special group. For
                      example: ''allUsers'''
                    type: string
                  id:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    description: Describes the rights granted to the user specified
                      by the other member of the access object. Basic, predefined,
                      and custom roles are supported. Predefined roles that have equivalent
                      basic roles are swapped by the API to their basic counterparts,
                      and will show a diff post-create. See [official docs](https://cloud.google.com/bigquery/docs/access-control).
                    type: string
                  specialGroup:
                    description: "A special group to grant access to. Possible values
                      include: \n * 'projectOwners': Owners of the enclosing project.
                      \n * 'projectReaders': Readers of the enclosing project. \n
                      * 'projectWriters': Writers of the enclosing project. \n * 'allAuthenticatedUsers':
                      All authenticated BigQuery users."
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  userByEmail:
                    description: 'An email address of a user to grant access to. For
                      example: fred@example.com'
                    type: string
                  view:
                    description: A view from a different dataset to grant access to.
                      Queries executed against that view will have read access to
                      tables in this dataset. The role field is not required when
                      this field is set. If that view is updated by any user, access
                      to the view needs to be granted again via an update operation.
                    properties:
                      datasetID:
                        description: The ID of the dataset containing this table.
                        type: string
                      projectID:
                        description: The ID of the project containing this table.
                        type: string
                      tableID:
                        description: The ID of the table. The ID must contain only
                          letters (a-z, A-Z), numbers (0-9), or underscores (_). The
                          maximum length is 1,024 characters.
                        type: string
                    required:
                    - datasetID
                    - projectID
                    - tableID
                    type: object
                required:
                - datasetID
                - providerRef
                type: object
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                description: Describes the rights granted to the user specified by
                  the other member of the access object. Basic, predefined, and custom
                  roles are supported. Predefined roles that have equivalent basic
                  roles are swapped by the API to their basic counterparts, and will
                  show a diff post-create. See [official docs](https://cloud.google.com/bigquery/docs/access-control).
                type: string
              specialGroup:
                description: "A special group to grant access to. Possible values
                  include: \n * 'projectOwners': Owners of the enclosing project.
                  \n * 'projectReaders': Readers of the enclosing project. \n * 'projectWriters':
                  Writers of the enclosing project. \n * 'allAuthenticatedUsers':
                  All authenticated BigQuery users."
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              userByEmail:
                description: 'An email address of a user to grant access to. For example:
                  fred@example.com'
                type: string
              view:
                description: A view from a different dataset to grant access to. Queries
                  executed against that view will have read access to tables in this
                  dataset. The role field is not required when this field is set.
                  If that view is updated by any user, access to the view needs to
                  be granted again via an update operation.
                properties:
                  datasetID:
                    description: The ID of the dataset containing this table.
                    type: string
                  projectID:
                    description: The ID of the project containing this table.
                    type: string
                  tableID:
                    description: The ID of the table. The ID must contain only letters
                      (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length
                      is 1,024 characters.
                    type: string
                required:
                - datasetID
                - projectID
                - tableID
                type: object
            required:
            - datasetID
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: jobs.bigquery.google.kubeform.com
spec:
  group: bigquery.google.kubeform.com
  names:
    kind: Job
    listKind: JobList
    plural: jobs
    singular: job
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              copy:
                description: Copies a table.
                properties:
                  createDisposition:
                    description: 'Specifies whether the job is allowed to create new
                      tables. The following values are supported: CREATE_IF_NEEDED:
                      If the table does not exist, BigQuery creates the table. CREATE_NEVER:
                      The table must already exist. If it does not, a ''notFound''
                      error is returned in the job result. Creation, truncation and
                      append actions occur as one atomic update upon job completion
                      Default value: "CREATE_IF_NEEDED" Possible values: ["CREATE_IF_NEEDED",
                      "CREATE_NEVER"]'
                    type: string
                  destinationEncryptionConfiguration:
                    description: Custom encryption configuration (e.g., Cloud KMS
                      keys)
                    properties:
                      kmsKeyName:
                        description: Describes the Cloud KMS encryption key that will
                          be used to protect destination BigQuery table. The BigQuery
                          Service Account associated with your project requires access
                          to this encryption key.
                        type: string
                    required:
                    - kmsKeyName
                    type: object
                  destinationTable:
                    description: The destination table.
                    properties:
                      datasetID:
                        description: The ID of the dataset containing this table.
                        type: string
                      projectID:
                        description: The ID of the project containing this table.
                        type: string
                      tableID:
                        description: The table. Can be specified '{{table_id}}' if
                          'project_id' and 'dataset_id' are also set, or of the form
                          'projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}'
                          if not.
                        type: string
                    required:
                    - tableID
                    type: object
                  sourceTables:
                    description: Source tables to copy.
                    items:
                      properties:
                        datasetID:
                          description: The ID of the dataset containing this table.
                          type: string
                        projectID:
                          description: The ID of the project containing this table.
                          type: string
                        tableID:
                          description: The table. Can be specified '{{table_id}}'
                            if 'project_id' and 'dataset_id' are also set, or of the
                            form 'projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}'
                            if not.
                          type: string
                      required:
                      - tableID
                      type: object
                    type: array
                  writeDisposition:
                    description: 'Specifies the action that occurs if the destination
                      table already exists. The following values are supported: WRITE_TRUNCATE:
                      If the table already exists, BigQuery overwrites the table data
                      and uses the schema from the query result. WRITE_APPEND: If
                      the table already exists, BigQuery appends the data to the table.
                      WRITE_EMPTY: If the table already exists and contains data,
                      a ''duplicate'' error is returned in the job result. Each action
                      is atomic and only occurs if BigQuery is able to complete the
                      job successfully. Creation, truncation and append actions occur
                      as one atomic update upon job completion. Default value: "WRITE_EMPTY"
                      Possible values: ["WRITE_TRUNCATE", "WRITE_APPEND", "WRITE_EMPTY"]'
                    type: string
                required:
                - sourceTables
                type: object
              extract:
                description: Configures an extract job.
                properties:
                  compression:
                    description: The compression type to use for exported files. Possible
                      values include GZIP, DEFLATE, SNAPPY, and NONE. The default
                      value is NONE. DEFLATE and SNAPPY are only supported for Avro.
                    type: string
                  destinationFormat:
                    description: The exported file format. Possible values include
                      CSV, NEWLINE_DELIMITED_JSON and AVRO for tables and SAVED_MODEL
                      for models. The default value for tables is CSV. Tables with
                      nested or repeated fields cannot be exported as CSV. The default
                      value for models is SAVED_MODEL.
                    type: string
                  destinationUris:
                    description: A list of fully-qualified Google Cloud Storage URIs
                      where the extracted table should be written.
                    items:
                      type: string
                    type: array
                  fieldDelimiter:
                    description: When extracting data in CSV format, this defines
                      the delimiter to use between fields in the exported data. Default
                      is ','
                    type: string
                  printHeader:
                    description: Whether to print out a header row in the results.
                      Default is true.
                    type: boolean
                  sourceModel:
                    description: A reference to the model being exported.
                    properties:
                      datasetID:
                        description: The ID of the dataset containing this model.
                        type: string
                      modelID:
                        description: The ID of the model.
                        type: string
                      projectID:
                        description: The ID of the project containing this model.
                        type: string
                    required:
                    - datasetID
                    - modelID
                    - projectID
                    type: object
                  sourceTable:
                    description: A reference to the table being exported.
                    properties:
                      datasetID:
                        description: The ID of the dataset containing this table.
                        type: string
                      projectID:
                        description: The ID of the project containing this table.
                        type: string
                      tableID:
                        description: The table. Can be specified '{{table_id}}' if
                          'project_id' and 'dataset_id' are also set, or of the form
                          'projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}'
                          if not.
                        type: string
                    required:
                    - tableID
                    type: object
                  useAvroLogicalTypes:
                    description: Whether to use logical types when extracting to AVRO
                      format.
                    type: boolean
                required:
                - destinationUris
                type: object
              id:
                type: string
              jobID:
                description: The ID of the job. The ID must contain only letters (a-z,
                  A-Z), numbers (0-9), underscores (_), or dashes (-). The maximum
                  length is 1,024 characters.
                type: string
              jobTimeoutMs:
                description: Job timeout in milliseconds. If this time limit is exceeded,
                  BigQuery may attempt to terminate the job.
                type: string
              jobType:
                description: The type of the job.
                type: string
              kubeformOutput:
                properties:
                  copy:
                    description: Copies a table.
                    properties:
                      createDisposition:
                        description: 'Specifies whether the job is allowed to create
                          new tables. The following values are supported: CREATE_IF_NEEDED:
                          If the table does not exist, BigQuery creates the table.
                          CREATE_NEVER: The table must already exist. If it does not,
                          a ''notFound'' error is returned in the job result. Creation,
                          truncation and append actions occur as one atomic update
                          upon job completion Default value: "CREATE_IF_NEEDED" Possible
                          values: ["CREATE_IF_NEEDED", "CREATE_NEVER"]'
                        type: string
                      destinationEncryptionConfiguration:
                        description: Custom encryption configuration (e.g., Cloud
                          KMS keys)
                        properties:
                          kmsKeyName:
                            description: Describes the Cloud KMS encryption key that
                              will be used to protect destination BigQuery table.
                              The BigQuery Service Account associated with your project
                              requires access to this encryption key.
                            type: string
                        required:
                        - kmsKeyName
                        type: object
                      destinationTable:
                        description: The destination table.
                        properties:
                          datasetID:
                            description: The ID of the dataset containing this table.
                            type: string
                          projectID:
                            description: The ID of the project containing this table.
                            type: string
                          tableID:
                            description: The table. Can be specified '{{table_id}}'
                              if 'project_id' and 'dataset_id' are also set, or of
                              the form 'projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}'
                              if not.
                            type: string
                        required:
                        - tableID
                        type: object
                      sourceTables:
                        description: Source tables to copy.
                        items:
                          properties:
                            datasetID:
                              description: The ID of the dataset containing this table.
                              type: string
                            projectID:
                              description: The ID of the project containing this table.
                              type: string
                            tableID:
                              description: The table. Can be specified '{{table_id}}'
                                if 'project_id' and 'dataset_id' are also set, or
                                of the form 'projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}'
                                if not.
                              type: string
                          required:
                          - tableID
                          type: object
                        type: array
                      writeDisposition:
                        description: 'Specifies the action that occurs if the destination
                          table already exists. The following values are supported:
                          WRITE_TRUNCATE: If the table already exists, BigQuery overwrites
                          the table data and uses the schema from the query result.
                          WRITE_APPEND: If the table already exists, BigQuery appends
                          the data to the table. WRITE_EMPTY: If the table already
                          exists and contains data, a ''duplicate'' error is returned
                          in the job result. Each action is atomic and only occurs
                          if BigQuery is able to complete the job successfully. Creation,
                          truncation and append actions occur as one atomic update
                          upon job completion. Default value: "WRITE_EMPTY" Possible
                          values: ["WRITE_TRUNCATE", "WRITE_APPEND", "WRITE_EMPTY"]'
                        type: string
                    required:
                    - sourceTables
                    type: object
                  extract:
                    description: Configures an extract job.
                    properties:
                      compression:
                        description: The compression type to use for exported files.
                          Possible values include GZIP, DEFLATE, SNAPPY, and NONE.
                          The default value is NONE. DEFLATE and SNAPPY are only supported
                          for Avro.
                        type: string
                      destinationFormat:
                        description: The exported file format. Possible values include
                          CSV, NEWLINE_DELIMITED_JSON and AVRO for tables and SAVED_MODEL
                          for models. The default value for tables is CSV. Tables
                          with nested or repeated fields cannot be exported as CSV.
                          The default value for models is SAVED_MODEL.
                        type: string
                      destinationUris:
                        description: A list of fully-qualified Google Cloud Storage
                          URIs where the extracted table should be written.
                        items:
                          type: string
                        type: array
                      fieldDelimiter:
                        description: When extracting data in CSV format, this defines
                          the delimiter to use between fields in the exported data.
                          Default is ','
                        type: string
                      printHeader:
                        description: Whether to print out a header row in the results.
                          Default is true.
                        type: boolean
                      sourceModel:
                        description: A reference to the model being exported.
                        properties:
                          datasetID:
                            description: The ID of the dataset containing this model.
                            type: string
                          modelID:
                            description: The ID of the model.
                            type: string
                          projectID:
                            description: The ID of the project containing this model.
                            type: string
                        required:
                        - datasetID
                        - modelID
                        - projectID
                        type: object
                      sourceTable:
                        description: A reference to the table being exported.
                        properties:
                          datasetID:
                            description: The ID of the dataset containing this table.
                            type: string
                          projectID:
                            description: The ID of the project containing this table.
                            type: string
                          tableID:
                            description: The table. Can be specified '{{table_id}}'
                              if 'project_id' and 'dataset_id' are also set, or of
                              the form 'projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}'
                              if not.
                            type: string
                        required:
                        - tableID
                        type: object
                      useAvroLogicalTypes:
                        description: Whether to use logical types when extracting
                          to AVRO format.
                        type: boolean
                    required:
                    - destinationUris
                    type: object
                  id:
                    type: string
                  jobID:
                    description: The ID of the job. The ID must contain only letters
                      (a-z, A-Z), numbers (0-9), underscores (_), or dashes (-). The
                      maximum length is 1,024 characters.
                    type: string
                  jobTimeoutMs:
                    description: Job timeout in milliseconds. If this time limit is
                      exceeded, BigQuery may attempt to terminate the job.
                    type: string
                  jobType:
                    description: The type of the job.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: The labels associated with this job. You can use
                      these to organize and group your jobs.
                    type: object
                  load:
                    description: Configures a load job.
                    properties:
                      allowJaggedRows:
                        description: Accept rows that are missing trailing optional
                          columns. The missing values are treated as nulls. If false,
                          records with missing trailing columns are treated as bad
                          records, and if there are too many bad records, an invalid
                          error is returned in the job result. The default value is
                          false. Only applicable to CSV, ignored for other formats.
                        type: boolean
                      allowQuotedNewlines:
                        description: Indicates if BigQuery should allow quoted data
                          sections that contain newline characters in a CSV file.
                          The default value is false.
                        type: boolean
                      autodetect:
                        description: Indicates if we should automatically infer the
                          options and schema for CSV and JSON sources.
                        type: boolean
                      createDisposition:
                        description: 'Specifies whether the job is allowed to create
                          new tables. The following values are supported: CREATE_IF_NEEDED:
                          If the table does not exist, BigQuery creates the table.
                          CREATE_NEVER: The table must already exist. If it does not,
                          a ''notFound'' error is returned in the job result. Creation,
                          truncation and append actions occur as one atomic update
                          upon job completion Default value: "CREATE_IF_NEEDED" Possible
                          values: ["CREATE_IF_NEEDED", "CREATE_NEVER"]'
                        type: string
                      destinationEncryptionConfiguration:
                        description: Custom encryption configuration (e.g., Cloud
                          KMS keys)
                        properties:
                          kmsKeyName:
                            description: Describes the Cloud KMS encryption key that
                              will be used to protect destination BigQuery table.
                              The BigQuery Service Account associated with your project
                              requires access to this encryption key.
                            type: string
                        required:
                        - kmsKeyName
                        type: object
                      destinationTable:
                        description: The destination table to load the data into.
                        properties:
                          datasetID:
                            description: The ID of the dataset containing this table.
                            type: string
                          projectID:
                            description: The ID of the project containing this table.
                            type: string
                          tableID:
                            description: The table. Can be specified '{{table_id}}'
                              if 'project_id' and 'dataset_id' are also set, or of
                              the form 'projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}'
                              if not.
                            type: string
                        required:
                        - tableID
                        type: object
                      encoding:
                        description: The character encoding of the data. The supported
                          values are UTF-8 or ISO-8859-1. The default value is UTF-8.
                          BigQuery decodes the data after the raw, binary data has
                          been split using the values of the quote and fieldDelimiter
                          properties.
                        type: string
                      fieldDelimiter:
                        description: The separator for fields in a CSV file. The separator
                          can be any ISO-8859-1 single-byte character. To use a character
                          in the range 128-255, you must encode the character as UTF8.
                          BigQuery converts the string to ISO-8859-1 encoding, and
                          then uses the first byte of the encoded string to split
                          the data in its raw, binary state. BigQuery also supports
                          the escape sequence "\t" to specify a tab separator. The
                          default value is a comma (',').
                        type: string
                      ignoreUnknownValues:
                        description: 'Indicates if BigQuery should allow extra values
                          that are not represented in the table schema. If true, the
                          extra values are ignored. If false, records with extra columns
                          are treated as bad records, and if there are too many bad
                          records, an invalid error is returned in the job result.
                          The default value is false. The sourceFormat property determines
                          what BigQuery treats as an extra value: CSV: Trailing columns
                          JSON: Named values that don''t match any column names'
                        type: boolean
                      maxBadRecords:
                        description: The maximum number of bad records that BigQuery
                          can ignore when running the job. If the number of bad records
                          exceeds this value, an invalid error is returned in the
                          job result. The default value is 0, which requires that
                          all records are valid.
                        format: int64
                        type: integer
                      nullMarker:
                        description: Specifies a string that represents a null value
                          in a CSV file. For example, if you specify "\\N", BigQuery
                          interprets "\\N" as a null value when loading a CSV file.
                          The default value is the empty string. If you set this property
                          to a custom value, BigQuery throws an error if an empty
                          string is present for all data types except for STRING and
                          BYTE. For STRING and BYTE columns, BigQuery interprets the
                          empty string as an empty value.
                        type: string
                      projectionFields:
                        description: If sourceFormat is set to "DATASTORE_BACKUP",
                          indicates which entity properties to load into BigQuery
                          from a Cloud Datastore backup. Property names are case sensitive
                          and must be top-level properties. If no properties are specified,
                          BigQuery loads all properties. If any named property isn't
                          found in the Cloud Datastore backup, an invalid error is
                          returned in the job result.
                        items:
                          type: string
                        type: array
                      quote:
                        description: The value that is used to quote data sections
                          in a CSV file. BigQuery converts the string to ISO-8859-1
                          encoding, and then uses the first byte of the encoded string
                          to split the data in its raw, binary state. The default
                          value is a double-quote ('"'). If your data does not contain
                          quoted sections, set the property value to an empty string.
                          If your data contains quoted newline characters, you must
                          also set the allowQuotedNewlines property to true.
                        type: string
                      schemaUpdateOptions:
                        description: 'Allows the schema of the destination table to
                          be updated as a side effect of the load job if a schema
                          is autodetected or supplied in the job configuration. Schema
                          update options are supported in two cases: when writeDisposition
                          is WRITE_APPEND; when writeDisposition is WRITE_TRUNCATE
                          and the destination table is a partition of a table, specified
                          by partition decorators. For normal tables, WRITE_TRUNCATE
                          will always overwrite the schema. One or more of the following
                          values are specified: ALLOW_FIELD_ADDITION: allow adding
                          a nullable field to the schema. ALLOW_FIELD_RELAXATION:
                          allow relaxing a required field in the original schema to
                          nullable.'
                        items:
                          type: string
                        type: array
                      skipLeadingRows:
                        description: 'The number of rows at the top of a CSV file
                          that BigQuery will skip when loading the data. The default
                          value is 0. This property is useful if you have header rows
                          in the file that should be skipped. When autodetect is on,
                          the behavior is the following: skipLeadingRows unspecified
                          - Autodetect tries to detect headers in the first row. If
                          they are not detected, the row is read as data. Otherwise
                          data is read starting from the second row. skipLeadingRows
                          is 0 - Instructs autodetect that there are no headers and
                          data should be read starting from the first row. skipLeadingRows
                          = N > 0 - Autodetect skips N-1 rows and tries to detect
                          headers in row N. If headers are not detected, row N is
                          just skipped. Otherwise row N is used to extract column
                          names for the detected schema.'
                        format: int64
                        type: integer
                      sourceFormat:
                        description: The format of the data files. For CSV files,
                          specify "CSV". For datastore backups, specify "DATASTORE_BACKUP".
                          For newline-delimited JSON, specify "NEWLINE_DELIMITED_JSON".
                          For Avro, specify "AVRO". For parquet, specify "PARQUET".
                          For orc, specify "ORC". The default value is CSV.
                        type: string
                      sourceUris:
                        description: 'The fully-qualified URIs that point to your
                          data in Google Cloud. For Google Cloud Storage URIs: Each
                          URI can contain one ''*'' wildcard character and it must
                          come after the ''bucket'' name. Size limits related to load
                          jobs apply to external data sources. For Google Cloud Bigtable
                          URIs: Exactly one URI can be specified and it has be a fully
                          specified and valid HTTPS URL for a Google Cloud Bigtable
                          table. For Google Cloud Datastore backups: Exactly one URI
                          can be specified. Also, the ''*'' wildcard character is
                          not allowed.'
                        items:
                          type: string
                        type: array
                      timePartitioning:
                        description: Time-based partitioning specification for the
                          destination table.
                        properties:
                          expirationMs:
                            description: Number of milliseconds for which to keep
                              the storage for a partition. A wrapper is used here
                              because 0 is an invalid value.
                            type: string
                          field:
                            description: If not set, the table is partitioned by pseudo
                              column '_PARTITIONTIME'; if set, the table is partitioned
                              by this field. The field must be a top-level TIMESTAMP
                              or DATE field. Its mode must be NULLABLE or REQUIRED.
                              A wrapper is used here because an empty string is an
                              invalid value.
                            type: string
                          type:
                            description: The only type supported is DAY, which will
                              generate one partition per day. Providing an empty string
                              used to cause an error, but in OnePlatform the field
                              will be treated as unset.
                            type: string
                        required:
                        - type
                        type: object
                      writeDisposition:
                        description: 'Specifies the action that occurs if the destination
                          table already exists. The following values are supported:
                          WRITE_TRUNCATE: If the table already exists, BigQuery overwrites
                          the table data and uses the schema from the query result.
                          WRITE_APPEND: If the table already exists, BigQuery appends
                          the data to the table. WRITE_EMPTY: If the table already
                          exists and contains data, a ''duplicate'' error is returned
                          in the job result. Each action is atomic and only occurs
                          if BigQuery is able to complete the job successfully. Creation,
                          truncation and append actions occur as one atomic update
                          upon job completion. Default value: "WRITE_EMPTY" Possible
                          values: ["WRITE_TRUNCATE", "WRITE_APPEND", "WRITE_EMPTY"]'
                        type: string
                    required:
                    - destinationTable
                    - sourceUris
                    type: object
                  location:
                    description: The geographic location of the job. The default value
                      is US.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  query:
                    description: Configures a query job.
                    properties:
                      allowLargeResults:
                        description: If true and query uses legacy SQL dialect, allows
                          the query to produce arbitrarily large result tables at
                          a slight cost in performance. Requires destinationTable
                          to be set. For standard SQL queries, this flag is ignored
                          and large results are always allowed. However, you must
                          still set destinationTable when result size exceeds the
                          allowed maximum response size.
                        type: boolean
                      createDisposition:
                        description: 'Specifies whether the job is allowed to create
                          new tables. The following values are supported: CREATE_IF_NEEDED:
                          If the table does not exist, BigQuery creates the table.
                          CREATE_NEVER: The table must already exist. If it does not,
                          a ''notFound'' error is returned in the job result. Creation,
                          truncation and append actions occur as one atomic update
                          upon job completion Default value: "CREATE_IF_NEEDED" Possible
                          values: ["CREATE_IF_NEEDED", "CREATE_NEVER"]'
                        type: string
                      defaultDataset:
                        description: Specifies the default dataset to use for unqualified
                          table names in the query. Note that this does not alter
                          behavior of unqualified dataset names.
                        properties:
                          datasetID:
                            description: The dataset. Can be specified '{{dataset_id}}'
                              if 'project_id' is also set, or of the form 'projects/{{project}}/datasets/{{dataset_id}}'
                              if not.
                            type: string
                          projectID:
                            description: The ID of the project containing this table.
                            type: string
                        required:
                        - datasetID
                        type: object
                      destinationEncryptionConfiguration:
                        description: Custom encryption configuration (e.g., Cloud
                          KMS keys)
                        properties:
                          kmsKeyName:
                            description: Describes the Cloud KMS encryption key that
                              will be used to protect destination BigQuery table.
                              The BigQuery Service Account associated with your project
                              requires access to this encryption key.
                            type: string
                        required:
                        - kmsKeyName
                        type: object
                      destinationTable:
                        description: Describes the table where the query results should
                          be stored. This property must be set for large results that
                          exceed the maximum response size. For queries that produce
                          anonymous (cached) results, this field will be populated
                          by BigQuery.
                        properties:
                          datasetID:
                            description: The ID of the dataset containing this table.
                            type: string
                          projectID:
                            description: The ID of the project containing this table.
                            type: string
                          tableID:
                            description: The table. Can be specified '{{table_id}}'
                              if 'project_id' and 'dataset_id' are also set, or of
                              the form 'projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}'
                              if not.
                            type: string
                        required:
                        - tableID
                        type: object
                      flattenResults:
                        description: If true and query uses legacy SQL dialect, flattens
                          all nested and repeated fields in the query results. allowLargeResults
                          must be true if this is set to false. For standard SQL queries,
                          this flag is ignored and results are never flattened.
                        type: boolean
                      maximumBillingTier:
                        description: Limits the billing tier for this job. Queries
                          that have resource usage beyond this tier will fail (without
                          incurring a charge). If unspecified, this will be set to
                          your project default.
                        format: int64
                        type: integer
                      maximumBytesBilled:
                        description: Limits the bytes billed for this job. Queries
                          that will have bytes billed beyond this limit will fail
                          (without incurring a charge). If unspecified, this will
                          be set to your project default.
                        type: string
                      parameterMode:
                        description: Standard SQL only. Set to POSITIONAL to use positional
                          (?) query parameters or to NAMED to use named (@myparam)
                          query parameters in this query.
                        type: string
                      priority:
                        description: 'Specifies a priority for the query. Default
                          value: "INTERACTIVE" Possible values: ["INTERACTIVE", "BATCH"]'
                        type: string
                      query:
                        description: 'SQL query text to execute. The useLegacySql
                          field can be used to indicate whether the query uses legacy
                          SQL or standard SQL. *NOTE*: queries containing [DML language](https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language)
                          (''DELETE'', ''UPDATE'', ''MERGE'', ''INSERT'') must specify
                          ''create_disposition = ""'' and ''write_disposition = ""''.'
                        type: string
                      schemaUpdateOptions:
                        description: 'Allows the schema of the destination table to
                          be updated as a side effect of the query job. Schema update
                          options are supported in two cases: when writeDisposition
                          is WRITE_APPEND; when writeDisposition is WRITE_TRUNCATE
                          and the destination table is a partition of a table, specified
                          by partition decorators. For normal tables, WRITE_TRUNCATE
                          will always overwrite the schema. One or more of the following
                          values are specified: ALLOW_FIELD_ADDITION: allow adding
                          a nullable field to the schema. ALLOW_FIELD_RELAXATION:
                          allow relaxing a required field in the original schema to
                          nullable.'
                        items:
                          type: string
                        type: array
                      scriptOptions:
                        description: Options controlling the execution of scripts.
                        properties:
                          keyResultStatement:
                            description: 'Determines which statement in the script
                              represents the "key result", used to populate the schema
                              and query results of the script job. Possible values:
                              ["LAST", "FIRST_SELECT"]'
                            type: string
                          statementByteBudget:
                            description: Limit on the number of bytes billed per statement.
                              Exceeding this budget results in an error.
                            type: string
                          statementTimeoutMs:
                            description: Timeout period for each statement in a script.
                            type: string
                        type: object
                      useLegacySQL:
                        description: Specifies whether to use BigQuery's legacy SQL
                          dialect for this query. The default value is true. If set
                          to false, the query will use BigQuery's standard SQL.
                        type: boolean
                      useQueryCache:
                        description: Whether to look for the result in the query cache.
                          The query cache is a best-effort cache that will be flushed
                          whenever tables in the query are modified. Moreover, the
                          query cache is only available when a query does not have
                          a destination table specified. The default value is true.
                        type: boolean
                      userDefinedFunctionResources:
                        description: Describes user-defined function resources used
                          in the query.
                        items:
                          properties:
                            inlineCode:
                              description: An inline resource that contains code for
                                a user-defined function (UDF). Providing a inline
                                code resource is equivalent to providing a URI for
                                a file containing the same code.
                              type: string
                            resourceURI:
                              description: A code resource to load from a Google Cloud
                                Storage URI (gs://bucket/path).
                              type: string
                          type: object
                        type: array
                      writeDisposition:
                        description: 'Specifies the action that occurs if the destination
                          table already exists. The following values are supported:
                          WRITE_TRUNCATE: If the table already exists, BigQuery overwrites
                          the table data and uses the schema from the query result.
                          WRITE_APPEND: If the table already exists, BigQuery appends
                          the data to the table. WRITE_EMPTY: If the table already
                          exists and contains data, a ''duplicate'' error is returned
                          in the job result. Each action is atomic and only occurs
                          if BigQuery is able to complete the job successfully. Creation,
                          truncation and append actions occur as one atomic update
                          upon job completion. Default value: "WRITE_EMPTY" Possible
                          values: ["WRITE_TRUNCATE", "WRITE_APPEND", "WRITE_EMPTY"]'
                        type: string
                    required:
                    - query
                    type: object
                  status:
                    description: The status of this job. Examine this value when polling
                      an asynchronous job to see if the job is complete.
                    items:
                      properties:
                        errorResult:
                          description: Final error result of the job. If present,
                            indicates that the job has completed and was unsuccessful.
                          items:
                            properties:
                              location:
                                description: Specifies where the error occurred, if
                                  present.
                                type: string
                              message:
                                description: A human-readable description of the error.
                                type: string
                              reason:
                                description: A short error code that summarizes the
                                  error.
                                type: string
                            type: object
                          type: array
                        errors:
                          description: The first errors encountered during the running
                            of the job. The final message includes the number of errors
                            that caused the process to stop. Errors here do not necessarily
                            mean that the job has not completed or was unsuccessful.
                          items:
                            properties:
                              location:
                                description: Specifies where the error occurred, if
                                  present.
                                type: string
                              message:
                                description: A human-readable description of the error.
                                type: string
                              reason:
                                description: A short error code that summarizes the
                                  error.
                                type: string
                            type: object
                          type: array
                        state:
                          description: Running state of the job. Valid states include
                            'PENDING', 'RUNNING', and 'DONE'.
                          type: string
                      type: object
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  userEmail:
                    description: Email address of the user who ran the job.
                    type: string
                required:
                - jobID
                - providerRef
                type: object
              labels:
                additionalProperties:
                  type: string
                description: The labels associated with this job. You can use these
                  to organize and group your jobs.
                type: object
              load:
                description: Configures a load job.
                properties:
                  allowJaggedRows:
                    description: Accept rows that are missing trailing optional columns.
                      The missing values are treated as nulls. If false, records with
                      missing trailing columns are treated as bad records, and if
                      there are too many bad records, an invalid error is returned
                      in the job result. The default value is false. Only applicable
                      to CSV, ignored for other formats.
                    type: boolean
                  allowQuotedNewlines:
                    description: Indicates if BigQuery should allow quoted data sections
                      that contain newline characters in a CSV file. The default value
                      is false.
                    type: boolean
                  autodetect:
                    description: Indicates if we should automatically infer the options
                      and schema for CSV and JSON sources.
                    type: boolean
                  createDisposition:
                    description: 'Specifies whether the job is allowed to create new
                      tables. The following values are supported: CREATE_IF_NEEDED:
                      If the table does not exist, BigQuery creates the table. CREATE_NEVER:
                      The table must already exist. If it does not, a ''notFound''
                      error is returned in the job result. Creation, truncation and
                      append actions occur as one atomic update upon job completion
                      Default value: "CREATE_IF_NEEDED" Possible values: ["CREATE_IF_NEEDED",
                      "CREATE_NEVER"]'
                    type: string
                  destinationEncryptionConfiguration:
                    description: Custom encryption configuration (e.g., Cloud KMS
                      keys)
                    properties:
                      kmsKeyName:
                        description: Describes the Cloud KMS encryption key that will
                          be used to protect destination BigQuery table. The BigQuery
                          Service Account associated with your project requires access
                          to this encryption key.
                        type: string
                    required:
                    - kmsKeyName
                    type: object
                  destinationTable:
                    description: The destination table to load the data into.
                    properties:
                      datasetID:
                        description: The ID of the dataset containing this table.
                        type: string
                      projectID:
                        description: The ID of the project containing this table.
                        type: string
                      tableID:
                        description: The table. Can be specified '{{table_id}}' if
                          'project_id' and 'dataset_id' are also set, or of the form
                          'projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}'
                          if not.
                        type: string
                    required:
                    - tableID
                    type: object
                  encoding:
                    description: The character encoding of the data. The supported
                      values are UTF-8 or ISO-8859-1. The default value is UTF-8.
                      BigQuery decodes the data after the raw, binary data has been
                      split using the values of the quote and fieldDelimiter properties.
                    type: string
                  fieldDelimiter:
                    description: The separator for fields in a CSV file. The separator
                      can be any ISO-8859-1 single-byte character. To use a character
                      in the range 128-255, you must encode the character as UTF8.
                      BigQuery converts the string to ISO-8859-1 encoding, and then
                      uses the first byte of the encoded string to split the data
                      in its raw, binary state. BigQuery also supports the escape
                      sequence "\t" to specify a tab separator. The default value
                      is a comma (',').
                    type: string
                  ignoreUnknownValues:
                    description: 'Indicates if BigQuery should allow extra values
                      that are not represented in the table schema. If true, the extra
                      values are ignored. If false, records with extra columns are
                      treated as bad records, and if there are too many bad records,
                      an invalid error is returned in the job result. The default
                      value is false. The sourceFormat property determines what BigQuery
                      treats as an extra value: CSV: Trailing columns JSON: Named
                      values that don''t match any column names'
                    type: boolean
                  maxBadRecords:
                    description: The maximum number of bad records that BigQuery can
                      ignore when running the job. If the number of bad records exceeds
                      this value, an invalid error is returned in the job result.
                      The default value is 0, which requires that all records are
                      valid.
                    format: int64
                    type: integer
                  nullMarker:
                    description: Specifies a string that represents a null value in
                      a CSV file. For example, if you specify "\\N", BigQuery interprets
                      "\\N" as a null value when loading a CSV file. The default value
                      is the empty string. If you set this property to a custom value,
                      BigQuery throws an error if an empty string is present for all
                      data types except for STRING and BYTE. For STRING and BYTE columns,
                      BigQuery interprets the empty string as an empty value.
                    type: string
                  projectionFields:
                    description: If sourceFormat is set to "DATASTORE_BACKUP", indicates
                      which entity properties to load into BigQuery from a Cloud Datastore
                      backup. Property names are case sensitive and must be top-level
                      properties. If no properties are specified, BigQuery loads all
                      properties. If any named property isn't found in the Cloud Datastore
                      backup, an invalid error is returned in the job result.
                    items:
                      type: string
                    type: array
                  quote:
                    description: The value that is used to quote data sections in
                      a CSV file. BigQuery converts the string to ISO-8859-1 encoding,
                      and then uses the first byte of the encoded string to split
                      the data in its raw, binary state. The default value is a double-quote
                      ('"'). If your data does not contain quoted sections, set the
                      property value to an empty string. If your data contains quoted
                      newline characters, you must also set the allowQuotedNewlines
                      property to true.
                    type: string
                  schemaUpdateOptions:
                    description: 'Allows the schema of the destination table to be
                      updated as a side effect of the load job if a schema is autodetected
                      or supplied in the job configuration. Schema update options
                      are supported in two cases: when writeDisposition is WRITE_APPEND;
                      when writeDisposition is WRITE_TRUNCATE and the destination
                      table is a partition of a table, specified by partition decorators.
                      For normal tables, WRITE_TRUNCATE will always overwrite the
                      schema. One or more of the following values are specified: ALLOW_FIELD_ADDITION:
                      allow adding a nullable field to the schema. ALLOW_FIELD_RELAXATION:
                      allow relaxing a required field in the original schema to nullable.'
                    items:
                      type: string
                    type: array
                  skipLeadingRows:
                    description: 'The number of rows at the top of a CSV file that
                      BigQuery will skip when loading the data. The default value
                      is 0. This property is useful if you have header rows in the
                      file that should be skipped. When autodetect is on, the behavior
                      is the following: skipLeadingRows unspecified - Autodetect tries
                      to detect headers in the first row. If they are not detected,
                      the row is read as data. Otherwise data is read starting from
                      the second row. skipLeadingRows is 0 - Instructs autodetect
                      that there are no headers and data should be read starting from
                      the first row. skipLeadingRows = N > 0 - Autodetect skips N-1
                      rows and tries to detect headers in row N. If headers are not
                      detected, row N is just skipped. Otherwise row N is used to
                      extract column names for the detected schema.'
                    format: int64
                    type: integer
                  sourceFormat:
                    description: The format of the data files. For CSV files, specify
                      "CSV". For datastore backups, specify "DATASTORE_BACKUP". For
                      newline-delimited JSON, specify "NEWLINE_DELIMITED_JSON". For
                      Avro, specify "AVRO". For parquet, specify "PARQUET". For orc,
                      specify "ORC". The default value is CSV.
                    type: string
                  sourceUris:
                    description: 'The fully-qualified URIs that point to your data
                      in Google Cloud. For Google Cloud Storage URIs: Each URI can
                      contain one ''*'' wildcard character and it must come after
                      the ''bucket'' name. Size limits related to load jobs apply
                      to external data sources. For Google Cloud Bigtable URIs: Exactly
                      one URI can be specified and it has be a fully specified and
                      valid HTTPS URL for a Google Cloud Bigtable table. For Google
                      Cloud Datastore backups: Exactly one URI can be specified. Also,
                      the ''*'' wildcard character is not allowed.'
                    items:
                      type: string
                    type: array
                  timePartitioning:
                    description: Time-based partitioning specification for the destination
                      table.
                    properties:
                      expirationMs:
                        description: Number of milliseconds for which to keep the
                          storage for a partition. A wrapper is used here because
                          0 is an invalid value.
                        type: string
                      field:
                        description: If not set, the table is partitioned by pseudo
                          column '_PARTITIONTIME'; if set, the table is partitioned
                          by this field. The field must be a top-level TIMESTAMP or
                          DATE field. Its mode must be NULLABLE or REQUIRED. A wrapper
                          is used here because an empty string is an invalid value.
                        type: string
                      type:
                        description: The only type supported is DAY, which will generate
                          one partition per day. Providing an empty string used to
                          cause an error, but in OnePlatform the field will be treated
                          as unset.
                        type: string
                    required:
                    - type
                    type: object
                  writeDisposition:
                    description: 'Specifies the action that occurs if the destination
                      table already exists. The following values are supported: WRITE_TRUNCATE:
                      If the table already exists, BigQuery overwrites the table data
                      and uses the schema from the query result. WRITE_APPEND: If
                      the table already exists, BigQuery appends the data to the table.
                      WRITE_EMPTY: If the table already exists and contains data,
                      a ''duplicate'' error is returned in the job result. Each action
                      is atomic and only occurs if BigQuery is able to complete the
                      job successfully. Creation, truncation and append actions occur
                      as one atomic update upon job completion. Default value: "WRITE_EMPTY"
                      Possible values: ["WRITE_TRUNCATE", "WRITE_APPEND", "WRITE_EMPTY"]'
                    type: string
                required:
                - destinationTable
                - sourceUris
                type: object
              location:
                description: The geographic location of the job. The default value
                  is US.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              query:
                description: Configures a query job.
                properties:
                  allowLargeResults:
                    description: If true and query uses legacy SQL dialect, allows
                      the query to produce arbitrarily large result tables at a slight
                      cost in performance. Requires destinationTable to be set. For
                      standard SQL queries, this flag is ignored and large results
                      are always allowed. However, you must still set destinationTable
                      when result size exceeds the allowed maximum response size.
                    type: boolean
                  createDisposition:
                    description: 'Specifies whether the job is allowed to create new
                      tables. The following values are supported: CREATE_IF_NEEDED:
                      If the table does not exist, BigQuery creates the table. CREATE_NEVER:
                      The table must already exist. If it does not, a ''notFound''
                      error is returned in the job result. Creation, truncation and
                      append actions occur as one atomic update upon job completion
                      Default value: "CREATE_IF_NEEDED" Possible values: ["CREATE_IF_NEEDED",
                      "CREATE_NEVER"]'
                    type: string
                  defaultDataset:
                    description: Specifies the default dataset to use for unqualified
                      table names in the query. Note that this does not alter behavior
                      of unqualified dataset names.
                    properties:
                      datasetID:
                        description: The dataset. Can be specified '{{dataset_id}}'
                          if 'project_id' is also set, or of the form 'projects/{{project}}/datasets/{{dataset_id}}'
                          if not.
                        type: string
                      projectID:
                        description: The ID of the project containing this table.
                        type: string
                    required:
                    - datasetID
                    type: object
                  destinationEncryptionConfiguration:
                    description: Custom encryption configuration (e.g., Cloud KMS
                      keys)
                    properties:
                      kmsKeyName:
                        description: Describes the Cloud KMS encryption key that will
                          be used to protect destination BigQuery table. The BigQuery
                          Service Account associated with your project requires access
                          to this encryption key.
                        type: string
                    required:
                    - kmsKeyName
                    type: object
                  destinationTable:
                    description: Describes the table where the query results should
                      be stored. This property must be set for large results that
                      exceed the maximum response size. For queries that produce anonymous
                      (cached) results, this field will be populated by BigQuery.
                    properties:
                      datasetID:
                        description: The ID of the dataset containing this table.
                        type: string
                      projectID:
                        description: The ID of the project containing this table.
                        type: string
                      tableID:
                        description: The table. Can be specified '{{table_id}}' if
                          'project_id' and 'dataset_id' are also set, or of the form
                          'projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}'
                          if not.
                        type: string
                    required:
                    - tableID
                    type: object
                  flattenResults:
                    description: If true and query uses legacy SQL dialect, flattens
                      all nested and repeated fields in the query results. allowLargeResults
                      must be true if this is set to false. For standard SQL queries,
                      this flag is ignored and results are never flattened.
                    type: boolean
                  maximumBillingTier:
                    description: Limits the billing tier for this job. Queries that
                      have resource usage beyond this tier will fail (without incurring
                      a charge). If unspecified, this will be set to your project
                      default.
                    format: int64
                    type: integer
                  maximumBytesBilled:
                    description: Limits the bytes billed for this job. Queries that
                      will have bytes billed beyond this limit will fail (without
                      incurring a charge). If unspecified, this will be set to your
                      project default.
                    type: string
                  parameterMode:
                    description: Standard SQL only. Set to POSITIONAL to use positional
                      (?) query parameters or to NAMED to use named (@myparam) query
                      parameters in this query.
                    type: string
                  priority:
                    description: 'Specifies a priority for the query. Default value:
                      "INTERACTIVE" Possible values: ["INTERACTIVE", "BATCH"]'
                    type: string
                  query:
                    description: 'SQL query text to execute. The useLegacySql field
                      can be used to indicate whether the query uses legacy SQL or
                      standard SQL. *NOTE*: queries containing [DML language](https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language)
                      (''DELETE'', ''UPDATE'', ''MERGE'', ''INSERT'') must specify
                      ''create_disposition = ""'' and ''write_disposition = ""''.'
                    type: string
                  schemaUpdateOptions:
                    description: 'Allows the schema of the destination table to be
                      updated as a side effect of the query job. Schema update options
                      are supported in two cases: when writeDisposition is WRITE_APPEND;
                      when writeDisposition is WRITE_TRUNCATE and the destination
                      table is a partition of a table, specified by partition decorators.
                      For normal tables, WRITE_TRUNCATE will always overwrite the
                      schema. One or more of the following values are specified: ALLOW_FIELD_ADDITION:
                      allow adding a nullable field to the schema. ALLOW_FIELD_RELAXATION:
                      allow relaxing a required field in the original schema to nullable.'
                    items:
                      type: string
                    type: array
                  scriptOptions:
                    description: Options controlling the execution of scripts.
                    properties:
                      keyResultStatement:
                        description: 'Determines which statement in the script represents
                          the "key result", used to populate the schema and query
                          results of the script job. Possible values: ["LAST", "FIRST_SELECT"]'
                        type: string
                      statementByteBudget:
                        description: Limit on the number of bytes billed per statement.
                          Exceeding this budget results in an error.
                        type: string
                      statementTimeoutMs:
                        description: Timeout period for each statement in a script.
                        type: string
                    type: object
                  useLegacySQL:
                    description: Specifies whether to use BigQuery's legacy SQL dialect
                      for this query. The default value is true. If set to false,
                      the query will use BigQuery's standard SQL.
                    type: boolean
                  useQueryCache:
                    description: Whether to look for the result in the query cache.
                      The query cache is a best-effort cache that will be flushed
                      whenever tables in the query are modified. Moreover, the query
                      cache is only available when a query does not have a destination
                      table specified. The default value is true.
                    type: boolean
                  userDefinedFunctionResources:
                    description: Describes user-defined function resources used in
                      the query.
                    items:
                      properties:
                        inlineCode:
                          description: An inline resource that contains code for a
                            user-defined function (UDF). Providing a inline code resource
                            is equivalent to providing a URI for a file containing
                            the same code.
                          type: string
                        resourceURI:
                          description: A code resource to load from a Google Cloud
                            Storage URI (gs://bucket/path).
                          type: string
                      type: object
                    type: array
                  writeDisposition:
                    description: 'Specifies the action that occurs if the destination
                      table already exists. The following values are supported: WRITE_TRUNCATE:
                      If the table already exists, BigQuery overwrites the table data
                      and uses the schema from the query result. WRITE_APPEND: If
                      the table already exists, BigQuery appends the data to the table.
                      WRITE_EMPTY: If the table already exists and contains data,
                      a ''duplicate'' error is returned in the job result. Each action
                      is atomic and only occurs if BigQuery is able to complete the
                      job successfully. Creation, truncation and append actions occur
                      as one atomic update upon job completion. Default value: "WRITE_EMPTY"
                      Possible values: ["WRITE_TRUNCATE", "WRITE_APPEND", "WRITE_EMPTY"]'
                    type: string
                required:
                - query
                type: object
              status:
                description: The status of this job. Examine this value when polling
                  an asynchronous job to see if the job is complete.
                items:
                  properties:
                    errorResult:
                      description: Final error result of the job. If present, indicates
                        that the job has completed and was unsuccessful.
                      items:
                        properties:
                          location:
                            description: Specifies where the error occurred, if present.
                            type: string
                          message:
                            description: A human-readable description of the error.
                            type: string
                          reason:
                            description: A short error code that summarizes the error.
                            type: string
                        type: object
                      type: array
                    errors:
                      description: The first errors encountered during the running
                        of the job. The final message includes the number of errors
                        that caused the process to stop. Errors here do not necessarily
                        mean that the job has not completed or was unsuccessful.
                      items:
                        properties:
                          location:
                            description: Specifies where the error occurred, if present.
                            type: string
                          message:
                            description: A human-readable description of the error.
                            type: string
                          reason:
                            description: A short error code that summarizes the error.
                            type: string
                        type: object
                      type: array
                    state:
                      description: Running state of the job. Valid states include
                        'PENDING', 'RUNNING', and 'DONE'.
                      type: string
                  type: object
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              userEmail:
                description: Email address of the user who ran the job.
                type: string
            required:
            - jobID
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: routines.bigquery.google.kubeform.com
spec:
  group: bigquery.google.kubeform.com
  names:
    kind: Routine
    listKind: RoutineList
    plural: routines
    singular: routine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arguments:
                description: Input/output argument of a function or a stored procedure.
                items:
                  properties:
                    argumentKind:
                      description: 'Defaults to FIXED_TYPE. Default value: "FIXED_TYPE"
                        Possible values: ["FIXED_TYPE", "ANY_TYPE"]'
                      type: string
                    dataType:
                      description: 'A JSON schema for the data type. Required unless
                        argumentKind = ANY_TYPE. ~>**NOTE**: Because this field expects
                        a JSON string, any changes to the string will create a diff,
                        even if the JSON itself hasn''t changed. If the API returns
                        a different value for the same schema, e.g. it switched the
                        order of values or replaced STRUCT field type with RECORD
                        field type, we currently cannot suppress the recurring diff
                        this causes. As a workaround, we recommend using the schema
                        as returned by the API.'
                      type: string
                    mode:
                      description: 'Specifies whether the argument is input or output.
                        Can be set for procedures only. Possible values: ["IN", "OUT",
                        "INOUT"]'
                      type: string
                    name:
                      description: The name of this argument. Can be absent for function
                        return argument.
                      type: string
                  type: object
                type: array
              creationTime:
                description: The time when this routine was created, in milliseconds
                  since the epoch.
                format: int64
                type: integer
              datasetID:
                description: The ID of the dataset containing this routine
                type: string
              definitionBody:
                description: The body of the routine. For functions, this is the expression
                  in the AS clause. If language=SQL, it is the substring inside (but
                  excluding) the parentheses.
                type: string
              description:
                description: The description of the routine if defined.
                type: string
              determinismLevel:
                description: 'The determinism level of the JavaScript UDF if defined.
                  Possible values: ["DETERMINISM_LEVEL_UNSPECIFIED", "DETERMINISTIC",
                  "NOT_DETERMINISTIC"]'
                type: string
              id:
                type: string
              importedLibraries:
                description: Optional. If language = "JAVASCRIPT", this field stores
                  the path of the imported JAVASCRIPT libraries.
                items:
                  type: string
                type: array
              kubeformOutput:
                properties:
                  arguments:
                    description: Input/output argument of a function or a stored procedure.
                    items:
                      properties:
                        argumentKind:
                          description: 'Defaults to FIXED_TYPE. Default value: "FIXED_TYPE"
                            Possible values: ["FIXED_TYPE", "ANY_TYPE"]'
                          type: string
                        dataType:
                          description: 'A JSON schema for the data type. Required
                            unless argumentKind = ANY_TYPE. ~>**NOTE**: Because this
                            field expects a JSON string, any changes to the string
                            will create a diff, even if the JSON itself hasn''t changed.
                            If the API returns a different value for the same schema,
                            e.g. it switched the order of values or replaced STRUCT
                            field type with RECORD field type, we currently cannot
                            suppress the recurring diff this causes. As a workaround,
                            we recommend using the schema as returned by the API.'
                          type: string
                        mode:
                          description: 'Specifies whether the argument is input or
                            output. Can be set for procedures only. Possible values:
                            ["IN", "OUT", "INOUT"]'
                          type: string
                        name:
                          description: The name of this argument. Can be absent for
                            function return argument.
                          type: string
                      type: object
                    type: array
                  creationTime:
                    description: The time when this routine was created, in milliseconds
                      since the epoch.
                    format: int64
                    type: integer
                  datasetID:
                    description: The ID of the dataset containing this routine
                    type: string
                  definitionBody:
                    description: The body of the routine. For functions, this is the
                      expression in the AS clause. If language=SQL, it is the substring
                      inside (but excluding) the parentheses.
                    type: string
                  description:
                    description: The description of the routine if defined.
                    type: string
                  determinismLevel:
                    description: 'The determinism level of the JavaScript UDF if defined.
                      Possible values: ["DETERMINISM_LEVEL_UNSPECIFIED", "DETERMINISTIC",
                      "NOT_DETERMINISTIC"]'
                    type: string
                  id:
                    type: string
                  importedLibraries:
                    description: Optional. If language = "JAVASCRIPT", this field
                      stores the path of the imported JAVASCRIPT libraries.
                    items:
                      type: string
                    type: array
                  language:
                    description: 'The language of the routine. Possible values: ["SQL",
                      "JAVASCRIPT"]'
                    type: string
                  lastModifiedTime:
                    description: The time when this routine was modified, in milliseconds
                      since the epoch.
                    format: int64
                    type: integer
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  returnType:
                    description: 'A JSON schema for the return type. Optional if language
                      = "SQL"; required otherwise. If absent, the return type is inferred
                      from definitionBody at query time in each query that references
                      this routine. If present, then the evaluated result will be
                      cast to the specified returned type at query time. ~>**NOTE**:
                      Because this field expects a JSON string, any changes to the
                      string will create a diff, even if the JSON itself hasn''t changed.
                      If the API returns a different value for the same schema, e.g.
                      it switche d the order of values or replaced STRUCT field type
                      with RECORD field type, we currently cannot suppress the recurring
                      diff this causes. As a workaround, we recommend using the schema
                      as returned by the API.'
                    type: string
                  routineID:
                    description: The ID of the the routine. The ID must contain only
                      letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
                      length is 256 characters.
                    type: string
                  routineType:
                    description: 'The type of routine. Possible values: ["SCALAR_FUNCTION",
                      "PROCEDURE"]'
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - datasetID
                - definitionBody
                - providerRef
                - routineID
                type: object
              language:
                description: 'The language of the routine. Possible values: ["SQL",
                  "JAVASCRIPT"]'
                type: string
              lastModifiedTime:
                description: The time when this routine was modified, in milliseconds
                  since the epoch.
                format: int64
                type: integer
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              returnType:
                description: 'A JSON schema for the return type. Optional if language
                  = "SQL"; required otherwise. If absent, the return type is inferred
                  from definitionBody at query time in each query that references
                  this routine. If present, then the evaluated result will be cast
                  to the specified returned type at query time. ~>**NOTE**: Because
                  this field expects a JSON string, any changes to the string will
                  create a diff, even if the JSON itself hasn''t changed. If the API
                  returns a different value for the same schema, e.g. it switche d
                  the order of values or replaced STRUCT field type with RECORD field
                  type, we currently cannot suppress the recurring diff this causes.
                  As a workaround, we recommend using the schema as returned by the
                  API.'
                type: string
              routineID:
                description: The ID of the the routine. The ID must contain only letters
                  (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length
                  is 256 characters.
                type: string
              routineType:
                description: 'The type of routine. Possible values: ["SCALAR_FUNCTION",
                  "PROCEDURE"]'
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - datasetID
            - definitionBody
            - providerRef
            - routineID
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: tableiammembers.bigquery.google.kubeform.com
spec:
  group: bigquery.google.kubeform.com
  names:
    kind: TableIamMember
    listKind: TableIamMemberList
    plural: tableiammembers
    singular: tableiammember
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              datasetID:
                type: string
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  datasetID:
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  member:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  tableID:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - datasetID
                - member
                - providerRef
                - role
                - tableID
                type: object
              member:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              tableID:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - datasetID
            - member
            - providerRef
            - role
            - tableID
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: tableiampolicies.bigquery.google.kubeform.com
spec:
  group: bigquery.google.kubeform.com
  names:
    kind: TableIamPolicy
    listKind: TableIamPolicyList
    plural: tableiampolicies
    singular: tableiampolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              datasetID:
                type: string
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  datasetID:
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  policyData:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  tableID:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - datasetID
                - policyData
                - providerRef
                - tableID
                type: object
              policyData:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              tableID:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - datasetID
            - policyData
            - providerRef
            - tableID
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: tables.bigquery.google.kubeform.com
spec:
  group: bigquery.google.kubeform.com
  names:
    kind: Table
    listKind: TableList
    plural: tables
    singular: table
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              clustering:
                description: Specifies column names to use for data clustering. Up
                  to four top-level columns are allowed, and should be specified in
                  descending priority order.
                items:
                  type: string
                maxItems: 4
                type: array
              creationTime:
                description: The time when this table was created, in milliseconds
                  since the epoch.
                format: int64
                type: integer
              datasetID:
                description: The dataset ID to create the table in. Changing this
                  forces a new resource to be created.
                type: string
              deletionProtection:
                description: Whether or not to allow Terraform to destroy the instance.
                  Unless this field is set to false in Terraform state, a terraform
                  destroy or terraform apply that would delete the instance will fail.
                type: boolean
              description:
                description: The field description.
                type: string
              encryptionConfiguration:
                description: Specifies how the table should be encrypted. If left
                  blank, the table will be encrypted with a Google-managed key; that
                  process is transparent to the user.
                properties:
                  kmsKeyName:
                    description: The self link or full name of a key which should
                      be used to encrypt this table. Note that the default bigquery
                      service account will need to have encrypt/decrypt permissions
                      on this key - you may want to see the google_bigquery_default_service_account
                      datasource and the google_kms_crypto_key_iam_binding resource.
                    type: string
                required:
                - kmsKeyName
                type: object
              etag:
                description: A hash of the resource.
                type: string
              expirationTime:
                description: The time when this table expires, in milliseconds since
                  the epoch. If not present, the table will persist indefinitely.
                  Expired tables will be deleted and their storage reclaimed.
                format: int64
                type: integer
              externalDataConfiguration:
                description: Describes the data format, location, and other properties
                  of a table stored outside of BigQuery. By defining these properties,
                  the data source can then be queried as if it were a standard BigQuery
                  table.
                properties:
                  autodetect:
                    description: Let BigQuery try to autodetect the schema and format
                      of the table.
                    type: boolean
                  compression:
                    description: The compression type of the data source. Valid values
                      are "NONE" or "GZIP".
                    type: string
                  csvOptions:
                    description: Additional properties to set if source_format is
                      set to "CSV".
                    properties:
                      allowJaggedRows:
                        description: Indicates if BigQuery should accept rows that
                          are missing trailing optional columns.
                        type: boolean
                      allowQuotedNewlines:
                        description: Indicates if BigQuery should allow quoted data
                          sections that contain newline characters in a CSV file.
                          The default value is false.
                        type: boolean
                      encoding:
                        description: The character encoding of the data. The supported
                          values are UTF-8 or ISO-8859-1.
                        type: string
                      fieldDelimiter:
                        description: The separator for fields in a CSV file.
                        type: string
                      quote:
                        description: The value that is used to quote data sections
                          in a CSV file. If your data does not contain quoted sections,
                          set the property value to an empty string. If your data
                          contains quoted newline characters, you must also set the
                          allow_quoted_newlines property to true. The API-side default
                          is ", specified in Terraform escaped as \". Due to limitations
                          with Terraform default values, this value is required to
                          be explicitly set.
                        type: string
                      skipLeadingRows:
                        description: The number of rows at the top of a CSV file that
                          BigQuery will skip when reading the data.
                        format: int64
                        type: integer
                    required:
                    - quote
                    type: object
                  googleSheetsOptions:
                    description: Additional options if source_format is set to "GOOGLE_SHEETS".
                    properties:
                      range:
                        description: 'Range of a sheet to query from. Only used when
                          non-empty. At least one of range or skip_leading_rows must
                          be set. Typical format: "sheet_name!top_left_cell_id:bottom_right_cell_id"
                          For example: "sheet1!A1:B20"'
                        type: string
                      skipLeadingRows:
                        description: The number of rows at the top of the sheet that
                          BigQuery will skip when reading the data. At least one of
                          range or skip_leading_rows must be set.
                        format: int64
                        type: integer
                    type: object
                  hivePartitioningOptions:
                    description: When set, configures hive partitioning support. Not
                      all storage formats support hive partitioning -- requesting
                      hive partitioning on an unsupported format will lead to an error,
                      as will providing an invalid specification.
                    properties:
                      mode:
                        description: When set, what mode of hive partitioning to use
                          when reading data.
                        type: string
                      requirePartitionFilter:
                        description: If set to true, queries over this table require
                          a partition filter that can be used for partition elimination
                          to be specified.
                        type: boolean
                      sourceURIPrefix:
                        description: When hive partition detection is requested, a
                          common for all source uris must be required. The prefix
                          must end immediately before the partition key encoding begins.
                        type: string
                    type: object
                  ignoreUnknownValues:
                    description: Indicates if BigQuery should allow extra values that
                      are not represented in the table schema. If true, the extra
                      values are ignored. If false, records with extra columns are
                      treated as bad records, and if there are too many bad records,
                      an invalid error is returned in the job result. The default
                      value is false.
                    type: boolean
                  maxBadRecords:
                    description: The maximum number of bad records that BigQuery can
                      ignore when reading data.
                    format: int64
                    type: integer
                  schema:
                    description: A JSON schema for the external table. Schema is required
                      for CSV and JSON formats and is disallowed for Google Cloud
                      Bigtable, Cloud Datastore backups, and Avro formats when using
                      external tables.
                    type: string
                  sourceFormat:
                    description: 'The data format. Supported values are: "CSV", "GOOGLE_SHEETS",
                      "NEWLINE_DELIMITED_JSON", "AVRO", "PARQUET", "ORC" and "DATASTORE_BACKUP".
                      To use "GOOGLE_SHEETS" the scopes must include "googleapis.com/auth/drive.readonly".'
                    type: string
                  sourceUris:
                    description: A list of the fully-qualified URIs that point to
                      your data in Google Cloud.
                    items:
                      type: string
                    type: array
                required:
                - autodetect
                - sourceFormat
                - sourceUris
                type: object
              friendlyName:
                description: A descriptive name for the table.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  clustering:
                    description: Specifies column names to use for data clustering.
                      Up to four top-level columns are allowed, and should be specified
                      in descending priority order.
                    items:
                      type: string
                    maxItems: 4
                    type: array
                  creationTime:
                    description: The time when this table was created, in milliseconds
                      since the epoch.
                    format: int64
                    type: integer
                  datasetID:
                    description: The dataset ID to create the table in. Changing this
                      forces a new resource to be created.
                    type: string
                  deletionProtection:
                    description: Whether or not to allow Terraform to destroy the
                      instance. Unless this field is set to false in Terraform state,
                      a terraform destroy or terraform apply that would delete the
                      instance will fail.
                    type: boolean
                  description:
                    description: The field description.
                    type: string
                  encryptionConfiguration:
                    description: Specifies how the table should be encrypted. If left
                      blank, the table will be encrypted with a Google-managed key;
                      that process is transparent to the user.
                    properties:
                      kmsKeyName:
                        description: The self link or full name of a key which should
                          be used to encrypt this table. Note that the default bigquery
                          service account will need to have encrypt/decrypt permissions
                          on this key - you may want to see the google_bigquery_default_service_account
                          datasource and the google_kms_crypto_key_iam_binding resource.
                        type: string
                    required:
                    - kmsKeyName
                    type: object
                  etag:
                    description: A hash of the resource.
                    type: string
                  expirationTime:
                    description: The time when this table expires, in milliseconds
                      since the epoch. If not present, the table will persist indefinitely.
                      Expired tables will be deleted and their storage reclaimed.
                    format: int64
                    type: integer
                  externalDataConfiguration:
                    description: Describes the data format, location, and other properties
                      of a table stored outside of BigQuery. By defining these properties,
                      the data source can then be queried as if it were a standard
                      BigQuery table.
                    properties:
                      autodetect:
                        description: Let BigQuery try to autodetect the schema and
                          format of the table.
                        type: boolean
                      compression:
                        description: The compression type of the data source. Valid
                          values are "NONE" or "GZIP".
                        type: string
                      csvOptions:
                        description: Additional properties to set if source_format
                          is set to "CSV".
                        properties:
                          allowJaggedRows:
                            description: Indicates if BigQuery should accept rows
                              that are missing trailing optional columns.
                            type: boolean
                          allowQuotedNewlines:
                            description: Indicates if BigQuery should allow quoted
                              data sections that contain newline characters in a CSV
                              file. The default value is false.
                            type: boolean
                          encoding:
                            description: The character encoding of the data. The supported
                              values are UTF-8 or ISO-8859-1.
                            type: string
                          fieldDelimiter:
                            description: The separator for fields in a CSV file.
                            type: string
                          quote:
                            description: The value that is used to quote data sections
                              in a CSV file. If your data does not contain quoted
                              sections, set the property value to an empty string.
                              If your data contains quoted newline characters, you
                              must also set the allow_quoted_newlines property to
                              true. The API-side default is ", specified in Terraform
                              escaped as \". Due to limitations with Terraform default
                              values, this value is required to be explicitly set.
                            type: string
                          skipLeadingRows:
                            description: The number of rows at the top of a CSV file
                              that BigQuery will skip when reading the data.
                            format: int64
                            type: integer
                        required:
                        - quote
                        type: object
                      googleSheetsOptions:
                        description: Additional options if source_format is set to
                          "GOOGLE_SHEETS".
                        properties:
                          range:
                            description: 'Range of a sheet to query from. Only used
                              when non-empty. At least one of range or skip_leading_rows
                              must be set. Typical format: "sheet_name!top_left_cell_id:bottom_right_cell_id"
                              For example: "sheet1!A1:B20"'
                            type: string
                          skipLeadingRows:
                            description: The number of rows at the top of the sheet
                              that BigQuery will skip when reading the data. At least
                              one of range or skip_leading_rows must be set.
                            format: int64
                            type: integer
                        type: object
                      hivePartitioningOptions:
                        description: When set, configures hive partitioning support.
                          Not all storage formats support hive partitioning -- requesting
                          hive partitioning on an unsupported format will lead to
                          an error, as will providing an invalid specification.
                        properties:
                          mode:
                            description: When set, what mode of hive partitioning
                              to use when reading data.
                            type: string
                          requirePartitionFilter:
                            description: If set to true, queries over this table require
                              a partition filter that can be used for partition elimination
                              to be specified.
                            type: boolean
                          sourceURIPrefix:
                            description: When hive partition detection is requested,
                              a common for all source uris must be required. The prefix
                              must end immediately before the partition key encoding
                              begins.
                            type: string
                        type: object
                      ignoreUnknownValues:
                        description: Indicates if BigQuery should allow extra values
                          that are not represented in the table schema. If true, the
                          extra values are ignored. If false, records with extra columns
                          are treated as bad records, and if there are too many bad
                          records, an invalid error is returned in the job result.
                          The default value is false.
                        type: boolean
                      maxBadRecords:
                        description: The maximum number of bad records that BigQuery
                          can ignore when reading data.
                        format: int64
                        type: integer
                      schema:
                        description: A JSON schema for the external table. Schema
                          is required for CSV and JSON formats and is disallowed for
                          Google Cloud Bigtable, Cloud Datastore backups, and Avro
                          formats when using external tables.
                        type: string
                      sourceFormat:
                        description: 'The data format. Supported values are: "CSV",
                          "GOOGLE_SHEETS", "NEWLINE_DELIMITED_JSON", "AVRO", "PARQUET",
                          "ORC" and "DATASTORE_BACKUP". To use "GOOGLE_SHEETS" the
                          scopes must include "googleapis.com/auth/drive.readonly".'
                        type: string
                      sourceUris:
                        description: A list of the fully-qualified URIs that point
                          to your data in Google Cloud.
                        items:
                          type: string
                        type: array
                    required:
                    - autodetect
                    - sourceFormat
                    - sourceUris
                    type: object
                  friendlyName:
                    description: A descriptive name for the table.
                    type: string
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A mapping of labels to assign to the resource.
                    type: object
                  lastModifiedTime:
                    description: The time when this table was last modified, in milliseconds
                      since the epoch.
                    format: int64
                    type: integer
                  location:
                    description: The geographic location where the table resides.
                      This value is inherited from the dataset.
                    type: string
                  materializedView:
                    description: If specified, configures this table as a materialized
                      view.
                    properties:
                      enableRefresh:
                        description: Specifies if BigQuery should automatically refresh
                          materialized view when the base table is updated. The default
                          is true.
                        type: boolean
                      query:
                        description: A query whose result is persisted.
                        type: string
                      refreshIntervalMs:
                        description: Specifies maximum frequency at which this materialized
                          view will be refreshed. The default is 1800000
                        format: int64
                        type: integer
                    required:
                    - query
                    type: object
                  numBytes:
                    description: The geographic location where the table resides.
                      This value is inherited from the dataset.
                    format: int64
                    type: integer
                  numLongTermBytes:
                    description: The number of bytes in the table that are considered
                      "long-term storage".
                    format: int64
                    type: integer
                  numRows:
                    description: The number of rows of data in this table, excluding
                      any data in the streaming buffer.
                    format: int64
                    type: integer
                  project:
                    description: The ID of the project in which the resource belongs.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  rangePartitioning:
                    description: If specified, configures range-based partitioning
                      for this table.
                    properties:
                      field:
                        description: The field used to determine how to create a range-based
                          partition.
                        type: string
                      range:
                        description: Information required to partition based on ranges.
                          Structure is documented below.
                        properties:
                          end:
                            description: End of the range partitioning, exclusive.
                            format: int64
                            type: integer
                          interval:
                            description: The width of each range within the partition.
                            format: int64
                            type: integer
                          start:
                            description: Start of the range partitioning, inclusive.
                            format: int64
                            type: integer
                        required:
                        - end
                        - interval
                        - start
                        type: object
                    required:
                    - field
                    - range
                    type: object
                  schema:
                    description: A JSON schema for the table.
                    type: string
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                  tableID:
                    description: A unique ID for the resource. Changing this forces
                      a new resource to be created.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timePartitioning:
                    description: If specified, configures time-based partitioning
                      for this table.
                    properties:
                      expirationMs:
                        description: Number of milliseconds for which to keep the
                          storage for a partition.
                        format: int64
                        type: integer
                      field:
                        description: The field used to determine how to create a time-based
                          partition. If time-based partitioning is enabled without
                          this value, the table is partitioned based on the load time.
                        type: string
                      requirePartitionFilter:
                        description: If set to true, queries over this table require
                          a partition filter that can be used for partition elimination
                          to be specified.
                        type: boolean
                      type:
                        description: The supported types are DAY, HOUR, MONTH, and
                          YEAR, which will generate one partition per day, hour, month,
                          and year, respectively.
                        type: string
                    required:
                    - type
                    type: object
                  type:
                    description: Describes the table type.
                    type: string
                  view:
                    description: If specified, configures this table as a view.
                    properties:
                      query:
                        description: A query that BigQuery executes when the view
                          is referenced.
                        type: string
                      useLegacySQL:
                        description: Specifies whether to use BigQuery's legacy SQL
                          for this view. The default value is true. If set to false,
                          the view will use BigQuery's standard SQL
                        type: boolean
                    required:
                    - query
                    type: object
                required:
                - datasetID
                - providerRef
                - tableID
                type: object
              labels:
                additionalProperties:
                  type: string
                description: A mapping of labels to assign to the resource.
                type: object
              lastModifiedTime:
                description: The time when this table was last modified, in milliseconds
                  since the epoch.
                format: int64
                type: integer
              location:
                description: The geographic location where the table resides. This
                  value is inherited from the dataset.
                type: string
              materializedView:
                description: If specified, configures this table as a materialized
                  view.
                properties:
                  enableRefresh:
                    description: Specifies if BigQuery should automatically refresh
                      materialized view when the base table is updated. The default
                      is true.
                    type: boolean
                  query:
                    description: A query whose result is persisted.
                    type: string
                  refreshIntervalMs:
                    description: Specifies maximum frequency at which this materialized
                      view will be refreshed. The default is 1800000
                    format: int64
                    type: integer
                required:
                - query
                type: object
              numBytes:
                description: The geographic location where the table resides. This
                  value is inherited from the dataset.
                format: int64
                type: integer
              numLongTermBytes:
                description: The number of bytes in the table that are considered
                  "long-term storage".
                format: int64
                type: integer
              numRows:
                description: The number of rows of data in this table, excluding any
                  data in the streaming buffer.
                format: int64
                type: integer
              project:
                description: The ID of the project in which the resource belongs.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              rangePartitioning:
                description: If specified, configures range-based partitioning for
                  this table.
                properties:
                  field:
                    description: The field used to determine how to create a range-based
                      partition.
                    type: string
                  range:
                    description: Information required to partition based on ranges.
                      Structure is documented below.
                    properties:
                      end:
                        description: End of the range partitioning, exclusive.
                        format: int64
                        type: integer
                      interval:
                        description: The width of each range within the partition.
                        format: int64
                        type: integer
                      start:
                        description: Start of the range partitioning, inclusive.
                        format: int64
                        type: integer
                    required:
                    - end
                    - interval
                    - start
                    type: object
                required:
                - field
                - range
                type: object
              schema:
                description: A JSON schema for the table.
                type: string
              selfLink:
                description: The URI of the created resource.
                type: string
              tableID:
                description: A unique ID for the resource. Changing this forces a
                  new resource to be created.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timePartitioning:
                description: If specified, configures time-based partitioning for
                  this table.
                properties:
                  expirationMs:
                    description: Number of milliseconds for which to keep the storage
                      for a partition.
                    format: int64
                    type: integer
                  field:
                    description: The field used to determine how to create a time-based
                      partition. If time-based partitioning is enabled without this
                      value, the table is partitioned based on the load time.
                    type: string
                  requirePartitionFilter:
                    description: If set to true, queries over this table require a
                      partition filter that can be used for partition elimination
                      to be specified.
                    type: boolean
                  type:
                    description: The supported types are DAY, HOUR, MONTH, and YEAR,
                      which will generate one partition per day, hour, month, and
                      year, respectively.
                    type: string
                required:
                - type
                type: object
              type:
                description: Describes the table type.
                type: string
              view:
                description: If specified, configures this table as a view.
                properties:
                  query:
                    description: A query that BigQuery executes when the view is referenced.
                    type: string
                  useLegacySQL:
                    description: Specifies whether to use BigQuery's legacy SQL for
                      this view. The default value is true. If set to false, the view
                      will use BigQuery's standard SQL
                    type: boolean
                required:
                - query
                type: object
            required:
            - datasetID
            - providerRef
            - tableID
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: tableiambindings.bigquery.google.kubeform.com
spec:
  group: bigquery.google.kubeform.com
  names:
    kind: TableIamBinding
    listKind: TableIamBindingList
    plural: tableiambindings
    singular: tableiambinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              datasetID:
                type: string
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  datasetID:
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  members:
                    items:
                      type: string
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  tableID:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - datasetID
                - members
                - providerRef
                - role
                - tableID
                type: object
              members:
                items:
                  type: string
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              tableID:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - datasetID
            - members
            - providerRef
            - role
            - tableID
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
