apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: attestoriammembers.binaryauthorization.google.kubeform.com
spec:
  group: binaryauthorization.google.kubeform.com
  names:
    kind: AttestorIamMember
    listKind: AttestorIamMemberList
    plural: attestoriammembers
    singular: attestoriammember
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              attestor:
                type: string
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  attestor:
                    type: string
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  member:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - attestor
                - member
                - providerRef
                - role
                type: object
              member:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - attestor
            - member
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: attestoriambindings.binaryauthorization.google.kubeform.com
spec:
  group: binaryauthorization.google.kubeform.com
  names:
    kind: AttestorIamBinding
    listKind: AttestorIamBindingList
    plural: attestoriambindings
    singular: attestoriambinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              attestor:
                type: string
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  attestor:
                    type: string
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  members:
                    items:
                      type: string
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - attestor
                - members
                - providerRef
                - role
                type: object
              members:
                items:
                  type: string
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - attestor
            - members
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: attestoriampolicies.binaryauthorization.google.kubeform.com
spec:
  group: binaryauthorization.google.kubeform.com
  names:
    kind: AttestorIamPolicy
    listKind: AttestorIamPolicyList
    plural: attestoriampolicies
    singular: attestoriampolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              attestor:
                type: string
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  attestor:
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  policyData:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - attestor
                - policyData
                - providerRef
                type: object
              policyData:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - attestor
            - policyData
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: attestors.binaryauthorization.google.kubeform.com
spec:
  group: binaryauthorization.google.kubeform.com
  names:
    kind: Attestor
    listKind: AttestorList
    plural: attestors
    singular: attestor
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              attestationAuthorityNote:
                description: A Container Analysis ATTESTATION_AUTHORITY Note, created
                  by the user.
                properties:
                  delegationServiceAccountEmail:
                    description: This field will contain the service account email
                      address that this Attestor will use as the principal when querying
                      Container Analysis. Attestor administrators must grant this
                      service account the IAM role needed to read attestations from
                      the noteReference in Container Analysis (containeranalysis.notes.occurrences.viewer).
                      This email address is fixed for the lifetime of the Attestor,
                      but callers should not make any other assumptions about the
                      service account email; future versions may use an email based
                      on a different naming pattern.
                    type: string
                  noteReference:
                    description: The resource name of a ATTESTATION_AUTHORITY Note,
                      created by the user. If the Note is in a different project from
                      the Attestor, it should be specified in the format 'projects/*/notes/*'
                      (or the legacy 'providers/*/notes/*'). This field may not be
                      updated. An attestation by this attestor is stored as a Container
                      Analysis ATTESTATION_AUTHORITY Occurrence that names a container
                      image and that links to this Note.
                    type: string
                  publicKeys:
                    description: Public keys that verify attestations signed by this
                      attestor. This field may be updated. If this field is non-empty,
                      one of the specified public keys must verify that an attestation
                      was signed by this attestor for the image specified in the admission
                      request. If this field is empty, this attestor always returns
                      that no valid attestations exist.
                    items:
                      properties:
                        ID:
                          description: The ID of this public key. Signatures verified
                            by BinAuthz must include the ID of the public key that
                            can be used to verify them, and that ID must match the
                            contents of this field exactly. Additional restrictions
                            on this field can be imposed based on which public key
                            type is encapsulated. See the documentation on publicKey
                            cases below for details.
                          type: string
                        asciiArmoredPgpPublicKey:
                          description: ASCII-armored representation of a PGP public
                            key, as the entire output by the command 'gpg --export
                            --armor foo@example.com' (either LF or CRLF line endings).
                            When using this field, id should be left blank. The BinAuthz
                            API handlers will calculate the ID and fill it in automatically.
                            BinAuthz computes this ID as the OpenPGP RFC4880 V4 fingerprint,
                            represented as upper-case hex. If id is provided by the
                            caller, it will be overwritten by the API-calculated ID.
                          type: string
                        comment:
                          description: A descriptive comment. This field may be updated.
                          type: string
                        pkixPublicKey:
                          description: "A raw PKIX SubjectPublicKeyInfo format public
                            key. \n NOTE: id may be explicitly provided by the caller
                            when using this type of public key, but it MUST be a valid
                            RFC3986 URI. If id is left blank, a default one will be
                            computed based on the digest of the DER encoding of the
                            public key."
                          properties:
                            publicKeyPem:
                              description: A PEM-encoded public key, as described
                                in 'https://tools.ietf.org/html/rfc7468#section-13'
                              type: string
                            signatureAlgorithm:
                              description: The signature algorithm used to verify
                                a message against a signature using this key. These
                                signature algorithm must match the structure and any
                                object identifiers encoded in publicKeyPem (i.e. this
                                algorithm must match that of the public key).
                              type: string
                          type: object
                      type: object
                    type: array
                required:
                - noteReference
                type: object
              description:
                description: A descriptive comment. This field may be updated. The
                  field may be displayed in chooser dialogs.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  attestationAuthorityNote:
                    description: A Container Analysis ATTESTATION_AUTHORITY Note,
                      created by the user.
                    properties:
                      delegationServiceAccountEmail:
                        description: This field will contain the service account email
                          address that this Attestor will use as the principal when
                          querying Container Analysis. Attestor administrators must
                          grant this service account the IAM role needed to read attestations
                          from the noteReference in Container Analysis (containeranalysis.notes.occurrences.viewer).
                          This email address is fixed for the lifetime of the Attestor,
                          but callers should not make any other assumptions about
                          the service account email; future versions may use an email
                          based on a different naming pattern.
                        type: string
                      noteReference:
                        description: The resource name of a ATTESTATION_AUTHORITY
                          Note, created by the user. If the Note is in a different
                          project from the Attestor, it should be specified in the
                          format 'projects/*/notes/*' (or the legacy 'providers/*/notes/*').
                          This field may not be updated. An attestation by this attestor
                          is stored as a Container Analysis ATTESTATION_AUTHORITY
                          Occurrence that names a container image and that links to
                          this Note.
                        type: string
                      publicKeys:
                        description: Public keys that verify attestations signed by
                          this attestor. This field may be updated. If this field
                          is non-empty, one of the specified public keys must verify
                          that an attestation was signed by this attestor for the
                          image specified in the admission request. If this field
                          is empty, this attestor always returns that no valid attestations
                          exist.
                        items:
                          properties:
                            ID:
                              description: The ID of this public key. Signatures verified
                                by BinAuthz must include the ID of the public key
                                that can be used to verify them, and that ID must
                                match the contents of this field exactly. Additional
                                restrictions on this field can be imposed based on
                                which public key type is encapsulated. See the documentation
                                on publicKey cases below for details.
                              type: string
                            asciiArmoredPgpPublicKey:
                              description: ASCII-armored representation of a PGP public
                                key, as the entire output by the command 'gpg --export
                                --armor foo@example.com' (either LF or CRLF line endings).
                                When using this field, id should be left blank. The
                                BinAuthz API handlers will calculate the ID and fill
                                it in automatically. BinAuthz computes this ID as
                                the OpenPGP RFC4880 V4 fingerprint, represented as
                                upper-case hex. If id is provided by the caller, it
                                will be overwritten by the API-calculated ID.
                              type: string
                            comment:
                              description: A descriptive comment. This field may be
                                updated.
                              type: string
                            pkixPublicKey:
                              description: "A raw PKIX SubjectPublicKeyInfo format
                                public key. \n NOTE: id may be explicitly provided
                                by the caller when using this type of public key,
                                but it MUST be a valid RFC3986 URI. If id is left
                                blank, a default one will be computed based on the
                                digest of the DER encoding of the public key."
                              properties:
                                publicKeyPem:
                                  description: A PEM-encoded public key, as described
                                    in 'https://tools.ietf.org/html/rfc7468#section-13'
                                  type: string
                                signatureAlgorithm:
                                  description: The signature algorithm used to verify
                                    a message against a signature using this key.
                                    These signature algorithm must match the structure
                                    and any object identifiers encoded in publicKeyPem
                                    (i.e. this algorithm must match that of the public
                                    key).
                                  type: string
                              type: object
                          type: object
                        type: array
                    required:
                    - noteReference
                    type: object
                  description:
                    description: A descriptive comment. This field may be updated.
                      The field may be displayed in chooser dialogs.
                    type: string
                  id:
                    type: string
                  name:
                    description: The resource name.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - attestationAuthorityNote
                - name
                - providerRef
                type: object
              name:
                description: The resource name.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - attestationAuthorityNote
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: policies.binaryauthorization.google.kubeform.com
spec:
  group: binaryauthorization.google.kubeform.com
  names:
    kind: Policy
    listKind: PolicyList
    plural: policies
    singular: policy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              admissionWhitelistPatterns:
                description: A whitelist of image patterns to exclude from admission
                  rules. If an image's name matches a whitelist pattern, the image's
                  admission requests will always be permitted regardless of your admission
                  rules.
                items:
                  properties:
                    namePattern:
                      description: An image name pattern to whitelist, in the form
                        'registry/path/to/image'. This supports a trailing * as a
                        wildcard, but this is allowed only in text after the registry/
                        part.
                      type: string
                  required:
                  - namePattern
                  type: object
                type: array
              clusterAdmissionRules:
                description: "Per-cluster admission rules. An admission rule specifies
                  either that all container images used in a pod creation request
                  must be attested to by one or more attestors, that all pod creations
                  will be allowed, or that all pod creations will be denied. There
                  can be at most one admission rule per cluster spec. \n Identifier
                  format: '{{location}}.{{clusterId}}'. A location is either a compute
                  zone (e.g. 'us-central1-a') or a region (e.g. 'us-central1')."
                items:
                  properties:
                    cluster:
                      type: string
                    enforcementMode:
                      description: 'The action when a pod creation is denied by the
                        admission rule. Possible values: ["ENFORCED_BLOCK_AND_AUDIT_LOG",
                        "DRYRUN_AUDIT_LOG_ONLY"]'
                      type: string
                    evaluationMode:
                      description: 'How this admission rule will be evaluated. Possible
                        values: ["ALWAYS_ALLOW", "REQUIRE_ATTESTATION", "ALWAYS_DENY"]'
                      type: string
                    requireAttestationsBy:
                      description: "The resource names of the attestors that must
                        attest to a container image. If the attestor is in a different
                        project from the policy, it should be specified in the format
                        'projects/*/attestors/*'. Each attestor must exist before
                        a policy can reference it. To add an attestor to a policy
                        the principal issuing the policy change request must be able
                        to read the attestor resource. \n Note: this field must be
                        non-empty when the evaluation_mode field specifies REQUIRE_ATTESTATION,
                        otherwise it must be empty."
                      items:
                        type: string
                      type: array
                  required:
                  - cluster
                  - enforcementMode
                  - evaluationMode
                  type: object
                type: array
              defaultAdmissionRule:
                description: Default admission rule for a cluster without a per-cluster
                  admission rule.
                properties:
                  enforcementMode:
                    description: 'The action when a pod creation is denied by the
                      admission rule. Possible values: ["ENFORCED_BLOCK_AND_AUDIT_LOG",
                      "DRYRUN_AUDIT_LOG_ONLY"]'
                    type: string
                  evaluationMode:
                    description: 'How this admission rule will be evaluated. Possible
                      values: ["ALWAYS_ALLOW", "REQUIRE_ATTESTATION", "ALWAYS_DENY"]'
                    type: string
                  requireAttestationsBy:
                    description: "The resource names of the attestors that must attest
                      to a container image. If the attestor is in a different project
                      from the policy, it should be specified in the format 'projects/*/attestors/*'.
                      Each attestor must exist before a policy can reference it. To
                      add an attestor to a policy the principal issuing the policy
                      change request must be able to read the attestor resource. \n
                      Note: this field must be non-empty when the evaluation_mode
                      field specifies REQUIRE_ATTESTATION, otherwise it must be empty."
                    items:
                      type: string
                    type: array
                required:
                - enforcementMode
                - evaluationMode
                type: object
              description:
                description: A descriptive comment.
                type: string
              globalPolicyEvaluationMode:
                description: 'Controls the evaluation of a Google-maintained global
                  admission policy for common system-level images. Images not covered
                  by the global policy will be subject to the project admission policy.
                  Possible values: ["ENABLE", "DISABLE"]'
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  admissionWhitelistPatterns:
                    description: A whitelist of image patterns to exclude from admission
                      rules. If an image's name matches a whitelist pattern, the image's
                      admission requests will always be permitted regardless of your
                      admission rules.
                    items:
                      properties:
                        namePattern:
                          description: An image name pattern to whitelist, in the
                            form 'registry/path/to/image'. This supports a trailing
                            * as a wildcard, but this is allowed only in text after
                            the registry/ part.
                          type: string
                      required:
                      - namePattern
                      type: object
                    type: array
                  clusterAdmissionRules:
                    description: "Per-cluster admission rules. An admission rule specifies
                      either that all container images used in a pod creation request
                      must be attested to by one or more attestors, that all pod creations
                      will be allowed, or that all pod creations will be denied. There
                      can be at most one admission rule per cluster spec. \n Identifier
                      format: '{{location}}.{{clusterId}}'. A location is either a
                      compute zone (e.g. 'us-central1-a') or a region (e.g. 'us-central1')."
                    items:
                      properties:
                        cluster:
                          type: string
                        enforcementMode:
                          description: 'The action when a pod creation is denied by
                            the admission rule. Possible values: ["ENFORCED_BLOCK_AND_AUDIT_LOG",
                            "DRYRUN_AUDIT_LOG_ONLY"]'
                          type: string
                        evaluationMode:
                          description: 'How this admission rule will be evaluated.
                            Possible values: ["ALWAYS_ALLOW", "REQUIRE_ATTESTATION",
                            "ALWAYS_DENY"]'
                          type: string
                        requireAttestationsBy:
                          description: "The resource names of the attestors that must
                            attest to a container image. If the attestor is in a different
                            project from the policy, it should be specified in the
                            format 'projects/*/attestors/*'. Each attestor must exist
                            before a policy can reference it. To add an attestor to
                            a policy the principal issuing the policy change request
                            must be able to read the attestor resource. \n Note: this
                            field must be non-empty when the evaluation_mode field
                            specifies REQUIRE_ATTESTATION, otherwise it must be empty."
                          items:
                            type: string
                          type: array
                      required:
                      - cluster
                      - enforcementMode
                      - evaluationMode
                      type: object
                    type: array
                  defaultAdmissionRule:
                    description: Default admission rule for a cluster without a per-cluster
                      admission rule.
                    properties:
                      enforcementMode:
                        description: 'The action when a pod creation is denied by
                          the admission rule. Possible values: ["ENFORCED_BLOCK_AND_AUDIT_LOG",
                          "DRYRUN_AUDIT_LOG_ONLY"]'
                        type: string
                      evaluationMode:
                        description: 'How this admission rule will be evaluated. Possible
                          values: ["ALWAYS_ALLOW", "REQUIRE_ATTESTATION", "ALWAYS_DENY"]'
                        type: string
                      requireAttestationsBy:
                        description: "The resource names of the attestors that must
                          attest to a container image. If the attestor is in a different
                          project from the policy, it should be specified in the format
                          'projects/*/attestors/*'. Each attestor must exist before
                          a policy can reference it. To add an attestor to a policy
                          the principal issuing the policy change request must be
                          able to read the attestor resource. \n Note: this field
                          must be non-empty when the evaluation_mode field specifies
                          REQUIRE_ATTESTATION, otherwise it must be empty."
                        items:
                          type: string
                        type: array
                    required:
                    - enforcementMode
                    - evaluationMode
                    type: object
                  description:
                    description: A descriptive comment.
                    type: string
                  globalPolicyEvaluationMode:
                    description: 'Controls the evaluation of a Google-maintained global
                      admission policy for common system-level images. Images not
                      covered by the global policy will be subject to the project
                      admission policy. Possible values: ["ENABLE", "DISABLE"]'
                    type: string
                  id:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - defaultAdmissionRule
                - providerRef
                type: object
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - defaultAdmissionRule
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
