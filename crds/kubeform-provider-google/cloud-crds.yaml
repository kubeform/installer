apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: identitygroups.cloud.google.kubeform.com
spec:
  group: cloud.google.kubeform.com
  names:
    kind: IdentityGroup
    listKind: IdentityGroupList
    plural: identitygroups
    singular: identitygroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              createTime:
                description: The time when the Group was created.
                type: string
              description:
                description: An extended description to help users determine the purpose
                  of a Group. Must not be longer than 4,096 characters.
                type: string
              displayName:
                description: The display name of the Group.
                type: string
              groupKey:
                description: EntityKey of the Group.
                properties:
                  ID:
                    description: "The ID of the entity. \n For Google-managed entities,
                      the id must be the email address of an existing group or user.
                      \n For external-identity-mapped entities, the id must be a string
                      conforming to the Identity Source's requirements. \n Must be
                      unique within a namespace."
                    type: string
                  namespace:
                    description: "The namespace in which the entity exists. \n If
                      not specified, the EntityKey represents a Google-managed entity
                      such as a Google user or a Google Group. \n If specified, the
                      EntityKey represents an external-identity-mapped group. The
                      namespace must correspond to an identity source created in Admin
                      Console and must be in the form of 'identitysources/{identity_source_id}'."
                    type: string
                required:
                - ID
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  createTime:
                    description: The time when the Group was created.
                    type: string
                  description:
                    description: An extended description to help users determine the
                      purpose of a Group. Must not be longer than 4,096 characters.
                    type: string
                  displayName:
                    description: The display name of the Group.
                    type: string
                  groupKey:
                    description: EntityKey of the Group.
                    properties:
                      ID:
                        description: "The ID of the entity. \n For Google-managed
                          entities, the id must be the email address of an existing
                          group or user. \n For external-identity-mapped entities,
                          the id must be a string conforming to the Identity Source's
                          requirements. \n Must be unique within a namespace."
                        type: string
                      namespace:
                        description: "The namespace in which the entity exists. \n
                          If not specified, the EntityKey represents a Google-managed
                          entity such as a Google user or a Google Group. \n If specified,
                          the EntityKey represents an external-identity-mapped group.
                          The namespace must correspond to an identity source created
                          in Admin Console and must be in the form of 'identitysources/{identity_source_id}'."
                        type: string
                    required:
                    - ID
                    type: object
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: "The labels that apply to the Group. \n Must not
                      contain more than one entry. Must contain the entry 'cloudidentity.googleapis.com/groups.discussion_forum':
                      '' if the Group is a Google Group or 'system/groups/external':
                      '' if the Group is an external-identity-mapped group."
                    type: object
                  name:
                    description: 'Resource name of the Group in the format: groups/{group_id},
                      where group_id is the unique ID assigned to the Group.'
                    type: string
                  parent:
                    description: "The resource name of the entity under which this
                      Group resides in the Cloud Identity resource hierarchy. \n Must
                      be of the form identitysources/{identity_source_id} for external-identity-mapped
                      groups or customers/{customer_id} for Google Groups."
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  updateTime:
                    description: The time when the Group was last updated.
                    type: string
                required:
                - groupKey
                - labels
                - parent
                - providerRef
                type: object
              labels:
                additionalProperties:
                  type: string
                description: "The labels that apply to the Group. \n Must not contain
                  more than one entry. Must contain the entry 'cloudidentity.googleapis.com/groups.discussion_forum':
                  '' if the Group is a Google Group or 'system/groups/external': ''
                  if the Group is an external-identity-mapped group."
                type: object
              name:
                description: 'Resource name of the Group in the format: groups/{group_id},
                  where group_id is the unique ID assigned to the Group.'
                type: string
              parent:
                description: "The resource name of the entity under which this Group
                  resides in the Cloud Identity resource hierarchy. \n Must be of
                  the form identitysources/{identity_source_id} for external-identity-mapped
                  groups or customers/{customer_id} for Google Groups."
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              updateTime:
                description: The time when the Group was last updated.
                type: string
            required:
            - groupKey
            - labels
            - parent
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: runserviceiammembers.cloud.google.kubeform.com
spec:
  group: cloud.google.kubeform.com
  names:
    kind: RunServiceIamMember
    listKind: RunServiceIamMemberList
    plural: runserviceiammembers
    singular: runserviceiammember
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  location:
                    type: string
                  member:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  service:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - member
                - providerRef
                - role
                - service
                type: object
              location:
                type: string
              member:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              service:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - member
            - providerRef
            - role
            - service
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: assetfolderfeeds.cloud.google.kubeform.com
spec:
  group: cloud.google.kubeform.com
  names:
    kind: AssetFolderFeed
    listKind: AssetFolderFeedList
    plural: assetfolderfeeds
    singular: assetfolderfeed
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              assetNames:
                description: 'A list of the full names of the assets to receive updates.
                  You must specify either or both of assetNames and assetTypes. Only
                  asset updates matching specified assetNames and assetTypes are exported
                  to the feed. For example: //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1.
                  See https://cloud.google.com/apis/design/resourceNames#fullResourceName
                  for more info.'
                items:
                  type: string
                type: array
              assetTypes:
                description: 'A list of types of the assets to receive updates. You
                  must specify either or both of assetNames and assetTypes. Only asset
                  updates matching specified assetNames and assetTypes are exported
                  to the feed. For example: "compute.googleapis.com/Disk" See https://cloud.google.com/asset-inventory/docs/supported-asset-types
                  for a list of all supported asset types.'
                items:
                  type: string
                type: array
              billingProject:
                description: The project whose identity will be used when sending
                  messages to the destination pubsub topic. It also specifies the
                  project for API enablement check, quota, and billing.
                type: string
              condition:
                description: 'A condition which determines whether an asset update
                  should be published. If specified, an asset will be returned only
                  when the expression evaluates to true. When set, expression field
                  must be a valid CEL expression on a TemporalAsset with name temporal_asset.
                  Example: a Feed with expression "temporal_asset.deleted == true"
                  will only publish Asset deletions. Other fields of condition are
                  optional.'
                properties:
                  description:
                    description: Description of the expression. This is a longer text
                      which describes the expression, e.g. when hovered over it in
                      a UI.
                    type: string
                  expression:
                    description: Textual representation of an expression in Common
                      Expression Language syntax.
                    type: string
                  location:
                    description: String indicating the location of the expression
                      for error reporting, e.g. a file name and a position in the
                      file.
                    type: string
                  title:
                    description: Title for the expression, i.e. a short string describing
                      its purpose. This can be used e.g. in UIs which allow to enter
                      the expression.
                    type: string
                required:
                - expression
                type: object
              contentType:
                description: 'Asset content type. If not specified, no content but
                  the asset name and type will be returned. Possible values: ["CONTENT_TYPE_UNSPECIFIED",
                  "RESOURCE", "IAM_POLICY", "ORG_POLICY", "ACCESS_POLICY"]'
                type: string
              feedID:
                description: This is the client-assigned asset feed identifier and
                  it needs to be unique under a specific parent.
                type: string
              feedOutputConfig:
                description: Output configuration for asset feed destination.
                properties:
                  pubsubDestination:
                    description: Destination on Cloud Pubsub.
                    properties:
                      topic:
                        description: Destination on Cloud Pubsub topic.
                        type: string
                    required:
                    - topic
                    type: object
                required:
                - pubsubDestination
                type: object
              folder:
                description: The folder this feed should be created in.
                type: string
              folderID:
                description: The ID of the folder where this feed has been created.
                  Both [FOLDER_NUMBER] and folders/[FOLDER_NUMBER] are accepted.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  assetNames:
                    description: 'A list of the full names of the assets to receive
                      updates. You must specify either or both of assetNames and assetTypes.
                      Only asset updates matching specified assetNames and assetTypes
                      are exported to the feed. For example: //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1.
                      See https://cloud.google.com/apis/design/resourceNames#fullResourceName
                      for more info.'
                    items:
                      type: string
                    type: array
                  assetTypes:
                    description: 'A list of types of the assets to receive updates.
                      You must specify either or both of assetNames and assetTypes.
                      Only asset updates matching specified assetNames and assetTypes
                      are exported to the feed. For example: "compute.googleapis.com/Disk"
                      See https://cloud.google.com/asset-inventory/docs/supported-asset-types
                      for a list of all supported asset types.'
                    items:
                      type: string
                    type: array
                  billingProject:
                    description: The project whose identity will be used when sending
                      messages to the destination pubsub topic. It also specifies
                      the project for API enablement check, quota, and billing.
                    type: string
                  condition:
                    description: 'A condition which determines whether an asset update
                      should be published. If specified, an asset will be returned
                      only when the expression evaluates to true. When set, expression
                      field must be a valid CEL expression on a TemporalAsset with
                      name temporal_asset. Example: a Feed with expression "temporal_asset.deleted
                      == true" will only publish Asset deletions. Other fields of
                      condition are optional.'
                    properties:
                      description:
                        description: Description of the expression. This is a longer
                          text which describes the expression, e.g. when hovered over
                          it in a UI.
                        type: string
                      expression:
                        description: Textual representation of an expression in Common
                          Expression Language syntax.
                        type: string
                      location:
                        description: String indicating the location of the expression
                          for error reporting, e.g. a file name and a position in
                          the file.
                        type: string
                      title:
                        description: Title for the expression, i.e. a short string
                          describing its purpose. This can be used e.g. in UIs which
                          allow to enter the expression.
                        type: string
                    required:
                    - expression
                    type: object
                  contentType:
                    description: 'Asset content type. If not specified, no content
                      but the asset name and type will be returned. Possible values:
                      ["CONTENT_TYPE_UNSPECIFIED", "RESOURCE", "IAM_POLICY", "ORG_POLICY",
                      "ACCESS_POLICY"]'
                    type: string
                  feedID:
                    description: This is the client-assigned asset feed identifier
                      and it needs to be unique under a specific parent.
                    type: string
                  feedOutputConfig:
                    description: Output configuration for asset feed destination.
                    properties:
                      pubsubDestination:
                        description: Destination on Cloud Pubsub.
                        properties:
                          topic:
                            description: Destination on Cloud Pubsub topic.
                            type: string
                        required:
                        - topic
                        type: object
                    required:
                    - pubsubDestination
                    type: object
                  folder:
                    description: The folder this feed should be created in.
                    type: string
                  folderID:
                    description: The ID of the folder where this feed has been created.
                      Both [FOLDER_NUMBER] and folders/[FOLDER_NUMBER] are accepted.
                    type: string
                  id:
                    type: string
                  name:
                    description: The format will be folders/{folder_number}/feeds/{client-assigned_feed_identifier}.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - billingProject
                - feedID
                - feedOutputConfig
                - folder
                - providerRef
                type: object
              name:
                description: The format will be folders/{folder_number}/feeds/{client-assigned_feed_identifier}.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - billingProject
            - feedID
            - feedOutputConfig
            - folder
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: rundomainmappings.cloud.google.kubeform.com
spec:
  group: cloud.google.kubeform.com
  names:
    kind: RunDomainMapping
    listKind: RunDomainMappingList
    plural: rundomainmappings
    singular: rundomainmapping
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  location:
                    description: The location of the cloud run instance. eg us-central1
                    type: string
                  metadata:
                    description: Metadata associated with this DomainMapping.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: "Annotations is a key value map stored with a
                          resource that may be set by external tools to store and
                          retrieve arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
                          \n **Note**: The Cloud Run API may add additional annotations
                          that were not provided in your config. If terraform plan
                          shows a diff where a server-side annotation is added, you
                          can add it to your config or apply the lifecycle.ignore_changes
                          rule to the metadata.0.annotations field."
                        type: object
                      generation:
                        description: A sequence number representing a specific generation
                          of the desired state.
                        format: int64
                        type: integer
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and routes. More
                          info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                      namespace:
                        description: In Cloud Run the namespace must be equal to either
                          the project ID or project number.
                        type: string
                      resourceVersion:
                        description: "An opaque value that represents the internal
                          version of this object that can be used by clients to determine
                          when objects have changed. May be used for optimistic concurrency,
                          change detection, and the watch operation on a resource
                          or set of resources. They may only be valid for a particular
                          resource or set of resources. \n More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
                        type: string
                      selfLink:
                        description: SelfLink is a URL representing this object.
                        type: string
                      uid:
                        description: "UID is a unique id generated by the server on
                          successful creation of a resource and is not allowed to
                          change on PUT operations. \n More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                        type: string
                    required:
                    - namespace
                    type: object
                  name:
                    description: Name should be a verified domain
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  spec:
                    description: The spec for this DomainMapping.
                    properties:
                      certificateMode:
                        description: 'The mode of the certificate. Default value:
                          "AUTOMATIC" Possible values: ["NONE", "AUTOMATIC"]'
                        type: string
                      forceOverride:
                        description: If set, the mapping will override any mapping
                          set before this spec was set. It is recommended that the
                          user leaves this empty to receive an error warning about
                          a potential conflict and only set it once the respective
                          UI has given such a warning.
                        type: boolean
                      routeName:
                        description: The name of the Cloud Run Service that this DomainMapping
                          applies to. The route must exist.
                        type: string
                    required:
                    - routeName
                    type: object
                  status:
                    description: The current status of the DomainMapping.
                    items:
                      properties:
                        conditions:
                          description: Array of observed DomainMappingConditions,
                            indicating the current state of the DomainMapping.
                          items:
                            properties:
                              message:
                                description: Human readable message indicating details
                                  about the current status.
                                type: string
                              reason:
                                description: One-word CamelCase reason for the condition's
                                  current status.
                                type: string
                              status:
                                description: Status of the condition, one of True,
                                  False, Unknown.
                                type: string
                              type:
                                description: Type of domain mapping condition.
                                type: string
                            type: object
                          type: array
                        mappedRouteName:
                          description: The name of the route that the mapping currently
                            points to.
                          type: string
                        observedGeneration:
                          description: ObservedGeneration is the 'Generation' of the
                            DomainMapping that was last processed by the controller.
                          format: int64
                          type: integer
                        resourceRecords:
                          description: The resource records required to configure
                            this domain mapping. These records must be added to the
                            domain's DNS configuration in order to serve the application
                            via this domain mapping.
                          items:
                            properties:
                              name:
                                description: 'Relative name of the object affected
                                  by this record. Only applicable for ''CNAME'' records.
                                  Example: ''www''.'
                                type: string
                              rrdata:
                                description: Data for this record. Values vary by
                                  record type, as defined in RFC 1035 (section 5)
                                  and RFC 1034 (section 3.6.1).
                                type: string
                              type:
                                description: 'Resource record type. Example: ''AAAA''.
                                  Possible values: ["A", "AAAA", "CNAME"]'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - location
                - metadata
                - name
                - providerRef
                - spec
                type: object
              location:
                description: The location of the cloud run instance. eg us-central1
                type: string
              metadata:
                description: Metadata associated with this DomainMapping.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: "Annotations is a key value map stored with a resource
                      that may be set by external tools to store and retrieve arbitrary
                      metadata. More info: http://kubernetes.io/docs/user-guide/annotations
                      \n **Note**: The Cloud Run API may add additional annotations
                      that were not provided in your config. If terraform plan shows
                      a diff where a server-side annotation is added, you can add
                      it to your config or apply the lifecycle.ignore_changes rule
                      to the metadata.0.annotations field."
                    type: object
                  generation:
                    description: A sequence number representing a specific generation
                      of the desired state.
                    format: int64
                    type: integer
                  labels:
                    additionalProperties:
                      type: string
                    description: 'Map of string keys and values that can be used to
                      organize and categorize (scope and select) objects. May match
                      selectors of replication controllers and routes. More info:
                      http://kubernetes.io/docs/user-guide/labels'
                    type: object
                  namespace:
                    description: In Cloud Run the namespace must be equal to either
                      the project ID or project number.
                    type: string
                  resourceVersion:
                    description: "An opaque value that represents the internal version
                      of this object that can be used by clients to determine when
                      objects have changed. May be used for optimistic concurrency,
                      change detection, and the watch operation on a resource or set
                      of resources. They may only be valid for a particular resource
                      or set of resources. \n More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
                    type: string
                  selfLink:
                    description: SelfLink is a URL representing this object.
                    type: string
                  uid:
                    description: "UID is a unique id generated by the server on successful
                      creation of a resource and is not allowed to change on PUT operations.
                      \n More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                    type: string
                required:
                - namespace
                type: object
              name:
                description: Name should be a verified domain
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              spec:
                description: The spec for this DomainMapping.
                properties:
                  certificateMode:
                    description: 'The mode of the certificate. Default value: "AUTOMATIC"
                      Possible values: ["NONE", "AUTOMATIC"]'
                    type: string
                  forceOverride:
                    description: If set, the mapping will override any mapping set
                      before this spec was set. It is recommended that the user leaves
                      this empty to receive an error warning about a potential conflict
                      and only set it once the respective UI has given such a warning.
                    type: boolean
                  routeName:
                    description: The name of the Cloud Run Service that this DomainMapping
                      applies to. The route must exist.
                    type: string
                required:
                - routeName
                type: object
              status:
                description: The current status of the DomainMapping.
                items:
                  properties:
                    conditions:
                      description: Array of observed DomainMappingConditions, indicating
                        the current state of the DomainMapping.
                      items:
                        properties:
                          message:
                            description: Human readable message indicating details
                              about the current status.
                            type: string
                          reason:
                            description: One-word CamelCase reason for the condition's
                              current status.
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            type: string
                          type:
                            description: Type of domain mapping condition.
                            type: string
                        type: object
                      type: array
                    mappedRouteName:
                      description: The name of the route that the mapping currently
                        points to.
                      type: string
                    observedGeneration:
                      description: ObservedGeneration is the 'Generation' of the DomainMapping
                        that was last processed by the controller.
                      format: int64
                      type: integer
                    resourceRecords:
                      description: The resource records required to configure this
                        domain mapping. These records must be added to the domain's
                        DNS configuration in order to serve the application via this
                        domain mapping.
                      items:
                        properties:
                          name:
                            description: 'Relative name of the object affected by
                              this record. Only applicable for ''CNAME'' records.
                              Example: ''www''.'
                            type: string
                          rrdata:
                            description: Data for this record. Values vary by record
                              type, as defined in RFC 1035 (section 5) and RFC 1034
                              (section 3.6.1).
                            type: string
                          type:
                            description: 'Resource record type. Example: ''AAAA''.
                              Possible values: ["A", "AAAA", "CNAME"]'
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - location
            - metadata
            - name
            - providerRef
            - spec
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: assetorganizationfeeds.cloud.google.kubeform.com
spec:
  group: cloud.google.kubeform.com
  names:
    kind: AssetOrganizationFeed
    listKind: AssetOrganizationFeedList
    plural: assetorganizationfeeds
    singular: assetorganizationfeed
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              assetNames:
                description: 'A list of the full names of the assets to receive updates.
                  You must specify either or both of assetNames and assetTypes. Only
                  asset updates matching specified assetNames and assetTypes are exported
                  to the feed. For example: //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1.
                  See https://cloud.google.com/apis/design/resourceNames#fullResourceName
                  for more info.'
                items:
                  type: string
                type: array
              assetTypes:
                description: 'A list of types of the assets to receive updates. You
                  must specify either or both of assetNames and assetTypes. Only asset
                  updates matching specified assetNames and assetTypes are exported
                  to the feed. For example: "compute.googleapis.com/Disk" See https://cloud.google.com/asset-inventory/docs/supported-asset-types
                  for a list of all supported asset types.'
                items:
                  type: string
                type: array
              billingProject:
                description: The project whose identity will be used when sending
                  messages to the destination pubsub topic. It also specifies the
                  project for API enablement check, quota, and billing.
                type: string
              condition:
                description: 'A condition which determines whether an asset update
                  should be published. If specified, an asset will be returned only
                  when the expression evaluates to true. When set, expression field
                  must be a valid CEL expression on a TemporalAsset with name temporal_asset.
                  Example: a Feed with expression "temporal_asset.deleted == true"
                  will only publish Asset deletions. Other fields of condition are
                  optional.'
                properties:
                  description:
                    description: Description of the expression. This is a longer text
                      which describes the expression, e.g. when hovered over it in
                      a UI.
                    type: string
                  expression:
                    description: Textual representation of an expression in Common
                      Expression Language syntax.
                    type: string
                  location:
                    description: String indicating the location of the expression
                      for error reporting, e.g. a file name and a position in the
                      file.
                    type: string
                  title:
                    description: Title for the expression, i.e. a short string describing
                      its purpose. This can be used e.g. in UIs which allow to enter
                      the expression.
                    type: string
                required:
                - expression
                type: object
              contentType:
                description: 'Asset content type. If not specified, no content but
                  the asset name and type will be returned. Possible values: ["CONTENT_TYPE_UNSPECIFIED",
                  "RESOURCE", "IAM_POLICY", "ORG_POLICY", "ACCESS_POLICY"]'
                type: string
              feedID:
                description: This is the client-assigned asset feed identifier and
                  it needs to be unique under a specific parent.
                type: string
              feedOutputConfig:
                description: Output configuration for asset feed destination.
                properties:
                  pubsubDestination:
                    description: Destination on Cloud Pubsub.
                    properties:
                      topic:
                        description: Destination on Cloud Pubsub topic.
                        type: string
                    required:
                    - topic
                    type: object
                required:
                - pubsubDestination
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  assetNames:
                    description: 'A list of the full names of the assets to receive
                      updates. You must specify either or both of assetNames and assetTypes.
                      Only asset updates matching specified assetNames and assetTypes
                      are exported to the feed. For example: //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1.
                      See https://cloud.google.com/apis/design/resourceNames#fullResourceName
                      for more info.'
                    items:
                      type: string
                    type: array
                  assetTypes:
                    description: 'A list of types of the assets to receive updates.
                      You must specify either or both of assetNames and assetTypes.
                      Only asset updates matching specified assetNames and assetTypes
                      are exported to the feed. For example: "compute.googleapis.com/Disk"
                      See https://cloud.google.com/asset-inventory/docs/supported-asset-types
                      for a list of all supported asset types.'
                    items:
                      type: string
                    type: array
                  billingProject:
                    description: The project whose identity will be used when sending
                      messages to the destination pubsub topic. It also specifies
                      the project for API enablement check, quota, and billing.
                    type: string
                  condition:
                    description: 'A condition which determines whether an asset update
                      should be published. If specified, an asset will be returned
                      only when the expression evaluates to true. When set, expression
                      field must be a valid CEL expression on a TemporalAsset with
                      name temporal_asset. Example: a Feed with expression "temporal_asset.deleted
                      == true" will only publish Asset deletions. Other fields of
                      condition are optional.'
                    properties:
                      description:
                        description: Description of the expression. This is a longer
                          text which describes the expression, e.g. when hovered over
                          it in a UI.
                        type: string
                      expression:
                        description: Textual representation of an expression in Common
                          Expression Language syntax.
                        type: string
                      location:
                        description: String indicating the location of the expression
                          for error reporting, e.g. a file name and a position in
                          the file.
                        type: string
                      title:
                        description: Title for the expression, i.e. a short string
                          describing its purpose. This can be used e.g. in UIs which
                          allow to enter the expression.
                        type: string
                    required:
                    - expression
                    type: object
                  contentType:
                    description: 'Asset content type. If not specified, no content
                      but the asset name and type will be returned. Possible values:
                      ["CONTENT_TYPE_UNSPECIFIED", "RESOURCE", "IAM_POLICY", "ORG_POLICY",
                      "ACCESS_POLICY"]'
                    type: string
                  feedID:
                    description: This is the client-assigned asset feed identifier
                      and it needs to be unique under a specific parent.
                    type: string
                  feedOutputConfig:
                    description: Output configuration for asset feed destination.
                    properties:
                      pubsubDestination:
                        description: Destination on Cloud Pubsub.
                        properties:
                          topic:
                            description: Destination on Cloud Pubsub topic.
                            type: string
                        required:
                        - topic
                        type: object
                    required:
                    - pubsubDestination
                    type: object
                  id:
                    type: string
                  name:
                    description: The format will be organizations/{organization_number}/feeds/{client-assigned_feed_identifier}.
                    type: string
                  orgID:
                    description: The organization this feed should be created in.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - billingProject
                - feedID
                - feedOutputConfig
                - orgID
                - providerRef
                type: object
              name:
                description: The format will be organizations/{organization_number}/feeds/{client-assigned_feed_identifier}.
                type: string
              orgID:
                description: The organization this feed should be created in.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - billingProject
            - feedID
            - feedOutputConfig
            - orgID
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: runserviceiampolicies.cloud.google.kubeform.com
spec:
  group: cloud.google.kubeform.com
  names:
    kind: RunServiceIamPolicy
    listKind: RunServiceIamPolicyList
    plural: runserviceiampolicies
    singular: runserviceiampolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  etag:
                    type: string
                  id:
                    type: string
                  location:
                    type: string
                  policyData:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  service:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - policyData
                - providerRef
                - service
                type: object
              location:
                type: string
              policyData:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              service:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - policyData
            - providerRef
            - service
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: identitygroupmemberships.cloud.google.kubeform.com
spec:
  group: cloud.google.kubeform.com
  names:
    kind: IdentityGroupMembership
    listKind: IdentityGroupMembershipList
    plural: identitygroupmemberships
    singular: identitygroupmembership
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              createTime:
                description: The time when the Membership was created.
                type: string
              group:
                description: The name of the Group to create this membership in.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  createTime:
                    description: The time when the Membership was created.
                    type: string
                  group:
                    description: The name of the Group to create this membership in.
                    type: string
                  id:
                    type: string
                  name:
                    description: The resource name of the Membership, of the form
                      groups/{group_id}/memberships/{membership_id}.
                    type: string
                  preferredMemberKey:
                    description: EntityKey of the member.
                    properties:
                      ID:
                        description: "The ID of the entity. \n For Google-managed
                          entities, the id must be the email address of an existing
                          group or user. \n For external-identity-mapped entities,
                          the id must be a string conforming to the Identity Source's
                          requirements. \n Must be unique within a namespace."
                        type: string
                      namespace:
                        description: "The namespace in which the entity exists. \n
                          If not specified, the EntityKey represents a Google-managed
                          entity such as a Google user or a Google Group. \n If specified,
                          the EntityKey represents an external-identity-mapped group.
                          The namespace must correspond to an identity source created
                          in Admin Console and must be in the form of 'identitysources/{identity_source_id}'."
                        type: string
                    required:
                    - ID
                    type: object
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  roles:
                    description: The MembershipRoles that apply to the Membership.
                      Must not contain duplicate MembershipRoles with the same name.
                    items:
                      properties:
                        name:
                          description: 'The name of the MembershipRole. Must be one
                            of OWNER, MANAGER, MEMBER. Possible values: ["OWNER",
                            "MANAGER", "MEMBER"]'
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    description: The type of the membership.
                    type: string
                  updateTime:
                    description: The time when the Membership was last updated.
                    type: string
                required:
                - group
                - providerRef
                - roles
                type: object
              name:
                description: The resource name of the Membership, of the form groups/{group_id}/memberships/{membership_id}.
                type: string
              preferredMemberKey:
                description: EntityKey of the member.
                properties:
                  ID:
                    description: "The ID of the entity. \n For Google-managed entities,
                      the id must be the email address of an existing group or user.
                      \n For external-identity-mapped entities, the id must be a string
                      conforming to the Identity Source's requirements. \n Must be
                      unique within a namespace."
                    type: string
                  namespace:
                    description: "The namespace in which the entity exists. \n If
                      not specified, the EntityKey represents a Google-managed entity
                      such as a Google user or a Google Group. \n If specified, the
                      EntityKey represents an external-identity-mapped group. The
                      namespace must correspond to an identity source created in Admin
                      Console and must be in the form of 'identitysources/{identity_source_id}'."
                    type: string
                required:
                - ID
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              roles:
                description: The MembershipRoles that apply to the Membership. Must
                  not contain duplicate MembershipRoles with the same name.
                items:
                  properties:
                    name:
                      description: 'The name of the MembershipRole. Must be one of
                        OWNER, MANAGER, MEMBER. Possible values: ["OWNER", "MANAGER",
                        "MEMBER"]'
                      type: string
                  required:
                  - name
                  type: object
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              type:
                description: The type of the membership.
                type: string
              updateTime:
                description: The time when the Membership was last updated.
                type: string
            required:
            - group
            - providerRef
            - roles
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: runserviceiambindings.cloud.google.kubeform.com
spec:
  group: cloud.google.kubeform.com
  names:
    kind: RunServiceIamBinding
    listKind: RunServiceIamBindingList
    plural: runserviceiambindings
    singular: runserviceiambinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  location:
                    type: string
                  members:
                    items:
                      type: string
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  service:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - members
                - providerRef
                - role
                - service
                type: object
              location:
                type: string
              members:
                items:
                  type: string
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              service:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - members
            - providerRef
            - role
            - service
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: runservices.cloud.google.kubeform.com
spec:
  group: cloud.google.kubeform.com
  names:
    kind: RunService
    listKind: RunServiceList
    plural: runservices
    singular: runservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              autogenerateRevisionName:
                type: boolean
              id:
                type: string
              kubeformOutput:
                properties:
                  autogenerateRevisionName:
                    type: boolean
                  id:
                    type: string
                  location:
                    description: The location of the cloud run instance. eg us-central1
                    type: string
                  metadata:
                    description: Metadata associated with this Service, including
                      name, namespace, labels, and annotations.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: "Annotations is a key value map stored with a
                          resource that may be set by external tools to store and
                          retrieve arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
                          \n **Note**: The Cloud Run API may add additional annotations
                          that were not provided in your config. If terraform plan
                          shows a diff where a server-side annotation is added, you
                          can add it to your config or apply the lifecycle.ignore_changes
                          rule to the metadata.0.annotations field. \n Cloud Run (fully
                          managed) uses the following annotation keys to configure
                          features on a Service: \n - 'run.googleapis.com/ingress'
                          sets the [ingress settings](https://cloud.google.com/sdk/gcloud/reference/run/deploy#--ingress)
                          \  for the Service. For example, '\"run.googleapis.com/ingress\"
                          = \"all\"'."
                        type: object
                      generation:
                        description: A sequence number representing a specific generation
                          of the desired state.
                        format: int64
                        type: integer
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and routes. More
                          info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                      namespace:
                        description: In Cloud Run the namespace must be equal to either
                          the project ID or project number.
                        type: string
                      resourceVersion:
                        description: "An opaque value that represents the internal
                          version of this object that can be used by clients to determine
                          when objects have changed. May be used for optimistic concurrency,
                          change detection, and the watch operation on a resource
                          or set of resources. They may only be valid for a particular
                          resource or set of resources. \n More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
                        type: string
                      selfLink:
                        description: SelfLink is a URL representing this object.
                        type: string
                      uid:
                        description: "UID is a unique id generated by the server on
                          successful creation of a resource and is not allowed to
                          change on PUT operations. \n More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                        type: string
                    type: object
                  name:
                    description: 'Name must be unique within a namespace, within a
                      Cloud Run region. Is required when creating resources. Name
                      is primarily intended for creation idempotence and configuration
                      definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  status:
                    description: The current status of the Service.
                    items:
                      properties:
                        conditions:
                          description: Array of observed Service Conditions, indicating
                            the current ready state of the service.
                          items:
                            properties:
                              message:
                                description: Human readable message indicating details
                                  about the current status.
                                type: string
                              reason:
                                description: One-word CamelCase reason for the condition's
                                  current status.
                                type: string
                              status:
                                description: Status of the condition, one of True,
                                  False, Unknown.
                                type: string
                              type:
                                description: Type of domain mapping condition.
                                type: string
                            type: object
                          type: array
                        latestCreatedRevisionName:
                          description: From ConfigurationStatus. LatestCreatedRevisionName
                            is the last revision that was created from this Service's
                            Configuration. It might not be ready yet, for that use
                            LatestReadyRevisionName.
                          type: string
                        latestReadyRevisionName:
                          description: From ConfigurationStatus. LatestReadyRevisionName
                            holds the name of the latest Revision stamped out from
                            this Service's Configuration that has had its "Ready"
                            condition become "True".
                          type: string
                        observedGeneration:
                          description: "ObservedGeneration is the 'Generation' of
                            the Route that was last processed by the controller. \n
                            Clients polling for completed reconciliation should poll
                            until observedGeneration = metadata.generation and the
                            Ready condition's status is True or False."
                          format: int64
                          type: integer
                        url:
                          description: From RouteStatus. URL holds the url that will
                            distribute traffic over the provided traffic targets.
                            It generally has the form https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app
                          type: string
                      type: object
                    type: array
                  template:
                    description: "template holds the latest specification for the
                      Revision to be stamped out. The template references the container
                      image, and may also include labels and annotations that should
                      be attached to the Revision. To correlate a Revision, and/or
                      to force a Revision to be created when the spec doesn't otherwise
                      change, a nonce label may be provided in the template metadata.
                      For more details, see: https://github.com/knative/serving/blob/master/docs/client-conventions.md#associate-modifications-with-revisions
                      \n Cloud Run does not currently support referencing a build
                      that is responsible for materializing the container image from
                      source."
                    properties:
                      metadata:
                        description: Optional metadata for this Revision, including
                          labels and annotations. Name will be generated by the Configuration.
                          To set minimum instances for this revision, use the "autoscaling.knative.dev/minScale"
                          annotation key (Cloud Run on GKE only). To set maximum instances
                          for this revision, use the "autoscaling.knative.dev/maxScale"
                          annotation key. To set Cloud SQL connections for the revision,
                          use the "run.googleapis.com/cloudsql-instances" annotation
                          key.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: "Annotations is a key value map stored with
                              a resource that may be set by external tools to store
                              and retrieve arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
                              \n **Note**: The Cloud Run API may add additional annotations
                              that were not provided in your config. If terraform
                              plan shows a diff where a server-side annotation is
                              added, you can add it to your config or apply the lifecycle.ignore_changes
                              rule to the metadata.0.annotations field."
                            type: object
                          generation:
                            description: A sequence number representing a specific
                              generation of the desired state.
                            format: int64
                            type: integer
                          labels:
                            additionalProperties:
                              type: string
                            description: 'Map of string keys and values that can be
                              used to organize and categorize (scope and select) objects.
                              May match selectors of replication controllers and routes.
                              More info: http://kubernetes.io/docs/user-guide/labels'
                            type: object
                          name:
                            description: 'Name must be unique within a namespace,
                              within a Cloud Run region. Is required when creating
                              resources. Name is primarily intended for creation idempotence
                              and configuration definition. Cannot be updated. More
                              info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                          namespace:
                            description: In Cloud Run the namespace must be equal
                              to either the project ID or project number. It will
                              default to the resource's project.
                            type: string
                          resourceVersion:
                            description: "An opaque value that represents the internal
                              version of this object that can be used by clients to
                              determine when objects have changed. May be used for
                              optimistic concurrency, change detection, and the watch
                              operation on a resource or set of resources. They may
                              only be valid for a particular resource or set of resources.
                              \n More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
                            type: string
                          selfLink:
                            description: SelfLink is a URL representing this object.
                            type: string
                          uid:
                            description: "UID is a unique id generated by the server
                              on successful creation of a resource and is not allowed
                              to change on PUT operations. \n More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                            type: string
                        type: object
                      spec:
                        description: RevisionSpec holds the desired state of the Revision
                          (from the client).
                        properties:
                          containerConcurrency:
                            description: 'ContainerConcurrency specifies the maximum
                              allowed in-flight (concurrent) requests per container
                              of the Revision. Values are: - ''0'' thread-safe, the
                              system should manage the max concurrency. This is     the
                              default value. - ''1'' not-thread-safe. Single concurrency
                              - ''2-N'' thread-safe, max concurrency of N'
                            format: int64
                            type: integer
                          containers:
                            description: 'Container defines the unit of execution
                              for this Revision. In the context of a Revision, we
                              disallow a number of the fields of this Container, including:
                              name, ports, and volumeMounts. The runtime contract
                              is documented here: https://github.com/knative/serving/blob/master/docs/runtime-contract.md'
                            items:
                              properties:
                                args:
                                  description: 'Arguments to the entrypoint. The docker
                                    image''s CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using
                                    the container''s environment. If a variable cannot
                                    be resolved, the reference in the input string
                                    will be unchanged. The $(VAR_NAME) syntax can
                                    be escaped with a double $$, ie: $$(VAR_NAME).
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. More info:
                                    https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                command:
                                  description: 'Entrypoint array. Not executed within
                                    a shell. The docker image''s ENTRYPOINT is used
                                    if this is not provided. Variable references $(VAR_NAME)
                                    are expanded using the container''s environment.
                                    If a variable cannot be resolved, the reference
                                    in the input string will be unchanged. The $(VAR_NAME)
                                    syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. More info:
                                    https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                env:
                                  description: List of environment variables to set
                                    in the container.
                                  items:
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                        type: string
                                      value:
                                        description: 'Variable references $(VAR_NAME)
                                          are expanded using the previous defined
                                          environment variables in the container and
                                          any route environment variables. If a variable
                                          cannot be resolved, the reference in the
                                          input string will be unchanged. The $(VAR_NAME)
                                          syntax can be escaped with a double $$,
                                          ie: $$(VAR_NAME). Escaped references will
                                          never be expanded, regardless of whether
                                          the variable exists or not. Defaults to
                                          "".'
                                        type: string
                                    type: object
                                  type: array
                                envFrom:
                                  description: List of sources to populate environment
                                    variables in the container. All invalid keys will
                                    be reported as an event when the container is
                                    starting. When a key exists in multiple sources,
                                    the value associated with the last source will
                                    take precedence. Values defined by an Env with
                                    a duplicate key will take precedence. Deprecated
                                  items:
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from.
                                        properties:
                                          localObjectReference:
                                            description: The ConfigMap to select from.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from.
                                        properties:
                                          localObjectReference:
                                            description: The Secret to select from.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                    type: object
                                  type: array
                                image:
                                  description: 'Docker image name. This is most often
                                    a reference to a container located in the container
                                    registry, such as gcr.io/cloudrun/hello More info:
                                    https://kubernetes.io/docs/concepts/containers/images'
                                  type: string
                                ports:
                                  description: 'List of open ports in the container.
                                    More Info: https://cloud.google.com/run/docs/reference/rest/v1/RevisionSpec#ContainerPort'
                                  items:
                                    properties:
                                      containerPort:
                                        description: Port number.
                                        format: int64
                                        type: integer
                                      name:
                                        description: Name of the port.
                                        type: string
                                      protocol:
                                        description: Protocol used on port. Defaults
                                          to TCP.
                                        type: string
                                    required:
                                    - containerPort
                                    type: object
                                  type: array
                                resources:
                                  description: 'Compute Resources required by this
                                    container. Used to set values such as max memory
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits'
                                  properties:
                                    limits:
                                      additionalProperties:
                                        type: string
                                      description: 'Limits describes the maximum amount
                                        of compute resources allowed. The values of
                                        the map is string form of the ''quantity''
                                        k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        type: string
                                      description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. The values
                                        of the map is string form of the ''quantity''
                                        k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go'
                                      type: object
                                  type: object
                                workingDir:
                                  description: Container's working directory. If not
                                    specified, the container runtime's default will
                                    be used, which might be configured in the container
                                    image. Deprecated
                                  type: string
                              required:
                              - image
                              type: object
                            type: array
                          serviceAccountName:
                            description: Email address of the IAM service account
                              associated with the revision of the service. The service
                              account represents the identity of the running revision,
                              and determines what permissions the revision has. If
                              not provided, the revision will use the project's default
                              service account.
                            type: string
                          servingState:
                            description: ServingState holds a value describing the
                              state the resources are in for this Revision. It is
                              expected that the system will manipulate this based
                              on routability and load. Deprecated
                            type: string
                          timeoutSeconds:
                            description: TimeoutSeconds holds the max duration the
                              instance is allowed for responding to a request.
                            format: int64
                            type: integer
                        type: object
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  traffic:
                    description: Traffic specifies how to distribute traffic over
                      a collection of Knative Revisions and Configurations
                    items:
                      properties:
                        latestRevision:
                          description: LatestRevision may be optionally provided to
                            indicate that the latest ready Revision of the Configuration
                            should be used for this traffic target. When provided
                            LatestRevision must be true if RevisionName is empty;
                            it must be false when RevisionName is non-empty.
                          type: boolean
                        percent:
                          description: Percent specifies percent of the traffic to
                            this Revision or Configuration.
                          format: int64
                          type: integer
                        revisionName:
                          description: RevisionName of a specific revision to which
                            to send this portion of traffic.
                          type: string
                      required:
                      - percent
                      type: object
                    type: array
                required:
                - location
                - name
                - providerRef
                type: object
              location:
                description: The location of the cloud run instance. eg us-central1
                type: string
              metadata:
                description: Metadata associated with this Service, including name,
                  namespace, labels, and annotations.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: "Annotations is a key value map stored with a resource
                      that may be set by external tools to store and retrieve arbitrary
                      metadata. More info: http://kubernetes.io/docs/user-guide/annotations
                      \n **Note**: The Cloud Run API may add additional annotations
                      that were not provided in your config. If terraform plan shows
                      a diff where a server-side annotation is added, you can add
                      it to your config or apply the lifecycle.ignore_changes rule
                      to the metadata.0.annotations field. \n Cloud Run (fully managed)
                      uses the following annotation keys to configure features on
                      a Service: \n - 'run.googleapis.com/ingress' sets the [ingress
                      settings](https://cloud.google.com/sdk/gcloud/reference/run/deploy#--ingress)
                      \  for the Service. For example, '\"run.googleapis.com/ingress\"
                      = \"all\"'."
                    type: object
                  generation:
                    description: A sequence number representing a specific generation
                      of the desired state.
                    format: int64
                    type: integer
                  labels:
                    additionalProperties:
                      type: string
                    description: 'Map of string keys and values that can be used to
                      organize and categorize (scope and select) objects. May match
                      selectors of replication controllers and routes. More info:
                      http://kubernetes.io/docs/user-guide/labels'
                    type: object
                  namespace:
                    description: In Cloud Run the namespace must be equal to either
                      the project ID or project number.
                    type: string
                  resourceVersion:
                    description: "An opaque value that represents the internal version
                      of this object that can be used by clients to determine when
                      objects have changed. May be used for optimistic concurrency,
                      change detection, and the watch operation on a resource or set
                      of resources. They may only be valid for a particular resource
                      or set of resources. \n More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
                    type: string
                  selfLink:
                    description: SelfLink is a URL representing this object.
                    type: string
                  uid:
                    description: "UID is a unique id generated by the server on successful
                      creation of a resource and is not allowed to change on PUT operations.
                      \n More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                    type: string
                type: object
              name:
                description: 'Name must be unique within a namespace, within a Cloud
                  Run region. Is required when creating resources. Name is primarily
                  intended for creation idempotence and configuration definition.
                  Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              status:
                description: The current status of the Service.
                items:
                  properties:
                    conditions:
                      description: Array of observed Service Conditions, indicating
                        the current ready state of the service.
                      items:
                        properties:
                          message:
                            description: Human readable message indicating details
                              about the current status.
                            type: string
                          reason:
                            description: One-word CamelCase reason for the condition's
                              current status.
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            type: string
                          type:
                            description: Type of domain mapping condition.
                            type: string
                        type: object
                      type: array
                    latestCreatedRevisionName:
                      description: From ConfigurationStatus. LatestCreatedRevisionName
                        is the last revision that was created from this Service's
                        Configuration. It might not be ready yet, for that use LatestReadyRevisionName.
                      type: string
                    latestReadyRevisionName:
                      description: From ConfigurationStatus. LatestReadyRevisionName
                        holds the name of the latest Revision stamped out from this
                        Service's Configuration that has had its "Ready" condition
                        become "True".
                      type: string
                    observedGeneration:
                      description: "ObservedGeneration is the 'Generation' of the
                        Route that was last processed by the controller. \n Clients
                        polling for completed reconciliation should poll until observedGeneration
                        = metadata.generation and the Ready condition's status is
                        True or False."
                      format: int64
                      type: integer
                    url:
                      description: From RouteStatus. URL holds the url that will distribute
                        traffic over the provided traffic targets. It generally has
                        the form https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app
                      type: string
                  type: object
                type: array
              template:
                description: "template holds the latest specification for the Revision
                  to be stamped out. The template references the container image,
                  and may also include labels and annotations that should be attached
                  to the Revision. To correlate a Revision, and/or to force a Revision
                  to be created when the spec doesn't otherwise change, a nonce label
                  may be provided in the template metadata. For more details, see:
                  https://github.com/knative/serving/blob/master/docs/client-conventions.md#associate-modifications-with-revisions
                  \n Cloud Run does not currently support referencing a build that
                  is responsible for materializing the container image from source."
                properties:
                  metadata:
                    description: Optional metadata for this Revision, including labels
                      and annotations. Name will be generated by the Configuration.
                      To set minimum instances for this revision, use the "autoscaling.knative.dev/minScale"
                      annotation key (Cloud Run on GKE only). To set maximum instances
                      for this revision, use the "autoscaling.knative.dev/maxScale"
                      annotation key. To set Cloud SQL connections for the revision,
                      use the "run.googleapis.com/cloudsql-instances" annotation key.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: "Annotations is a key value map stored with a
                          resource that may be set by external tools to store and
                          retrieve arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
                          \n **Note**: The Cloud Run API may add additional annotations
                          that were not provided in your config. If terraform plan
                          shows a diff where a server-side annotation is added, you
                          can add it to your config or apply the lifecycle.ignore_changes
                          rule to the metadata.0.annotations field."
                        type: object
                      generation:
                        description: A sequence number representing a specific generation
                          of the desired state.
                        format: int64
                        type: integer
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and routes. More
                          info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                      name:
                        description: 'Name must be unique within a namespace, within
                          a Cloud Run region. Is required when creating resources.
                          Name is primarily intended for creation idempotence and
                          configuration definition. Cannot be updated. More info:
                          http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                      namespace:
                        description: In Cloud Run the namespace must be equal to either
                          the project ID or project number. It will default to the
                          resource's project.
                        type: string
                      resourceVersion:
                        description: "An opaque value that represents the internal
                          version of this object that can be used by clients to determine
                          when objects have changed. May be used for optimistic concurrency,
                          change detection, and the watch operation on a resource
                          or set of resources. They may only be valid for a particular
                          resource or set of resources. \n More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
                        type: string
                      selfLink:
                        description: SelfLink is a URL representing this object.
                        type: string
                      uid:
                        description: "UID is a unique id generated by the server on
                          successful creation of a resource and is not allowed to
                          change on PUT operations. \n More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                        type: string
                    type: object
                  spec:
                    description: RevisionSpec holds the desired state of the Revision
                      (from the client).
                    properties:
                      containerConcurrency:
                        description: 'ContainerConcurrency specifies the maximum allowed
                          in-flight (concurrent) requests per container of the Revision.
                          Values are: - ''0'' thread-safe, the system should manage
                          the max concurrency. This is     the default value. - ''1''
                          not-thread-safe. Single concurrency - ''2-N'' thread-safe,
                          max concurrency of N'
                        format: int64
                        type: integer
                      containers:
                        description: 'Container defines the unit of execution for
                          this Revision. In the context of a Revision, we disallow
                          a number of the fields of this Container, including: name,
                          ports, and volumeMounts. The runtime contract is documented
                          here: https://github.com/knative/serving/blob/master/docs/runtime-contract.md'
                        items:
                          properties:
                            args:
                              description: 'Arguments to the entrypoint. The docker
                                image''s CMD is used if this is not provided. Variable
                                references $(VAR_NAME) are expanded using the container''s
                                environment. If a variable cannot be resolved, the
                                reference in the input string will be unchanged. The
                                $(VAR_NAME) syntax can be escaped with a double $$,
                                ie: $$(VAR_NAME). Escaped references will never be
                                expanded, regardless of whether the variable exists
                                or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                              items:
                                type: string
                              type: array
                            command:
                              description: 'Entrypoint array. Not executed within
                                a shell. The docker image''s ENTRYPOINT is used if
                                this is not provided. Variable references $(VAR_NAME)
                                are expanded using the container''s environment. If
                                a variable cannot be resolved, the reference in the
                                input string will be unchanged. The $(VAR_NAME) syntax
                                can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. More info:
                                https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                              items:
                                type: string
                              type: array
                            env:
                              description: List of environment variables to set in
                                the container.
                              items:
                                properties:
                                  name:
                                    description: Name of the environment variable.
                                    type: string
                                  value:
                                    description: 'Variable references $(VAR_NAME)
                                      are expanded using the previous defined environment
                                      variables in the container and any route environment
                                      variables. If a variable cannot be resolved,
                                      the reference in the input string will be unchanged.
                                      The $(VAR_NAME) syntax can be escaped with a
                                      double $$, ie: $$(VAR_NAME). Escaped references
                                      will never be expanded, regardless of whether
                                      the variable exists or not. Defaults to "".'
                                    type: string
                                type: object
                              type: array
                            envFrom:
                              description: List of sources to populate environment
                                variables in the container. All invalid keys will
                                be reported as an event when the container is starting.
                                When a key exists in multiple sources, the value associated
                                with the last source will take precedence. Values
                                defined by an Env with a duplicate key will take precedence.
                                Deprecated
                              items:
                                properties:
                                  configMapRef:
                                    description: The ConfigMap to select from.
                                    properties:
                                      localObjectReference:
                                        description: The ConfigMap to select from.
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      optional:
                                        description: Specify whether the ConfigMap
                                          must be defined
                                        type: boolean
                                    type: object
                                  prefix:
                                    description: An optional identifier to prepend
                                      to each key in the ConfigMap.
                                    type: string
                                  secretRef:
                                    description: The Secret to select from.
                                    properties:
                                      localObjectReference:
                                        description: The Secret to select from.
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      optional:
                                        description: Specify whether the Secret must
                                          be defined
                                        type: boolean
                                    type: object
                                type: object
                              type: array
                            image:
                              description: 'Docker image name. This is most often
                                a reference to a container located in the container
                                registry, such as gcr.io/cloudrun/hello More info:
                                https://kubernetes.io/docs/concepts/containers/images'
                              type: string
                            ports:
                              description: 'List of open ports in the container. More
                                Info: https://cloud.google.com/run/docs/reference/rest/v1/RevisionSpec#ContainerPort'
                              items:
                                properties:
                                  containerPort:
                                    description: Port number.
                                    format: int64
                                    type: integer
                                  name:
                                    description: Name of the port.
                                    type: string
                                  protocol:
                                    description: Protocol used on port. Defaults to
                                      TCP.
                                    type: string
                                required:
                                - containerPort
                                type: object
                              type: array
                            resources:
                              description: 'Compute Resources required by this container.
                                Used to set values such as max memory More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits'
                              properties:
                                limits:
                                  additionalProperties:
                                    type: string
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. The values of the
                                    map is string form of the ''quantity'' k8s type:
                                    https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go'
                                  type: object
                                requests:
                                  additionalProperties:
                                    type: string
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. The values of
                                    the map is string form of the ''quantity'' k8s
                                    type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go'
                                  type: object
                              type: object
                            workingDir:
                              description: Container's working directory. If not specified,
                                the container runtime's default will be used, which
                                might be configured in the container image. Deprecated
                              type: string
                          required:
                          - image
                          type: object
                        type: array
                      serviceAccountName:
                        description: Email address of the IAM service account associated
                          with the revision of the service. The service account represents
                          the identity of the running revision, and determines what
                          permissions the revision has. If not provided, the revision
                          will use the project's default service account.
                        type: string
                      servingState:
                        description: ServingState holds a value describing the state
                          the resources are in for this Revision. It is expected that
                          the system will manipulate this based on routability and
                          load. Deprecated
                        type: string
                      timeoutSeconds:
                        description: TimeoutSeconds holds the max duration the instance
                          is allowed for responding to a request.
                        format: int64
                        type: integer
                    type: object
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              traffic:
                description: Traffic specifies how to distribute traffic over a collection
                  of Knative Revisions and Configurations
                items:
                  properties:
                    latestRevision:
                      description: LatestRevision may be optionally provided to indicate
                        that the latest ready Revision of the Configuration should
                        be used for this traffic target. When provided LatestRevision
                        must be true if RevisionName is empty; it must be false when
                        RevisionName is non-empty.
                      type: boolean
                    percent:
                      description: Percent specifies percent of the traffic to this
                        Revision or Configuration.
                      format: int64
                      type: integer
                    revisionName:
                      description: RevisionName of a specific revision to which to
                        send this portion of traffic.
                      type: string
                  required:
                  - percent
                  type: object
                type: array
            required:
            - location
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: schedulerjobs.cloud.google.kubeform.com
spec:
  group: cloud.google.kubeform.com
  names:
    kind: SchedulerJob
    listKind: SchedulerJobList
    plural: schedulerjobs
    singular: schedulerjob
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              appEngineHTTPTarget:
                description: App Engine HTTP target. If the job providers a App Engine
                  HTTP target the cron will send a request to the service instance
                properties:
                  appEngineRouting:
                    description: App Engine Routing setting for the job.
                    properties:
                      instance:
                        description: App instance. By default, the job is sent to
                          an instance which is available when the job is attempted.
                        type: string
                      service:
                        description: App service. By default, the job is sent to the
                          service which is the default service when the job is attempted.
                        type: string
                      version:
                        description: App version. By default, the job is sent to the
                          version which is the default version when the job is attempted.
                        type: string
                    type: object
                  body:
                    description: "HTTP request body. A request body is allowed only
                      if the HTTP method is POST or PUT. It will result in invalid
                      argument error to set a body on a job with an incompatible HttpMethod.
                      \n A base64-encoded string."
                    type: string
                  headers:
                    additionalProperties:
                      type: string
                    description: HTTP request headers. This map contains the header
                      field names and values. Headers can be set when the job is created.
                    type: object
                  httpMethod:
                    description: Which HTTP method to use for the request.
                    type: string
                  relativeURI:
                    description: The relative URI. The relative URL must begin with
                      "/" and must be a valid HTTP relative URL. It can contain a
                      path, query string arguments, and \\# fragments. If the relative
                      URL is empty, then the root path "/" will be used. No spaces
                      are allowed, and the maximum length allowed is 2083 characters
                    type: string
                required:
                - relativeURI
                type: object
              attemptDeadline:
                description: 'The deadline for job attempts. If the request handler
                  does not respond by this deadline then the request is cancelled
                  and the attempt is marked as a DEADLINE_EXCEEDED failure. The failed
                  attempt can be viewed in execution logs. Cloud Scheduler will retry
                  the job according to the RetryConfig. The allowed duration for this
                  deadline is: * For HTTP targets, between 15 seconds and 30 minutes.
                  * For App Engine HTTP targets, between 15 seconds and 24 hours.
                  * **Note**: For PubSub targets, this field is ignored - setting
                  it will introduce an unresolvable diff. A duration in seconds with
                  up to nine fractional digits, terminated by ''s''. Example: "3.5s"'
                type: string
              description:
                description: A human-readable description for the job. This string
                  must not contain more than 500 characters.
                type: string
              httpTarget:
                description: HTTP target. If the job providers a http_target the cron
                  will send a request to the targeted url
                properties:
                  body:
                    description: "HTTP request body. A request body is allowed only
                      if the HTTP method is POST, PUT, or PATCH. It is an error to
                      set body on a job with an incompatible HttpMethod. \n A base64-encoded
                      string."
                    type: string
                  headers:
                    additionalProperties:
                      type: string
                    description: This map contains the header field names and values.
                      Repeated headers are not supported, but a header value can contain
                      commas.
                    type: object
                  httpMethod:
                    description: Which HTTP method to use for the request.
                    type: string
                  oauthToken:
                    description: Contains information needed for generating an OAuth
                      token. This type of authorization should be used when sending
                      requests to a GCP endpoint.
                    properties:
                      scope:
                        description: OAuth scope to be used for generating OAuth access
                          token. If not specified, "https://www.googleapis.com/auth/cloud-platform"
                          will be used.
                        type: string
                      serviceAccountEmail:
                        description: Service account email to be used for generating
                          OAuth token. The service account must be within the same
                          project as the job.
                        type: string
                    required:
                    - serviceAccountEmail
                    type: object
                  oidcToken:
                    description: Contains information needed for generating an OpenID
                      Connect token. This type of authorization should be used when
                      sending requests to third party endpoints or Cloud Run.
                    properties:
                      audience:
                        description: Audience to be used when generating OIDC token.
                          If not specified, the URI specified in target will be used.
                        type: string
                      serviceAccountEmail:
                        description: Service account email to be used for generating
                          OAuth token. The service account must be within the same
                          project as the job.
                        type: string
                    required:
                    - serviceAccountEmail
                    type: object
                  uri:
                    description: The full URI path that the request will be sent to.
                    type: string
                required:
                - uri
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  appEngineHTTPTarget:
                    description: App Engine HTTP target. If the job providers a App
                      Engine HTTP target the cron will send a request to the service
                      instance
                    properties:
                      appEngineRouting:
                        description: App Engine Routing setting for the job.
                        properties:
                          instance:
                            description: App instance. By default, the job is sent
                              to an instance which is available when the job is attempted.
                            type: string
                          service:
                            description: App service. By default, the job is sent
                              to the service which is the default service when the
                              job is attempted.
                            type: string
                          version:
                            description: App version. By default, the job is sent
                              to the version which is the default version when the
                              job is attempted.
                            type: string
                        type: object
                      body:
                        description: "HTTP request body. A request body is allowed
                          only if the HTTP method is POST or PUT. It will result in
                          invalid argument error to set a body on a job with an incompatible
                          HttpMethod. \n A base64-encoded string."
                        type: string
                      headers:
                        additionalProperties:
                          type: string
                        description: HTTP request headers. This map contains the header
                          field names and values. Headers can be set when the job
                          is created.
                        type: object
                      httpMethod:
                        description: Which HTTP method to use for the request.
                        type: string
                      relativeURI:
                        description: The relative URI. The relative URL must begin
                          with "/" and must be a valid HTTP relative URL. It can contain
                          a path, query string arguments, and \\# fragments. If the
                          relative URL is empty, then the root path "/" will be used.
                          No spaces are allowed, and the maximum length allowed is
                          2083 characters
                        type: string
                    required:
                    - relativeURI
                    type: object
                  attemptDeadline:
                    description: 'The deadline for job attempts. If the request handler
                      does not respond by this deadline then the request is cancelled
                      and the attempt is marked as a DEADLINE_EXCEEDED failure. The
                      failed attempt can be viewed in execution logs. Cloud Scheduler
                      will retry the job according to the RetryConfig. The allowed
                      duration for this deadline is: * For HTTP targets, between 15
                      seconds and 30 minutes. * For App Engine HTTP targets, between
                      15 seconds and 24 hours. * **Note**: For PubSub targets, this
                      field is ignored - setting it will introduce an unresolvable
                      diff. A duration in seconds with up to nine fractional digits,
                      terminated by ''s''. Example: "3.5s"'
                    type: string
                  description:
                    description: A human-readable description for the job. This string
                      must not contain more than 500 characters.
                    type: string
                  httpTarget:
                    description: HTTP target. If the job providers a http_target the
                      cron will send a request to the targeted url
                    properties:
                      body:
                        description: "HTTP request body. A request body is allowed
                          only if the HTTP method is POST, PUT, or PATCH. It is an
                          error to set body on a job with an incompatible HttpMethod.
                          \n A base64-encoded string."
                        type: string
                      headers:
                        additionalProperties:
                          type: string
                        description: This map contains the header field names and
                          values. Repeated headers are not supported, but a header
                          value can contain commas.
                        type: object
                      httpMethod:
                        description: Which HTTP method to use for the request.
                        type: string
                      oauthToken:
                        description: Contains information needed for generating an
                          OAuth token. This type of authorization should be used when
                          sending requests to a GCP endpoint.
                        properties:
                          scope:
                            description: OAuth scope to be used for generating OAuth
                              access token. If not specified, "https://www.googleapis.com/auth/cloud-platform"
                              will be used.
                            type: string
                          serviceAccountEmail:
                            description: Service account email to be used for generating
                              OAuth token. The service account must be within the
                              same project as the job.
                            type: string
                        required:
                        - serviceAccountEmail
                        type: object
                      oidcToken:
                        description: Contains information needed for generating an
                          OpenID Connect token. This type of authorization should
                          be used when sending requests to third party endpoints or
                          Cloud Run.
                        properties:
                          audience:
                            description: Audience to be used when generating OIDC
                              token. If not specified, the URI specified in target
                              will be used.
                            type: string
                          serviceAccountEmail:
                            description: Service account email to be used for generating
                              OAuth token. The service account must be within the
                              same project as the job.
                            type: string
                        required:
                        - serviceAccountEmail
                        type: object
                      uri:
                        description: The full URI path that the request will be sent
                          to.
                        type: string
                    required:
                    - uri
                    type: object
                  id:
                    type: string
                  name:
                    description: The name of the job.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  pubsubTarget:
                    description: Pub/Sub target If the job providers a Pub/Sub target
                      the cron will publish a message to the provided topic
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes for PubsubMessage. Pubsub message
                          must contain either non-empty data, or at least one attribute.
                        type: object
                      data:
                        description: "The message payload for PubsubMessage. Pubsub
                          message must contain either non-empty data, or at least
                          one attribute. \n  A base64-encoded string."
                        type: string
                      topicName:
                        description: The full resource name for the Cloud Pub/Sub
                          topic to which messages will be published when a job is
                          delivered. ~>**NOTE:** The topic name must be in the same
                          format as required by PubSub's PublishRequest.name, e.g.
                          'projects/my-project/topics/my-topic'.
                        type: string
                    required:
                    - topicName
                    type: object
                  region:
                    description: Region where the scheduler job resides. If it is
                      not provided, Terraform will use the provider default.
                    type: string
                  retryConfig:
                    description: By default, if a job does not complete successfully,
                      meaning that an acknowledgement is not received from the handler,
                      then it will be retried with exponential backoff according to
                      the settings
                    properties:
                      maxBackoffDuration:
                        description: The maximum amount of time to wait before retrying
                          a job after it fails. A duration in seconds with up to nine
                          fractional digits, terminated by 's'.
                        type: string
                      maxDoublings:
                        description: The time between retries will double maxDoublings
                          times. A job's retry interval starts at minBackoffDuration,
                          then doubles maxDoublings times, then increases linearly,
                          and finally retries retries at intervals of maxBackoffDuration
                          up to retryCount times.
                        format: int64
                        type: integer
                      maxRetryDuration:
                        description: The time limit for retrying a failed job, measured
                          from time when an execution was first attempted. If specified
                          with retryCount, the job will be retried until both limits
                          are reached. A duration in seconds with up to nine fractional
                          digits, terminated by 's'.
                        type: string
                      minBackoffDuration:
                        description: The minimum amount of time to wait before retrying
                          a job after it fails. A duration in seconds with up to nine
                          fractional digits, terminated by 's'.
                        type: string
                      retryCount:
                        description: The number of attempts that the system will make
                          to run a job using the exponential backoff procedure described
                          by maxDoublings. Values greater than 5 and negative values
                          are not allowed.
                        format: int64
                        type: integer
                    type: object
                  schedule:
                    description: Describes the schedule on which the job will be executed.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeZone:
                    description: Specifies the time zone to be used in interpreting
                      schedule. The value of this field must be a time zone name from
                      the tz database.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                type: object
              name:
                description: The name of the job.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              pubsubTarget:
                description: Pub/Sub target If the job providers a Pub/Sub target
                  the cron will publish a message to the provided topic
                properties:
                  attributes:
                    additionalProperties:
                      type: string
                    description: Attributes for PubsubMessage. Pubsub message must
                      contain either non-empty data, or at least one attribute.
                    type: object
                  data:
                    description: "The message payload for PubsubMessage. Pubsub message
                      must contain either non-empty data, or at least one attribute.
                      \n  A base64-encoded string."
                    type: string
                  topicName:
                    description: The full resource name for the Cloud Pub/Sub topic
                      to which messages will be published when a job is delivered.
                      ~>**NOTE:** The topic name must be in the same format as required
                      by PubSub's PublishRequest.name, e.g. 'projects/my-project/topics/my-topic'.
                    type: string
                required:
                - topicName
                type: object
              region:
                description: Region where the scheduler job resides. If it is not
                  provided, Terraform will use the provider default.
                type: string
              retryConfig:
                description: By default, if a job does not complete successfully,
                  meaning that an acknowledgement is not received from the handler,
                  then it will be retried with exponential backoff according to the
                  settings
                properties:
                  maxBackoffDuration:
                    description: The maximum amount of time to wait before retrying
                      a job after it fails. A duration in seconds with up to nine
                      fractional digits, terminated by 's'.
                    type: string
                  maxDoublings:
                    description: The time between retries will double maxDoublings
                      times. A job's retry interval starts at minBackoffDuration,
                      then doubles maxDoublings times, then increases linearly, and
                      finally retries retries at intervals of maxBackoffDuration up
                      to retryCount times.
                    format: int64
                    type: integer
                  maxRetryDuration:
                    description: The time limit for retrying a failed job, measured
                      from time when an execution was first attempted. If specified
                      with retryCount, the job will be retried until both limits are
                      reached. A duration in seconds with up to nine fractional digits,
                      terminated by 's'.
                    type: string
                  minBackoffDuration:
                    description: The minimum amount of time to wait before retrying
                      a job after it fails. A duration in seconds with up to nine
                      fractional digits, terminated by 's'.
                    type: string
                  retryCount:
                    description: The number of attempts that the system will make
                      to run a job using the exponential backoff procedure described
                      by maxDoublings. Values greater than 5 and negative values are
                      not allowed.
                    format: int64
                    type: integer
                type: object
              schedule:
                description: Describes the schedule on which the job will be executed.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeZone:
                description: Specifies the time zone to be used in interpreting schedule.
                  The value of this field must be a time zone name from the tz database.
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: assetprojectfeeds.cloud.google.kubeform.com
spec:
  group: cloud.google.kubeform.com
  names:
    kind: AssetProjectFeed
    listKind: AssetProjectFeedList
    plural: assetprojectfeeds
    singular: assetprojectfeed
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              assetNames:
                description: 'A list of the full names of the assets to receive updates.
                  You must specify either or both of assetNames and assetTypes. Only
                  asset updates matching specified assetNames and assetTypes are exported
                  to the feed. For example: //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1.
                  See https://cloud.google.com/apis/design/resourceNames#fullResourceName
                  for more info.'
                items:
                  type: string
                type: array
              assetTypes:
                description: 'A list of types of the assets to receive updates. You
                  must specify either or both of assetNames and assetTypes. Only asset
                  updates matching specified assetNames and assetTypes are exported
                  to the feed. For example: "compute.googleapis.com/Disk" See https://cloud.google.com/asset-inventory/docs/supported-asset-types
                  for a list of all supported asset types.'
                items:
                  type: string
                type: array
              billingProject:
                description: The project whose identity will be used when sending
                  messages to the destination pubsub topic. It also specifies the
                  project for API enablement check, quota, and billing. If not specified,
                  the resource's project will be used.
                type: string
              condition:
                description: 'A condition which determines whether an asset update
                  should be published. If specified, an asset will be returned only
                  when the expression evaluates to true. When set, expression field
                  must be a valid CEL expression on a TemporalAsset with name temporal_asset.
                  Example: a Feed with expression "temporal_asset.deleted == true"
                  will only publish Asset deletions. Other fields of condition are
                  optional.'
                properties:
                  description:
                    description: Description of the expression. This is a longer text
                      which describes the expression, e.g. when hovered over it in
                      a UI.
                    type: string
                  expression:
                    description: Textual representation of an expression in Common
                      Expression Language syntax.
                    type: string
                  location:
                    description: String indicating the location of the expression
                      for error reporting, e.g. a file name and a position in the
                      file.
                    type: string
                  title:
                    description: Title for the expression, i.e. a short string describing
                      its purpose. This can be used e.g. in UIs which allow to enter
                      the expression.
                    type: string
                required:
                - expression
                type: object
              contentType:
                description: 'Asset content type. If not specified, no content but
                  the asset name and type will be returned. Possible values: ["CONTENT_TYPE_UNSPECIFIED",
                  "RESOURCE", "IAM_POLICY", "ORG_POLICY", "ACCESS_POLICY"]'
                type: string
              feedID:
                description: This is the client-assigned asset feed identifier and
                  it needs to be unique under a specific parent.
                type: string
              feedOutputConfig:
                description: Output configuration for asset feed destination.
                properties:
                  pubsubDestination:
                    description: Destination on Cloud Pubsub.
                    properties:
                      topic:
                        description: Destination on Cloud Pubsub topic.
                        type: string
                    required:
                    - topic
                    type: object
                required:
                - pubsubDestination
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  assetNames:
                    description: 'A list of the full names of the assets to receive
                      updates. You must specify either or both of assetNames and assetTypes.
                      Only asset updates matching specified assetNames and assetTypes
                      are exported to the feed. For example: //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1.
                      See https://cloud.google.com/apis/design/resourceNames#fullResourceName
                      for more info.'
                    items:
                      type: string
                    type: array
                  assetTypes:
                    description: 'A list of types of the assets to receive updates.
                      You must specify either or both of assetNames and assetTypes.
                      Only asset updates matching specified assetNames and assetTypes
                      are exported to the feed. For example: "compute.googleapis.com/Disk"
                      See https://cloud.google.com/asset-inventory/docs/supported-asset-types
                      for a list of all supported asset types.'
                    items:
                      type: string
                    type: array
                  billingProject:
                    description: The project whose identity will be used when sending
                      messages to the destination pubsub topic. It also specifies
                      the project for API enablement check, quota, and billing. If
                      not specified, the resource's project will be used.
                    type: string
                  condition:
                    description: 'A condition which determines whether an asset update
                      should be published. If specified, an asset will be returned
                      only when the expression evaluates to true. When set, expression
                      field must be a valid CEL expression on a TemporalAsset with
                      name temporal_asset. Example: a Feed with expression "temporal_asset.deleted
                      == true" will only publish Asset deletions. Other fields of
                      condition are optional.'
                    properties:
                      description:
                        description: Description of the expression. This is a longer
                          text which describes the expression, e.g. when hovered over
                          it in a UI.
                        type: string
                      expression:
                        description: Textual representation of an expression in Common
                          Expression Language syntax.
                        type: string
                      location:
                        description: String indicating the location of the expression
                          for error reporting, e.g. a file name and a position in
                          the file.
                        type: string
                      title:
                        description: Title for the expression, i.e. a short string
                          describing its purpose. This can be used e.g. in UIs which
                          allow to enter the expression.
                        type: string
                    required:
                    - expression
                    type: object
                  contentType:
                    description: 'Asset content type. If not specified, no content
                      but the asset name and type will be returned. Possible values:
                      ["CONTENT_TYPE_UNSPECIFIED", "RESOURCE", "IAM_POLICY", "ORG_POLICY",
                      "ACCESS_POLICY"]'
                    type: string
                  feedID:
                    description: This is the client-assigned asset feed identifier
                      and it needs to be unique under a specific parent.
                    type: string
                  feedOutputConfig:
                    description: Output configuration for asset feed destination.
                    properties:
                      pubsubDestination:
                        description: Destination on Cloud Pubsub.
                        properties:
                          topic:
                            description: Destination on Cloud Pubsub topic.
                            type: string
                        required:
                        - topic
                        type: object
                    required:
                    - pubsubDestination
                    type: object
                  id:
                    type: string
                  name:
                    description: The format will be projects/{projectNumber}/feeds/{client-assigned_feed_identifier}.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - feedID
                - feedOutputConfig
                - providerRef
                type: object
              name:
                description: The format will be projects/{projectNumber}/feeds/{client-assigned_feed_identifier}.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - feedID
            - feedOutputConfig
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: tasksqueues.cloud.google.kubeform.com
spec:
  group: cloud.google.kubeform.com
  names:
    kind: TasksQueue
    listKind: TasksQueueList
    plural: tasksqueues
    singular: tasksqueue
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              appEngineRoutingOverride:
                description: Overrides for task-level appEngineRouting. These settings
                  apply only to App Engine tasks in this queue
                properties:
                  host:
                    description: The host that the task is sent to.
                    type: string
                  instance:
                    description: "App instance. \n By default, the task is sent to
                      an instance which is available when the task is attempted."
                    type: string
                  service:
                    description: "App service. \n By default, the task is sent to
                      the service which is the default service when the task is attempted."
                    type: string
                  version:
                    description: "App version. \n By default, the task is sent to
                      the version which is the default version when the task is attempted."
                    type: string
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  appEngineRoutingOverride:
                    description: Overrides for task-level appEngineRouting. These
                      settings apply only to App Engine tasks in this queue
                    properties:
                      host:
                        description: The host that the task is sent to.
                        type: string
                      instance:
                        description: "App instance. \n By default, the task is sent
                          to an instance which is available when the task is attempted."
                        type: string
                      service:
                        description: "App service. \n By default, the task is sent
                          to the service which is the default service when the task
                          is attempted."
                        type: string
                      version:
                        description: "App version. \n By default, the task is sent
                          to the version which is the default version when the task
                          is attempted."
                        type: string
                    type: object
                  id:
                    type: string
                  location:
                    description: The location of the queue
                    type: string
                  name:
                    description: The queue name.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  rateLimits:
                    description: "Rate limits for task dispatches. \n The queue's
                      actual dispatch rate is the result of: \n * Number of tasks
                      in the queue * User-specified throttling: rateLimits, retryConfig,
                      and the queue's state. * System throttling due to 429 (Too Many
                      Requests) or 503 (Service   Unavailable) responses from the
                      worker, high error rates, or to   smooth sudden large traffic
                      spikes."
                    properties:
                      maxBurstSize:
                        description: "The max burst size. \n Max burst size limits
                          how fast tasks in queue are processed when many tasks are
                          in the queue and the rate is high. This field allows the
                          queue to have a high rate so processing starts shortly after
                          a task is enqueued, but still limits resource usage when
                          many tasks are enqueued in a short period of time."
                        format: int64
                        type: integer
                      maxConcurrentDispatches:
                        description: The maximum number of concurrent tasks that Cloud
                          Tasks allows to be dispatched for this queue. After this
                          threshold has been reached, Cloud Tasks stops dispatching
                          tasks until the number of concurrent requests decreases.
                        format: int64
                        type: integer
                      maxDispatchesPerSecond:
                        description: "The maximum rate at which tasks are dispatched
                          from this queue. \n If unspecified when the queue is created,
                          Cloud Tasks will pick the default."
                        format: double
                        type: number
                    type: object
                  retryConfig:
                    description: Settings that determine the retry behavior.
                    properties:
                      maxAttempts:
                        description: "Number of attempts per task. \n Cloud Tasks
                          will attempt the task maxAttempts times (that is, if the
                          first attempt fails, then there will be maxAttempts - 1
                          retries). Must be >= -1. \n If unspecified when the queue
                          is created, Cloud Tasks will pick the default. \n -1 indicates
                          unlimited attempts."
                        format: int64
                        type: integer
                      maxBackoff:
                        description: A task will be scheduled for retry between minBackoff
                          and maxBackoff duration after it fails, if the queue's RetryConfig
                          specifies that the task should be retried.
                        type: string
                      maxDoublings:
                        description: "The time between retries will double maxDoublings
                          times. \n A task's retry interval starts at minBackoff,
                          then doubles maxDoublings times, then increases linearly,
                          and finally retries retries at intervals of maxBackoff up
                          to maxAttempts times."
                        format: int64
                        type: integer
                      maxRetryDuration:
                        description: "If positive, maxRetryDuration specifies the
                          time limit for retrying a failed task, measured from when
                          the task was first attempted. Once maxRetryDuration time
                          has passed and the task has been attempted maxAttempts times,
                          no further attempts will be made and the task will be deleted.
                          \n If zero, then the task age is unlimited."
                        type: string
                      minBackoff:
                        description: A task will be scheduled for retry between minBackoff
                          and maxBackoff duration after it fails, if the queue's RetryConfig
                          specifies that the task should be retried.
                        type: string
                    type: object
                  stackdriverLoggingConfig:
                    description: Configuration options for writing logs to Stackdriver
                      Logging.
                    properties:
                      samplingRatio:
                        description: Specifies the fraction of operations to write
                          to Stackdriver Logging. This field may contain any value
                          between 0.0 and 1.0, inclusive. 0.0 is the default and means
                          that no operations are logged.
                        format: double
                        type: number
                    required:
                    - samplingRatio
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - location
                - providerRef
                type: object
              location:
                description: The location of the queue
                type: string
              name:
                description: The queue name.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              rateLimits:
                description: "Rate limits for task dispatches. \n The queue's actual
                  dispatch rate is the result of: \n * Number of tasks in the queue
                  * User-specified throttling: rateLimits, retryConfig, and the queue's
                  state. * System throttling due to 429 (Too Many Requests) or 503
                  (Service   Unavailable) responses from the worker, high error rates,
                  or to   smooth sudden large traffic spikes."
                properties:
                  maxBurstSize:
                    description: "The max burst size. \n Max burst size limits how
                      fast tasks in queue are processed when many tasks are in the
                      queue and the rate is high. This field allows the queue to have
                      a high rate so processing starts shortly after a task is enqueued,
                      but still limits resource usage when many tasks are enqueued
                      in a short period of time."
                    format: int64
                    type: integer
                  maxConcurrentDispatches:
                    description: The maximum number of concurrent tasks that Cloud
                      Tasks allows to be dispatched for this queue. After this threshold
                      has been reached, Cloud Tasks stops dispatching tasks until
                      the number of concurrent requests decreases.
                    format: int64
                    type: integer
                  maxDispatchesPerSecond:
                    description: "The maximum rate at which tasks are dispatched from
                      this queue. \n If unspecified when the queue is created, Cloud
                      Tasks will pick the default."
                    format: double
                    type: number
                type: object
              retryConfig:
                description: Settings that determine the retry behavior.
                properties:
                  maxAttempts:
                    description: "Number of attempts per task. \n Cloud Tasks will
                      attempt the task maxAttempts times (that is, if the first attempt
                      fails, then there will be maxAttempts - 1 retries). Must be
                      >= -1. \n If unspecified when the queue is created, Cloud Tasks
                      will pick the default. \n -1 indicates unlimited attempts."
                    format: int64
                    type: integer
                  maxBackoff:
                    description: A task will be scheduled for retry between minBackoff
                      and maxBackoff duration after it fails, if the queue's RetryConfig
                      specifies that the task should be retried.
                    type: string
                  maxDoublings:
                    description: "The time between retries will double maxDoublings
                      times. \n A task's retry interval starts at minBackoff, then
                      doubles maxDoublings times, then increases linearly, and finally
                      retries retries at intervals of maxBackoff up to maxAttempts
                      times."
                    format: int64
                    type: integer
                  maxRetryDuration:
                    description: "If positive, maxRetryDuration specifies the time
                      limit for retrying a failed task, measured from when the task
                      was first attempted. Once maxRetryDuration time has passed and
                      the task has been attempted maxAttempts times, no further attempts
                      will be made and the task will be deleted. \n If zero, then
                      the task age is unlimited."
                    type: string
                  minBackoff:
                    description: A task will be scheduled for retry between minBackoff
                      and maxBackoff duration after it fails, if the queue's RetryConfig
                      specifies that the task should be retried.
                    type: string
                type: object
              stackdriverLoggingConfig:
                description: Configuration options for writing logs to Stackdriver
                  Logging.
                properties:
                  samplingRatio:
                    description: Specifies the fraction of operations to write to
                      Stackdriver Logging. This field may contain any value between
                      0.0 and 1.0, inclusive. 0.0 is the default and means that no
                      operations are logged.
                    format: double
                    type: number
                required:
                - samplingRatio
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - location
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
