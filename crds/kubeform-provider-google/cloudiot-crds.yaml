apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: devices.cloudiot.google.kubeform.com
spec:
  group: cloudiot.google.kubeform.com
  names:
    kind: Device
    listKind: DeviceList
    plural: devices
    singular: device
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              blocked:
                description: If a device is blocked, connections or requests from
                  this device will fail.
                type: boolean
              config:
                description: The most recent device configuration, which is eventually
                  sent from Cloud IoT Core to the device.
                items:
                  properties:
                    binaryData:
                      description: The device configuration data.
                      type: string
                    cloudUpdateTime:
                      description: The time at which this configuration version was
                        updated in Cloud IoT Core.
                      type: string
                    deviceACKTime:
                      description: The time at which Cloud IoT Core received the acknowledgment
                        from the device, indicating that the device has received this
                        configuration version.
                      type: string
                    version:
                      description: The version of this update.
                      type: string
                  type: object
                type: array
              credentials:
                description: The credentials used to authenticate this device.
                items:
                  properties:
                    expirationTime:
                      description: The time at which this credential becomes invalid.
                      type: string
                    publicKey:
                      description: A public key used to verify the signature of JSON
                        Web Tokens (JWTs).
                      properties:
                        format:
                          description: 'The format of the key. Possible values: ["RSA_PEM",
                            "RSA_X509_PEM", "ES256_PEM", "ES256_X509_PEM"]'
                          type: string
                        key:
                          description: The key data.
                          type: string
                      required:
                      - format
                      - key
                      type: object
                  required:
                  - publicKey
                  type: object
                maxItems: 3
                type: array
              gatewayConfig:
                description: Gateway-related configuration and state.
                properties:
                  gatewayAuthMethod:
                    description: 'Indicates whether the device is a gateway. Possible
                      values: ["ASSOCIATION_ONLY", "DEVICE_AUTH_TOKEN_ONLY", "ASSOCIATION_AND_DEVICE_AUTH_TOKEN"]'
                    type: string
                  gatewayType:
                    description: 'Indicates whether the device is a gateway. Default
                      value: "NON_GATEWAY" Possible values: ["GATEWAY", "NON_GATEWAY"]'
                    type: string
                  lastAccessedGatewayID:
                    description: The ID of the gateway the device accessed most recently.
                    type: string
                  lastAccessedGatewayTime:
                    description: The most recent time at which the device accessed
                      the gateway specified in last_accessed_gateway.
                    type: string
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  blocked:
                    description: If a device is blocked, connections or requests from
                      this device will fail.
                    type: boolean
                  config:
                    description: The most recent device configuration, which is eventually
                      sent from Cloud IoT Core to the device.
                    items:
                      properties:
                        binaryData:
                          description: The device configuration data.
                          type: string
                        cloudUpdateTime:
                          description: The time at which this configuration version
                            was updated in Cloud IoT Core.
                          type: string
                        deviceACKTime:
                          description: The time at which Cloud IoT Core received the
                            acknowledgment from the device, indicating that the device
                            has received this configuration version.
                          type: string
                        version:
                          description: The version of this update.
                          type: string
                      type: object
                    type: array
                  credentials:
                    description: The credentials used to authenticate this device.
                    items:
                      properties:
                        expirationTime:
                          description: The time at which this credential becomes invalid.
                          type: string
                        publicKey:
                          description: A public key used to verify the signature of
                            JSON Web Tokens (JWTs).
                          properties:
                            format:
                              description: 'The format of the key. Possible values:
                                ["RSA_PEM", "RSA_X509_PEM", "ES256_PEM", "ES256_X509_PEM"]'
                              type: string
                            key:
                              description: The key data.
                              type: string
                          required:
                          - format
                          - key
                          type: object
                      required:
                      - publicKey
                      type: object
                    maxItems: 3
                    type: array
                  gatewayConfig:
                    description: Gateway-related configuration and state.
                    properties:
                      gatewayAuthMethod:
                        description: 'Indicates whether the device is a gateway. Possible
                          values: ["ASSOCIATION_ONLY", "DEVICE_AUTH_TOKEN_ONLY", "ASSOCIATION_AND_DEVICE_AUTH_TOKEN"]'
                        type: string
                      gatewayType:
                        description: 'Indicates whether the device is a gateway. Default
                          value: "NON_GATEWAY" Possible values: ["GATEWAY", "NON_GATEWAY"]'
                        type: string
                      lastAccessedGatewayID:
                        description: The ID of the gateway the device accessed most
                          recently.
                        type: string
                      lastAccessedGatewayTime:
                        description: The most recent time at which the device accessed
                          the gateway specified in last_accessed_gateway.
                        type: string
                    type: object
                  id:
                    type: string
                  lastConfigACKTime:
                    description: The last time a cloud-to-device config version acknowledgment
                      was received from the device.
                    type: string
                  lastConfigSendTime:
                    description: The last time a cloud-to-device config version was
                      sent to the device.
                    type: string
                  lastErrorStatus:
                    description: The error message of the most recent error, such
                      as a failure to publish to Cloud Pub/Sub.
                    items:
                      properties:
                        message:
                          description: A list of messages that carry the error details.
                            A developer-facing error message, which should be in English.
                          type: string
                        number:
                          description: The status code, which should be an enum value
                            of google.rpc.Code.
                          format: int64
                          type: integer
                      type: object
                    type: array
                  lastErrorTime:
                    description: The time the most recent error occurred, such as
                      a failure to publish to Cloud Pub/Sub.
                    type: string
                  lastEventTime:
                    description: The last time a telemetry event was received.
                    type: string
                  lastHeartbeatTime:
                    description: The last time an MQTT PINGREQ was received.
                    type: string
                  lastStateTime:
                    description: The last time a state event was received.
                    type: string
                  logLevel:
                    description: 'The logging verbosity for device activity. Possible
                      values: ["NONE", "ERROR", "INFO", "DEBUG"]'
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: The metadata key-value pairs assigned to the device.
                    type: object
                  name:
                    description: A unique name for the resource.
                    type: string
                  numID:
                    description: A server-defined unique numeric ID for the device.
                      This is a more compact way to identify devices, and it is globally
                      unique.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  registry:
                    description: The name of the device registry where this device
                      should be created.
                    type: string
                  state:
                    description: The state most recently received from the device.
                    items:
                      properties:
                        binaryData:
                          description: The device state data.
                          type: string
                        updateTime:
                          description: The time at which this state version was updated
                            in Cloud IoT Core.
                          type: string
                      type: object
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                - registry
                type: object
              lastConfigACKTime:
                description: The last time a cloud-to-device config version acknowledgment
                  was received from the device.
                type: string
              lastConfigSendTime:
                description: The last time a cloud-to-device config version was sent
                  to the device.
                type: string
              lastErrorStatus:
                description: The error message of the most recent error, such as a
                  failure to publish to Cloud Pub/Sub.
                items:
                  properties:
                    message:
                      description: A list of messages that carry the error details.
                        A developer-facing error message, which should be in English.
                      type: string
                    number:
                      description: The status code, which should be an enum value
                        of google.rpc.Code.
                      format: int64
                      type: integer
                  type: object
                type: array
              lastErrorTime:
                description: The time the most recent error occurred, such as a failure
                  to publish to Cloud Pub/Sub.
                type: string
              lastEventTime:
                description: The last time a telemetry event was received.
                type: string
              lastHeartbeatTime:
                description: The last time an MQTT PINGREQ was received.
                type: string
              lastStateTime:
                description: The last time a state event was received.
                type: string
              logLevel:
                description: 'The logging verbosity for device activity. Possible
                  values: ["NONE", "ERROR", "INFO", "DEBUG"]'
                type: string
              metadata:
                additionalProperties:
                  type: string
                description: The metadata key-value pairs assigned to the device.
                type: object
              name:
                description: A unique name for the resource.
                type: string
              numID:
                description: A server-defined unique numeric ID for the device. This
                  is a more compact way to identify devices, and it is globally unique.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              registry:
                description: The name of the device registry where this device should
                  be created.
                type: string
              state:
                description: The state most recently received from the device.
                items:
                  properties:
                    binaryData:
                      description: The device state data.
                      type: string
                    updateTime:
                      description: The time at which this state version was updated
                        in Cloud IoT Core.
                      type: string
                  type: object
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            - registry
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: registries.cloudiot.google.kubeform.com
spec:
  group: cloudiot.google.kubeform.com
  names:
    kind: Registry
    listKind: RegistryList
    plural: registries
    singular: registry
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              credentials:
                description: List of public key certificates to authenticate devices.
                items:
                  properties:
                    publicKeyCertificate:
                      additionalProperties:
                        type: string
                      description: A public key certificate format and data.
                      type: object
                  required:
                  - publicKeyCertificate
                  type: object
                maxItems: 10
                type: array
              eventNotificationConfigs:
                description: List of configurations for event notifications, such
                  as PubSub topics to publish device events to.
                items:
                  properties:
                    pubsubTopicName:
                      description: PubSub topic name to publish device events.
                      type: string
                    subfolderMatches:
                      description: If the subfolder name matches this string exactly,
                        this configuration will be used. The string must not include
                        the leading '/' character. If empty, all strings are matched.
                        Empty value can only be used for the last 'event_notification_configs'
                        item.
                      type: string
                  required:
                  - pubsubTopicName
                  type: object
                maxItems: 10
                type: array
              httpConfig:
                additionalProperties:
                  type: string
                description: Activate or deactivate HTTP.
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  credentials:
                    description: List of public key certificates to authenticate devices.
                    items:
                      properties:
                        publicKeyCertificate:
                          additionalProperties:
                            type: string
                          description: A public key certificate format and data.
                          type: object
                      required:
                      - publicKeyCertificate
                      type: object
                    maxItems: 10
                    type: array
                  eventNotificationConfigs:
                    description: List of configurations for event notifications, such
                      as PubSub topics to publish device events to.
                    items:
                      properties:
                        pubsubTopicName:
                          description: PubSub topic name to publish device events.
                          type: string
                        subfolderMatches:
                          description: If the subfolder name matches this string exactly,
                            this configuration will be used. The string must not include
                            the leading '/' character. If empty, all strings are matched.
                            Empty value can only be used for the last 'event_notification_configs'
                            item.
                          type: string
                      required:
                      - pubsubTopicName
                      type: object
                    maxItems: 10
                    type: array
                  httpConfig:
                    additionalProperties:
                      type: string
                    description: Activate or deactivate HTTP.
                    type: object
                  id:
                    type: string
                  logLevel:
                    description: 'The default logging verbosity for activity from
                      devices in this registry. Specifies which events should be written
                      to logs. For example, if the LogLevel is ERROR, only events
                      that terminate in errors will be logged. LogLevel is inclusive;
                      enabling INFO logging will also enable ERROR logging. Default
                      value: "NONE" Possible values: ["NONE", "ERROR", "INFO", "DEBUG"]'
                    type: string
                  mqttConfig:
                    additionalProperties:
                      type: string
                    description: Activate or deactivate MQTT.
                    type: object
                  name:
                    description: A unique name for the resource, required by device
                      registry.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: The region in which the created registry should reside.
                      If it is not provided, the provider region is used.
                    type: string
                  stateNotificationConfig:
                    additionalProperties:
                      type: string
                    description: A PubSub topic to publish device state updates.
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                type: object
              logLevel:
                description: 'The default logging verbosity for activity from devices
                  in this registry. Specifies which events should be written to logs.
                  For example, if the LogLevel is ERROR, only events that terminate
                  in errors will be logged. LogLevel is inclusive; enabling INFO logging
                  will also enable ERROR logging. Default value: "NONE" Possible values:
                  ["NONE", "ERROR", "INFO", "DEBUG"]'
                type: string
              mqttConfig:
                additionalProperties:
                  type: string
                description: Activate or deactivate MQTT.
                type: object
              name:
                description: A unique name for the resource, required by device registry.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: The region in which the created registry should reside.
                  If it is not provided, the provider region is used.
                type: string
              stateNotificationConfig:
                additionalProperties:
                  type: string
                description: A PubSub topic to publish device state updates.
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
