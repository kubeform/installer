apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: backendservices.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: BackendService
    listKind: BackendServiceList
    plural: backendservices
    singular: backendservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              affinityCookieTtlSec:
                description: "Lifetime of cookies in seconds if session_affinity is
                  GENERATED_COOKIE. If set to 0, the cookie is non-persistent and
                  lasts only until the end of the browser session (or equivalent).
                  The maximum allowed value for TTL is one day. \n When the load balancing
                  scheme is INTERNAL, this field is not used."
                format: int64
                type: integer
              backend:
                description: The set of backends that serve this BackendService.
                items:
                  properties:
                    balancingMode:
                      description: "Specifies the balancing mode for this backend.
                        \n For global HTTP(S) or TCP/SSL load balancing, the default
                        is UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S))
                        and CONNECTION (for TCP/SSL). Default value: \"UTILIZATION\"
                        Possible values: [\"UTILIZATION\", \"RATE\", \"CONNECTION\"]"
                      type: string
                    capacityScaler:
                      description: "A multiplier applied to the group's maximum servicing
                        capacity (based on UTILIZATION, RATE or CONNECTION). \n Default
                        value is 1, which means the group will serve up to 100% of
                        its configured capacity (depending on balancingMode). A setting
                        of 0 means the group is completely drained, offering 0% of
                        its available Capacity. Valid range is [0.0,1.0]."
                      format: double
                      type: number
                    description:
                      description: An optional description of this resource. Provide
                        this property when you create the resource.
                      type: string
                    group:
                      description: "The fully-qualified URL of an Instance Group or
                        Network Endpoint Group resource. In case of instance group
                        this defines the list of instances that serve traffic. Member
                        virtual machine instances from each instance group must live
                        in the same zone as the instance group itself. No two backends
                        in a backend service are allowed to use same Instance Group
                        resource. \n For Network Endpoint Groups this defines list
                        of endpoints. All endpoints of Network Endpoint Group must
                        be hosted on instances located in the same zone as the Network
                        Endpoint Group. \n Backend services cannot mix Instance Group
                        and Network Endpoint Group backends. \n Note that you must
                        specify an Instance Group or Network Endpoint Group resource
                        using the fully-qualified URL, rather than a partial URL."
                      type: string
                    maxConnections:
                      description: "The max number of simultaneous connections for
                        the group. Can be used with either CONNECTION or UTILIZATION
                        balancing modes. \n For CONNECTION mode, either maxConnections
                        or one of maxConnectionsPerInstance or maxConnectionsPerEndpoint,
                        as appropriate for group type, must be set."
                      format: int64
                      type: integer
                    maxConnectionsPerEndpoint:
                      description: "The max number of simultaneous connections that
                        a single backend network endpoint can handle. This is used
                        to calculate the capacity of the group. Can be used in either
                        CONNECTION or UTILIZATION balancing modes. \n For CONNECTION
                        mode, either maxConnections or maxConnectionsPerEndpoint must
                        be set."
                      format: int64
                      type: integer
                    maxConnectionsPerInstance:
                      description: "The max number of simultaneous connections that
                        a single backend instance can handle. This is used to calculate
                        the capacity of the group. Can be used in either CONNECTION
                        or UTILIZATION balancing modes. \n For CONNECTION mode, either
                        maxConnections or maxConnectionsPerInstance must be set."
                      format: int64
                      type: integer
                    maxRate:
                      description: "The max requests per second (RPS) of the group.
                        \n Can be used with either RATE or UTILIZATION balancing modes,
                        but required if RATE mode. For RATE mode, either maxRate or
                        one of maxRatePerInstance or maxRatePerEndpoint, as appropriate
                        for group type, must be set."
                      format: int64
                      type: integer
                    maxRatePerEndpoint:
                      description: The max requests per second (RPS) that a single
                        backend network endpoint can handle. This is used to calculate
                        the capacity of the group. Can be used in either balancing
                        mode. For RATE mode, either maxRate or maxRatePerEndpoint
                        must be set.
                      format: double
                      type: number
                    maxRatePerInstance:
                      description: The max requests per second (RPS) that a single
                        backend instance can handle. This is used to calculate the
                        capacity of the group. Can be used in either balancing mode.
                        For RATE mode, either maxRate or maxRatePerInstance must be
                        set.
                      format: double
                      type: number
                    maxUtilization:
                      description: Used when balancingMode is UTILIZATION. This ratio
                        defines the CPU utilization target for the group. The default
                        is 0.8. Valid range is [0.0, 1.0].
                      format: double
                      type: number
                  required:
                  - group
                  type: object
                type: array
              cdnPolicy:
                description: Cloud CDN configuration for this BackendService.
                properties:
                  cacheKeyPolicy:
                    description: The CacheKeyPolicy for this CdnPolicy.
                    properties:
                      includeHost:
                        description: If true requests to different hosts will be cached
                          separately.
                        type: boolean
                      includeProtocol:
                        description: If true, http and https requests will be cached
                          separately.
                        type: boolean
                      includeQueryString:
                        description: "If true, include query string parameters in
                          the cache key according to query_string_whitelist and query_string_blacklist.
                          If neither is set, the entire query string will be included.
                          \n If false, the query string will be excluded from the
                          cache key entirely."
                        type: boolean
                      queryStringBlacklist:
                        description: "Names of query string parameters to exclude
                          in cache keys. \n All other parameters will be included.
                          Either specify query_string_whitelist or query_string_blacklist,
                          not both. '&' and '=' will be percent encoded and not treated
                          as delimiters."
                        items:
                          type: string
                        type: array
                      queryStringWhitelist:
                        description: "Names of query string parameters to include
                          in cache keys. \n All other parameters will be excluded.
                          Either specify query_string_whitelist or query_string_blacklist,
                          not both. '&' and '=' will be percent encoded and not treated
                          as delimiters."
                        items:
                          type: string
                        type: array
                    type: object
                  signedURLCacheMaxAgeSec:
                    description: "Maximum number of seconds the response to a signed
                      URL request will be considered fresh, defaults to 1hr (3600s).
                      After this time period, the response will be revalidated before
                      being served. \n When serving responses to signed URL requests,
                      Cloud CDN will internally behave as though all responses from
                      this backend had a \"Cache-Control: public, max-age=[TTL]\"
                      header, regardless of any existing Cache-Control header. The
                      actual headers served in responses will not be altered."
                    format: int64
                    type: integer
                type: object
              circuitBreakers:
                description: Settings controlling the volume of connections to a backend
                  service. This field is applicable only when the load_balancing_scheme
                  is set to INTERNAL_SELF_MANAGED.
                properties:
                  maxConnections:
                    description: The maximum number of connections to the backend
                      cluster. Defaults to 1024.
                    format: int64
                    type: integer
                  maxPendingRequests:
                    description: The maximum number of pending requests to the backend
                      cluster. Defaults to 1024.
                    format: int64
                    type: integer
                  maxRequests:
                    description: The maximum number of parallel requests to the backend
                      cluster. Defaults to 1024.
                    format: int64
                    type: integer
                  maxRequestsPerConnection:
                    description: Maximum requests for a single backend connection.
                      This parameter is respected by both the HTTP/1.1 and HTTP/2
                      implementations. If not specified, there is no limit. Setting
                      this parameter to 1 will effectively disable keep alive.
                    format: int64
                    type: integer
                  maxRetries:
                    description: The maximum number of parallel retries to the backend
                      cluster. Defaults to 3.
                    format: int64
                    type: integer
                type: object
              connectionDrainingTimeoutSec:
                description: Time for which instance will be drained (not accept new
                  connections, but still work to finish started).
                format: int64
                type: integer
              consistentHash:
                description: Consistent Hash-based load balancing can be used to provide
                  soft session affinity based on HTTP headers, cookies or other properties.
                  This load balancing policy is applicable only for HTTP connections.
                  The affinity to a particular destination host will be lost when
                  one or more hosts are added/removed from the destination service.
                  This field specifies parameters that control consistent hashing.
                  This field only applies if the load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
                  This field is only applicable when locality_lb_policy is set to
                  MAGLEV or RING_HASH.
                properties:
                  httpCookie:
                    description: Hash is based on HTTP Cookie. This field describes
                      a HTTP cookie that will be used as the hash key for the consistent
                      hash load balancer. If the cookie is not present, it will be
                      generated. This field is applicable if the sessionAffinity is
                      set to HTTP_COOKIE.
                    properties:
                      name:
                        description: Name of the cookie.
                        type: string
                      path:
                        description: Path to set for the cookie.
                        type: string
                      ttl:
                        description: Lifetime of the cookie.
                        properties:
                          nanos:
                            description: Span of time that's a fraction of a second
                              at nanosecond resolution. Durations less than one second
                              are represented with a 0 seconds field and a positive
                              nanos field. Must be from 0 to 999,999,999 inclusive.
                            format: int64
                            type: integer
                          seconds:
                            description: Span of time at a resolution of a second.
                              Must be from 0 to 315,576,000,000 inclusive.
                            format: int64
                            type: integer
                        required:
                        - seconds
                        type: object
                    type: object
                  httpHeaderName:
                    description: The hash based on the value of the specified header
                      field. This field is applicable if the sessionAffinity is set
                      to HEADER_FIELD.
                    type: string
                  minimumRingSize:
                    description: The minimum number of virtual nodes to use for the
                      hash ring. Larger ring sizes result in more granular load distributions.
                      If the number of hosts in the load balancing pool is larger
                      than the ring size, each host will be assigned a single virtual
                      node. Defaults to 1024.
                    format: int64
                    type: integer
                type: object
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              customRequestHeaders:
                description: Headers that the HTTP/S load balancer should add to proxied
                  requests.
                items:
                  type: string
                type: array
              description:
                description: An optional description of this resource.
                type: string
              enableCdn:
                description: If true, enable Cloud CDN for this BackendService.
                type: boolean
              fingerprint:
                description: Fingerprint of this resource. A hash of the contents
                  stored in this object. This field is used in optimistic locking.
                type: string
              healthChecks:
                description: "The set of URLs to the HttpHealthCheck or HttpsHealthCheck
                  resource for health checking this BackendService. Currently at most
                  one health check can be specified. \n A health check must be specified
                  unless the backend service uses an internet or serverless NEG as
                  a backend. \n For internal load balancing, a URL to a HealthCheck
                  resource must be specified instead."
                items:
                  type: string
                type: array
              iap:
                description: Settings for enabling Cloud Identity Aware Proxy
                properties:
                  oauth2ClientID:
                    description: OAuth2 Client ID for IAP
                    type: string
                required:
                - oauth2ClientID
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  affinityCookieTtlSec:
                    description: "Lifetime of cookies in seconds if session_affinity
                      is GENERATED_COOKIE. If set to 0, the cookie is non-persistent
                      and lasts only until the end of the browser session (or equivalent).
                      The maximum allowed value for TTL is one day. \n When the load
                      balancing scheme is INTERNAL, this field is not used."
                    format: int64
                    type: integer
                  backend:
                    description: The set of backends that serve this BackendService.
                    items:
                      properties:
                        balancingMode:
                          description: "Specifies the balancing mode for this backend.
                            \n For global HTTP(S) or TCP/SSL load balancing, the default
                            is UTILIZATION. Valid values are UTILIZATION, RATE (for
                            HTTP(S)) and CONNECTION (for TCP/SSL). Default value:
                            \"UTILIZATION\" Possible values: [\"UTILIZATION\", \"RATE\",
                            \"CONNECTION\"]"
                          type: string
                        capacityScaler:
                          description: "A multiplier applied to the group's maximum
                            servicing capacity (based on UTILIZATION, RATE or CONNECTION).
                            \n Default value is 1, which means the group will serve
                            up to 100% of its configured capacity (depending on balancingMode).
                            A setting of 0 means the group is completely drained,
                            offering 0% of its available Capacity. Valid range is
                            [0.0,1.0]."
                          format: double
                          type: number
                        description:
                          description: An optional description of this resource. Provide
                            this property when you create the resource.
                          type: string
                        group:
                          description: "The fully-qualified URL of an Instance Group
                            or Network Endpoint Group resource. In case of instance
                            group this defines the list of instances that serve traffic.
                            Member virtual machine instances from each instance group
                            must live in the same zone as the instance group itself.
                            No two backends in a backend service are allowed to use
                            same Instance Group resource. \n For Network Endpoint
                            Groups this defines list of endpoints. All endpoints of
                            Network Endpoint Group must be hosted on instances located
                            in the same zone as the Network Endpoint Group. \n Backend
                            services cannot mix Instance Group and Network Endpoint
                            Group backends. \n Note that you must specify an Instance
                            Group or Network Endpoint Group resource using the fully-qualified
                            URL, rather than a partial URL."
                          type: string
                        maxConnections:
                          description: "The max number of simultaneous connections
                            for the group. Can be used with either CONNECTION or UTILIZATION
                            balancing modes. \n For CONNECTION mode, either maxConnections
                            or one of maxConnectionsPerInstance or maxConnectionsPerEndpoint,
                            as appropriate for group type, must be set."
                          format: int64
                          type: integer
                        maxConnectionsPerEndpoint:
                          description: "The max number of simultaneous connections
                            that a single backend network endpoint can handle. This
                            is used to calculate the capacity of the group. Can be
                            used in either CONNECTION or UTILIZATION balancing modes.
                            \n For CONNECTION mode, either maxConnections or maxConnectionsPerEndpoint
                            must be set."
                          format: int64
                          type: integer
                        maxConnectionsPerInstance:
                          description: "The max number of simultaneous connections
                            that a single backend instance can handle. This is used
                            to calculate the capacity of the group. Can be used in
                            either CONNECTION or UTILIZATION balancing modes. \n For
                            CONNECTION mode, either maxConnections or maxConnectionsPerInstance
                            must be set."
                          format: int64
                          type: integer
                        maxRate:
                          description: "The max requests per second (RPS) of the group.
                            \n Can be used with either RATE or UTILIZATION balancing
                            modes, but required if RATE mode. For RATE mode, either
                            maxRate or one of maxRatePerInstance or maxRatePerEndpoint,
                            as appropriate for group type, must be set."
                          format: int64
                          type: integer
                        maxRatePerEndpoint:
                          description: The max requests per second (RPS) that a single
                            backend network endpoint can handle. This is used to calculate
                            the capacity of the group. Can be used in either balancing
                            mode. For RATE mode, either maxRate or maxRatePerEndpoint
                            must be set.
                          format: double
                          type: number
                        maxRatePerInstance:
                          description: The max requests per second (RPS) that a single
                            backend instance can handle. This is used to calculate
                            the capacity of the group. Can be used in either balancing
                            mode. For RATE mode, either maxRate or maxRatePerInstance
                            must be set.
                          format: double
                          type: number
                        maxUtilization:
                          description: Used when balancingMode is UTILIZATION. This
                            ratio defines the CPU utilization target for the group.
                            The default is 0.8. Valid range is [0.0, 1.0].
                          format: double
                          type: number
                      required:
                      - group
                      type: object
                    type: array
                  cdnPolicy:
                    description: Cloud CDN configuration for this BackendService.
                    properties:
                      cacheKeyPolicy:
                        description: The CacheKeyPolicy for this CdnPolicy.
                        properties:
                          includeHost:
                            description: If true requests to different hosts will
                              be cached separately.
                            type: boolean
                          includeProtocol:
                            description: If true, http and https requests will be
                              cached separately.
                            type: boolean
                          includeQueryString:
                            description: "If true, include query string parameters
                              in the cache key according to query_string_whitelist
                              and query_string_blacklist. If neither is set, the entire
                              query string will be included. \n If false, the query
                              string will be excluded from the cache key entirely."
                            type: boolean
                          queryStringBlacklist:
                            description: "Names of query string parameters to exclude
                              in cache keys. \n All other parameters will be included.
                              Either specify query_string_whitelist or query_string_blacklist,
                              not both. '&' and '=' will be percent encoded and not
                              treated as delimiters."
                            items:
                              type: string
                            type: array
                          queryStringWhitelist:
                            description: "Names of query string parameters to include
                              in cache keys. \n All other parameters will be excluded.
                              Either specify query_string_whitelist or query_string_blacklist,
                              not both. '&' and '=' will be percent encoded and not
                              treated as delimiters."
                            items:
                              type: string
                            type: array
                        type: object
                      signedURLCacheMaxAgeSec:
                        description: "Maximum number of seconds the response to a
                          signed URL request will be considered fresh, defaults to
                          1hr (3600s). After this time period, the response will be
                          revalidated before being served. \n When serving responses
                          to signed URL requests, Cloud CDN will internally behave
                          as though all responses from this backend had a \"Cache-Control:
                          public, max-age=[TTL]\" header, regardless of any existing
                          Cache-Control header. The actual headers served in responses
                          will not be altered."
                        format: int64
                        type: integer
                    type: object
                  circuitBreakers:
                    description: Settings controlling the volume of connections to
                      a backend service. This field is applicable only when the load_balancing_scheme
                      is set to INTERNAL_SELF_MANAGED.
                    properties:
                      maxConnections:
                        description: The maximum number of connections to the backend
                          cluster. Defaults to 1024.
                        format: int64
                        type: integer
                      maxPendingRequests:
                        description: The maximum number of pending requests to the
                          backend cluster. Defaults to 1024.
                        format: int64
                        type: integer
                      maxRequests:
                        description: The maximum number of parallel requests to the
                          backend cluster. Defaults to 1024.
                        format: int64
                        type: integer
                      maxRequestsPerConnection:
                        description: Maximum requests for a single backend connection.
                          This parameter is respected by both the HTTP/1.1 and HTTP/2
                          implementations. If not specified, there is no limit. Setting
                          this parameter to 1 will effectively disable keep alive.
                        format: int64
                        type: integer
                      maxRetries:
                        description: The maximum number of parallel retries to the
                          backend cluster. Defaults to 3.
                        format: int64
                        type: integer
                    type: object
                  connectionDrainingTimeoutSec:
                    description: Time for which instance will be drained (not accept
                      new connections, but still work to finish started).
                    format: int64
                    type: integer
                  consistentHash:
                    description: Consistent Hash-based load balancing can be used
                      to provide soft session affinity based on HTTP headers, cookies
                      or other properties. This load balancing policy is applicable
                      only for HTTP connections. The affinity to a particular destination
                      host will be lost when one or more hosts are added/removed from
                      the destination service. This field specifies parameters that
                      control consistent hashing. This field only applies if the load_balancing_scheme
                      is set to INTERNAL_SELF_MANAGED. This field is only applicable
                      when locality_lb_policy is set to MAGLEV or RING_HASH.
                    properties:
                      httpCookie:
                        description: Hash is based on HTTP Cookie. This field describes
                          a HTTP cookie that will be used as the hash key for the
                          consistent hash load balancer. If the cookie is not present,
                          it will be generated. This field is applicable if the sessionAffinity
                          is set to HTTP_COOKIE.
                        properties:
                          name:
                            description: Name of the cookie.
                            type: string
                          path:
                            description: Path to set for the cookie.
                            type: string
                          ttl:
                            description: Lifetime of the cookie.
                            properties:
                              nanos:
                                description: Span of time that's a fraction of a second
                                  at nanosecond resolution. Durations less than one
                                  second are represented with a 0 seconds field and
                                  a positive nanos field. Must be from 0 to 999,999,999
                                  inclusive.
                                format: int64
                                type: integer
                              seconds:
                                description: Span of time at a resolution of a second.
                                  Must be from 0 to 315,576,000,000 inclusive.
                                format: int64
                                type: integer
                            required:
                            - seconds
                            type: object
                        type: object
                      httpHeaderName:
                        description: The hash based on the value of the specified
                          header field. This field is applicable if the sessionAffinity
                          is set to HEADER_FIELD.
                        type: string
                      minimumRingSize:
                        description: The minimum number of virtual nodes to use for
                          the hash ring. Larger ring sizes result in more granular
                          load distributions. If the number of hosts in the load balancing
                          pool is larger than the ring size, each host will be assigned
                          a single virtual node. Defaults to 1024.
                        format: int64
                        type: integer
                    type: object
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  customRequestHeaders:
                    description: Headers that the HTTP/S load balancer should add
                      to proxied requests.
                    items:
                      type: string
                    type: array
                  description:
                    description: An optional description of this resource.
                    type: string
                  enableCdn:
                    description: If true, enable Cloud CDN for this BackendService.
                    type: boolean
                  fingerprint:
                    description: Fingerprint of this resource. A hash of the contents
                      stored in this object. This field is used in optimistic locking.
                    type: string
                  healthChecks:
                    description: "The set of URLs to the HttpHealthCheck or HttpsHealthCheck
                      resource for health checking this BackendService. Currently
                      at most one health check can be specified. \n A health check
                      must be specified unless the backend service uses an internet
                      or serverless NEG as a backend. \n For internal load balancing,
                      a URL to a HealthCheck resource must be specified instead."
                    items:
                      type: string
                    type: array
                  iap:
                    description: Settings for enabling Cloud Identity Aware Proxy
                    properties:
                      oauth2ClientID:
                        description: OAuth2 Client ID for IAP
                        type: string
                    required:
                    - oauth2ClientID
                    type: object
                  id:
                    type: string
                  loadBalancingScheme:
                    description: 'Indicates whether the backend service will be used
                      with internal or external load balancing. A backend service
                      created for one type of load balancing cannot be used with the
                      other. Default value: "EXTERNAL" Possible values: ["EXTERNAL",
                      "INTERNAL_SELF_MANAGED"]'
                    type: string
                  localityLbPolicy:
                    description: "The load balancing algorithm used within the scope
                      of the locality. The possible values are - \n * ROUND_ROBIN
                      - This is a simple policy in which each healthy backend                 is
                      selected in round robin order. \n * LEAST_REQUEST - An O(1)
                      algorithm which selects two random healthy                   hosts
                      and picks the host which has fewer active requests. \n * RING_HASH
                      - The ring/modulo hash load balancer implements consistent               hashing
                      to backends. The algorithm has the property that the               addition/removal
                      of a host from a set of N hosts only affects               1/N
                      of the requests. \n * RANDOM - The load balancer selects a random
                      healthy host. \n * ORIGINAL_DESTINATION - Backend host is selected
                      based on the client                          connection metadata,
                      i.e., connections are opened                          to the
                      same address as the destination address of                          the
                      incoming connection before the connection                          was
                      redirected to the load balancer. \n * MAGLEV - used as a drop
                      in replacement for the ring hash load balancer.            Maglev
                      is not as stable as ring hash but has faster table lookup            build
                      times and host selection times. For more information about            Maglev,
                      refer to https://ai.google/research/pubs/pub44824 \n This field
                      is applicable only when the load_balancing_scheme is set to
                      INTERNAL_SELF_MANAGED. Possible values: [\"ROUND_ROBIN\", \"LEAST_REQUEST\",
                      \"RING_HASH\", \"RANDOM\", \"ORIGINAL_DESTINATION\", \"MAGLEV\"]"
                    type: string
                  logConfig:
                    description: This field denotes the logging options for the load
                      balancer traffic served by this backend service. If logging
                      is enabled, logs will be exported to Stackdriver.
                    properties:
                      enable:
                        description: Whether to enable logging for the load balancer
                          traffic served by this backend service.
                        type: boolean
                      sampleRate:
                        description: This field can only be specified if logging is
                          enabled for this backend service. The value of the field
                          must be in [0, 1]. This configures the sampling rate of
                          requests to the load balancer where 1.0 means all logged
                          requests are reported and 0.0 means no logged requests are
                          reported. The default value is 1.0.
                        format: double
                        type: number
                    type: object
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  outlierDetection:
                    description: Settings controlling eviction of unhealthy hosts
                      from the load balancing pool. This field is applicable only
                      when the load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
                    properties:
                      baseEjectionTime:
                        description: The base time that a host is ejected for. The
                          real time is equal to the base time multiplied by the number
                          of times the host has been ejected. Defaults to 30000ms
                          or 30s.
                        properties:
                          nanos:
                            description: Span of time that's a fraction of a second
                              at nanosecond resolution. Durations less than one second
                              are represented with a 0 'seconds' field and a positive
                              'nanos' field. Must be from 0 to 999,999,999 inclusive.
                            format: int64
                            type: integer
                          seconds:
                            description: Span of time at a resolution of a second.
                              Must be from 0 to 315,576,000,000 inclusive.
                            format: int64
                            type: integer
                        required:
                        - seconds
                        type: object
                      consecutiveErrors:
                        description: Number of errors before a host is ejected from
                          the connection pool. When the backend host is accessed over
                          HTTP, a 5xx return code qualifies as an error. Defaults
                          to 5.
                        format: int64
                        type: integer
                      consecutiveGatewayFailure:
                        description: The number of consecutive gateway failures (502,
                          503, 504 status or connection errors that are mapped to
                          one of those status codes) before a consecutive gateway
                          failure ejection occurs. Defaults to 5.
                        format: int64
                        type: integer
                      enforcingConsecutiveErrors:
                        description: The percentage chance that a host will be actually
                          ejected when an outlier status is detected through consecutive
                          5xx. This setting can be used to disable ejection or to
                          ramp it up slowly. Defaults to 100.
                        format: int64
                        type: integer
                      enforcingConsecutiveGatewayFailure:
                        description: The percentage chance that a host will be actually
                          ejected when an outlier status is detected through consecutive
                          gateway failures. This setting can be used to disable ejection
                          or to ramp it up slowly. Defaults to 0.
                        format: int64
                        type: integer
                      enforcingSuccessRate:
                        description: The percentage chance that a host will be actually
                          ejected when an outlier status is detected through success
                          rate statistics. This setting can be used to disable ejection
                          or to ramp it up slowly. Defaults to 100.
                        format: int64
                        type: integer
                      interval:
                        description: Time interval between ejection sweep analysis.
                          This can result in both new ejections as well as hosts being
                          returned to service. Defaults to 10 seconds.
                        properties:
                          nanos:
                            description: Span of time that's a fraction of a second
                              at nanosecond resolution. Durations less than one second
                              are represented with a 0 'seconds' field and a positive
                              'nanos' field. Must be from 0 to 999,999,999 inclusive.
                            format: int64
                            type: integer
                          seconds:
                            description: Span of time at a resolution of a second.
                              Must be from 0 to 315,576,000,000 inclusive.
                            format: int64
                            type: integer
                        required:
                        - seconds
                        type: object
                      maxEjectionPercent:
                        description: Maximum percentage of hosts in the load balancing
                          pool for the backend service that can be ejected. Defaults
                          to 10%.
                        format: int64
                        type: integer
                      successRateMinimumHosts:
                        description: The number of hosts in a cluster that must have
                          enough request volume to detect success rate outliers. If
                          the number of hosts is less than this setting, outlier detection
                          via success rate statistics is not performed for any host
                          in the cluster. Defaults to 5.
                        format: int64
                        type: integer
                      successRateRequestVolume:
                        description: The minimum number of total requests that must
                          be collected in one interval (as defined by the interval
                          duration above) to include this host in success rate based
                          outlier detection. If the volume is lower than this setting,
                          outlier detection via success rate statistics is not performed
                          for that host. Defaults to 100.
                        format: int64
                        type: integer
                      successRateStdevFactor:
                        description: 'This factor is used to determine the ejection
                          threshold for success rate outlier ejection. The ejection
                          threshold is the difference between the mean success rate,
                          and the product of this factor and the standard deviation
                          of the mean success rate: mean - (stdev * success_rate_stdev_factor).
                          This factor is divided by a thousand to get a double. That
                          is, if the desired factor is 1.9, the runtime value should
                          be 1900. Defaults to 1900.'
                        format: int64
                        type: integer
                    type: object
                  portName:
                    description: Name of backend port. The same name should appear
                      in the instance groups referenced by this service. Required
                      when the load balancing scheme is EXTERNAL.
                    type: string
                  project:
                    type: string
                  protocol:
                    description: 'The protocol this BackendService uses to communicate
                      with backends. The default is HTTP. **NOTE**: HTTP2 is only
                      valid for beta HTTP/2 load balancer types and may result in
                      errors if used with the GA API. Possible values: ["HTTP", "HTTPS",
                      "HTTP2", "TCP", "SSL", "GRPC"]'
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  securityPolicy:
                    description: The security policy associated with this backend
                      service.
                    type: string
                  selfLink:
                    type: string
                  sessionAffinity:
                    description: 'Type of session affinity to use. The default is
                      NONE. Session affinity is not applicable if the protocol is
                      UDP. Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO",
                      "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD", "HTTP_COOKIE"]'
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeoutSec:
                    description: How many seconds to wait for the backend before considering
                      it a failed request. Default is 30 seconds. Valid range is [1,
                      86400].
                    format: int64
                    type: integer
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                type: object
              loadBalancingScheme:
                description: 'Indicates whether the backend service will be used with
                  internal or external load balancing. A backend service created for
                  one type of load balancing cannot be used with the other. Default
                  value: "EXTERNAL" Possible values: ["EXTERNAL", "INTERNAL_SELF_MANAGED"]'
                type: string
              localityLbPolicy:
                description: "The load balancing algorithm used within the scope of
                  the locality. The possible values are - \n * ROUND_ROBIN - This
                  is a simple policy in which each healthy backend                 is
                  selected in round robin order. \n * LEAST_REQUEST - An O(1) algorithm
                  which selects two random healthy                   hosts and picks
                  the host which has fewer active requests. \n * RING_HASH - The ring/modulo
                  hash load balancer implements consistent               hashing to
                  backends. The algorithm has the property that the               addition/removal
                  of a host from a set of N hosts only affects               1/N of
                  the requests. \n * RANDOM - The load balancer selects a random healthy
                  host. \n * ORIGINAL_DESTINATION - Backend host is selected based
                  on the client                          connection metadata, i.e.,
                  connections are opened                          to the same address
                  as the destination address of                          the incoming
                  connection before the connection                          was redirected
                  to the load balancer. \n * MAGLEV - used as a drop in replacement
                  for the ring hash load balancer.            Maglev is not as stable
                  as ring hash but has faster table lookup            build times
                  and host selection times. For more information about            Maglev,
                  refer to https://ai.google/research/pubs/pub44824 \n This field
                  is applicable only when the load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
                  Possible values: [\"ROUND_ROBIN\", \"LEAST_REQUEST\", \"RING_HASH\",
                  \"RANDOM\", \"ORIGINAL_DESTINATION\", \"MAGLEV\"]"
                type: string
              logConfig:
                description: This field denotes the logging options for the load balancer
                  traffic served by this backend service. If logging is enabled, logs
                  will be exported to Stackdriver.
                properties:
                  enable:
                    description: Whether to enable logging for the load balancer traffic
                      served by this backend service.
                    type: boolean
                  sampleRate:
                    description: This field can only be specified if logging is enabled
                      for this backend service. The value of the field must be in
                      [0, 1]. This configures the sampling rate of requests to the
                      load balancer where 1.0 means all logged requests are reported
                      and 0.0 means no logged requests are reported. The default value
                      is 1.0.
                    format: double
                    type: number
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              outlierDetection:
                description: Settings controlling eviction of unhealthy hosts from
                  the load balancing pool. This field is applicable only when the
                  load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
                properties:
                  baseEjectionTime:
                    description: The base time that a host is ejected for. The real
                      time is equal to the base time multiplied by the number of times
                      the host has been ejected. Defaults to 30000ms or 30s.
                    properties:
                      nanos:
                        description: Span of time that's a fraction of a second at
                          nanosecond resolution. Durations less than one second are
                          represented with a 0 'seconds' field and a positive 'nanos'
                          field. Must be from 0 to 999,999,999 inclusive.
                        format: int64
                        type: integer
                      seconds:
                        description: Span of time at a resolution of a second. Must
                          be from 0 to 315,576,000,000 inclusive.
                        format: int64
                        type: integer
                    required:
                    - seconds
                    type: object
                  consecutiveErrors:
                    description: Number of errors before a host is ejected from the
                      connection pool. When the backend host is accessed over HTTP,
                      a 5xx return code qualifies as an error. Defaults to 5.
                    format: int64
                    type: integer
                  consecutiveGatewayFailure:
                    description: The number of consecutive gateway failures (502,
                      503, 504 status or connection errors that are mapped to one
                      of those status codes) before a consecutive gateway failure
                      ejection occurs. Defaults to 5.
                    format: int64
                    type: integer
                  enforcingConsecutiveErrors:
                    description: The percentage chance that a host will be actually
                      ejected when an outlier status is detected through consecutive
                      5xx. This setting can be used to disable ejection or to ramp
                      it up slowly. Defaults to 100.
                    format: int64
                    type: integer
                  enforcingConsecutiveGatewayFailure:
                    description: The percentage chance that a host will be actually
                      ejected when an outlier status is detected through consecutive
                      gateway failures. This setting can be used to disable ejection
                      or to ramp it up slowly. Defaults to 0.
                    format: int64
                    type: integer
                  enforcingSuccessRate:
                    description: The percentage chance that a host will be actually
                      ejected when an outlier status is detected through success rate
                      statistics. This setting can be used to disable ejection or
                      to ramp it up slowly. Defaults to 100.
                    format: int64
                    type: integer
                  interval:
                    description: Time interval between ejection sweep analysis. This
                      can result in both new ejections as well as hosts being returned
                      to service. Defaults to 10 seconds.
                    properties:
                      nanos:
                        description: Span of time that's a fraction of a second at
                          nanosecond resolution. Durations less than one second are
                          represented with a 0 'seconds' field and a positive 'nanos'
                          field. Must be from 0 to 999,999,999 inclusive.
                        format: int64
                        type: integer
                      seconds:
                        description: Span of time at a resolution of a second. Must
                          be from 0 to 315,576,000,000 inclusive.
                        format: int64
                        type: integer
                    required:
                    - seconds
                    type: object
                  maxEjectionPercent:
                    description: Maximum percentage of hosts in the load balancing
                      pool for the backend service that can be ejected. Defaults to
                      10%.
                    format: int64
                    type: integer
                  successRateMinimumHosts:
                    description: The number of hosts in a cluster that must have enough
                      request volume to detect success rate outliers. If the number
                      of hosts is less than this setting, outlier detection via success
                      rate statistics is not performed for any host in the cluster.
                      Defaults to 5.
                    format: int64
                    type: integer
                  successRateRequestVolume:
                    description: The minimum number of total requests that must be
                      collected in one interval (as defined by the interval duration
                      above) to include this host in success rate based outlier detection.
                      If the volume is lower than this setting, outlier detection
                      via success rate statistics is not performed for that host.
                      Defaults to 100.
                    format: int64
                    type: integer
                  successRateStdevFactor:
                    description: 'This factor is used to determine the ejection threshold
                      for success rate outlier ejection. The ejection threshold is
                      the difference between the mean success rate, and the product
                      of this factor and the standard deviation of the mean success
                      rate: mean - (stdev * success_rate_stdev_factor). This factor
                      is divided by a thousand to get a double. That is, if the desired
                      factor is 1.9, the runtime value should be 1900. Defaults to
                      1900.'
                    format: int64
                    type: integer
                type: object
              portName:
                description: Name of backend port. The same name should appear in
                  the instance groups referenced by this service. Required when the
                  load balancing scheme is EXTERNAL.
                type: string
              project:
                type: string
              protocol:
                description: 'The protocol this BackendService uses to communicate
                  with backends. The default is HTTP. **NOTE**: HTTP2 is only valid
                  for beta HTTP/2 load balancer types and may result in errors if
                  used with the GA API. Possible values: ["HTTP", "HTTPS", "HTTP2",
                  "TCP", "SSL", "GRPC"]'
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              securityPolicy:
                description: The security policy associated with this backend service.
                type: string
              selfLink:
                type: string
              sessionAffinity:
                description: 'Type of session affinity to use. The default is NONE.
                  Session affinity is not applicable if the protocol is UDP. Possible
                  values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO",
                  "GENERATED_COOKIE", "HEADER_FIELD", "HTTP_COOKIE"]'
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeoutSec:
                description: How many seconds to wait for the backend before considering
                  it a failed request. Default is 30 seconds. Valid range is [1, 86400].
                format: int64
                type: integer
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: backendbucketsignedurlkeys.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: BackendBucketSignedURLKey
    listKind: BackendBucketSignedURLKeyList
    plural: backendbucketsignedurlkeys
    singular: backendbucketsignedurlkey
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendBucket:
                description: The backend bucket this signed URL key belongs.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  backendBucket:
                    description: The backend bucket this signed URL key belongs.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the signed URL key.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - backendBucket
                - name
                - providerRef
                type: object
              name:
                description: Name of the signed URL key.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - backendBucket
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: backendbuckets.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: BackendBucket
    listKind: BackendBucketList
    plural: backendbuckets
    singular: backendbucket
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucketName:
                description: Cloud Storage bucket name.
                type: string
              cdnPolicy:
                description: Cloud CDN configuration for this Backend Bucket.
                properties:
                  signedURLCacheMaxAgeSec:
                    description: 'Maximum number of seconds the response to a signed
                      URL request will be considered fresh. After this time period,
                      the response will be revalidated before being served. When serving
                      responses to signed URL requests, Cloud CDN will internally
                      behave as though all responses from this backend had a "Cache-Control:
                      public, max-age=[TTL]" header, regardless of any existing Cache-Control
                      header. The actual headers served in responses will not be altered.'
                    format: int64
                    type: integer
                type: object
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional textual description of the resource; provided
                  by the client when the resource is created.
                type: string
              enableCdn:
                description: If true, enable Cloud CDN for this BackendBucket.
                type: boolean
              id:
                type: string
              kubeformOutput:
                properties:
                  bucketName:
                    description: Cloud Storage bucket name.
                    type: string
                  cdnPolicy:
                    description: Cloud CDN configuration for this Backend Bucket.
                    properties:
                      signedURLCacheMaxAgeSec:
                        description: 'Maximum number of seconds the response to a
                          signed URL request will be considered fresh. After this
                          time period, the response will be revalidated before being
                          served. When serving responses to signed URL requests, Cloud
                          CDN will internally behave as though all responses from
                          this backend had a "Cache-Control: public, max-age=[TTL]"
                          header, regardless of any existing Cache-Control header.
                          The actual headers served in responses will not be altered.'
                        format: int64
                        type: integer
                    type: object
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional textual description of the resource;
                      provided by the client when the resource is created.
                    type: string
                  enableCdn:
                    description: If true, enable Cloud CDN for this BackendBucket.
                    type: boolean
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035.  Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - bucketName
                - name
                - providerRef
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.  Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - bucketName
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: attacheddisks.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: AttachedDisk
    listKind: AttachedDiskList
    plural: attacheddisks
    singular: attacheddisk
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              deviceName:
                description: Specifies a unique device name of your choice that is
                  reflected into the /dev/disk/by-id/google-* tree of a Linux operating
                  system running within the instance. This name can be used to reference
                  the device for mounting, resizing, and so on, from within the instance.
                  If not specified, the server chooses a default device name to apply
                  to this disk, in the form persistent-disks-x, where x is a number
                  assigned by Google Compute Engine.
                type: string
              disk:
                description: name or self_link of the disk that will be attached.
                type: string
              id:
                type: string
              instance:
                description: name or self_link of the compute instance that the disk
                  will be attached to. If the self_link is provided then zone and
                  project are extracted from the self link. If only the name is used
                  then zone and project must be defined as properties on the resource
                  or provider.
                type: string
              kubeformOutput:
                properties:
                  deviceName:
                    description: Specifies a unique device name of your choice that
                      is reflected into the /dev/disk/by-id/google-* tree of a Linux
                      operating system running within the instance. This name can
                      be used to reference the device for mounting, resizing, and
                      so on, from within the instance. If not specified, the server
                      chooses a default device name to apply to this disk, in the
                      form persistent-disks-x, where x is a number assigned by Google
                      Compute Engine.
                    type: string
                  disk:
                    description: name or self_link of the disk that will be attached.
                    type: string
                  id:
                    type: string
                  instance:
                    description: name or self_link of the compute instance that the
                      disk will be attached to. If the self_link is provided then
                      zone and project are extracted from the self link. If only the
                      name is used then zone and project must be defined as properties
                      on the resource or provider.
                    type: string
                  mode:
                    description: The mode in which to attach this disk, either READ_WRITE
                      or READ_ONLY. If not specified, the default is to attach the
                      disk in READ_WRITE mode.
                    type: string
                  project:
                    description: The project that the referenced compute instance
                      is a part of. If instance is referenced by its self_link the
                      project defined in the link will take precedence.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: The zone that the referenced compute instance is
                      located within. If instance is referenced by its self_link the
                      zone defined in the link will take precedence.
                    type: string
                required:
                - disk
                - instance
                - providerRef
                type: object
              mode:
                description: The mode in which to attach this disk, either READ_WRITE
                  or READ_ONLY. If not specified, the default is to attach the disk
                  in READ_WRITE mode.
                type: string
              project:
                description: The project that the referenced compute instance is a
                  part of. If instance is referenced by its self_link the project
                  defined in the link will take precedence.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              zone:
                description: The zone that the referenced compute instance is located
                  within. If instance is referenced by its self_link the zone defined
                  in the link will take precedence.
                type: string
            required:
            - disk
            - instance
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: diskiammembers.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: DiskIamMember
    listKind: DiskIamMemberList
    plural: diskiammembers
    singular: diskiammember
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  member:
                    type: string
                  name:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  zone:
                    type: string
                required:
                - member
                - name
                - providerRef
                - role
                type: object
              member:
                type: string
              name:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              zone:
                type: string
            required:
            - member
            - name
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: images.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: Image
    listKind: ImageList
    plural: images
    singular: image
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              archiveSizeBytes:
                description: Size of the image tar.gz archive stored in Google Cloud
                  Storage (in bytes).
                format: int64
                type: integer
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              diskSizeGb:
                description: Size of the image when restored onto a persistent disk
                  (in GB).
                format: int64
                type: integer
              family:
                description: The name of the image family to which this image belongs.
                  You can create disks by specifying an image family instead of a
                  specific image name. The image family always returns its latest
                  image that is not deprecated. The name of the image family must
                  comply with RFC1035.
                type: string
              guestOsFeatures:
                description: A list of features to enable on the guest operating system.
                  Applicable only for bootable images.
                items:
                  properties:
                    type:
                      description: 'The type of supported feature. Read [Enabling
                        guest operating system features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features)
                        to see a list of available options. Possible values: ["MULTI_IP_SUBNET",
                        "SECURE_BOOT", "SEV_CAPABLE", "UEFI_COMPATIBLE", "VIRTIO_SCSI_MULTIQUEUE",
                        "WINDOWS", "GVNIC"]'
                      type: string
                  required:
                  - type
                  type: object
                type: array
              id:
                type: string
              kubeformOutput:
                properties:
                  archiveSizeBytes:
                    description: Size of the image tar.gz archive stored in Google
                      Cloud Storage (in bytes).
                    format: int64
                    type: integer
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  diskSizeGb:
                    description: Size of the image when restored onto a persistent
                      disk (in GB).
                    format: int64
                    type: integer
                  family:
                    description: The name of the image family to which this image
                      belongs. You can create disks by specifying an image family
                      instead of a specific image name. The image family always returns
                      its latest image that is not deprecated. The name of the image
                      family must comply with RFC1035.
                    type: string
                  guestOsFeatures:
                    description: A list of features to enable on the guest operating
                      system. Applicable only for bootable images.
                    items:
                      properties:
                        type:
                          description: 'The type of supported feature. Read [Enabling
                            guest operating system features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features)
                            to see a list of available options. Possible values: ["MULTI_IP_SUBNET",
                            "SECURE_BOOT", "SEV_CAPABLE", "UEFI_COMPATIBLE", "VIRTIO_SCSI_MULTIQUEUE",
                            "WINDOWS", "GVNIC"]'
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  id:
                    type: string
                  labelFingerprint:
                    description: The fingerprint used for optimistic locking of this
                      resource. Used internally during updates.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to apply to this Image.
                    type: object
                  licenses:
                    description: Any applicable license URI.
                    items:
                      type: string
                    type: array
                  name:
                    description: Name of the resource; provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  rawDisk:
                    description: The parameters of the raw disk image.
                    properties:
                      containerType:
                        description: 'The format used to encode and transmit the block
                          device, which should be TAR. This is just a container and
                          transmission format and not a runtime format. Provided by
                          the client when the disk image is created. Default value:
                          "TAR" Possible values: ["TAR"]'
                        type: string
                      sha1:
                        description: An optional SHA1 checksum of the disk image before
                          unpackaging. This is provided by the client when the disk
                          image is created.
                        type: string
                      source:
                        description: The full Google Cloud Storage URL where disk
                          storage is stored You must provide either this property
                          or the sourceDisk property but not both.
                        type: string
                    required:
                    - source
                    type: object
                  selfLink:
                    type: string
                  sourceDisk:
                    description: The source disk to create this image based on. You
                      must provide either this property or the rawDisk.source property
                      but not both to create an image.
                    type: string
                  sourceImage:
                    description: "URL of the source image used to create this image.
                      In order to create an image, you must provide the full or partial
                      URL of one of the following: \n * The selfLink URL * This property
                      * The rawDisk.source URL * The sourceDisk URL"
                    type: string
                  sourceSnapshot:
                    description: "URL of the source snapshot used to create this image.
                      \n In order to create an image, you must provide the full or
                      partial URL of one of the following: \n * The selfLink URL *
                      This property * The sourceImage URL * The rawDisk.source URL
                      * The sourceDisk URL"
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                type: object
              labelFingerprint:
                description: The fingerprint used for optimistic locking of this resource.
                  Used internally during updates.
                type: string
              labels:
                additionalProperties:
                  type: string
                description: Labels to apply to this Image.
                type: object
              licenses:
                description: Any applicable license URI.
                items:
                  type: string
                type: array
              name:
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              rawDisk:
                description: The parameters of the raw disk image.
                properties:
                  containerType:
                    description: 'The format used to encode and transmit the block
                      device, which should be TAR. This is just a container and transmission
                      format and not a runtime format. Provided by the client when
                      the disk image is created. Default value: "TAR" Possible values:
                      ["TAR"]'
                    type: string
                  sha1:
                    description: An optional SHA1 checksum of the disk image before
                      unpackaging. This is provided by the client when the disk image
                      is created.
                    type: string
                  source:
                    description: The full Google Cloud Storage URL where disk storage
                      is stored You must provide either this property or the sourceDisk
                      property but not both.
                    type: string
                required:
                - source
                type: object
              selfLink:
                type: string
              sourceDisk:
                description: The source disk to create this image based on. You must
                  provide either this property or the rawDisk.source property but
                  not both to create an image.
                type: string
              sourceImage:
                description: "URL of the source image used to create this image. In
                  order to create an image, you must provide the full or partial URL
                  of one of the following: \n * The selfLink URL * This property *
                  The rawDisk.source URL * The sourceDisk URL"
                type: string
              sourceSnapshot:
                description: "URL of the source snapshot used to create this image.
                  \n In order to create an image, you must provide the full or partial
                  URL of one of the following: \n * The selfLink URL * This property
                  * The sourceImage URL * The rawDisk.source URL * The sourceDisk
                  URL"
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: imageiammembers.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: ImageIamMember
    listKind: ImageIamMemberList
    plural: imageiammembers
    singular: imageiammember
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              image:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  image:
                    type: string
                  member:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - image
                - member
                - providerRef
                - role
                type: object
              member:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - image
            - member
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: httpshealthchecks.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: HttpsHealthCheck
    listKind: HttpsHealthCheckList
    plural: httpshealthchecks
    singular: httpshealthcheck
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              checkIntervalSec:
                description: How often (in seconds) to send a health check. The default
                  value is 5 seconds.
                format: int64
                type: integer
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              healthyThreshold:
                description: A so-far unhealthy instance will be marked healthy after
                  this many consecutive successes. The default value is 2.
                format: int64
                type: integer
              host:
                description: The value of the host header in the HTTPS health check
                  request. If left empty (default value), the public IP on behalf
                  of which this health check is performed will be used.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  checkIntervalSec:
                    description: How often (in seconds) to send a health check. The
                      default value is 5 seconds.
                    format: int64
                    type: integer
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  healthyThreshold:
                    description: A so-far unhealthy instance will be marked healthy
                      after this many consecutive successes. The default value is
                      2.
                    format: int64
                    type: integer
                  host:
                    description: The value of the host header in the HTTPS health
                      check request. If left empty (default value), the public IP
                      on behalf of which this health check is performed will be used.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035.  Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  port:
                    description: The TCP port number for the HTTPS health check request.
                      The default value is 80.
                    format: int64
                    type: integer
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  requestPath:
                    description: The request path of the HTTPS health check request.
                      The default value is /.
                    type: string
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeoutSec:
                    description: How long (in seconds) to wait before claiming failure.
                      The default value is 5 seconds.  It is invalid for timeoutSec
                      to have greater value than checkIntervalSec.
                    format: int64
                    type: integer
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  unhealthyThreshold:
                    description: A so-far healthy instance will be marked unhealthy
                      after this many consecutive failures. The default value is 2.
                    format: int64
                    type: integer
                required:
                - name
                - providerRef
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.  Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              port:
                description: The TCP port number for the HTTPS health check request.
                  The default value is 80.
                format: int64
                type: integer
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              requestPath:
                description: The request path of the HTTPS health check request. The
                  default value is /.
                type: string
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeoutSec:
                description: How long (in seconds) to wait before claiming failure.
                  The default value is 5 seconds.  It is invalid for timeoutSec to
                  have greater value than checkIntervalSec.
                format: int64
                type: integer
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              unhealthyThreshold:
                description: A so-far healthy instance will be marked unhealthy after
                  this many consecutive failures. The default value is 2.
                format: int64
                type: integer
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: globalnetworkendpoints.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: GlobalNetworkEndpoint
    listKind: GlobalNetworkEndpointList
    plural: globalnetworkendpoints
    singular: globalnetworkendpoint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              fqdn:
                description: Fully qualified domain name of network endpoint. This
                  can only be specified when network_endpoint_type of the NEG is INTERNET_FQDN_PORT.
                type: string
              globalNetworkEndpointGroup:
                description: The global network endpoint group this endpoint is part
                  of.
                type: string
              id:
                type: string
              ipAddress:
                description: IPv4 address external endpoint.
                type: string
              kubeformOutput:
                properties:
                  fqdn:
                    description: Fully qualified domain name of network endpoint.
                      This can only be specified when network_endpoint_type of the
                      NEG is INTERNET_FQDN_PORT.
                    type: string
                  globalNetworkEndpointGroup:
                    description: The global network endpoint group this endpoint is
                      part of.
                    type: string
                  id:
                    type: string
                  ipAddress:
                    description: IPv4 address external endpoint.
                    type: string
                  port:
                    description: Port number of the external endpoint.
                    format: int64
                    type: integer
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - globalNetworkEndpointGroup
                - port
                - providerRef
                type: object
              port:
                description: Port number of the external endpoint.
                format: int64
                type: integer
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - globalNetworkEndpointGroup
            - port
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: havpngateways.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: HaVPNGateway
    listKind: HaVPNGatewayList
    plural: havpngateways
    singular: havpngateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035.  Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  network:
                    description: The network this VPN gateway is accepting traffic
                      for.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: The region this gateway should sit in.
                    type: string
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  vpnInterfaces:
                    description: A list of interfaces on this VPN gateway.
                    items:
                      properties:
                        ID:
                          description: The numeric ID of this VPN gateway interface.
                          format: int64
                          type: integer
                        ipAddress:
                          description: The external IP address for this VPN gateway
                            interface.
                          type: string
                      type: object
                    type: array
                required:
                - name
                - network
                - providerRef
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.  Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              network:
                description: The network this VPN gateway is accepting traffic for.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: The region this gateway should sit in.
                type: string
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              vpnInterfaces:
                description: A list of interfaces on this VPN gateway.
                items:
                  properties:
                    ID:
                      description: The numeric ID of this VPN gateway interface.
                      format: int64
                      type: integer
                    ipAddress:
                      description: The external IP address for this VPN gateway interface.
                      type: string
                  type: object
                type: array
            required:
            - name
            - network
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: externalvpngateways.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: ExternalVPNGateway
    listKind: ExternalVPNGatewayList
    plural: externalvpngateways
    singular: externalvpngateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              interface:
                description: A list of interfaces on this external VPN gateway.
                items:
                  properties:
                    ID:
                      description: The numeric ID for this interface. Allowed values
                        are based on the redundancy type of this external VPN gateway
                        * '0 - SINGLE_IP_INTERNALLY_REDUNDANT' * '0, 1 - TWO_IPS_REDUNDANCY'
                        * '0, 1, 2, 3 - FOUR_IPS_REDUNDANCY'
                      format: int64
                      type: integer
                    ipAddress:
                      description: IP address of the interface in the external VPN
                        gateway. Only IPv4 is supported. This IP address can be either
                        from your on-premise gateway or another Cloud provider's VPN
                        gateway, it cannot be an IP address from Google Compute Engine.
                      type: string
                  type: object
                type: array
              kubeformOutput:
                properties:
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  interface:
                    description: A list of interfaces on this external VPN gateway.
                    items:
                      properties:
                        ID:
                          description: The numeric ID for this interface. Allowed
                            values are based on the redundancy type of this external
                            VPN gateway * '0 - SINGLE_IP_INTERNALLY_REDUNDANT' * '0,
                            1 - TWO_IPS_REDUNDANCY' * '0, 1, 2, 3 - FOUR_IPS_REDUNDANCY'
                          format: int64
                          type: integer
                        ipAddress:
                          description: IP address of the interface in the external
                            VPN gateway. Only IPv4 is supported. This IP address can
                            be either from your on-premise gateway or another Cloud
                            provider's VPN gateway, it cannot be an IP address from
                            Google Compute Engine.
                          type: string
                      type: object
                    type: array
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035.  Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  redundancyType:
                    description: 'Indicates the redundancy type of this external VPN
                      gateway Possible values: ["FOUR_IPS_REDUNDANCY", "SINGLE_IP_INTERNALLY_REDUNDANT",
                      "TWO_IPS_REDUNDANCY"]'
                    type: string
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.  Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              redundancyType:
                description: 'Indicates the redundancy type of this external VPN gateway
                  Possible values: ["FOUR_IPS_REDUNDANCY", "SINGLE_IP_INTERNALLY_REDUNDANT",
                  "TWO_IPS_REDUNDANCY"]'
                type: string
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: forwardingrules.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: ForwardingRule
    listKind: ForwardingRuleList
    plural: forwardingrules
    singular: forwardingrule
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              allPorts:
                description: For internal TCP/UDP load balancing (i.e. load balancing
                  scheme is INTERNAL and protocol is TCP/UDP), set this to true to
                  allow packets addressed to any ports to be forwarded to the backends
                  configured with this forwarding rule. Used with backend service.
                  Cannot be set if port or portRange are set.
                type: boolean
              allowGlobalAccess:
                description: If true, clients can access ILB from all regions. Otherwise
                  only allows from the local region the ILB is located at.
                type: boolean
              backendService:
                description: A BackendService to receive the matched traffic. This
                  is used only for INTERNAL load balancing.
                type: string
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              id:
                type: string
              ipAddress:
                description: "The IP address that this forwarding rule serves. When
                  a client sends traffic to this IP address, the forwarding rule directs
                  the traffic to the target that you specify in the forwarding rule.
                  The loadBalancingScheme and the forwarding rule's target determine
                  the type of IP address that you can use. For detailed information,
                  refer to [IP address specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).
                  \n An address can be specified either by a literal IP address or
                  a reference to an existing Address resource. If you don't specify
                  a reserved IP address, an ephemeral IP address is assigned. \n The
                  value must be set to 0.0.0.0 when the target is a targetGrpcProxy
                  that has validateForProxyless field set to true. \n For Private
                  Service Connect forwarding rules that forward traffic to Google
                  APIs, IP address must be provided."
                type: string
              ipProtocol:
                description: "The IP protocol to which this rule applies. \n When
                  the load balancing scheme is INTERNAL, only TCP and UDP are valid.
                  Possible values: [\"TCP\", \"UDP\", \"ESP\", \"AH\", \"SCTP\", \"ICMP\"]"
                type: string
              isMirroringCollector:
                description: Indicates whether or not this load balancer can be used
                  as a collector for packet mirroring. To prevent mirroring loops,
                  instances behind this load balancer will not have their traffic
                  mirrored even if a PacketMirroring rule applies to them. This can
                  only be set to true for load balancers that have their loadBalancingScheme
                  set to INTERNAL.
                type: boolean
              kubeformOutput:
                properties:
                  allPorts:
                    description: For internal TCP/UDP load balancing (i.e. load balancing
                      scheme is INTERNAL and protocol is TCP/UDP), set this to true
                      to allow packets addressed to any ports to be forwarded to the
                      backends configured with this forwarding rule. Used with backend
                      service. Cannot be set if port or portRange are set.
                    type: boolean
                  allowGlobalAccess:
                    description: If true, clients can access ILB from all regions.
                      Otherwise only allows from the local region the ILB is located
                      at.
                    type: boolean
                  backendService:
                    description: A BackendService to receive the matched traffic.
                      This is used only for INTERNAL load balancing.
                    type: string
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  id:
                    type: string
                  ipAddress:
                    description: "The IP address that this forwarding rule serves.
                      When a client sends traffic to this IP address, the forwarding
                      rule directs the traffic to the target that you specify in the
                      forwarding rule. The loadBalancingScheme and the forwarding
                      rule's target determine the type of IP address that you can
                      use. For detailed information, refer to [IP address specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).
                      \n An address can be specified either by a literal IP address
                      or a reference to an existing Address resource. If you don't
                      specify a reserved IP address, an ephemeral IP address is assigned.
                      \n The value must be set to 0.0.0.0 when the target is a targetGrpcProxy
                      that has validateForProxyless field set to true. \n For Private
                      Service Connect forwarding rules that forward traffic to Google
                      APIs, IP address must be provided."
                    type: string
                  ipProtocol:
                    description: "The IP protocol to which this rule applies. \n When
                      the load balancing scheme is INTERNAL, only TCP and UDP are
                      valid. Possible values: [\"TCP\", \"UDP\", \"ESP\", \"AH\",
                      \"SCTP\", \"ICMP\"]"
                    type: string
                  isMirroringCollector:
                    description: Indicates whether or not this load balancer can be
                      used as a collector for packet mirroring. To prevent mirroring
                      loops, instances behind this load balancer will not have their
                      traffic mirrored even if a PacketMirroring rule applies to them.
                      This can only be set to true for load balancers that have their
                      loadBalancingScheme set to INTERNAL.
                    type: boolean
                  loadBalancingScheme:
                    description: 'This signifies what the ForwardingRule will be used
                      for and can be EXTERNAL, INTERNAL, or INTERNAL_MANAGED. EXTERNAL
                      is used for Classic Cloud VPN gateways, protocol forwarding
                      to VMs from an external IP address, and HTTP(S), SSL Proxy,
                      TCP Proxy, and Network TCP/UDP load balancers. INTERNAL is used
                      for protocol forwarding to VMs from an internal IP address,
                      and internal TCP/UDP load balancers. INTERNAL_MANAGED is used
                      for internal HTTP(S) load balancers. Default value: "EXTERNAL"
                      Possible values: ["EXTERNAL", "INTERNAL", "INTERNAL_MANAGED"]'
                    type: string
                  name:
                    description: Name of the resource; provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  network:
                    description: For internal load balancing, this field identifies
                      the network that the load balanced IP should belong to for this
                      Forwarding Rule. If this field is not specified, the default
                      network will be used. This field is only used for INTERNAL load
                      balancing.
                    type: string
                  networkTier:
                    description: 'The networking tier used for configuring this address.
                      If this field is not specified, it is assumed to be PREMIUM.
                      Possible values: ["PREMIUM", "STANDARD"]'
                    type: string
                  portRange:
                    description: "This field is used along with the target field for
                      TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy,
                      TargetVpnGateway, TargetPool, TargetInstance. \n Applicable
                      only when IPProtocol is TCP, UDP, or SCTP, only packets addressed
                      to ports in the specified range will be forwarded to target.
                      Forwarding rules with the same [IPAddress, IPProtocol] pair
                      must have disjoint port ranges. \n Some types of forwarding
                      target have constraints on the acceptable ports: \n * TargetHttpProxy:
                      80, 8080 * TargetHttpsProxy: 443 * TargetTcpProxy: 25, 43, 110,
                      143, 195, 443, 465, 587, 700, 993, 995,                   1883,
                      5222 * TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587,
                      700, 993, 995,                   1883, 5222 * TargetVpnGateway:
                      500, 4500"
                    type: string
                  ports:
                    description: "This field is used along with the backend_service
                      field for internal load balancing. \n When the load balancing
                      scheme is INTERNAL, a single port or a comma separated list
                      of ports can be configured. Only packets addressed to these
                      ports will be forwarded to the backends configured with this
                      forwarding rule. \n You may specify a maximum of up to 5 ports."
                    items:
                      type: string
                    maxItems: 5
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: A reference to the region where the regional forwarding
                      rule resides. This field is not applicable to global forwarding
                      rules.
                    type: string
                  selfLink:
                    type: string
                  serviceLabel:
                    description: "An optional prefix to the service name for this
                      Forwarding Rule. If specified, will be the first label of the
                      fully qualified service name. \n The label must be 1-63 characters
                      long, and comply with RFC1035. Specifically, the label must
                      be 1-63 characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                      \n This field is only used for INTERNAL load balancing."
                    type: string
                  serviceName:
                    description: The internal fully qualified service name for this
                      Forwarding Rule. This field is only used for INTERNAL load balancing.
                    type: string
                  subnetwork:
                    description: "The subnetwork that the load balanced IP should
                      belong to for this Forwarding Rule.  This field is only used
                      for INTERNAL load balancing. \n If the network specified is
                      in auto subnet mode, this field is optional. However, if the
                      network is in custom subnet mode, a subnetwork must be specified."
                    type: string
                  target:
                    description: The URL of the target resource to receive the matched
                      traffic. The target must live in the same region as the forwarding
                      rule. The forwarded traffic must be of a type appropriate to
                      the target object.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                type: object
              loadBalancingScheme:
                description: 'This signifies what the ForwardingRule will be used
                  for and can be EXTERNAL, INTERNAL, or INTERNAL_MANAGED. EXTERNAL
                  is used for Classic Cloud VPN gateways, protocol forwarding to VMs
                  from an external IP address, and HTTP(S), SSL Proxy, TCP Proxy,
                  and Network TCP/UDP load balancers. INTERNAL is used for protocol
                  forwarding to VMs from an internal IP address, and internal TCP/UDP
                  load balancers. INTERNAL_MANAGED is used for internal HTTP(S) load
                  balancers. Default value: "EXTERNAL" Possible values: ["EXTERNAL",
                  "INTERNAL", "INTERNAL_MANAGED"]'
                type: string
              name:
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              network:
                description: For internal load balancing, this field identifies the
                  network that the load balanced IP should belong to for this Forwarding
                  Rule. If this field is not specified, the default network will be
                  used. This field is only used for INTERNAL load balancing.
                type: string
              networkTier:
                description: 'The networking tier used for configuring this address.
                  If this field is not specified, it is assumed to be PREMIUM. Possible
                  values: ["PREMIUM", "STANDARD"]'
                type: string
              portRange:
                description: "This field is used along with the target field for TargetHttpProxy,
                  TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway,
                  TargetPool, TargetInstance. \n Applicable only when IPProtocol is
                  TCP, UDP, or SCTP, only packets addressed to ports in the specified
                  range will be forwarded to target. Forwarding rules with the same
                  [IPAddress, IPProtocol] pair must have disjoint port ranges. \n
                  Some types of forwarding target have constraints on the acceptable
                  ports: \n * TargetHttpProxy: 80, 8080 * TargetHttpsProxy: 443 *
                  TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993,
                  995,                   1883, 5222 * TargetSslProxy: 25, 43, 110,
                  143, 195, 443, 465, 587, 700, 993, 995,                   1883,
                  5222 * TargetVpnGateway: 500, 4500"
                type: string
              ports:
                description: "This field is used along with the backend_service field
                  for internal load balancing. \n When the load balancing scheme is
                  INTERNAL, a single port or a comma separated list of ports can be
                  configured. Only packets addressed to these ports will be forwarded
                  to the backends configured with this forwarding rule. \n You may
                  specify a maximum of up to 5 ports."
                items:
                  type: string
                maxItems: 5
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: A reference to the region where the regional forwarding
                  rule resides. This field is not applicable to global forwarding
                  rules.
                type: string
              selfLink:
                type: string
              serviceLabel:
                description: "An optional prefix to the service name for this Forwarding
                  Rule. If specified, will be the first label of the fully qualified
                  service name. \n The label must be 1-63 characters long, and comply
                  with RFC1035. Specifically, the label must be 1-63 characters long
                  and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which
                  means the first character must be a lowercase letter, and all following
                  characters must be a dash, lowercase letter, or digit, except the
                  last character, which cannot be a dash. \n This field is only used
                  for INTERNAL load balancing."
                type: string
              serviceName:
                description: The internal fully qualified service name for this Forwarding
                  Rule. This field is only used for INTERNAL load balancing.
                type: string
              subnetwork:
                description: "The subnetwork that the load balanced IP should belong
                  to for this Forwarding Rule.  This field is only used for INTERNAL
                  load balancing. \n If the network specified is in auto subnet mode,
                  this field is optional. However, if the network is in custom subnet
                  mode, a subnetwork must be specified."
                type: string
              target:
                description: The URL of the target resource to receive the matched
                  traffic. The target must live in the same region as the forwarding
                  rule. The forwarded traffic must be of a type appropriate to the
                  target object.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: autoscalers.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: Autoscaler
    listKind: AutoscalerList
    plural: autoscalers
    singular: autoscaler
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              autoscalingPolicy:
                description: "The configuration parameters for the autoscaling algorithm.
                  You can define one or more of the policies for an autoscaler: cpuUtilization,
                  customMetricUtilizations, and loadBalancingUtilization. \n If none
                  of these are specified, the default will be to autoscale based on
                  cpuUtilization to 0.6 or 60%."
                properties:
                  cooldownPeriod:
                    description: "The number of seconds that the autoscaler should
                      wait before it starts collecting information from a new instance.
                      This prevents the autoscaler from collecting information when
                      the instance is initializing, during which the collected usage
                      would not be reliable. The default time autoscaler waits is
                      60 seconds. \n Virtual machine initialization times might vary
                      because of numerous factors. We recommend that you test how
                      long an instance may take to initialize. To do this, create
                      an instance and time the startup process."
                    format: int64
                    type: integer
                  cpuUtilization:
                    description: Defines the CPU utilization policy that allows the
                      autoscaler to scale based on the average CPU utilization of
                      a managed instance group.
                    properties:
                      target:
                        description: "The target CPU utilization that the autoscaler
                          should maintain. Must be a float value in the range (0,
                          1]. If not specified, the default is 0.6. \n If the CPU
                          level is below the target utilization, the autoscaler scales
                          down the number of instances until it reaches the minimum
                          number of instances you specified or until the average CPU
                          of your instances reaches the target utilization. \n If
                          the average CPU is above the target utilization, the autoscaler
                          scales up until it reaches the maximum number of instances
                          you specified or until the average utilization reaches the
                          target utilization."
                        format: double
                        type: number
                    required:
                    - target
                    type: object
                  loadBalancingUtilization:
                    description: Configuration parameters of autoscaling based on
                      a load balancer.
                    properties:
                      target:
                        description: Fraction of backend capacity utilization (set
                          in HTTP(s) load balancing configuration) that autoscaler
                          should maintain. Must be a positive float value. If not
                          defined, the default is 0.8.
                        format: double
                        type: number
                    required:
                    - target
                    type: object
                  maxReplicas:
                    description: The maximum number of instances that the autoscaler
                      can scale up to. This is required when creating or updating
                      an autoscaler. The maximum number of replicas should not be
                      lower than minimal number of replicas.
                    format: int64
                    type: integer
                  metric:
                    description: Configuration parameters of autoscaling based on
                      a custom metric.
                    items:
                      properties:
                        name:
                          description: "The identifier (type) of the Stackdriver Monitoring
                            metric. The metric cannot have negative values. \n The
                            metric must have a value type of INT64 or DOUBLE."
                          type: string
                        target:
                          description: "The target value of the metric that autoscaler
                            should maintain. This must be a positive value. A utilization
                            metric scales number of virtual machines handling requests
                            to increase or decrease proportionally to the metric.
                            \n For example, a good metric to use as a utilizationTarget
                            is www.googleapis.com/compute/instance/network/received_bytes_count.
                            The autoscaler will work to keep this value constant for
                            each of the instances."
                          format: double
                          type: number
                        type:
                          description: 'Defines how target utilization value is expressed
                            for a Stackdriver Monitoring metric. Possible values:
                            ["GAUGE", "DELTA_PER_SECOND", "DELTA_PER_MINUTE"]'
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  minReplicas:
                    description: The minimum number of replicas that the autoscaler
                      can scale down to. This cannot be less than 0. If not provided,
                      autoscaler will choose a default value depending on maximum
                      number of instances allowed.
                    format: int64
                    type: integer
                  mode:
                    description: 'Defines operating mode for this policy. Default
                      value: "ON" Possible values: ["OFF", "ONLY_UP", "ON"]'
                    type: string
                  scaleInControl:
                    description: Defines scale in controls to reduce the risk of response
                      latency and outages due to abrupt scale-in events
                    properties:
                      maxScaledInReplicas:
                        description: A nested object resource
                        properties:
                          fixed:
                            description: Specifies a fixed number of VM instances.
                              This must be a positive integer.
                            format: int64
                            type: integer
                          percent:
                            description: Specifies a percentage of instances between
                              0 to 100%, inclusive. For example, specify 80 for 80%.
                            format: int64
                            type: integer
                        type: object
                      timeWindowSec:
                        description: How long back autoscaling should look when computing
                          recommendations to include directives regarding slower scale
                          down, as described above.
                        format: int64
                        type: integer
                    type: object
                required:
                - maxReplicas
                - minReplicas
                type: object
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  autoscalingPolicy:
                    description: "The configuration parameters for the autoscaling
                      algorithm. You can define one or more of the policies for an
                      autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization.
                      \n If none of these are specified, the default will be to autoscale
                      based on cpuUtilization to 0.6 or 60%."
                    properties:
                      cooldownPeriod:
                        description: "The number of seconds that the autoscaler should
                          wait before it starts collecting information from a new
                          instance. This prevents the autoscaler from collecting information
                          when the instance is initializing, during which the collected
                          usage would not be reliable. The default time autoscaler
                          waits is 60 seconds. \n Virtual machine initialization times
                          might vary because of numerous factors. We recommend that
                          you test how long an instance may take to initialize. To
                          do this, create an instance and time the startup process."
                        format: int64
                        type: integer
                      cpuUtilization:
                        description: Defines the CPU utilization policy that allows
                          the autoscaler to scale based on the average CPU utilization
                          of a managed instance group.
                        properties:
                          target:
                            description: "The target CPU utilization that the autoscaler
                              should maintain. Must be a float value in the range
                              (0, 1]. If not specified, the default is 0.6. \n If
                              the CPU level is below the target utilization, the autoscaler
                              scales down the number of instances until it reaches
                              the minimum number of instances you specified or until
                              the average CPU of your instances reaches the target
                              utilization. \n If the average CPU is above the target
                              utilization, the autoscaler scales up until it reaches
                              the maximum number of instances you specified or until
                              the average utilization reaches the target utilization."
                            format: double
                            type: number
                        required:
                        - target
                        type: object
                      loadBalancingUtilization:
                        description: Configuration parameters of autoscaling based
                          on a load balancer.
                        properties:
                          target:
                            description: Fraction of backend capacity utilization
                              (set in HTTP(s) load balancing configuration) that autoscaler
                              should maintain. Must be a positive float value. If
                              not defined, the default is 0.8.
                            format: double
                            type: number
                        required:
                        - target
                        type: object
                      maxReplicas:
                        description: The maximum number of instances that the autoscaler
                          can scale up to. This is required when creating or updating
                          an autoscaler. The maximum number of replicas should not
                          be lower than minimal number of replicas.
                        format: int64
                        type: integer
                      metric:
                        description: Configuration parameters of autoscaling based
                          on a custom metric.
                        items:
                          properties:
                            name:
                              description: "The identifier (type) of the Stackdriver
                                Monitoring metric. The metric cannot have negative
                                values. \n The metric must have a value type of INT64
                                or DOUBLE."
                              type: string
                            target:
                              description: "The target value of the metric that autoscaler
                                should maintain. This must be a positive value. A
                                utilization metric scales number of virtual machines
                                handling requests to increase or decrease proportionally
                                to the metric. \n For example, a good metric to use
                                as a utilizationTarget is www.googleapis.com/compute/instance/network/received_bytes_count.
                                The autoscaler will work to keep this value constant
                                for each of the instances."
                              format: double
                              type: number
                            type:
                              description: 'Defines how target utilization value is
                                expressed for a Stackdriver Monitoring metric. Possible
                                values: ["GAUGE", "DELTA_PER_SECOND", "DELTA_PER_MINUTE"]'
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      minReplicas:
                        description: The minimum number of replicas that the autoscaler
                          can scale down to. This cannot be less than 0. If not provided,
                          autoscaler will choose a default value depending on maximum
                          number of instances allowed.
                        format: int64
                        type: integer
                      mode:
                        description: 'Defines operating mode for this policy. Default
                          value: "ON" Possible values: ["OFF", "ONLY_UP", "ON"]'
                        type: string
                      scaleInControl:
                        description: Defines scale in controls to reduce the risk
                          of response latency and outages due to abrupt scale-in events
                        properties:
                          maxScaledInReplicas:
                            description: A nested object resource
                            properties:
                              fixed:
                                description: Specifies a fixed number of VM instances.
                                  This must be a positive integer.
                                format: int64
                                type: integer
                              percent:
                                description: Specifies a percentage of instances between
                                  0 to 100%, inclusive. For example, specify 80 for
                                  80%.
                                format: int64
                                type: integer
                            type: object
                          timeWindowSec:
                            description: How long back autoscaling should look when
                              computing recommendations to include directives regarding
                              slower scale down, as described above.
                            format: int64
                            type: integer
                        type: object
                    required:
                    - maxReplicas
                    - minReplicas
                    type: object
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. The name must be 1-63 characters
                      long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  target:
                    description: URL of the managed instance group that this autoscaler
                      will scale.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: URL of the zone where the instance group resides.
                    type: string
                required:
                - autoscalingPolicy
                - name
                - providerRef
                - target
                type: object
              name:
                description: Name of the resource. The name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              target:
                description: URL of the managed instance group that this autoscaler
                  will scale.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              zone:
                description: URL of the zone where the instance group resides.
                type: string
            required:
            - autoscalingPolicy
            - name
            - providerRef
            - target
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: firewalls.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: Firewall
    listKind: FirewallList
    plural: firewalls
    singular: firewall
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              allow:
                description: The list of ALLOW rules specified by this firewall. Each
                  rule specifies a protocol and port-range tuple that describes a
                  permitted connection.
                items:
                  properties:
                    ports:
                      description: "An optional list of ports to which this rule applies.
                        This field is only applicable for UDP or TCP protocol. Each
                        entry must be either an integer or a range. If not specified,
                        this rule applies to connections through any port. \n Example
                        inputs include: [\"22\"], [\"80\",\"443\"], and [\"12345-12349\"]."
                      items:
                        type: string
                      type: array
                    protocol:
                      description: The IP protocol to which this rule applies. The
                        protocol type is required when creating a firewall rule. This
                        value can either be one of the following well known protocol
                        strings (tcp, udp, icmp, esp, ah, sctp, ipip, all), or the
                        IP protocol number.
                      type: string
                  required:
                  - protocol
                  type: object
                type: array
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              deny:
                description: The list of DENY rules specified by this firewall. Each
                  rule specifies a protocol and port-range tuple that describes a
                  denied connection.
                items:
                  properties:
                    ports:
                      description: "An optional list of ports to which this rule applies.
                        This field is only applicable for UDP or TCP protocol. Each
                        entry must be either an integer or a range. If not specified,
                        this rule applies to connections through any port. \n Example
                        inputs include: [\"22\"], [\"80\",\"443\"], and [\"12345-12349\"]."
                      items:
                        type: string
                      type: array
                    protocol:
                      description: The IP protocol to which this rule applies. The
                        protocol type is required when creating a firewall rule. This
                        value can either be one of the following well known protocol
                        strings (tcp, udp, icmp, esp, ah, sctp, ipip, all), or the
                        IP protocol number.
                      type: string
                  required:
                  - protocol
                  type: object
                type: array
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              destinationRanges:
                description: If destination ranges are specified, the firewall will
                  apply only to traffic that has destination IP address in these ranges.
                  These ranges must be expressed in CIDR format. Only IPv4 is supported.
                items:
                  type: string
                type: array
              direction:
                description: 'Direction of traffic to which this firewall applies;
                  default is INGRESS. Note: For INGRESS traffic, it is NOT supported
                  to specify destinationRanges; For EGRESS traffic, it is NOT supported
                  to specify sourceRanges OR sourceTags. Possible values: ["INGRESS",
                  "EGRESS"]'
                type: string
              disabled:
                description: Denotes whether the firewall rule is disabled, i.e not
                  applied to the network it is associated with. When set to true,
                  the firewall rule is not enforced and the network behaves as if
                  it did not exist. If this is unspecified, the firewall rule will
                  be enabled.
                type: boolean
              enableLogging:
                description: This field denotes whether to enable logging for a particular
                  firewall rule. If logging is enabled, logs will be exported to Stackdriver.
                  Deprecated
                type: boolean
              id:
                type: string
              kubeformOutput:
                properties:
                  allow:
                    description: The list of ALLOW rules specified by this firewall.
                      Each rule specifies a protocol and port-range tuple that describes
                      a permitted connection.
                    items:
                      properties:
                        ports:
                          description: "An optional list of ports to which this rule
                            applies. This field is only applicable for UDP or TCP
                            protocol. Each entry must be either an integer or a range.
                            If not specified, this rule applies to connections through
                            any port. \n Example inputs include: [\"22\"], [\"80\",\"443\"],
                            and [\"12345-12349\"]."
                          items:
                            type: string
                          type: array
                        protocol:
                          description: The IP protocol to which this rule applies.
                            The protocol type is required when creating a firewall
                            rule. This value can either be one of the following well
                            known protocol strings (tcp, udp, icmp, esp, ah, sctp,
                            ipip, all), or the IP protocol number.
                          type: string
                      required:
                      - protocol
                      type: object
                    type: array
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  deny:
                    description: The list of DENY rules specified by this firewall.
                      Each rule specifies a protocol and port-range tuple that describes
                      a denied connection.
                    items:
                      properties:
                        ports:
                          description: "An optional list of ports to which this rule
                            applies. This field is only applicable for UDP or TCP
                            protocol. Each entry must be either an integer or a range.
                            If not specified, this rule applies to connections through
                            any port. \n Example inputs include: [\"22\"], [\"80\",\"443\"],
                            and [\"12345-12349\"]."
                          items:
                            type: string
                          type: array
                        protocol:
                          description: The IP protocol to which this rule applies.
                            The protocol type is required when creating a firewall
                            rule. This value can either be one of the following well
                            known protocol strings (tcp, udp, icmp, esp, ah, sctp,
                            ipip, all), or the IP protocol number.
                          type: string
                      required:
                      - protocol
                      type: object
                    type: array
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  destinationRanges:
                    description: If destination ranges are specified, the firewall
                      will apply only to traffic that has destination IP address in
                      these ranges. These ranges must be expressed in CIDR format.
                      Only IPv4 is supported.
                    items:
                      type: string
                    type: array
                  direction:
                    description: 'Direction of traffic to which this firewall applies;
                      default is INGRESS. Note: For INGRESS traffic, it is NOT supported
                      to specify destinationRanges; For EGRESS traffic, it is NOT
                      supported to specify sourceRanges OR sourceTags. Possible values:
                      ["INGRESS", "EGRESS"]'
                    type: string
                  disabled:
                    description: Denotes whether the firewall rule is disabled, i.e
                      not applied to the network it is associated with. When set to
                      true, the firewall rule is not enforced and the network behaves
                      as if it did not exist. If this is unspecified, the firewall
                      rule will be enabled.
                    type: boolean
                  enableLogging:
                    description: This field denotes whether to enable logging for
                      a particular firewall rule. If logging is enabled, logs will
                      be exported to Stackdriver. Deprecated
                    type: boolean
                  id:
                    type: string
                  logConfig:
                    description: This field denotes the logging options for a particular
                      firewall rule. If defined, logging is enabled, and logs will
                      be exported to Cloud Logging.
                    properties:
                      metadata:
                        description: 'This field denotes whether to include or exclude
                          metadata for firewall logs. Possible values: ["EXCLUDE_ALL_METADATA",
                          "INCLUDE_ALL_METADATA"]'
                        type: string
                    required:
                    - metadata
                    type: object
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  network:
                    description: The name or self_link of the network to attach this
                      firewall to.
                    type: string
                  priority:
                    description: Priority for this rule. This is an integer between
                      0 and 65535, both inclusive. When not specified, the value assumed
                      is 1000. Relative priorities determine precedence of conflicting
                      rules. Lower value of priority implies higher precedence (eg,
                      a rule with priority 0 has higher precedence than a rule with
                      priority 1). DENY rules take precedence over ALLOW rules having
                      equal priority.
                    format: int64
                    type: integer
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  sourceRanges:
                    description: If source ranges are specified, the firewall will
                      apply only to traffic that has source IP address in these ranges.
                      These ranges must be expressed in CIDR format. One or both of
                      sourceRanges and sourceTags may be set. If both properties are
                      set, the firewall will apply to traffic that has source IP address
                      within sourceRanges OR the source IP that belongs to a tag listed
                      in the sourceTags property. The connection does not need to
                      match both properties for the firewall to apply. Only IPv4 is
                      supported.
                    items:
                      type: string
                    type: array
                  sourceServiceAccounts:
                    description: If source service accounts are specified, the firewall
                      will apply only to traffic originating from an instance with
                      a service account in this list. Source service accounts cannot
                      be used to control traffic to an instance's external IP address
                      because service accounts are associated with an instance, not
                      an IP address. sourceRanges can be set at the same time as sourceServiceAccounts.
                      If both are set, the firewall will apply to traffic that has
                      source IP address within sourceRanges OR the source IP belongs
                      to an instance with service account listed in sourceServiceAccount.
                      The connection does not need to match both properties for the
                      firewall to apply. sourceServiceAccounts cannot be used at the
                      same time as sourceTags or targetTags.
                    items:
                      type: string
                    maxItems: 10
                    type: array
                  sourceTags:
                    description: If source tags are specified, the firewall will apply
                      only to traffic with source IP that belongs to a tag listed
                      in source tags. Source tags cannot be used to control traffic
                      to an instance's external IP address. Because tags are associated
                      with an instance, not an IP address. One or both of sourceRanges
                      and sourceTags may be set. If both properties are set, the firewall
                      will apply to traffic that has source IP address within sourceRanges
                      OR the source IP that belongs to a tag listed in the sourceTags
                      property. The connection does not need to match both properties
                      for the firewall to apply.
                    items:
                      type: string
                    type: array
                  targetServiceAccounts:
                    description: A list of service accounts indicating sets of instances
                      located in the network that may make network connections as
                      specified in allowed[]. targetServiceAccounts cannot be used
                      at the same time as targetTags or sourceTags. If neither targetServiceAccounts
                      nor targetTags are specified, the firewall rule applies to all
                      instances on the specified network.
                    items:
                      type: string
                    maxItems: 10
                    type: array
                  targetTags:
                    description: A list of instance tags indicating sets of instances
                      located in the network that may make network connections as
                      specified in allowed[]. If no targetTags are specified, the
                      firewall rule applies to all instances on the specified network.
                    items:
                      type: string
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - network
                - providerRef
                type: object
              logConfig:
                description: This field denotes the logging options for a particular
                  firewall rule. If defined, logging is enabled, and logs will be
                  exported to Cloud Logging.
                properties:
                  metadata:
                    description: 'This field denotes whether to include or exclude
                      metadata for firewall logs. Possible values: ["EXCLUDE_ALL_METADATA",
                      "INCLUDE_ALL_METADATA"]'
                    type: string
                required:
                - metadata
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              network:
                description: The name or self_link of the network to attach this firewall
                  to.
                type: string
              priority:
                description: Priority for this rule. This is an integer between 0
                  and 65535, both inclusive. When not specified, the value assumed
                  is 1000. Relative priorities determine precedence of conflicting
                  rules. Lower value of priority implies higher precedence (eg, a
                  rule with priority 0 has higher precedence than a rule with priority
                  1). DENY rules take precedence over ALLOW rules having equal priority.
                format: int64
                type: integer
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              sourceRanges:
                description: If source ranges are specified, the firewall will apply
                  only to traffic that has source IP address in these ranges. These
                  ranges must be expressed in CIDR format. One or both of sourceRanges
                  and sourceTags may be set. If both properties are set, the firewall
                  will apply to traffic that has source IP address within sourceRanges
                  OR the source IP that belongs to a tag listed in the sourceTags
                  property. The connection does not need to match both properties
                  for the firewall to apply. Only IPv4 is supported.
                items:
                  type: string
                type: array
              sourceServiceAccounts:
                description: If source service accounts are specified, the firewall
                  will apply only to traffic originating from an instance with a service
                  account in this list. Source service accounts cannot be used to
                  control traffic to an instance's external IP address because service
                  accounts are associated with an instance, not an IP address. sourceRanges
                  can be set at the same time as sourceServiceAccounts. If both are
                  set, the firewall will apply to traffic that has source IP address
                  within sourceRanges OR the source IP belongs to an instance with
                  service account listed in sourceServiceAccount. The connection does
                  not need to match both properties for the firewall to apply. sourceServiceAccounts
                  cannot be used at the same time as sourceTags or targetTags.
                items:
                  type: string
                maxItems: 10
                type: array
              sourceTags:
                description: If source tags are specified, the firewall will apply
                  only to traffic with source IP that belongs to a tag listed in source
                  tags. Source tags cannot be used to control traffic to an instance's
                  external IP address. Because tags are associated with an instance,
                  not an IP address. One or both of sourceRanges and sourceTags may
                  be set. If both properties are set, the firewall will apply to traffic
                  that has source IP address within sourceRanges OR the source IP
                  that belongs to a tag listed in the sourceTags property. The connection
                  does not need to match both properties for the firewall to apply.
                items:
                  type: string
                type: array
              targetServiceAccounts:
                description: A list of service accounts indicating sets of instances
                  located in the network that may make network connections as specified
                  in allowed[]. targetServiceAccounts cannot be used at the same time
                  as targetTags or sourceTags. If neither targetServiceAccounts nor
                  targetTags are specified, the firewall rule applies to all instances
                  on the specified network.
                items:
                  type: string
                maxItems: 10
                type: array
              targetTags:
                description: A list of instance tags indicating sets of instances
                  located in the network that may make network connections as specified
                  in allowed[]. If no targetTags are specified, the firewall rule
                  applies to all instances on the specified network.
                items:
                  type: string
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - network
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: addresses.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: Address
    listKind: AddressList
    plural: addresses
    singular: address
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              address:
                description: The static external IP address represented by this resource.
                  Only IPv4 is supported. An address may only be specified for INTERNAL
                  address types. The IP address must be inside the specified subnetwork,
                  if any.
                type: string
              addressType:
                description: 'The type of address to reserve. Default value: "EXTERNAL"
                  Possible values: ["INTERNAL", "EXTERNAL"]'
                type: string
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  address:
                    description: The static external IP address represented by this
                      resource. Only IPv4 is supported. An address may only be specified
                      for INTERNAL address types. The IP address must be inside the
                      specified subnetwork, if any.
                    type: string
                  addressType:
                    description: 'The type of address to reserve. Default value: "EXTERNAL"
                      Possible values: ["INTERNAL", "EXTERNAL"]'
                    type: string
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. The name must be 1-63 characters
                      long, and comply with RFC1035. Specifically, the name must be
                      1-63 characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  networkTier:
                    description: 'The networking tier used for configuring this address.
                      If this field is not specified, it is assumed to be PREMIUM.
                      Possible values: ["PREMIUM", "STANDARD"]'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  purpose:
                    description: "The purpose of this resource. Possible values include:
                      \n * GCE_ENDPOINT for addresses that are used by VM instances,
                      alias IP ranges, internal load balancers, and similar resources.
                      \n * SHARED_LOADBALANCER_VIP for an address that can be used
                      by multiple internal load balancers. \n * VPC_PEERING for addresses
                      that are reserved for VPC peer networks."
                    type: string
                  region:
                    description: The Region in which the created address should reside.
                      If it is not provided, the provider region is used.
                    type: string
                  selfLink:
                    type: string
                  subnetwork:
                    description: The URL of the subnetwork in which to reserve the
                      address. If an IP address is specified, it must be within the
                      subnetwork's IP range. This field can only be used with INTERNAL
                      type with GCE_ENDPOINT/DNS_RESOLVER purposes.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  users:
                    description: The URLs of the resources that are using this address.
                    items:
                      type: string
                    type: array
                required:
                - name
                - providerRef
                type: object
              name:
                description: Name of the resource. The name must be 1-63 characters
                  long, and comply with RFC1035. Specifically, the name must be 1-63
                  characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              networkTier:
                description: 'The networking tier used for configuring this address.
                  If this field is not specified, it is assumed to be PREMIUM. Possible
                  values: ["PREMIUM", "STANDARD"]'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              purpose:
                description: "The purpose of this resource. Possible values include:
                  \n * GCE_ENDPOINT for addresses that are used by VM instances, alias
                  IP ranges, internal load balancers, and similar resources. \n *
                  SHARED_LOADBALANCER_VIP for an address that can be used by multiple
                  internal load balancers. \n * VPC_PEERING for addresses that are
                  reserved for VPC peer networks."
                type: string
              region:
                description: The Region in which the created address should reside.
                  If it is not provided, the provider region is used.
                type: string
              selfLink:
                type: string
              subnetwork:
                description: The URL of the subnetwork in which to reserve the address.
                  If an IP address is specified, it must be within the subnetwork's
                  IP range. This field can only be used with INTERNAL type with GCE_ENDPOINT/DNS_RESOLVER
                  purposes.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              users:
                description: The URLs of the resources that are using this address.
                items:
                  type: string
                type: array
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: diskiambindings.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: DiskIamBinding
    listKind: DiskIamBindingList
    plural: diskiambindings
    singular: diskiambinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  members:
                    items:
                      type: string
                    type: array
                  name:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  zone:
                    type: string
                required:
                - members
                - name
                - providerRef
                - role
                type: object
              members:
                items:
                  type: string
                type: array
              name:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              zone:
                type: string
            required:
            - members
            - name
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: instances.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              allowStoppingForUpdate:
                description: If true, allows Terraform to stop the instance to update
                  its properties. If you try to update a property that requires stopping
                  the instance without setting this field, the update will fail.
                type: boolean
              attachedDisk:
                description: List of disks attached to the instance
                items:
                  properties:
                    deviceName:
                      description: Name with which the attached disk is accessible
                        under /dev/disk/by-id/
                      type: string
                    diskEncryptionKeySha256:
                      description: The RFC 4648 base64 encoded SHA-256 hash of the
                        customer-supplied encryption key that protects this resource.
                      type: string
                    kmsKeySelfLink:
                      description: The self_link of the encryption key that is stored
                        in Google Cloud KMS to encrypt this disk. Only one of kms_key_self_link
                        and disk_encryption_key_raw may be set.
                      type: string
                    mode:
                      description: Read/write mode for the disk. One of "READ_ONLY"
                        or "READ_WRITE".
                      type: string
                    source:
                      description: The name or self_link of the disk attached to this
                        instance.
                      type: string
                  required:
                  - source
                  type: object
                type: array
              bootDisk:
                description: The boot disk for the instance.
                properties:
                  autoDelete:
                    description: Whether the disk will be auto-deleted when the instance
                      is deleted.
                    type: boolean
                  deviceName:
                    description: Name with which attached disk will be accessible
                      under /dev/disk/by-id/
                    type: string
                  diskEncryptionKeySha256:
                    description: The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
                      encryption key that protects this resource.
                    type: string
                  initializeParams:
                    description: Parameters with which a disk was created alongside
                      the instance.
                    properties:
                      image:
                        description: The image from which this disk was initialised.
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: A set of key/value label pairs assigned to the
                          disk.
                        type: object
                      size:
                        description: The size of the image in gigabytes.
                        format: int64
                        type: integer
                      type:
                        description: The Google Compute Engine disk type. One of pd-standard,
                          pd-ssd or pd-balanced.
                        type: string
                    type: object
                  kmsKeySelfLink:
                    description: The self_link of the encryption key that is stored
                      in Google Cloud KMS to encrypt this disk. Only one of kms_key_self_link
                      and disk_encryption_key_raw may be set.
                    type: string
                  mode:
                    description: Read/write mode for the disk. One of "READ_ONLY"
                      or "READ_WRITE".
                    type: string
                  source:
                    description: The name or self_link of the disk attached to this
                      instance.
                    type: string
                type: object
              canIPForward:
                description: Whether sending and receiving of packets with non-matching
                  source or destination IPs is allowed.
                type: boolean
              confidentialInstanceConfig:
                description: The Confidential VM config being used by the instance.  on_host_maintenance
                  has to be set to TERMINATE or this will fail to create.
                properties:
                  enableConfidentialCompute:
                    description: Defines whether the instance should have confidential
                      compute enabled.
                    type: boolean
                required:
                - enableConfidentialCompute
                type: object
              cpuPlatform:
                description: The CPU platform used by this instance.
                type: string
              currentStatus:
                description: Current status of the instance.
                type: string
              deletionProtection:
                description: Whether deletion protection is enabled on this instance.
                type: boolean
              description:
                description: A brief description of the resource.
                type: string
              desiredStatus:
                description: Desired status of the instance. Either "RUNNING" or "TERMINATED".
                type: string
              enableDisplay:
                description: Whether the instance has virtual displays enabled.
                type: boolean
              guestAccelerator:
                description: List of the type and count of accelerator cards attached
                  to the instance.
                items:
                  properties:
                    count:
                      description: The number of the guest accelerator cards exposed
                        to this instance.
                      format: int64
                      type: integer
                    type:
                      description: The accelerator type resource exposed to this instance.
                        E.g. nvidia-tesla-k80.
                      type: string
                  required:
                  - count
                  - type
                  type: object
                type: array
              hostname:
                description: A custom hostname for the instance. Must be a fully qualified
                  DNS name and RFC-1035-valid. Valid format is a series of labels
                  1-63 characters long matching the regular expression [a-z]([-a-z0-9]*[a-z0-9]),
                  concatenated with periods. The entire hostname must not exceed 253
                  characters. Changing this forces a new resource to be created.
                type: string
              id:
                type: string
              instanceID:
                description: The server-assigned unique identifier of this instance.
                type: string
              kubeformOutput:
                properties:
                  allowStoppingForUpdate:
                    description: If true, allows Terraform to stop the instance to
                      update its properties. If you try to update a property that
                      requires stopping the instance without setting this field, the
                      update will fail.
                    type: boolean
                  attachedDisk:
                    description: List of disks attached to the instance
                    items:
                      properties:
                        deviceName:
                          description: Name with which the attached disk is accessible
                            under /dev/disk/by-id/
                          type: string
                        diskEncryptionKeySha256:
                          description: The RFC 4648 base64 encoded SHA-256 hash of
                            the customer-supplied encryption key that protects this
                            resource.
                          type: string
                        kmsKeySelfLink:
                          description: The self_link of the encryption key that is
                            stored in Google Cloud KMS to encrypt this disk. Only
                            one of kms_key_self_link and disk_encryption_key_raw may
                            be set.
                          type: string
                        mode:
                          description: Read/write mode for the disk. One of "READ_ONLY"
                            or "READ_WRITE".
                          type: string
                        source:
                          description: The name or self_link of the disk attached
                            to this instance.
                          type: string
                      required:
                      - source
                      type: object
                    type: array
                  bootDisk:
                    description: The boot disk for the instance.
                    properties:
                      autoDelete:
                        description: Whether the disk will be auto-deleted when the
                          instance is deleted.
                        type: boolean
                      deviceName:
                        description: Name with which attached disk will be accessible
                          under /dev/disk/by-id/
                        type: string
                      diskEncryptionKeySha256:
                        description: The RFC 4648 base64 encoded SHA-256 hash of the
                          customer-supplied encryption key that protects this resource.
                        type: string
                      initializeParams:
                        description: Parameters with which a disk was created alongside
                          the instance.
                        properties:
                          image:
                            description: The image from which this disk was initialised.
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: A set of key/value label pairs assigned to
                              the disk.
                            type: object
                          size:
                            description: The size of the image in gigabytes.
                            format: int64
                            type: integer
                          type:
                            description: The Google Compute Engine disk type. One
                              of pd-standard, pd-ssd or pd-balanced.
                            type: string
                        type: object
                      kmsKeySelfLink:
                        description: The self_link of the encryption key that is stored
                          in Google Cloud KMS to encrypt this disk. Only one of kms_key_self_link
                          and disk_encryption_key_raw may be set.
                        type: string
                      mode:
                        description: Read/write mode for the disk. One of "READ_ONLY"
                          or "READ_WRITE".
                        type: string
                      source:
                        description: The name or self_link of the disk attached to
                          this instance.
                        type: string
                    type: object
                  canIPForward:
                    description: Whether sending and receiving of packets with non-matching
                      source or destination IPs is allowed.
                    type: boolean
                  confidentialInstanceConfig:
                    description: The Confidential VM config being used by the instance.  on_host_maintenance
                      has to be set to TERMINATE or this will fail to create.
                    properties:
                      enableConfidentialCompute:
                        description: Defines whether the instance should have confidential
                          compute enabled.
                        type: boolean
                    required:
                    - enableConfidentialCompute
                    type: object
                  cpuPlatform:
                    description: The CPU platform used by this instance.
                    type: string
                  currentStatus:
                    description: Current status of the instance.
                    type: string
                  deletionProtection:
                    description: Whether deletion protection is enabled on this instance.
                    type: boolean
                  description:
                    description: A brief description of the resource.
                    type: string
                  desiredStatus:
                    description: Desired status of the instance. Either "RUNNING"
                      or "TERMINATED".
                    type: string
                  enableDisplay:
                    description: Whether the instance has virtual displays enabled.
                    type: boolean
                  guestAccelerator:
                    description: List of the type and count of accelerator cards attached
                      to the instance.
                    items:
                      properties:
                        count:
                          description: The number of the guest accelerator cards exposed
                            to this instance.
                          format: int64
                          type: integer
                        type:
                          description: The accelerator type resource exposed to this
                            instance. E.g. nvidia-tesla-k80.
                          type: string
                      required:
                      - count
                      - type
                      type: object
                    type: array
                  hostname:
                    description: A custom hostname for the instance. Must be a fully
                      qualified DNS name and RFC-1035-valid. Valid format is a series
                      of labels 1-63 characters long matching the regular expression
                      [a-z]([-a-z0-9]*[a-z0-9]), concatenated with periods. The entire
                      hostname must not exceed 253 characters. Changing this forces
                      a new resource to be created.
                    type: string
                  id:
                    type: string
                  instanceID:
                    description: The server-assigned unique identifier of this instance.
                    type: string
                  labelFingerprint:
                    description: The unique fingerprint of the labels.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs assigned to the instance.
                    type: object
                  machineType:
                    description: The machine type to create.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: Metadata key/value pairs made available within the
                      instance.
                    type: object
                  metadataFingerprint:
                    description: The unique fingerprint of the metadata.
                    type: string
                  metadataStartupScript:
                    description: Metadata startup scripts made available within the
                      instance.
                    type: string
                  minCPUPlatform:
                    description: The minimum CPU platform specified for the VM instance.
                    type: string
                  name:
                    description: The name of the instance. One of name or self_link
                      must be provided.
                    type: string
                  networkInterface:
                    description: The networks attached to the instance.
                    items:
                      properties:
                        accessConfig:
                          description: Access configurations, i.e. IPs via which this
                            instance can be accessed via the Internet.
                          items:
                            properties:
                              natIP:
                                description: The IP address that is be 1:1 mapped
                                  to the instance's network ip.
                                type: string
                              networkTier:
                                description: The networking tier used for configuring
                                  this instance. One of PREMIUM or STANDARD.
                                type: string
                              publicPtrDomainName:
                                description: The DNS domain name for the public PTR
                                  record.
                                type: string
                            type: object
                          type: array
                        aliasIPRange:
                          description: An array of alias IP ranges for this network
                            interface.
                          items:
                            properties:
                              ipCIDRRange:
                                description: The IP CIDR range represented by this
                                  alias IP range.
                                type: string
                              subnetworkRangeName:
                                description: The subnetwork secondary range name specifying
                                  the secondary range from which to allocate the IP
                                  CIDR range for this alias IP range.
                                type: string
                            required:
                            - ipCIDRRange
                            type: object
                          type: array
                        name:
                          description: The name of the interface
                          type: string
                        network:
                          description: The name or self_link of the network attached
                            to this interface.
                          type: string
                        networkIP:
                          description: The private IP address assigned to the instance.
                          type: string
                        nicType:
                          description: The type of vNIC to be used on this interface.
                            Possible values:GVNIC, VIRTIO_NET
                          type: string
                        subnetwork:
                          description: The name or self_link of the subnetwork attached
                            to this interface.
                          type: string
                        subnetworkProject:
                          description: The project in which the subnetwork belongs.
                          type: string
                      type: object
                    type: array
                  project:
                    description: The ID of the project in which the resource belongs.
                      If self_link is provided, this value is ignored. If neither
                      self_link nor project are provided, the provider project is
                      used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  resourcePolicies:
                    description: A list of short names or self_links of resource policies
                      to attach to the instance. Modifying this list will cause the
                      instance to recreate. Currently a max of 1 resource policy is
                      supported.
                    items:
                      type: string
                    type: array
                  scheduling:
                    description: The scheduling strategy being used by the instance.
                    properties:
                      automaticRestart:
                        description: Specifies if the instance should be restarted
                          if it was terminated by Compute Engine (not a user).
                        type: boolean
                      minNodeCpus:
                        format: int64
                        type: integer
                      nodeAffinities:
                        description: Specifies node affinities or anti-affinities
                          to determine which sole-tenant nodes your instances and
                          managed instance groups will use as host systems.
                        items:
                          properties:
                            key:
                              type: string
                            operator:
                              type: string
                            values:
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          - values
                          type: object
                        type: array
                      onHostMaintenance:
                        description: Describes maintenance behavior for the instance.
                          One of MIGRATE or TERMINATE,
                        type: string
                      preemptible:
                        description: Whether the instance is preemptible.
                        type: boolean
                    type: object
                  scratchDisk:
                    description: The scratch disks attached to the instance.
                    items:
                      properties:
                        interface:
                          description: The disk interface used for attaching this
                            disk. One of SCSI or NVME.
                          type: string
                      required:
                      - interface
                      type: object
                    type: array
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                  serviceAccount:
                    description: The service account to attach to the instance.
                    properties:
                      email:
                        description: The service account e-mail address.
                        type: string
                      scopes:
                        description: A list of service scopes.
                        items:
                          type: string
                        type: array
                    required:
                    - scopes
                    type: object
                  shieldedInstanceConfig:
                    description: The shielded vm config being used by the instance.
                    properties:
                      enableIntegrityMonitoring:
                        description: Whether integrity monitoring is enabled for the
                          instance.
                        type: boolean
                      enableSecureBoot:
                        description: Whether secure boot is enabled for the instance.
                        type: boolean
                      enableVtpm:
                        description: Whether the instance uses vTPM.
                        type: boolean
                    type: object
                  tags:
                    description: The list of tags attached to the instance.
                    items:
                      type: string
                    type: array
                  tagsFingerprint:
                    description: The unique fingerprint of the tags.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: The zone of the instance. If self_link is provided,
                      this value is ignored. If neither self_link nor zone are provided,
                      the provider zone is used.
                    type: string
                required:
                - bootDisk
                - machineType
                - name
                - networkInterface
                - providerRef
                type: object
              labelFingerprint:
                description: The unique fingerprint of the labels.
                type: string
              labels:
                additionalProperties:
                  type: string
                description: A set of key/value label pairs assigned to the instance.
                type: object
              machineType:
                description: The machine type to create.
                type: string
              metadata:
                additionalProperties:
                  type: string
                description: Metadata key/value pairs made available within the instance.
                type: object
              metadataFingerprint:
                description: The unique fingerprint of the metadata.
                type: string
              metadataStartupScript:
                description: Metadata startup scripts made available within the instance.
                type: string
              minCPUPlatform:
                description: The minimum CPU platform specified for the VM instance.
                type: string
              name:
                description: The name of the instance. One of name or self_link must
                  be provided.
                type: string
              networkInterface:
                description: The networks attached to the instance.
                items:
                  properties:
                    accessConfig:
                      description: Access configurations, i.e. IPs via which this
                        instance can be accessed via the Internet.
                      items:
                        properties:
                          natIP:
                            description: The IP address that is be 1:1 mapped to the
                              instance's network ip.
                            type: string
                          networkTier:
                            description: The networking tier used for configuring
                              this instance. One of PREMIUM or STANDARD.
                            type: string
                          publicPtrDomainName:
                            description: The DNS domain name for the public PTR record.
                            type: string
                        type: object
                      type: array
                    aliasIPRange:
                      description: An array of alias IP ranges for this network interface.
                      items:
                        properties:
                          ipCIDRRange:
                            description: The IP CIDR range represented by this alias
                              IP range.
                            type: string
                          subnetworkRangeName:
                            description: The subnetwork secondary range name specifying
                              the secondary range from which to allocate the IP CIDR
                              range for this alias IP range.
                            type: string
                        required:
                        - ipCIDRRange
                        type: object
                      type: array
                    name:
                      description: The name of the interface
                      type: string
                    network:
                      description: The name or self_link of the network attached to
                        this interface.
                      type: string
                    networkIP:
                      description: The private IP address assigned to the instance.
                      type: string
                    nicType:
                      description: The type of vNIC to be used on this interface.
                        Possible values:GVNIC, VIRTIO_NET
                      type: string
                    subnetwork:
                      description: The name or self_link of the subnetwork attached
                        to this interface.
                      type: string
                    subnetworkProject:
                      description: The project in which the subnetwork belongs.
                      type: string
                  type: object
                type: array
              project:
                description: The ID of the project in which the resource belongs.
                  If self_link is provided, this value is ignored. If neither self_link
                  nor project are provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resourcePolicies:
                description: A list of short names or self_links of resource policies
                  to attach to the instance. Modifying this list will cause the instance
                  to recreate. Currently a max of 1 resource policy is supported.
                items:
                  type: string
                type: array
              scheduling:
                description: The scheduling strategy being used by the instance.
                properties:
                  automaticRestart:
                    description: Specifies if the instance should be restarted if
                      it was terminated by Compute Engine (not a user).
                    type: boolean
                  minNodeCpus:
                    format: int64
                    type: integer
                  nodeAffinities:
                    description: Specifies node affinities or anti-affinities to determine
                      which sole-tenant nodes your instances and managed instance
                      groups will use as host systems.
                    items:
                      properties:
                        key:
                          type: string
                        operator:
                          type: string
                        values:
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      - values
                      type: object
                    type: array
                  onHostMaintenance:
                    description: Describes maintenance behavior for the instance.
                      One of MIGRATE or TERMINATE,
                    type: string
                  preemptible:
                    description: Whether the instance is preemptible.
                    type: boolean
                type: object
              scratchDisk:
                description: The scratch disks attached to the instance.
                items:
                  properties:
                    interface:
                      description: The disk interface used for attaching this disk.
                        One of SCSI or NVME.
                      type: string
                  required:
                  - interface
                  type: object
                type: array
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                description: The URI of the created resource.
                type: string
              serviceAccount:
                description: The service account to attach to the instance.
                properties:
                  email:
                    description: The service account e-mail address.
                    type: string
                  scopes:
                    description: A list of service scopes.
                    items:
                      type: string
                    type: array
                required:
                - scopes
                type: object
              shieldedInstanceConfig:
                description: The shielded vm config being used by the instance.
                properties:
                  enableIntegrityMonitoring:
                    description: Whether integrity monitoring is enabled for the instance.
                    type: boolean
                  enableSecureBoot:
                    description: Whether secure boot is enabled for the instance.
                    type: boolean
                  enableVtpm:
                    description: Whether the instance uses vTPM.
                    type: boolean
                type: object
              tags:
                description: The list of tags attached to the instance.
                items:
                  type: string
                type: array
              tagsFingerprint:
                description: The unique fingerprint of the tags.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              zone:
                description: The zone of the instance. If self_link is provided, this
                  value is ignored. If neither self_link nor zone are provided, the
                  provider zone is used.
                type: string
            required:
            - bootDisk
            - machineType
            - name
            - networkInterface
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: globalnetworkendpointgroups.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: GlobalNetworkEndpointGroup
    listKind: GlobalNetworkEndpointGroupList
    plural: globalnetworkendpointgroups
    singular: globalnetworkendpointgroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              defaultPort:
                description: The default port used if the port number is not specified
                  in the network endpoint.
                format: int64
                type: integer
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  defaultPort:
                    description: The default port used if the port number is not specified
                      in the network endpoint.
                    format: int64
                    type: integer
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource; provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  networkEndpointType:
                    description: 'Type of network endpoints in this network endpoint
                      group. Possible values: ["INTERNET_IP_PORT", "INTERNET_FQDN_PORT"]'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - networkEndpointType
                - providerRef
                type: object
              name:
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              networkEndpointType:
                description: 'Type of network endpoints in this network endpoint group.
                  Possible values: ["INTERNET_IP_PORT", "INTERNET_FQDN_PORT"]'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - networkEndpointType
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: healthchecks.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: HealthCheck
    listKind: HealthCheckList
    plural: healthchecks
    singular: healthcheck
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              checkIntervalSec:
                description: How often (in seconds) to send a health check. The default
                  value is 5 seconds.
                format: int64
                type: integer
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              grpcHealthCheck:
                description: A nested object resource
                properties:
                  grpcServiceName:
                    description: 'The gRPC service name for the health check. The
                      value of grpcServiceName has the following meanings by convention:   -
                      Empty serviceName means the overall status of all services at
                      the backend.   - Non-empty serviceName means the health of that
                      gRPC service, as defined by the owner of the service. The grpcServiceName
                      can only be ASCII.'
                    type: string
                  port:
                    description: The port number for the health check request. Must
                      be specified if portName and portSpecification are not set or
                      if port_specification is USE_FIXED_PORT. Valid values are 1
                      through 65535.
                    format: int64
                    type: integer
                  portName:
                    description: Port name as defined in InstanceGroup#NamedPort#name.
                      If both port and port_name are defined, port takes precedence.
                    type: string
                  portSpecification:
                    description: "Specifies how port is selected for health checking,
                      can be one of the following values: \n   * 'USE_FIXED_PORT':
                      The port number in 'port' is used for health checking. \n   *
                      'USE_NAMED_PORT': The 'portName' is used for health checking.
                      \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port
                      specified for each   network endpoint is used for health checking.
                      For other backends, the   port or named port specified in the
                      Backend Service is used for health   checking. \n If not specified,
                      gRPC health check follows behavior specified in 'port' and 'portName'
                      fields. Possible values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\",
                      \"USE_SERVING_PORT\"]"
                    type: string
                type: object
              healthyThreshold:
                description: A so-far unhealthy instance will be marked healthy after
                  this many consecutive successes. The default value is 2.
                format: int64
                type: integer
              http2HealthCheck:
                description: A nested object resource
                properties:
                  host:
                    description: The value of the host header in the HTTP2 health
                      check request. If left empty (default value), the public IP
                      on behalf of which this health check is performed will be used.
                    type: string
                  port:
                    description: The TCP port number for the HTTP2 health check request.
                      The default value is 443.
                    format: int64
                    type: integer
                  portName:
                    description: Port name as defined in InstanceGroup#NamedPort#name.
                      If both port and port_name are defined, port takes precedence.
                    type: string
                  portSpecification:
                    description: "Specifies how port is selected for health checking,
                      can be one of the following values: \n   * 'USE_FIXED_PORT':
                      The port number in 'port' is used for health checking. \n   *
                      'USE_NAMED_PORT': The 'portName' is used for health checking.
                      \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port
                      specified for each   network endpoint is used for health checking.
                      For other backends, the   port or named port specified in the
                      Backend Service is used for health   checking. \n If not specified,
                      HTTP2 health check follows behavior specified in 'port' and
                      'portName' fields. Possible values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\",
                      \"USE_SERVING_PORT\"]"
                    type: string
                  proxyHeader:
                    description: 'Specifies the type of proxy header to append before
                      sending data to the backend. Default value: "NONE" Possible
                      values: ["NONE", "PROXY_V1"]'
                    type: string
                  requestPath:
                    description: The request path of the HTTP2 health check request.
                      The default value is /.
                    type: string
                  response:
                    description: The bytes to match against the beginning of the response
                      data. If left empty (the default value), any response will indicate
                      health. The response data can only be ASCII.
                    type: string
                type: object
              httpHealthCheck:
                description: A nested object resource
                properties:
                  host:
                    description: The value of the host header in the HTTP health check
                      request. If left empty (default value), the public IP on behalf
                      of which this health check is performed will be used.
                    type: string
                  port:
                    description: The TCP port number for the HTTP health check request.
                      The default value is 80.
                    format: int64
                    type: integer
                  portName:
                    description: Port name as defined in InstanceGroup#NamedPort#name.
                      If both port and port_name are defined, port takes precedence.
                    type: string
                  portSpecification:
                    description: "Specifies how port is selected for health checking,
                      can be one of the following values: \n   * 'USE_FIXED_PORT':
                      The port number in 'port' is used for health checking. \n   *
                      'USE_NAMED_PORT': The 'portName' is used for health checking.
                      \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port
                      specified for each   network endpoint is used for health checking.
                      For other backends, the   port or named port specified in the
                      Backend Service is used for health   checking. \n If not specified,
                      HTTP health check follows behavior specified in 'port' and 'portName'
                      fields. Possible values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\",
                      \"USE_SERVING_PORT\"]"
                    type: string
                  proxyHeader:
                    description: 'Specifies the type of proxy header to append before
                      sending data to the backend. Default value: "NONE" Possible
                      values: ["NONE", "PROXY_V1"]'
                    type: string
                  requestPath:
                    description: The request path of the HTTP health check request.
                      The default value is /.
                    type: string
                  response:
                    description: The bytes to match against the beginning of the response
                      data. If left empty (the default value), any response will indicate
                      health. The response data can only be ASCII.
                    type: string
                type: object
              httpsHealthCheck:
                description: A nested object resource
                properties:
                  host:
                    description: The value of the host header in the HTTPS health
                      check request. If left empty (default value), the public IP
                      on behalf of which this health check is performed will be used.
                    type: string
                  port:
                    description: The TCP port number for the HTTPS health check request.
                      The default value is 443.
                    format: int64
                    type: integer
                  portName:
                    description: Port name as defined in InstanceGroup#NamedPort#name.
                      If both port and port_name are defined, port takes precedence.
                    type: string
                  portSpecification:
                    description: "Specifies how port is selected for health checking,
                      can be one of the following values: \n   * 'USE_FIXED_PORT':
                      The port number in 'port' is used for health checking. \n   *
                      'USE_NAMED_PORT': The 'portName' is used for health checking.
                      \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port
                      specified for each   network endpoint is used for health checking.
                      For other backends, the   port or named port specified in the
                      Backend Service is used for health   checking. \n If not specified,
                      HTTPS health check follows behavior specified in 'port' and
                      'portName' fields. Possible values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\",
                      \"USE_SERVING_PORT\"]"
                    type: string
                  proxyHeader:
                    description: 'Specifies the type of proxy header to append before
                      sending data to the backend. Default value: "NONE" Possible
                      values: ["NONE", "PROXY_V1"]'
                    type: string
                  requestPath:
                    description: The request path of the HTTPS health check request.
                      The default value is /.
                    type: string
                  response:
                    description: The bytes to match against the beginning of the response
                      data. If left empty (the default value), any response will indicate
                      health. The response data can only be ASCII.
                    type: string
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  checkIntervalSec:
                    description: How often (in seconds) to send a health check. The
                      default value is 5 seconds.
                    format: int64
                    type: integer
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  grpcHealthCheck:
                    description: A nested object resource
                    properties:
                      grpcServiceName:
                        description: 'The gRPC service name for the health check.
                          The value of grpcServiceName has the following meanings
                          by convention:   - Empty serviceName means the overall status
                          of all services at the backend.   - Non-empty serviceName
                          means the health of that gRPC service, as defined by the
                          owner of the service. The grpcServiceName can only be ASCII.'
                        type: string
                      port:
                        description: The port number for the health check request.
                          Must be specified if portName and portSpecification are
                          not set or if port_specification is USE_FIXED_PORT. Valid
                          values are 1 through 65535.
                        format: int64
                        type: integer
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name.
                          If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: "Specifies how port is selected for health checking,
                          can be one of the following values: \n   * 'USE_FIXED_PORT':
                          The port number in 'port' is used for health checking. \n
                          \  * 'USE_NAMED_PORT': The 'portName' is used for health
                          checking. \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup,
                          the port specified for each   network endpoint is used for
                          health checking. For other backends, the   port or named
                          port specified in the Backend Service is used for health
                          \  checking. \n If not specified, gRPC health check follows
                          behavior specified in 'port' and 'portName' fields. Possible
                          values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"]"
                        type: string
                    type: object
                  healthyThreshold:
                    description: A so-far unhealthy instance will be marked healthy
                      after this many consecutive successes. The default value is
                      2.
                    format: int64
                    type: integer
                  http2HealthCheck:
                    description: A nested object resource
                    properties:
                      host:
                        description: The value of the host header in the HTTP2 health
                          check request. If left empty (default value), the public
                          IP on behalf of which this health check is performed will
                          be used.
                        type: string
                      port:
                        description: The TCP port number for the HTTP2 health check
                          request. The default value is 443.
                        format: int64
                        type: integer
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name.
                          If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: "Specifies how port is selected for health checking,
                          can be one of the following values: \n   * 'USE_FIXED_PORT':
                          The port number in 'port' is used for health checking. \n
                          \  * 'USE_NAMED_PORT': The 'portName' is used for health
                          checking. \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup,
                          the port specified for each   network endpoint is used for
                          health checking. For other backends, the   port or named
                          port specified in the Backend Service is used for health
                          \  checking. \n If not specified, HTTP2 health check follows
                          behavior specified in 'port' and 'portName' fields. Possible
                          values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"]"
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append
                          before sending data to the backend. Default value: "NONE"
                          Possible values: ["NONE", "PROXY_V1"]'
                        type: string
                      requestPath:
                        description: The request path of the HTTP2 health check request.
                          The default value is /.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the
                          response data. If left empty (the default value), any response
                          will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  httpHealthCheck:
                    description: A nested object resource
                    properties:
                      host:
                        description: The value of the host header in the HTTP health
                          check request. If left empty (default value), the public
                          IP on behalf of which this health check is performed will
                          be used.
                        type: string
                      port:
                        description: The TCP port number for the HTTP health check
                          request. The default value is 80.
                        format: int64
                        type: integer
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name.
                          If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: "Specifies how port is selected for health checking,
                          can be one of the following values: \n   * 'USE_FIXED_PORT':
                          The port number in 'port' is used for health checking. \n
                          \  * 'USE_NAMED_PORT': The 'portName' is used for health
                          checking. \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup,
                          the port specified for each   network endpoint is used for
                          health checking. For other backends, the   port or named
                          port specified in the Backend Service is used for health
                          \  checking. \n If not specified, HTTP health check follows
                          behavior specified in 'port' and 'portName' fields. Possible
                          values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"]"
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append
                          before sending data to the backend. Default value: "NONE"
                          Possible values: ["NONE", "PROXY_V1"]'
                        type: string
                      requestPath:
                        description: The request path of the HTTP health check request.
                          The default value is /.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the
                          response data. If left empty (the default value), any response
                          will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  httpsHealthCheck:
                    description: A nested object resource
                    properties:
                      host:
                        description: The value of the host header in the HTTPS health
                          check request. If left empty (default value), the public
                          IP on behalf of which this health check is performed will
                          be used.
                        type: string
                      port:
                        description: The TCP port number for the HTTPS health check
                          request. The default value is 443.
                        format: int64
                        type: integer
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name.
                          If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: "Specifies how port is selected for health checking,
                          can be one of the following values: \n   * 'USE_FIXED_PORT':
                          The port number in 'port' is used for health checking. \n
                          \  * 'USE_NAMED_PORT': The 'portName' is used for health
                          checking. \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup,
                          the port specified for each   network endpoint is used for
                          health checking. For other backends, the   port or named
                          port specified in the Backend Service is used for health
                          \  checking. \n If not specified, HTTPS health check follows
                          behavior specified in 'port' and 'portName' fields. Possible
                          values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"]"
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append
                          before sending data to the backend. Default value: "NONE"
                          Possible values: ["NONE", "PROXY_V1"]'
                        type: string
                      requestPath:
                        description: The request path of the HTTPS health check request.
                          The default value is /.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the
                          response data. If left empty (the default value), any response
                          will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035.  Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  sslHealthCheck:
                    description: A nested object resource
                    properties:
                      port:
                        description: The TCP port number for the SSL health check
                          request. The default value is 443.
                        format: int64
                        type: integer
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name.
                          If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: "Specifies how port is selected for health checking,
                          can be one of the following values: \n   * 'USE_FIXED_PORT':
                          The port number in 'port' is used for health checking. \n
                          \  * 'USE_NAMED_PORT': The 'portName' is used for health
                          checking. \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup,
                          the port specified for each   network endpoint is used for
                          health checking. For other backends, the   port or named
                          port specified in the Backend Service is used for health
                          \  checking. \n If not specified, SSL health check follows
                          behavior specified in 'port' and 'portName' fields. Possible
                          values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"]"
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append
                          before sending data to the backend. Default value: "NONE"
                          Possible values: ["NONE", "PROXY_V1"]'
                        type: string
                      request:
                        description: The application data to send once the SSL connection
                          has been established (default value is empty). If both request
                          and response are empty, the connection establishment alone
                          will indicate health. The request data can only be ASCII.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the
                          response data. If left empty (the default value), any response
                          will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  tcpHealthCheck:
                    description: A nested object resource
                    properties:
                      port:
                        description: The TCP port number for the TCP health check
                          request. The default value is 443.
                        format: int64
                        type: integer
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name.
                          If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: "Specifies how port is selected for health checking,
                          can be one of the following values: \n   * 'USE_FIXED_PORT':
                          The port number in 'port' is used for health checking. \n
                          \  * 'USE_NAMED_PORT': The 'portName' is used for health
                          checking. \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup,
                          the port specified for each   network endpoint is used for
                          health checking. For other backends, the   port or named
                          port specified in the Backend Service is used for health
                          \  checking. \n If not specified, TCP health check follows
                          behavior specified in 'port' and 'portName' fields. Possible
                          values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"]"
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append
                          before sending data to the backend. Default value: "NONE"
                          Possible values: ["NONE", "PROXY_V1"]'
                        type: string
                      request:
                        description: The application data to send once the TCP connection
                          has been established (default value is empty). If both request
                          and response are empty, the connection establishment alone
                          will indicate health. The request data can only be ASCII.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the
                          response data. If left empty (the default value), any response
                          will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeoutSec:
                    description: How long (in seconds) to wait before claiming failure.
                      The default value is 5 seconds.  It is invalid for timeoutSec
                      to have greater value than checkIntervalSec.
                    format: int64
                    type: integer
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    description: The type of the health check. One of HTTP, HTTPS,
                      TCP, or SSL.
                    type: string
                  unhealthyThreshold:
                    description: A so-far healthy instance will be marked unhealthy
                      after this many consecutive failures. The default value is 2.
                    format: int64
                    type: integer
                required:
                - name
                - providerRef
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.  Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              sslHealthCheck:
                description: A nested object resource
                properties:
                  port:
                    description: The TCP port number for the SSL health check request.
                      The default value is 443.
                    format: int64
                    type: integer
                  portName:
                    description: Port name as defined in InstanceGroup#NamedPort#name.
                      If both port and port_name are defined, port takes precedence.
                    type: string
                  portSpecification:
                    description: "Specifies how port is selected for health checking,
                      can be one of the following values: \n   * 'USE_FIXED_PORT':
                      The port number in 'port' is used for health checking. \n   *
                      'USE_NAMED_PORT': The 'portName' is used for health checking.
                      \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port
                      specified for each   network endpoint is used for health checking.
                      For other backends, the   port or named port specified in the
                      Backend Service is used for health   checking. \n If not specified,
                      SSL health check follows behavior specified in 'port' and 'portName'
                      fields. Possible values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\",
                      \"USE_SERVING_PORT\"]"
                    type: string
                  proxyHeader:
                    description: 'Specifies the type of proxy header to append before
                      sending data to the backend. Default value: "NONE" Possible
                      values: ["NONE", "PROXY_V1"]'
                    type: string
                  request:
                    description: The application data to send once the SSL connection
                      has been established (default value is empty). If both request
                      and response are empty, the connection establishment alone will
                      indicate health. The request data can only be ASCII.
                    type: string
                  response:
                    description: The bytes to match against the beginning of the response
                      data. If left empty (the default value), any response will indicate
                      health. The response data can only be ASCII.
                    type: string
                type: object
              tcpHealthCheck:
                description: A nested object resource
                properties:
                  port:
                    description: The TCP port number for the TCP health check request.
                      The default value is 443.
                    format: int64
                    type: integer
                  portName:
                    description: Port name as defined in InstanceGroup#NamedPort#name.
                      If both port and port_name are defined, port takes precedence.
                    type: string
                  portSpecification:
                    description: "Specifies how port is selected for health checking,
                      can be one of the following values: \n   * 'USE_FIXED_PORT':
                      The port number in 'port' is used for health checking. \n   *
                      'USE_NAMED_PORT': The 'portName' is used for health checking.
                      \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port
                      specified for each   network endpoint is used for health checking.
                      For other backends, the   port or named port specified in the
                      Backend Service is used for health   checking. \n If not specified,
                      TCP health check follows behavior specified in 'port' and 'portName'
                      fields. Possible values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\",
                      \"USE_SERVING_PORT\"]"
                    type: string
                  proxyHeader:
                    description: 'Specifies the type of proxy header to append before
                      sending data to the backend. Default value: "NONE" Possible
                      values: ["NONE", "PROXY_V1"]'
                    type: string
                  request:
                    description: The application data to send once the TCP connection
                      has been established (default value is empty). If both request
                      and response are empty, the connection establishment alone will
                      indicate health. The request data can only be ASCII.
                    type: string
                  response:
                    description: The bytes to match against the beginning of the response
                      data. If left empty (the default value), any response will indicate
                      health. The response data can only be ASCII.
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeoutSec:
                description: How long (in seconds) to wait before claiming failure.
                  The default value is 5 seconds.  It is invalid for timeoutSec to
                  have greater value than checkIntervalSec.
                format: int64
                type: integer
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              type:
                description: The type of the health check. One of HTTP, HTTPS, TCP,
                  or SSL.
                type: string
              unhealthyThreshold:
                description: A so-far healthy instance will be marked unhealthy after
                  this many consecutive failures. The default value is 2.
                format: int64
                type: integer
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: httphealthchecks.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: HttpHealthCheck
    listKind: HttpHealthCheckList
    plural: httphealthchecks
    singular: httphealthcheck
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              checkIntervalSec:
                description: How often (in seconds) to send a health check. The default
                  value is 5 seconds.
                format: int64
                type: integer
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              healthyThreshold:
                description: A so-far unhealthy instance will be marked healthy after
                  this many consecutive successes. The default value is 2.
                format: int64
                type: integer
              host:
                description: The value of the host header in the HTTP health check
                  request. If left empty (default value), the public IP on behalf
                  of which this health check is performed will be used.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  checkIntervalSec:
                    description: How often (in seconds) to send a health check. The
                      default value is 5 seconds.
                    format: int64
                    type: integer
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  healthyThreshold:
                    description: A so-far unhealthy instance will be marked healthy
                      after this many consecutive successes. The default value is
                      2.
                    format: int64
                    type: integer
                  host:
                    description: The value of the host header in the HTTP health check
                      request. If left empty (default value), the public IP on behalf
                      of which this health check is performed will be used.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035.  Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  port:
                    description: The TCP port number for the HTTP health check request.
                      The default value is 80.
                    format: int64
                    type: integer
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  requestPath:
                    description: The request path of the HTTP health check request.
                      The default value is /.
                    type: string
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeoutSec:
                    description: How long (in seconds) to wait before claiming failure.
                      The default value is 5 seconds.  It is invalid for timeoutSec
                      to have greater value than checkIntervalSec.
                    format: int64
                    type: integer
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  unhealthyThreshold:
                    description: A so-far healthy instance will be marked unhealthy
                      after this many consecutive failures. The default value is 2.
                    format: int64
                    type: integer
                required:
                - name
                - providerRef
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.  Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              port:
                description: The TCP port number for the HTTP health check request.
                  The default value is 80.
                format: int64
                type: integer
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              requestPath:
                description: The request path of the HTTP health check request. The
                  default value is /.
                type: string
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeoutSec:
                description: How long (in seconds) to wait before claiming failure.
                  The default value is 5 seconds.  It is invalid for timeoutSec to
                  have greater value than checkIntervalSec.
                format: int64
                type: integer
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              unhealthyThreshold:
                description: A so-far healthy instance will be marked unhealthy after
                  this many consecutive failures. The default value is 2.
                format: int64
                type: integer
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: diskresourcepolicyattachments.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: DiskResourcePolicyAttachment
    listKind: DiskResourcePolicyAttachmentList
    plural: diskresourcepolicyattachments
    singular: diskresourcepolicyattachment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              disk:
                description: The name of the disk in which the resource policies are
                  attached to.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  disk:
                    description: The name of the disk in which the resource policies
                      are attached to.
                    type: string
                  id:
                    type: string
                  name:
                    description: The resource policy to be attached to the disk for
                      scheduling snapshot creation. Do not specify the self link.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: A reference to the zone where the disk resides.
                    type: string
                required:
                - disk
                - name
                - providerRef
                type: object
              name:
                description: The resource policy to be attached to the disk for scheduling
                  snapshot creation. Do not specify the self link.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              zone:
                description: A reference to the zone where the disk resides.
                type: string
            required:
            - disk
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: backendservicesignedurlkeys.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: BackendServiceSignedURLKey
    listKind: BackendServiceSignedURLKeyList
    plural: backendservicesignedurlkeys
    singular: backendservicesignedurlkey
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendService:
                description: The backend service this signed URL key belongs.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  backendService:
                    description: The backend service this signed URL key belongs.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the signed URL key.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - backendService
                - name
                - providerRef
                type: object
              name:
                description: Name of the signed URL key.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - backendService
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: diskiampolicies.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: DiskIamPolicy
    listKind: DiskIamPolicyList
    plural: diskiampolicies
    singular: diskiampolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  etag:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  policyData:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  zone:
                    type: string
                required:
                - name
                - policyData
                - providerRef
                type: object
              name:
                type: string
              policyData:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              zone:
                type: string
            required:
            - name
            - policyData
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: targetinstances.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: TargetInstance
    listKind: TargetInstanceList
    plural: targetinstances
    singular: targetinstance
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              instance:
                description: The Compute instance VM handling traffic for this target
                  instance. Accepts the instance self-link, relative path (e.g. 'projects/project/zones/zone/instances/instance')
                  or name. If name is given, the zone will default to the given zone
                  or the provider-default zone and the project will default to the
                  provider-level project.
                type: string
              kubeformOutput:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  instance:
                    description: The Compute instance VM handling traffic for this
                      target instance. Accepts the instance self-link, relative path
                      (e.g. 'projects/project/zones/zone/instances/instance') or name.
                      If name is given, the zone will default to the given zone or
                      the provider-default zone and the project will default to the
                      provider-level project.
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  natPolicy:
                    description: 'NAT option controlling how IPs are NAT''ed to the
                      instance. Currently only NO_NAT (default value) is supported.
                      Default value: "NO_NAT" Possible values: ["NO_NAT"]'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: URL of the zone where the target instance resides.
                    type: string
                required:
                - instance
                - name
                - providerRef
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              natPolicy:
                description: 'NAT option controlling how IPs are NAT''ed to the instance.
                  Currently only NO_NAT (default value) is supported. Default value:
                  "NO_NAT" Possible values: ["NO_NAT"]'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              zone:
                description: URL of the zone where the target instance resides.
                type: string
            required:
            - instance
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: globalforwardingrules.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: GlobalForwardingRule
    listKind: GlobalForwardingRuleList
    plural: globalforwardingrules
    singular: globalforwardingrule
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              id:
                type: string
              ipAddress:
                description: "The IP address that this forwarding rule serves. When
                  a client sends traffic to this IP address, the forwarding rule directs
                  the traffic to the target that you specify in the forwarding rule.
                  The loadBalancingScheme and the forwarding rule's target determine
                  the type of IP address that you can use. For detailed information,
                  refer to [IP address specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).
                  \n An address can be specified either by a literal IP address or
                  a reference to an existing Address resource. If you don't specify
                  a reserved IP address, an ephemeral IP address is assigned. \n The
                  value must be set to 0.0.0.0 when the target is a targetGrpcProxy
                  that has validateForProxyless field set to true. \n For Private
                  Service Connect forwarding rules that forward traffic to Google
                  APIs, IP address must be provided."
                type: string
              ipProtocol:
                description: 'The IP protocol to which this rule applies. When the
                  load balancing scheme is INTERNAL_SELF_MANAGED, only TCP is valid.
                  This field must not be set if the global address is configured as
                  a purpose of PRIVATE_SERVICE_CONNECT and addressType of INTERNAL
                  Possible values: ["TCP", "UDP", "ESP", "AH", "SCTP", "ICMP"]'
                type: string
              ipVersion:
                description: 'The IP Version that will be used by this global forwarding
                  rule. Possible values: ["IPV4", "IPV6"]'
                type: string
              kubeformOutput:
                properties:
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  id:
                    type: string
                  ipAddress:
                    description: "The IP address that this forwarding rule serves.
                      When a client sends traffic to this IP address, the forwarding
                      rule directs the traffic to the target that you specify in the
                      forwarding rule. The loadBalancingScheme and the forwarding
                      rule's target determine the type of IP address that you can
                      use. For detailed information, refer to [IP address specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).
                      \n An address can be specified either by a literal IP address
                      or a reference to an existing Address resource. If you don't
                      specify a reserved IP address, an ephemeral IP address is assigned.
                      \n The value must be set to 0.0.0.0 when the target is a targetGrpcProxy
                      that has validateForProxyless field set to true. \n For Private
                      Service Connect forwarding rules that forward traffic to Google
                      APIs, IP address must be provided."
                    type: string
                  ipProtocol:
                    description: 'The IP protocol to which this rule applies. When
                      the load balancing scheme is INTERNAL_SELF_MANAGED, only TCP
                      is valid. This field must not be set if the global address is
                      configured as a purpose of PRIVATE_SERVICE_CONNECT and addressType
                      of INTERNAL Possible values: ["TCP", "UDP", "ESP", "AH", "SCTP",
                      "ICMP"]'
                    type: string
                  ipVersion:
                    description: 'The IP Version that will be used by this global
                      forwarding rule. Possible values: ["IPV4", "IPV6"]'
                    type: string
                  loadBalancingScheme:
                    description: "This signifies what the GlobalForwardingRule will
                      be used for. The value of INTERNAL_SELF_MANAGED means that this
                      will be used for Internal Global HTTP(S) LB. The value of EXTERNAL
                      means that this will be used for External Global Load Balancing
                      (HTTP(S) LB, External TCP/UDP LB, SSL Proxy) \n ([Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html)
                      only) Note: This field must be set \"\" if the global address
                      is configured as a purpose of PRIVATE_SERVICE_CONNECT and addressType
                      of INTERNAL. Default value: \"EXTERNAL\" Possible values: [\"EXTERNAL\",
                      \"INTERNAL_SELF_MANAGED\"]"
                    type: string
                  metadataFilters:
                    description: "Opaque filter criteria used by Loadbalancer to restrict
                      routing configuration to a limited set xDS compliant clients.
                      In their xDS requests to Loadbalancer, xDS clients present node
                      metadata. If a match takes place, the relevant routing configuration
                      is made available to those proxies. \n For each metadataFilter
                      in this list, if its filterMatchCriteria is set to MATCH_ANY,
                      at least one of the filterLabels must match the corresponding
                      label provided in the metadata. If its filterMatchCriteria is
                      set to MATCH_ALL, then all of its filterLabels must match with
                      corresponding labels in the provided metadata. \n metadataFilters
                      specified here can be overridden by those specified in the UrlMap
                      that this ForwardingRule references. \n metadataFilters only
                      applies to Loadbalancers that have their loadBalancingScheme
                      set to INTERNAL_SELF_MANAGED."
                    items:
                      properties:
                        filterLabels:
                          description: "The list of label value pairs that must match
                            labels in the provided metadata based on filterMatchCriteria
                            \n This list must not be empty and can have at the most
                            64 entries."
                          items:
                            properties:
                              name:
                                description: Name of the metadata label. The length
                                  must be between 1 and 1024 characters, inclusive.
                                type: string
                              value:
                                description: The value that the label must match.
                                  The value has a maximum length of 1024 characters.
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          maxItems: 64
                          minItems: 1
                          type: array
                        filterMatchCriteria:
                          description: "Specifies how individual filterLabel matches
                            within the list of filterLabels contribute towards the
                            overall metadataFilter match. \n MATCH_ANY - At least
                            one of the filterLabels must have a matching label in
                            the provided metadata. MATCH_ALL - All filterLabels must
                            have matching labels in the provided metadata. Possible
                            values: [\"MATCH_ANY\", \"MATCH_ALL\"]"
                          type: string
                      required:
                      - filterLabels
                      - filterMatchCriteria
                      type: object
                    type: array
                  name:
                    description: Name of the resource; provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  portRange:
                    description: "This field is used along with the target field for
                      TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy,
                      TargetVpnGateway, TargetPool, TargetInstance. \n Applicable
                      only when IPProtocol is TCP, UDP, or SCTP, only packets addressed
                      to ports in the specified range will be forwarded to target.
                      Forwarding rules with the same [IPAddress, IPProtocol] pair
                      must have disjoint port ranges. \n Some types of forwarding
                      target have constraints on the acceptable ports: \n * TargetHttpProxy:
                      80, 8080 * TargetHttpsProxy: 443 * TargetTcpProxy: 25, 43, 110,
                      143, 195, 443, 465, 587, 700, 993, 995,                   1883,
                      5222 * TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587,
                      700, 993, 995,                   1883, 5222 * TargetVpnGateway:
                      500, 4500"
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  target:
                    description: "The URL of the target resource to receive the matched
                      traffic. The forwarded traffic must be of a type appropriate
                      to the target object. For INTERNAL_SELF_MANAGED load balancing,
                      only HTTP and HTTPS targets are valid. \n ([Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html)
                      only) For global address with a purpose of PRIVATE_SERVICE_CONNECT
                      and addressType of INTERNAL, only \"all-apis\" and \"vpc-sc\"
                      are valid."
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                - target
                type: object
              loadBalancingScheme:
                description: "This signifies what the GlobalForwardingRule will be
                  used for. The value of INTERNAL_SELF_MANAGED means that this will
                  be used for Internal Global HTTP(S) LB. The value of EXTERNAL means
                  that this will be used for External Global Load Balancing (HTTP(S)
                  LB, External TCP/UDP LB, SSL Proxy) \n ([Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html)
                  only) Note: This field must be set \"\" if the global address is
                  configured as a purpose of PRIVATE_SERVICE_CONNECT and addressType
                  of INTERNAL. Default value: \"EXTERNAL\" Possible values: [\"EXTERNAL\",
                  \"INTERNAL_SELF_MANAGED\"]"
                type: string
              metadataFilters:
                description: "Opaque filter criteria used by Loadbalancer to restrict
                  routing configuration to a limited set xDS compliant clients. In
                  their xDS requests to Loadbalancer, xDS clients present node metadata.
                  If a match takes place, the relevant routing configuration is made
                  available to those proxies. \n For each metadataFilter in this list,
                  if its filterMatchCriteria is set to MATCH_ANY, at least one of
                  the filterLabels must match the corresponding label provided in
                  the metadata. If its filterMatchCriteria is set to MATCH_ALL, then
                  all of its filterLabels must match with corresponding labels in
                  the provided metadata. \n metadataFilters specified here can be
                  overridden by those specified in the UrlMap that this ForwardingRule
                  references. \n metadataFilters only applies to Loadbalancers that
                  have their loadBalancingScheme set to INTERNAL_SELF_MANAGED."
                items:
                  properties:
                    filterLabels:
                      description: "The list of label value pairs that must match
                        labels in the provided metadata based on filterMatchCriteria
                        \n This list must not be empty and can have at the most 64
                        entries."
                      items:
                        properties:
                          name:
                            description: Name of the metadata label. The length must
                              be between 1 and 1024 characters, inclusive.
                            type: string
                          value:
                            description: The value that the label must match. The
                              value has a maximum length of 1024 characters.
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      maxItems: 64
                      minItems: 1
                      type: array
                    filterMatchCriteria:
                      description: "Specifies how individual filterLabel matches within
                        the list of filterLabels contribute towards the overall metadataFilter
                        match. \n MATCH_ANY - At least one of the filterLabels must
                        have a matching label in the provided metadata. MATCH_ALL
                        - All filterLabels must have matching labels in the provided
                        metadata. Possible values: [\"MATCH_ANY\", \"MATCH_ALL\"]"
                      type: string
                  required:
                  - filterLabels
                  - filterMatchCriteria
                  type: object
                type: array
              name:
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              portRange:
                description: "This field is used along with the target field for TargetHttpProxy,
                  TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway,
                  TargetPool, TargetInstance. \n Applicable only when IPProtocol is
                  TCP, UDP, or SCTP, only packets addressed to ports in the specified
                  range will be forwarded to target. Forwarding rules with the same
                  [IPAddress, IPProtocol] pair must have disjoint port ranges. \n
                  Some types of forwarding target have constraints on the acceptable
                  ports: \n * TargetHttpProxy: 80, 8080 * TargetHttpsProxy: 443 *
                  TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993,
                  995,                   1883, 5222 * TargetSslProxy: 25, 43, 110,
                  143, 195, 443, 465, 587, 700, 993, 995,                   1883,
                  5222 * TargetVpnGateway: 500, 4500"
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              target:
                description: "The URL of the target resource to receive the matched
                  traffic. The forwarded traffic must be of a type appropriate to
                  the target object. For INTERNAL_SELF_MANAGED load balancing, only
                  HTTP and HTTPS targets are valid. \n ([Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html)
                  only) For global address with a purpose of PRIVATE_SERVICE_CONNECT
                  and addressType of INTERNAL, only \"all-apis\" and \"vpc-sc\" are
                  valid."
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            - target
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: imageiampolicies.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: ImageIamPolicy
    listKind: ImageIamPolicyList
    plural: imageiampolicies
    singular: imageiampolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              etag:
                type: string
              id:
                type: string
              image:
                type: string
              kubeformOutput:
                properties:
                  etag:
                    type: string
                  id:
                    type: string
                  image:
                    type: string
                  policyData:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - image
                - policyData
                - providerRef
                type: object
              policyData:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - image
            - policyData
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: disks.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: Disk
    listKind: DiskList
    plural: disks
    singular: disk
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              diskEncryptionKey:
                description: "Encrypts the disk using a customer-supplied encryption
                  key. \n After you encrypt a disk with a customer-supplied key, you
                  must provide the same key if you use the disk later (e.g. to create
                  a disk snapshot or an image, or to attach the disk to a virtual
                  machine). \n Customer-supplied encryption keys do not protect access
                  to metadata of the disk. \n If you do not provide an encryption
                  key when creating the disk, then the disk will be encrypted using
                  an automatically generated key and you do not need to provide a
                  key to use the disk later."
                properties:
                  kmsKeySelfLink:
                    description: The self link of the encryption key used to encrypt
                      the disk. Also called KmsKeyName in the cloud console. Your
                      project's Compute Engine System service account ('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com')
                      must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use
                      this feature. See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
                    type: string
                  kmsKeyServiceAccount:
                    description: The service account used for the encryption request
                      for the given KMS key. If absent, the Compute Engine Service
                      Agent service account is used.
                    type: string
                  sha256:
                    description: The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
                      encryption key that protects this resource.
                    type: string
                type: object
              id:
                type: string
              image:
                description: 'The image from which to initialize this disk. This can
                  be one of: the image''s ''self_link'', ''projects/{project}/global/images/{image}'',
                  ''projects/{project}/global/images/family/{family}'', ''global/images/{image}'',
                  ''global/images/family/{family}'', ''family/{family}'', ''{project}/{family}'',
                  ''{project}/{image}'', ''{family}'', or ''{image}''. If referred
                  by family, the images names must include the family name. If they
                  don''t, use the [google_compute_image data source](/docs/providers/google/d/compute_image.html).
                  For instance, the image ''centos-6-v20180104'' includes its family
                  name ''centos-6''. These images can be referred by family name here.'
                type: string
              kubeformOutput:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  diskEncryptionKey:
                    description: "Encrypts the disk using a customer-supplied encryption
                      key. \n After you encrypt a disk with a customer-supplied key,
                      you must provide the same key if you use the disk later (e.g.
                      to create a disk snapshot or an image, or to attach the disk
                      to a virtual machine). \n Customer-supplied encryption keys
                      do not protect access to metadata of the disk. \n If you do
                      not provide an encryption key when creating the disk, then the
                      disk will be encrypted using an automatically generated key
                      and you do not need to provide a key to use the disk later."
                    properties:
                      kmsKeySelfLink:
                        description: The self link of the encryption key used to encrypt
                          the disk. Also called KmsKeyName in the cloud console. Your
                          project's Compute Engine System service account ('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com')
                          must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to
                          use this feature. See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
                        type: string
                      kmsKeyServiceAccount:
                        description: The service account used for the encryption request
                          for the given KMS key. If absent, the Compute Engine Service
                          Agent service account is used.
                        type: string
                      sha256:
                        description: The RFC 4648 base64 encoded SHA-256 hash of the
                          customer-supplied encryption key that protects this resource.
                        type: string
                    type: object
                  id:
                    type: string
                  image:
                    description: 'The image from which to initialize this disk. This
                      can be one of: the image''s ''self_link'', ''projects/{project}/global/images/{image}'',
                      ''projects/{project}/global/images/family/{family}'', ''global/images/{image}'',
                      ''global/images/family/{family}'', ''family/{family}'', ''{project}/{family}'',
                      ''{project}/{image}'', ''{family}'', or ''{image}''. If referred
                      by family, the images names must include the family name. If
                      they don''t, use the [google_compute_image data source](/docs/providers/google/d/compute_image.html).
                      For instance, the image ''centos-6-v20180104'' includes its
                      family name ''centos-6''. These images can be referred by family
                      name here.'
                    type: string
                  labelFingerprint:
                    description: The fingerprint used for optimistic locking of this
                      resource.  Used internally during updates.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to apply to this disk.  A list of key->value
                      pairs.
                    type: object
                  lastAttachTimestamp:
                    description: Last attach timestamp in RFC3339 text format.
                    type: string
                  lastDetachTimestamp:
                    description: Last detach timestamp in RFC3339 text format.
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  physicalBlockSizeBytes:
                    description: Physical block size of the persistent disk, in bytes.
                      If not present in a request, a default value is used. Currently
                      supported sizes are 4096 and 16384, other sizes may be added
                      in the future. If an unsupported value is requested, the error
                      message will list the supported values for the caller's project.
                    format: int64
                    type: integer
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  size:
                    description: "Size of the persistent disk, specified in GB. You
                      can specify this field when creating a persistent disk using
                      the 'image' or 'snapshot' parameter, or specify it alone to
                      create an empty persistent disk. \n If you specify this field
                      along with 'image' or 'snapshot', the value must not be less
                      than the size of the image or the size of the snapshot. \n ~>**NOTE**
                      If you change the size, Terraform updates the disk size if upsizing
                      is detected but recreates the disk if downsizing is requested.
                      You can add 'lifecycle.prevent_destroy' in the config to prevent
                      destroying and recreating."
                    format: int64
                    type: integer
                  snapshot:
                    description: "The source snapshot used to create this disk. You
                      can provide this as a partial or full URL to the resource. If
                      the snapshot is in another project than this disk, you must
                      supply a full URL. For example, the following are valid values:
                      \n * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot'
                      * 'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot'
                      * 'snapshot'"
                    type: string
                  sourceImageEncryptionKey:
                    description: The customer-supplied encryption key of the source
                      image. Required if the source image is protected by a customer-supplied
                      encryption key.
                    properties:
                      kmsKeySelfLink:
                        description: The self link of the encryption key used to encrypt
                          the disk. Also called KmsKeyName in the cloud console. Your
                          project's Compute Engine System service account ('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com')
                          must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to
                          use this feature. See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
                        type: string
                      kmsKeyServiceAccount:
                        description: The service account used for the encryption request
                          for the given KMS key. If absent, the Compute Engine Service
                          Agent service account is used.
                        type: string
                      rawKey:
                        description: Specifies a 256-bit customer-supplied encryption
                          key, encoded in RFC 4648 base64 to either encrypt or decrypt
                          this resource.
                        type: string
                      sha256:
                        description: The RFC 4648 base64 encoded SHA-256 hash of the
                          customer-supplied encryption key that protects this resource.
                        type: string
                    type: object
                  sourceImageID:
                    description: The ID value of the image used to create this disk.
                      This value identifies the exact image that was used to create
                      this persistent disk. For example, if you created the persistent
                      disk from an image that was later deleted and recreated under
                      the same name, the source image ID would identify the exact
                      version of the image that was used.
                    type: string
                  sourceSnapshotEncryptionKey:
                    description: The customer-supplied encryption key of the source
                      snapshot. Required if the source snapshot is protected by a
                      customer-supplied encryption key.
                    properties:
                      kmsKeySelfLink:
                        description: The self link of the encryption key used to encrypt
                          the disk. Also called KmsKeyName in the cloud console. Your
                          project's Compute Engine System service account ('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com')
                          must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to
                          use this feature. See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
                        type: string
                      kmsKeyServiceAccount:
                        description: The service account used for the encryption request
                          for the given KMS key. If absent, the Compute Engine Service
                          Agent service account is used.
                        type: string
                      rawKey:
                        description: Specifies a 256-bit customer-supplied encryption
                          key, encoded in RFC 4648 base64 to either encrypt or decrypt
                          this resource.
                        type: string
                      sha256:
                        description: The RFC 4648 base64 encoded SHA-256 hash of the
                          customer-supplied encryption key that protects this resource.
                        type: string
                    type: object
                  sourceSnapshotID:
                    description: The unique ID of the snapshot used to create this
                      disk. This value identifies the exact snapshot that was used
                      to create this persistent disk. For example, if you created
                      the persistent disk from a snapshot that was later deleted and
                      recreated under the same name, the source snapshot ID would
                      identify the exact version of the snapshot that was used.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    description: URL of the disk type resource describing which disk
                      type to use to create the disk. Provide this when creating the
                      disk.
                    type: string
                  users:
                    description: 'Links to the users of the disk (attached instances)
                      in form: project/zones/zone/instances/instance'
                    items:
                      type: string
                    type: array
                  zone:
                    description: A reference to the zone where the disk resides.
                    type: string
                required:
                - name
                - providerRef
                type: object
              labelFingerprint:
                description: The fingerprint used for optimistic locking of this resource.  Used
                  internally during updates.
                type: string
              labels:
                additionalProperties:
                  type: string
                description: Labels to apply to this disk.  A list of key->value pairs.
                type: object
              lastAttachTimestamp:
                description: Last attach timestamp in RFC3339 text format.
                type: string
              lastDetachTimestamp:
                description: Last detach timestamp in RFC3339 text format.
                type: string
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              physicalBlockSizeBytes:
                description: Physical block size of the persistent disk, in bytes.
                  If not present in a request, a default value is used. Currently
                  supported sizes are 4096 and 16384, other sizes may be added in
                  the future. If an unsupported value is requested, the error message
                  will list the supported values for the caller's project.
                format: int64
                type: integer
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              size:
                description: "Size of the persistent disk, specified in GB. You can
                  specify this field when creating a persistent disk using the 'image'
                  or 'snapshot' parameter, or specify it alone to create an empty
                  persistent disk. \n If you specify this field along with 'image'
                  or 'snapshot', the value must not be less than the size of the image
                  or the size of the snapshot. \n ~>**NOTE** If you change the size,
                  Terraform updates the disk size if upsizing is detected but recreates
                  the disk if downsizing is requested. You can add 'lifecycle.prevent_destroy'
                  in the config to prevent destroying and recreating."
                format: int64
                type: integer
              snapshot:
                description: "The source snapshot used to create this disk. You can
                  provide this as a partial or full URL to the resource. If the snapshot
                  is in another project than this disk, you must supply a full URL.
                  For example, the following are valid values: \n * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot'
                  * 'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot'
                  * 'snapshot'"
                type: string
              sourceImageEncryptionKey:
                description: The customer-supplied encryption key of the source image.
                  Required if the source image is protected by a customer-supplied
                  encryption key.
                properties:
                  kmsKeySelfLink:
                    description: The self link of the encryption key used to encrypt
                      the disk. Also called KmsKeyName in the cloud console. Your
                      project's Compute Engine System service account ('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com')
                      must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use
                      this feature. See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
                    type: string
                  kmsKeyServiceAccount:
                    description: The service account used for the encryption request
                      for the given KMS key. If absent, the Compute Engine Service
                      Agent service account is used.
                    type: string
                  rawKey:
                    description: Specifies a 256-bit customer-supplied encryption
                      key, encoded in RFC 4648 base64 to either encrypt or decrypt
                      this resource.
                    type: string
                  sha256:
                    description: The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
                      encryption key that protects this resource.
                    type: string
                type: object
              sourceImageID:
                description: The ID value of the image used to create this disk. This
                  value identifies the exact image that was used to create this persistent
                  disk. For example, if you created the persistent disk from an image
                  that was later deleted and recreated under the same name, the source
                  image ID would identify the exact version of the image that was
                  used.
                type: string
              sourceSnapshotEncryptionKey:
                description: The customer-supplied encryption key of the source snapshot.
                  Required if the source snapshot is protected by a customer-supplied
                  encryption key.
                properties:
                  kmsKeySelfLink:
                    description: The self link of the encryption key used to encrypt
                      the disk. Also called KmsKeyName in the cloud console. Your
                      project's Compute Engine System service account ('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com')
                      must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use
                      this feature. See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
                    type: string
                  kmsKeyServiceAccount:
                    description: The service account used for the encryption request
                      for the given KMS key. If absent, the Compute Engine Service
                      Agent service account is used.
                    type: string
                  rawKey:
                    description: Specifies a 256-bit customer-supplied encryption
                      key, encoded in RFC 4648 base64 to either encrypt or decrypt
                      this resource.
                    type: string
                  sha256:
                    description: The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
                      encryption key that protects this resource.
                    type: string
                type: object
              sourceSnapshotID:
                description: The unique ID of the snapshot used to create this disk.
                  This value identifies the exact snapshot that was used to create
                  this persistent disk. For example, if you created the persistent
                  disk from a snapshot that was later deleted and recreated under
                  the same name, the source snapshot ID would identify the exact version
                  of the snapshot that was used.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              type:
                description: URL of the disk type resource describing which disk type
                  to use to create the disk. Provide this when creating the disk.
                type: string
              users:
                description: 'Links to the users of the disk (attached instances)
                  in form: project/zones/zone/instances/instance'
                items:
                  type: string
                type: array
              zone:
                description: A reference to the zone where the disk resides.
                type: string
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: globaladdresses.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: GlobalAddress
    listKind: GlobalAddressList
    plural: globaladdresses
    singular: globaladdress
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              address:
                description: The IP address or beginning of the address range represented
                  by this resource. This can be supplied as an input to reserve a
                  specific address or omitted to allow GCP to choose a valid one for
                  you.
                type: string
              addressType:
                description: "The type of the address to reserve. \n * EXTERNAL indicates
                  public/external single IP address. * INTERNAL indicates internal
                  IP ranges belonging to some network. Default value: \"EXTERNAL\"
                  Possible values: [\"EXTERNAL\", \"INTERNAL\"]"
                type: string
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              ipVersion:
                description: 'The IP Version that will be used by this address. The
                  default value is ''IPV4''. Possible values: ["IPV4", "IPV6"]'
                type: string
              kubeformOutput:
                properties:
                  address:
                    description: The IP address or beginning of the address range
                      represented by this resource. This can be supplied as an input
                      to reserve a specific address or omitted to allow GCP to choose
                      a valid one for you.
                    type: string
                  addressType:
                    description: "The type of the address to reserve. \n * EXTERNAL
                      indicates public/external single IP address. * INTERNAL indicates
                      internal IP ranges belonging to some network. Default value:
                      \"EXTERNAL\" Possible values: [\"EXTERNAL\", \"INTERNAL\"]"
                    type: string
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  ipVersion:
                    description: 'The IP Version that will be used by this address.
                      The default value is ''IPV4''. Possible values: ["IPV4", "IPV6"]'
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035.  Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  network:
                    description: "The URL of the network in which to reserve the IP
                      range. The IP range must be in RFC1918 space. The network cannot
                      be deleted if there are any reserved IP ranges referring to
                      it. \n This should only be set when using an Internal address."
                    type: string
                  prefixLength:
                    description: "The prefix length of the IP range. If not present,
                      it means the address field is a single IP address. \n This field
                      is not applicable to addresses with addressType=EXTERNAL, or
                      addressType=INTERNAL when purpose=PRIVATE_SERVICE_CONNECT"
                    format: int64
                    type: integer
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  purpose:
                    description: "The purpose of the resource. Possible values include:
                      \n * VPC_PEERING - for peer networks \n * PRIVATE_SERVICE_CONNECT
                      - for ([Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html)
                      only) Private Service Connect networks"
                    type: string
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.  Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              network:
                description: "The URL of the network in which to reserve the IP range.
                  The IP range must be in RFC1918 space. The network cannot be deleted
                  if there are any reserved IP ranges referring to it. \n This should
                  only be set when using an Internal address."
                type: string
              prefixLength:
                description: "The prefix length of the IP range. If not present, it
                  means the address field is a single IP address. \n This field is
                  not applicable to addresses with addressType=EXTERNAL, or addressType=INTERNAL
                  when purpose=PRIVATE_SERVICE_CONNECT"
                format: int64
                type: integer
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              purpose:
                description: "The purpose of the resource. Possible values include:
                  \n * VPC_PEERING - for peer networks \n * PRIVATE_SERVICE_CONNECT
                  - for ([Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html)
                  only) Private Service Connect networks"
                type: string
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: instancefromtemplates.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: InstanceFromTemplate
    listKind: InstanceFromTemplateList
    plural: instancefromtemplates
    singular: instancefromtemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              allowStoppingForUpdate:
                description: If true, allows Terraform to stop the instance to update
                  its properties. If you try to update a property that requires stopping
                  the instance without setting this field, the update will fail.
                type: boolean
              attachedDisk:
                description: List of disks attached to the instance
                items:
                  properties:
                    deviceName:
                      description: Name with which the attached disk is accessible
                        under /dev/disk/by-id/
                      type: string
                    diskEncryptionKeySha256:
                      description: The RFC 4648 base64 encoded SHA-256 hash of the
                        customer-supplied encryption key that protects this resource.
                      type: string
                    kmsKeySelfLink:
                      description: The self_link of the encryption key that is stored
                        in Google Cloud KMS to encrypt this disk. Only one of kms_key_self_link
                        and disk_encryption_key_raw may be set.
                      type: string
                    mode:
                      description: Read/write mode for the disk. One of "READ_ONLY"
                        or "READ_WRITE".
                      type: string
                    source:
                      description: The name or self_link of the disk attached to this
                        instance.
                      type: string
                  required:
                  - source
                  type: object
                type: array
              bootDisk:
                description: The boot disk for the instance.
                properties:
                  autoDelete:
                    description: Whether the disk will be auto-deleted when the instance
                      is deleted.
                    type: boolean
                  deviceName:
                    description: Name with which attached disk will be accessible
                      under /dev/disk/by-id/
                    type: string
                  diskEncryptionKeySha256:
                    description: The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
                      encryption key that protects this resource.
                    type: string
                  initializeParams:
                    description: Parameters with which a disk was created alongside
                      the instance.
                    properties:
                      image:
                        description: The image from which this disk was initialised.
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: A set of key/value label pairs assigned to the
                          disk.
                        type: object
                      size:
                        description: The size of the image in gigabytes.
                        format: int64
                        type: integer
                      type:
                        description: The Google Compute Engine disk type. One of pd-standard,
                          pd-ssd or pd-balanced.
                        type: string
                    type: object
                  kmsKeySelfLink:
                    description: The self_link of the encryption key that is stored
                      in Google Cloud KMS to encrypt this disk. Only one of kms_key_self_link
                      and disk_encryption_key_raw may be set.
                    type: string
                  mode:
                    description: Read/write mode for the disk. One of "READ_ONLY"
                      or "READ_WRITE".
                    type: string
                  source:
                    description: The name or self_link of the disk attached to this
                      instance.
                    type: string
                type: object
              canIPForward:
                description: Whether sending and receiving of packets with non-matching
                  source or destination IPs is allowed.
                type: boolean
              confidentialInstanceConfig:
                description: The Confidential VM config being used by the instance.  on_host_maintenance
                  has to be set to TERMINATE or this will fail to create.
                properties:
                  enableConfidentialCompute:
                    description: Defines whether the instance should have confidential
                      compute enabled.
                    type: boolean
                required:
                - enableConfidentialCompute
                type: object
              cpuPlatform:
                description: The CPU platform used by this instance.
                type: string
              currentStatus:
                description: Current status of the instance.
                type: string
              deletionProtection:
                description: Whether deletion protection is enabled on this instance.
                type: boolean
              description:
                description: A brief description of the resource.
                type: string
              desiredStatus:
                description: Desired status of the instance. Either "RUNNING" or "TERMINATED".
                type: string
              enableDisplay:
                description: Whether the instance has virtual displays enabled.
                type: boolean
              guestAccelerator:
                description: List of the type and count of accelerator cards attached
                  to the instance.
                items:
                  properties:
                    count:
                      description: The number of the guest accelerator cards exposed
                        to this instance.
                      format: int64
                      type: integer
                    type:
                      description: The accelerator type resource exposed to this instance.
                        E.g. nvidia-tesla-k80.
                      type: string
                  required:
                  - count
                  - type
                  type: object
                type: array
              hostname:
                description: A custom hostname for the instance. Must be a fully qualified
                  DNS name and RFC-1035-valid. Valid format is a series of labels
                  1-63 characters long matching the regular expression [a-z]([-a-z0-9]*[a-z0-9]),
                  concatenated with periods. The entire hostname must not exceed 253
                  characters. Changing this forces a new resource to be created.
                type: string
              id:
                type: string
              instanceID:
                description: The server-assigned unique identifier of this instance.
                type: string
              kubeformOutput:
                properties:
                  allowStoppingForUpdate:
                    description: If true, allows Terraform to stop the instance to
                      update its properties. If you try to update a property that
                      requires stopping the instance without setting this field, the
                      update will fail.
                    type: boolean
                  attachedDisk:
                    description: List of disks attached to the instance
                    items:
                      properties:
                        deviceName:
                          description: Name with which the attached disk is accessible
                            under /dev/disk/by-id/
                          type: string
                        diskEncryptionKeySha256:
                          description: The RFC 4648 base64 encoded SHA-256 hash of
                            the customer-supplied encryption key that protects this
                            resource.
                          type: string
                        kmsKeySelfLink:
                          description: The self_link of the encryption key that is
                            stored in Google Cloud KMS to encrypt this disk. Only
                            one of kms_key_self_link and disk_encryption_key_raw may
                            be set.
                          type: string
                        mode:
                          description: Read/write mode for the disk. One of "READ_ONLY"
                            or "READ_WRITE".
                          type: string
                        source:
                          description: The name or self_link of the disk attached
                            to this instance.
                          type: string
                      required:
                      - source
                      type: object
                    type: array
                  bootDisk:
                    description: The boot disk for the instance.
                    properties:
                      autoDelete:
                        description: Whether the disk will be auto-deleted when the
                          instance is deleted.
                        type: boolean
                      deviceName:
                        description: Name with which attached disk will be accessible
                          under /dev/disk/by-id/
                        type: string
                      diskEncryptionKeySha256:
                        description: The RFC 4648 base64 encoded SHA-256 hash of the
                          customer-supplied encryption key that protects this resource.
                        type: string
                      initializeParams:
                        description: Parameters with which a disk was created alongside
                          the instance.
                        properties:
                          image:
                            description: The image from which this disk was initialised.
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: A set of key/value label pairs assigned to
                              the disk.
                            type: object
                          size:
                            description: The size of the image in gigabytes.
                            format: int64
                            type: integer
                          type:
                            description: The Google Compute Engine disk type. One
                              of pd-standard, pd-ssd or pd-balanced.
                            type: string
                        type: object
                      kmsKeySelfLink:
                        description: The self_link of the encryption key that is stored
                          in Google Cloud KMS to encrypt this disk. Only one of kms_key_self_link
                          and disk_encryption_key_raw may be set.
                        type: string
                      mode:
                        description: Read/write mode for the disk. One of "READ_ONLY"
                          or "READ_WRITE".
                        type: string
                      source:
                        description: The name or self_link of the disk attached to
                          this instance.
                        type: string
                    type: object
                  canIPForward:
                    description: Whether sending and receiving of packets with non-matching
                      source or destination IPs is allowed.
                    type: boolean
                  confidentialInstanceConfig:
                    description: The Confidential VM config being used by the instance.  on_host_maintenance
                      has to be set to TERMINATE or this will fail to create.
                    properties:
                      enableConfidentialCompute:
                        description: Defines whether the instance should have confidential
                          compute enabled.
                        type: boolean
                    required:
                    - enableConfidentialCompute
                    type: object
                  cpuPlatform:
                    description: The CPU platform used by this instance.
                    type: string
                  currentStatus:
                    description: Current status of the instance.
                    type: string
                  deletionProtection:
                    description: Whether deletion protection is enabled on this instance.
                    type: boolean
                  description:
                    description: A brief description of the resource.
                    type: string
                  desiredStatus:
                    description: Desired status of the instance. Either "RUNNING"
                      or "TERMINATED".
                    type: string
                  enableDisplay:
                    description: Whether the instance has virtual displays enabled.
                    type: boolean
                  guestAccelerator:
                    description: List of the type and count of accelerator cards attached
                      to the instance.
                    items:
                      properties:
                        count:
                          description: The number of the guest accelerator cards exposed
                            to this instance.
                          format: int64
                          type: integer
                        type:
                          description: The accelerator type resource exposed to this
                            instance. E.g. nvidia-tesla-k80.
                          type: string
                      required:
                      - count
                      - type
                      type: object
                    type: array
                  hostname:
                    description: A custom hostname for the instance. Must be a fully
                      qualified DNS name and RFC-1035-valid. Valid format is a series
                      of labels 1-63 characters long matching the regular expression
                      [a-z]([-a-z0-9]*[a-z0-9]), concatenated with periods. The entire
                      hostname must not exceed 253 characters. Changing this forces
                      a new resource to be created.
                    type: string
                  id:
                    type: string
                  instanceID:
                    description: The server-assigned unique identifier of this instance.
                    type: string
                  labelFingerprint:
                    description: The unique fingerprint of the labels.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs assigned to the instance.
                    type: object
                  machineType:
                    description: The machine type to create.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: Metadata key/value pairs made available within the
                      instance.
                    type: object
                  metadataFingerprint:
                    description: The unique fingerprint of the metadata.
                    type: string
                  metadataStartupScript:
                    description: Metadata startup scripts made available within the
                      instance.
                    type: string
                  minCPUPlatform:
                    description: The minimum CPU platform specified for the VM instance.
                    type: string
                  name:
                    description: The name of the instance. One of name or self_link
                      must be provided.
                    type: string
                  networkInterface:
                    description: The networks attached to the instance.
                    items:
                      properties:
                        accessConfig:
                          description: Access configurations, i.e. IPs via which this
                            instance can be accessed via the Internet.
                          items:
                            properties:
                              natIP:
                                description: The IP address that is be 1:1 mapped
                                  to the instance's network ip.
                                type: string
                              networkTier:
                                description: The networking tier used for configuring
                                  this instance. One of PREMIUM or STANDARD.
                                type: string
                              publicPtrDomainName:
                                description: The DNS domain name for the public PTR
                                  record.
                                type: string
                            type: object
                          type: array
                        aliasIPRange:
                          description: An array of alias IP ranges for this network
                            interface.
                          items:
                            properties:
                              ipCIDRRange:
                                description: The IP CIDR range represented by this
                                  alias IP range.
                                type: string
                              subnetworkRangeName:
                                description: The subnetwork secondary range name specifying
                                  the secondary range from which to allocate the IP
                                  CIDR range for this alias IP range.
                                type: string
                            required:
                            - ipCIDRRange
                            type: object
                          type: array
                        name:
                          description: The name of the interface
                          type: string
                        network:
                          description: The name or self_link of the network attached
                            to this interface.
                          type: string
                        networkIP:
                          description: The private IP address assigned to the instance.
                          type: string
                        nicType:
                          description: The type of vNIC to be used on this interface.
                            Possible values:GVNIC, VIRTIO_NET
                          type: string
                        subnetwork:
                          description: The name or self_link of the subnetwork attached
                            to this interface.
                          type: string
                        subnetworkProject:
                          description: The project in which the subnetwork belongs.
                          type: string
                      type: object
                    type: array
                  project:
                    description: The ID of the project in which the resource belongs.
                      If self_link is provided, this value is ignored. If neither
                      self_link nor project are provided, the provider project is
                      used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  resourcePolicies:
                    description: A list of short names or self_links of resource policies
                      to attach to the instance. Modifying this list will cause the
                      instance to recreate. Currently a max of 1 resource policy is
                      supported.
                    items:
                      type: string
                    type: array
                  scheduling:
                    description: The scheduling strategy being used by the instance.
                    properties:
                      automaticRestart:
                        description: Specifies if the instance should be restarted
                          if it was terminated by Compute Engine (not a user).
                        type: boolean
                      minNodeCpus:
                        format: int64
                        type: integer
                      nodeAffinities:
                        description: Specifies node affinities or anti-affinities
                          to determine which sole-tenant nodes your instances and
                          managed instance groups will use as host systems.
                        items:
                          properties:
                            key:
                              type: string
                            operator:
                              type: string
                            values:
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          - values
                          type: object
                        type: array
                      onHostMaintenance:
                        description: Describes maintenance behavior for the instance.
                          One of MIGRATE or TERMINATE,
                        type: string
                      preemptible:
                        description: Whether the instance is preemptible.
                        type: boolean
                    type: object
                  scratchDisk:
                    description: The scratch disks attached to the instance.
                    items:
                      properties:
                        interface:
                          description: The disk interface used for attaching this
                            disk. One of SCSI or NVME.
                          type: string
                      required:
                      - interface
                      type: object
                    type: array
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                  serviceAccount:
                    description: The service account to attach to the instance.
                    properties:
                      email:
                        description: The service account e-mail address.
                        type: string
                      scopes:
                        description: A list of service scopes.
                        items:
                          type: string
                        type: array
                    required:
                    - scopes
                    type: object
                  shieldedInstanceConfig:
                    description: The shielded vm config being used by the instance.
                    properties:
                      enableIntegrityMonitoring:
                        description: Whether integrity monitoring is enabled for the
                          instance.
                        type: boolean
                      enableSecureBoot:
                        description: Whether secure boot is enabled for the instance.
                        type: boolean
                      enableVtpm:
                        description: Whether the instance uses vTPM.
                        type: boolean
                    type: object
                  sourceInstanceTemplate:
                    description: Name or self link of an instance template to create
                      the instance based on.
                    type: string
                  tags:
                    description: The list of tags attached to the instance.
                    items:
                      type: string
                    type: array
                  tagsFingerprint:
                    description: The unique fingerprint of the tags.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: The zone of the instance. If self_link is provided,
                      this value is ignored. If neither self_link nor zone are provided,
                      the provider zone is used.
                    type: string
                required:
                - name
                - providerRef
                - sourceInstanceTemplate
                type: object
              labelFingerprint:
                description: The unique fingerprint of the labels.
                type: string
              labels:
                additionalProperties:
                  type: string
                description: A set of key/value label pairs assigned to the instance.
                type: object
              machineType:
                description: The machine type to create.
                type: string
              metadata:
                additionalProperties:
                  type: string
                description: Metadata key/value pairs made available within the instance.
                type: object
              metadataFingerprint:
                description: The unique fingerprint of the metadata.
                type: string
              metadataStartupScript:
                description: Metadata startup scripts made available within the instance.
                type: string
              minCPUPlatform:
                description: The minimum CPU platform specified for the VM instance.
                type: string
              name:
                description: The name of the instance. One of name or self_link must
                  be provided.
                type: string
              networkInterface:
                description: The networks attached to the instance.
                items:
                  properties:
                    accessConfig:
                      description: Access configurations, i.e. IPs via which this
                        instance can be accessed via the Internet.
                      items:
                        properties:
                          natIP:
                            description: The IP address that is be 1:1 mapped to the
                              instance's network ip.
                            type: string
                          networkTier:
                            description: The networking tier used for configuring
                              this instance. One of PREMIUM or STANDARD.
                            type: string
                          publicPtrDomainName:
                            description: The DNS domain name for the public PTR record.
                            type: string
                        type: object
                      type: array
                    aliasIPRange:
                      description: An array of alias IP ranges for this network interface.
                      items:
                        properties:
                          ipCIDRRange:
                            description: The IP CIDR range represented by this alias
                              IP range.
                            type: string
                          subnetworkRangeName:
                            description: The subnetwork secondary range name specifying
                              the secondary range from which to allocate the IP CIDR
                              range for this alias IP range.
                            type: string
                        required:
                        - ipCIDRRange
                        type: object
                      type: array
                    name:
                      description: The name of the interface
                      type: string
                    network:
                      description: The name or self_link of the network attached to
                        this interface.
                      type: string
                    networkIP:
                      description: The private IP address assigned to the instance.
                      type: string
                    nicType:
                      description: The type of vNIC to be used on this interface.
                        Possible values:GVNIC, VIRTIO_NET
                      type: string
                    subnetwork:
                      description: The name or self_link of the subnetwork attached
                        to this interface.
                      type: string
                    subnetworkProject:
                      description: The project in which the subnetwork belongs.
                      type: string
                  type: object
                type: array
              project:
                description: The ID of the project in which the resource belongs.
                  If self_link is provided, this value is ignored. If neither self_link
                  nor project are provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resourcePolicies:
                description: A list of short names or self_links of resource policies
                  to attach to the instance. Modifying this list will cause the instance
                  to recreate. Currently a max of 1 resource policy is supported.
                items:
                  type: string
                type: array
              scheduling:
                description: The scheduling strategy being used by the instance.
                properties:
                  automaticRestart:
                    description: Specifies if the instance should be restarted if
                      it was terminated by Compute Engine (not a user).
                    type: boolean
                  minNodeCpus:
                    format: int64
                    type: integer
                  nodeAffinities:
                    description: Specifies node affinities or anti-affinities to determine
                      which sole-tenant nodes your instances and managed instance
                      groups will use as host systems.
                    items:
                      properties:
                        key:
                          type: string
                        operator:
                          type: string
                        values:
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      - values
                      type: object
                    type: array
                  onHostMaintenance:
                    description: Describes maintenance behavior for the instance.
                      One of MIGRATE or TERMINATE,
                    type: string
                  preemptible:
                    description: Whether the instance is preemptible.
                    type: boolean
                type: object
              scratchDisk:
                description: The scratch disks attached to the instance.
                items:
                  properties:
                    interface:
                      description: The disk interface used for attaching this disk.
                        One of SCSI or NVME.
                      type: string
                  required:
                  - interface
                  type: object
                type: array
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                description: The URI of the created resource.
                type: string
              serviceAccount:
                description: The service account to attach to the instance.
                properties:
                  email:
                    description: The service account e-mail address.
                    type: string
                  scopes:
                    description: A list of service scopes.
                    items:
                      type: string
                    type: array
                required:
                - scopes
                type: object
              shieldedInstanceConfig:
                description: The shielded vm config being used by the instance.
                properties:
                  enableIntegrityMonitoring:
                    description: Whether integrity monitoring is enabled for the instance.
                    type: boolean
                  enableSecureBoot:
                    description: Whether secure boot is enabled for the instance.
                    type: boolean
                  enableVtpm:
                    description: Whether the instance uses vTPM.
                    type: boolean
                type: object
              sourceInstanceTemplate:
                description: Name or self link of an instance template to create the
                  instance based on.
                type: string
              tags:
                description: The list of tags attached to the instance.
                items:
                  type: string
                type: array
              tagsFingerprint:
                description: The unique fingerprint of the tags.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              zone:
                description: The zone of the instance. If self_link is provided, this
                  value is ignored. If neither self_link nor zone are provided, the
                  provider zone is used.
                type: string
            required:
            - name
            - providerRef
            - sourceInstanceTemplate
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: regionperinstanceconfigs.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RegionPerInstanceConfig
    listKind: RegionPerInstanceConfigList
    plural: regionperinstanceconfigs
    singular: regionperinstanceconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  minimalAction:
                    type: string
                  mostDisruptiveAllowedAction:
                    type: string
                  name:
                    description: The name for this per-instance config and its corresponding
                      instance.
                    type: string
                  preservedState:
                    description: The preserved state for this instance.
                    properties:
                      disk:
                        description: Stateful disks for the instance.
                        items:
                          properties:
                            deleteRule:
                              description: 'A value that prescribes what should happen
                                to the stateful disk when the VM instance is deleted.
                                The available options are ''NEVER'' and ''ON_PERMANENT_INSTANCE_DELETION''.
                                ''NEVER'' - detach the disk when the VM is deleted,
                                but do not delete the disk. ''ON_PERMANENT_INSTANCE_DELETION''
                                will delete the stateful disk when the VM is permanently
                                deleted from the instance group. Default value: "NEVER"
                                Possible values: ["NEVER", "ON_PERMANENT_INSTANCE_DELETION"]'
                              type: string
                            deviceName:
                              description: A unique device name that is reflected
                                into the /dev/ tree of a Linux operating system running
                                within the instance.
                              type: string
                            mode:
                              description: 'The mode of the disk. Default value: "READ_WRITE"
                                Possible values: ["READ_ONLY", "READ_WRITE"]'
                              type: string
                            source:
                              description: The URI of an existing persistent disk
                                to attach under the specified device-name in the format
                                'projects/project-id/zones/zone/disks/disk-name'.
                              type: string
                          required:
                          - deviceName
                          - source
                          type: object
                        type: array
                      metadata:
                        additionalProperties:
                          type: string
                        description: Preserved metadata defined for this instance.
                          This is a list of key->value pairs.
                        type: object
                    type: object
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: Region where the containing instance group manager
                      is located
                    type: string
                  regionInstanceGroupManager:
                    description: The region instance group manager this instance config
                      is part of.
                    type: string
                  removeInstanceStateOnDestroy:
                    type: boolean
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                - regionInstanceGroupManager
                type: object
              minimalAction:
                type: string
              mostDisruptiveAllowedAction:
                type: string
              name:
                description: The name for this per-instance config and its corresponding
                  instance.
                type: string
              preservedState:
                description: The preserved state for this instance.
                properties:
                  disk:
                    description: Stateful disks for the instance.
                    items:
                      properties:
                        deleteRule:
                          description: 'A value that prescribes what should happen
                            to the stateful disk when the VM instance is deleted.
                            The available options are ''NEVER'' and ''ON_PERMANENT_INSTANCE_DELETION''.
                            ''NEVER'' - detach the disk when the VM is deleted, but
                            do not delete the disk. ''ON_PERMANENT_INSTANCE_DELETION''
                            will delete the stateful disk when the VM is permanently
                            deleted from the instance group. Default value: "NEVER"
                            Possible values: ["NEVER", "ON_PERMANENT_INSTANCE_DELETION"]'
                          type: string
                        deviceName:
                          description: A unique device name that is reflected into
                            the /dev/ tree of a Linux operating system running within
                            the instance.
                          type: string
                        mode:
                          description: 'The mode of the disk. Default value: "READ_WRITE"
                            Possible values: ["READ_ONLY", "READ_WRITE"]'
                          type: string
                        source:
                          description: The URI of an existing persistent disk to attach
                            under the specified device-name in the format 'projects/project-id/zones/zone/disks/disk-name'.
                          type: string
                      required:
                      - deviceName
                      - source
                      type: object
                    type: array
                  metadata:
                    additionalProperties:
                      type: string
                    description: Preserved metadata defined for this instance. This
                      is a list of key->value pairs.
                    type: object
                type: object
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: Region where the containing instance group manager is
                  located
                type: string
              regionInstanceGroupManager:
                description: The region instance group manager this instance config
                  is part of.
                type: string
              removeInstanceStateOnDestroy:
                type: boolean
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            - regionInstanceGroupManager
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: projectdefaultnetworktiers.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: ProjectDefaultNetworkTier
    listKind: ProjectDefaultNetworkTierList
    plural: projectdefaultnetworktiers
    singular: projectdefaultnetworktier
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  networkTier:
                    description: 'The default network tier to be configured for the
                      project. This field can take the following values: PREMIUM or
                      STANDARD.'
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - networkTier
                - providerRef
                type: object
              networkTier:
                description: 'The default network tier to be configured for the project.
                  This field can take the following values: PREMIUM or STANDARD.'
                type: string
              project:
                description: The ID of the project in which the resource belongs.
                  If it is not provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - networkTier
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: networkendpointgroups.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: NetworkEndpointGroup
    listKind: NetworkEndpointGroupList
    plural: networkendpointgroups
    singular: networkendpointgroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              defaultPort:
                description: The default port used if the port number is not specified
                  in the network endpoint.
                format: int64
                type: integer
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  defaultPort:
                    description: The default port used if the port number is not specified
                      in the network endpoint.
                    format: int64
                    type: integer
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource; provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  network:
                    description: The network to which all network endpoints in the
                      NEG belong. Uses "default" project network if unspecified.
                    type: string
                  networkEndpointType:
                    description: 'Type of network endpoints in this network endpoint
                      group. Default value: "GCE_VM_IP_PORT" Possible values: ["GCE_VM_IP_PORT"]'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  size:
                    description: Number of network endpoints in the network endpoint
                      group.
                    format: int64
                    type: integer
                  subnetwork:
                    description: Optional subnetwork to which all network endpoints
                      in the NEG belong.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: Zone where the network endpoint group is located.
                    type: string
                required:
                - name
                - network
                - providerRef
                type: object
              name:
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              network:
                description: The network to which all network endpoints in the NEG
                  belong. Uses "default" project network if unspecified.
                type: string
              networkEndpointType:
                description: 'Type of network endpoints in this network endpoint group.
                  Default value: "GCE_VM_IP_PORT" Possible values: ["GCE_VM_IP_PORT"]'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              size:
                description: Number of network endpoints in the network endpoint group.
                format: int64
                type: integer
              subnetwork:
                description: Optional subnetwork to which all network endpoints in
                  the NEG belong.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              zone:
                description: Zone where the network endpoint group is located.
                type: string
            required:
            - name
            - network
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: packetmirrorings.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: PacketMirroring
    listKind: PacketMirroringList
    plural: packetmirrorings
    singular: packetmirroring
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              collectorIlb:
                description: The Forwarding Rule resource (of type load_balancing_scheme=INTERNAL)
                  that will be used as collector for mirrored traffic. The specified
                  forwarding rule must have is_mirroring_collector set to true.
                properties:
                  url:
                    description: The URL of the forwarding rule.
                    type: string
                required:
                - url
                type: object
              description:
                description: A human-readable description of the rule.
                type: string
              filter:
                description: A filter for mirrored traffic.  If unset, all traffic
                  is mirrored.
                properties:
                  cidrRanges:
                    description: IP CIDR ranges that apply as a filter on the source
                      (ingress) or destination (egress) IP in the IP header. Only
                      IPv4 is supported.
                    items:
                      type: string
                    type: array
                  direction:
                    description: 'Direction of traffic to mirror. Default value: "BOTH"
                      Possible values: ["INGRESS", "EGRESS", "BOTH"]'
                    type: string
                  ipProtocols:
                    description: 'Protocols that apply as a filter on mirrored traffic.
                      Possible values: ["tcp", "udp", "icmp"]'
                    items:
                      type: string
                    type: array
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  collectorIlb:
                    description: The Forwarding Rule resource (of type load_balancing_scheme=INTERNAL)
                      that will be used as collector for mirrored traffic. The specified
                      forwarding rule must have is_mirroring_collector set to true.
                    properties:
                      url:
                        description: The URL of the forwarding rule.
                        type: string
                    required:
                    - url
                    type: object
                  description:
                    description: A human-readable description of the rule.
                    type: string
                  filter:
                    description: A filter for mirrored traffic.  If unset, all traffic
                      is mirrored.
                    properties:
                      cidrRanges:
                        description: IP CIDR ranges that apply as a filter on the
                          source (ingress) or destination (egress) IP in the IP header.
                          Only IPv4 is supported.
                        items:
                          type: string
                        type: array
                      direction:
                        description: 'Direction of traffic to mirror. Default value:
                          "BOTH" Possible values: ["INGRESS", "EGRESS", "BOTH"]'
                        type: string
                      ipProtocols:
                        description: 'Protocols that apply as a filter on mirrored
                          traffic. Possible values: ["tcp", "udp", "icmp"]'
                        items:
                          type: string
                        type: array
                    type: object
                  id:
                    type: string
                  mirroredResources:
                    description: A means of specifying which resources to mirror.
                    properties:
                      instances:
                        description: All the listed instances will be mirrored.  Specify
                          at most 50.
                        items:
                          properties:
                            url:
                              description: The URL of the instances where this rule
                                should be active.
                              type: string
                          required:
                          - url
                          type: object
                        type: array
                      subnetworks:
                        description: All instances in one of these subnetworks will
                          be mirrored.
                        items:
                          properties:
                            url:
                              description: The URL of the subnetwork where this rule
                                should be active.
                              type: string
                          required:
                          - url
                          type: object
                        type: array
                      tags:
                        description: All instances with these tags will be mirrored.
                        items:
                          type: string
                        type: array
                    type: object
                  name:
                    description: The name of the packet mirroring rule
                    type: string
                  network:
                    description: Specifies the mirrored VPC network. Only packets
                      in this network will be mirrored. All mirrored VMs should have
                      a NIC in the given network. All mirrored subnetworks should
                      belong to the given network.
                    properties:
                      url:
                        description: The full self_link URL of the network where this
                          rule is active.
                        type: string
                    required:
                    - url
                    type: object
                  priority:
                    description: Since only one rule can be active at a time, priority
                      is used to break ties in the case of two rules that apply to
                      the same instances.
                    format: int64
                    type: integer
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: The Region in which the created address should reside.
                      If it is not provided, the provider region is used.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - collectorIlb
                - mirroredResources
                - name
                - network
                - providerRef
                type: object
              mirroredResources:
                description: A means of specifying which resources to mirror.
                properties:
                  instances:
                    description: All the listed instances will be mirrored.  Specify
                      at most 50.
                    items:
                      properties:
                        url:
                          description: The URL of the instances where this rule should
                            be active.
                          type: string
                      required:
                      - url
                      type: object
                    type: array
                  subnetworks:
                    description: All instances in one of these subnetworks will be
                      mirrored.
                    items:
                      properties:
                        url:
                          description: The URL of the subnetwork where this rule should
                            be active.
                          type: string
                      required:
                      - url
                      type: object
                    type: array
                  tags:
                    description: All instances with these tags will be mirrored.
                    items:
                      type: string
                    type: array
                type: object
              name:
                description: The name of the packet mirroring rule
                type: string
              network:
                description: Specifies the mirrored VPC network. Only packets in this
                  network will be mirrored. All mirrored VMs should have a NIC in
                  the given network. All mirrored subnetworks should belong to the
                  given network.
                properties:
                  url:
                    description: The full self_link URL of the network where this
                      rule is active.
                    type: string
                required:
                - url
                type: object
              priority:
                description: Since only one rule can be active at a time, priority
                  is used to break ties in the case of two rules that apply to the
                  same instances.
                format: int64
                type: integer
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: The Region in which the created address should reside.
                  If it is not provided, the provider region is used.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - collectorIlb
            - mirroredResources
            - name
            - network
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: networkpeeringroutesconfigs.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: NetworkPeeringRoutesConfig
    listKind: NetworkPeeringRoutesConfigList
    plural: networkpeeringroutesconfigs
    singular: networkpeeringroutesconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              exportCustomRoutes:
                description: Whether to export the custom routes to the peer network.
                type: boolean
              id:
                type: string
              importCustomRoutes:
                description: Whether to import the custom routes to the peer network.
                type: boolean
              kubeformOutput:
                properties:
                  exportCustomRoutes:
                    description: Whether to export the custom routes to the peer network.
                    type: boolean
                  id:
                    type: string
                  importCustomRoutes:
                    description: Whether to import the custom routes to the peer network.
                    type: boolean
                  network:
                    description: The name of the primary network for the peering.
                    type: string
                  peering:
                    description: Name of the peering.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - exportCustomRoutes
                - importCustomRoutes
                - network
                - peering
                - providerRef
                type: object
              network:
                description: The name of the primary network for the peering.
                type: string
              peering:
                description: Name of the peering.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - exportCustomRoutes
            - importCustomRoutes
            - network
            - peering
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: targethttpsproxies.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: TargetHTTPSProxy
    listKind: TargetHTTPSProxyList
    plural: targethttpsproxies
    singular: targethttpsproxy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  proxyBind:
                    description: This field only applies when the forwarding rule
                      that references this target proxy has a loadBalancingScheme
                      set to INTERNAL_SELF_MANAGED.
                    type: boolean
                  proxyID:
                    description: The unique identifier for the resource.
                    format: int64
                    type: integer
                  quicOverride:
                    description: 'Specifies the QUIC override policy for this resource.
                      This determines whether the load balancer will attempt to negotiate
                      QUIC with clients or not. Can specify one of NONE, ENABLE, or
                      DISABLE. If NONE is specified, uses the QUIC policy with no
                      user overrides, which is equivalent to DISABLE. Default value:
                      "NONE" Possible values: ["NONE", "ENABLE", "DISABLE"]'
                    type: string
                  selfLink:
                    type: string
                  sslCertificates:
                    description: A list of SslCertificate resources that are used
                      to authenticate connections between users and the load balancer.
                      At least one SSL certificate must be specified.
                    items:
                      type: string
                    type: array
                  sslPolicy:
                    description: A reference to the SslPolicy resource that will be
                      associated with the TargetHttpsProxy resource. If not set, the
                      TargetHttpsProxy resource will not have any SSL policy configured.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  urlMap:
                    description: A reference to the UrlMap resource that defines the
                      mapping from URL to the BackendService.
                    type: string
                required:
                - name
                - providerRef
                - sslCertificates
                - urlMap
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              proxyBind:
                description: This field only applies when the forwarding rule that
                  references this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
                type: boolean
              proxyID:
                description: The unique identifier for the resource.
                format: int64
                type: integer
              quicOverride:
                description: 'Specifies the QUIC override policy for this resource.
                  This determines whether the load balancer will attempt to negotiate
                  QUIC with clients or not. Can specify one of NONE, ENABLE, or DISABLE.
                  If NONE is specified, uses the QUIC policy with no user overrides,
                  which is equivalent to DISABLE. Default value: "NONE" Possible values:
                  ["NONE", "ENABLE", "DISABLE"]'
                type: string
              selfLink:
                type: string
              sslCertificates:
                description: A list of SslCertificate resources that are used to authenticate
                  connections between users and the load balancer. At least one SSL
                  certificate must be specified.
                items:
                  type: string
                type: array
              sslPolicy:
                description: A reference to the SslPolicy resource that will be associated
                  with the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
                  resource will not have any SSL policy configured.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              urlMap:
                description: A reference to the UrlMap resource that defines the mapping
                  from URL to the BackendService.
                type: string
            required:
            - name
            - providerRef
            - sslCertificates
            - urlMap
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: nodegroups.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: NodeGroup
    listKind: NodeGroupList
    plural: nodegroups
    singular: nodegroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              autoscalingPolicy:
                description: If you use sole-tenant nodes for your workloads, you
                  can use the node group autoscaler to automatically manage the sizes
                  of your node groups.
                properties:
                  maxNodes:
                    description: Maximum size of the node group. Set to a value less
                      than or equal to 100 and greater than or equal to min-nodes.
                    format: int64
                    type: integer
                  minNodes:
                    description: Minimum size of the node group. Must be less than
                      or equal to max-nodes. The default value is 0.
                    format: int64
                    type: integer
                  mode:
                    description: 'The autoscaling mode. Set to one of the following:   -
                      OFF: Disables the autoscaler.   - ON: Enables scaling in and
                      scaling out.   - ONLY_SCALE_OUT: Enables only scaling out.   You
                      must use this mode if your node groups are configured to   restart
                      their hosted VMs on minimal servers. Possible values: ["OFF",
                      "ON", "ONLY_SCALE_OUT"]'
                    type: string
                type: object
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional textual description of the resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  autoscalingPolicy:
                    description: If you use sole-tenant nodes for your workloads,
                      you can use the node group autoscaler to automatically manage
                      the sizes of your node groups.
                    properties:
                      maxNodes:
                        description: Maximum size of the node group. Set to a value
                          less than or equal to 100 and greater than or equal to min-nodes.
                        format: int64
                        type: integer
                      minNodes:
                        description: Minimum size of the node group. Must be less
                          than or equal to max-nodes. The default value is 0.
                        format: int64
                        type: integer
                      mode:
                        description: 'The autoscaling mode. Set to one of the following:   -
                          OFF: Disables the autoscaler.   - ON: Enables scaling in
                          and scaling out.   - ONLY_SCALE_OUT: Enables only scaling
                          out.   You must use this mode if your node groups are configured
                          to   restart their hosted VMs on minimal servers. Possible
                          values: ["OFF", "ON", "ONLY_SCALE_OUT"]'
                        type: string
                    type: object
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional textual description of the resource.
                    type: string
                  id:
                    type: string
                  maintenancePolicy:
                    description: 'Specifies how to handle instances when a node in
                      the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE,
                      or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT.'
                    type: string
                  maintenanceWindow:
                    description: contains properties for the timeframe of maintenance
                    properties:
                      startTime:
                        description: instances.start time of the window. This must
                          be in UTC format that resolves to one of 00:00, 04:00, 08:00,
                          12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00
                          are valid.
                        type: string
                    required:
                    - startTime
                    type: object
                  name:
                    description: Name of the resource.
                    type: string
                  nodeTemplate:
                    description: The URL of the node template to which this node group
                      belongs.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  size:
                    description: The total number of nodes in the node group.
                    format: int64
                    type: integer
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: Zone where this node group is located
                    type: string
                required:
                - nodeTemplate
                - providerRef
                - size
                type: object
              maintenancePolicy:
                description: 'Specifies how to handle instances when a node in the
                  group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE,
                  or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT.'
                type: string
              maintenanceWindow:
                description: contains properties for the timeframe of maintenance
                properties:
                  startTime:
                    description: instances.start time of the window. This must be
                      in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00,
                      16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.
                    type: string
                required:
                - startTime
                type: object
              name:
                description: Name of the resource.
                type: string
              nodeTemplate:
                description: The URL of the node template to which this node group
                  belongs.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              size:
                description: The total number of nodes in the node group.
                format: int64
                type: integer
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              zone:
                description: Zone where this node group is located
                type: string
            required:
            - nodeTemplate
            - providerRef
            - size
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: instanceiammembers.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: InstanceIamMember
    listKind: InstanceIamMemberList
    plural: instanceiammembers
    singular: instanceiammember
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              instanceName:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  instanceName:
                    type: string
                  member:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  zone:
                    type: string
                required:
                - instanceName
                - member
                - providerRef
                - role
                type: object
              member:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              zone:
                type: string
            required:
            - instanceName
            - member
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: regiondiskiampolicies.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RegionDiskIamPolicy
    listKind: RegionDiskIamPolicyList
    plural: regiondiskiampolicies
    singular: regiondiskiampolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  etag:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  policyData:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - name
                - policyData
                - providerRef
                type: object
              name:
                type: string
              policyData:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - name
            - policyData
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: instancegroups.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: InstanceGroup
    listKind: InstanceGroupList
    plural: instancegroups
    singular: instancegroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: An optional textual description of the instance group.
                type: string
              id:
                type: string
              instances:
                description: List of instances in the group. They should be given
                  as self_link URLs. When adding instances they must all be in the
                  same network and zone as the instance group.
                items:
                  type: string
                type: array
              kubeformOutput:
                properties:
                  description:
                    description: An optional textual description of the instance group.
                    type: string
                  id:
                    type: string
                  instances:
                    description: List of instances in the group. They should be given
                      as self_link URLs. When adding instances they must all be in
                      the same network and zone as the instance group.
                    items:
                      type: string
                    type: array
                  name:
                    description: The name of the instance group. Must be 1-63 characters
                      long and comply with RFC1035. Supported characters include lowercase
                      letters, numbers, and hyphens.
                    type: string
                  namedPort:
                    description: The named port configuration.
                    items:
                      properties:
                        name:
                          description: The name which the port will be mapped to.
                          type: string
                        port:
                          description: The port number to map the name to.
                          format: int64
                          type: integer
                      required:
                      - name
                      - port
                      type: object
                    type: array
                  network:
                    description: The URL of the network the instance group is in.
                      If this is different from the network where the instances are
                      in, the creation fails. Defaults to the network where the instances
                      are in (if neither network nor instances is specified, this
                      field will be blank).
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                  size:
                    description: The number of instances in the group.
                    format: int64
                    type: integer
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: The zone that this instance group should be created
                      in.
                    type: string
                required:
                - name
                - providerRef
                type: object
              name:
                description: The name of the instance group. Must be 1-63 characters
                  long and comply with RFC1035. Supported characters include lowercase
                  letters, numbers, and hyphens.
                type: string
              namedPort:
                description: The named port configuration.
                items:
                  properties:
                    name:
                      description: The name which the port will be mapped to.
                      type: string
                    port:
                      description: The port number to map the name to.
                      format: int64
                      type: integer
                  required:
                  - name
                  - port
                  type: object
                type: array
              network:
                description: The URL of the network the instance group is in. If this
                  is different from the network where the instances are in, the creation
                  fails. Defaults to the network where the instances are in (if neither
                  network nor instances is specified, this field will be blank).
                type: string
              project:
                description: The ID of the project in which the resource belongs.
                  If it is not provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                description: The URI of the created resource.
                type: string
              size:
                description: The number of instances in the group.
                format: int64
                type: integer
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              zone:
                description: The zone that this instance group should be created in.
                type: string
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: networkendpoints.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: NetworkEndpoint
    listKind: NetworkEndpointList
    plural: networkendpoints
    singular: networkendpoint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              instance:
                description: The name for a specific VM instance that the IP address
                  belongs to. This is required for network endpoints of type GCE_VM_IP_PORT.
                  The instance must be in the same zone of network endpoint group.
                type: string
              ipAddress:
                description: IPv4 address of network endpoint. The IP address must
                  belong to a VM in GCE (either the primary IP or as part of an aliased
                  IP range).
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  instance:
                    description: The name for a specific VM instance that the IP address
                      belongs to. This is required for network endpoints of type GCE_VM_IP_PORT.
                      The instance must be in the same zone of network endpoint group.
                    type: string
                  ipAddress:
                    description: IPv4 address of network endpoint. The IP address
                      must belong to a VM in GCE (either the primary IP or as part
                      of an aliased IP range).
                    type: string
                  networkEndpointGroup:
                    description: The network endpoint group this endpoint is part
                      of.
                    type: string
                  port:
                    description: Port number of network endpoint.
                    format: int64
                    type: integer
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: Zone where the containing network endpoint group
                      is located.
                    type: string
                required:
                - instance
                - ipAddress
                - networkEndpointGroup
                - port
                - providerRef
                type: object
              networkEndpointGroup:
                description: The network endpoint group this endpoint is part of.
                type: string
              port:
                description: Port number of network endpoint.
                format: int64
                type: integer
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              zone:
                description: Zone where the containing network endpoint group is located.
                type: string
            required:
            - instance
            - ipAddress
            - networkEndpointGroup
            - port
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: regiondisks.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RegionDisk
    listKind: RegionDiskList
    plural: regiondisks
    singular: regiondisk
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              diskEncryptionKey:
                description: "Encrypts the disk using a customer-supplied encryption
                  key. \n After you encrypt a disk with a customer-supplied key, you
                  must provide the same key if you use the disk later (e.g. to create
                  a disk snapshot or an image, or to attach the disk to a virtual
                  machine). \n Customer-supplied encryption keys do not protect access
                  to metadata of the disk. \n If you do not provide an encryption
                  key when creating the disk, then the disk will be encrypted using
                  an automatically generated key and you do not need to provide a
                  key to use the disk later."
                properties:
                  sha256:
                    description: The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
                      encryption key that protects this resource.
                    type: string
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  diskEncryptionKey:
                    description: "Encrypts the disk using a customer-supplied encryption
                      key. \n After you encrypt a disk with a customer-supplied key,
                      you must provide the same key if you use the disk later (e.g.
                      to create a disk snapshot or an image, or to attach the disk
                      to a virtual machine). \n Customer-supplied encryption keys
                      do not protect access to metadata of the disk. \n If you do
                      not provide an encryption key when creating the disk, then the
                      disk will be encrypted using an automatically generated key
                      and you do not need to provide a key to use the disk later."
                    properties:
                      sha256:
                        description: The RFC 4648 base64 encoded SHA-256 hash of the
                          customer-supplied encryption key that protects this resource.
                        type: string
                    type: object
                  id:
                    type: string
                  labelFingerprint:
                    description: The fingerprint used for optimistic locking of this
                      resource.  Used internally during updates.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to apply to this disk.  A list of key->value
                      pairs.
                    type: object
                  lastAttachTimestamp:
                    description: Last attach timestamp in RFC3339 text format.
                    type: string
                  lastDetachTimestamp:
                    description: Last detach timestamp in RFC3339 text format.
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  physicalBlockSizeBytes:
                    description: Physical block size of the persistent disk, in bytes.
                      If not present in a request, a default value is used. Currently
                      supported sizes are 4096 and 16384, other sizes may be added
                      in the future. If an unsupported value is requested, the error
                      message will list the supported values for the caller's project.
                    format: int64
                    type: integer
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: A reference to the region where the disk resides.
                    type: string
                  replicaZones:
                    description: URLs of the zones where the disk should be replicated
                      to.
                    items:
                      type: string
                    maxItems: 2
                    minItems: 2
                    type: array
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  size:
                    description: "Size of the persistent disk, specified in GB. You
                      can specify this field when creating a persistent disk using
                      the sourceImage or sourceSnapshot parameter, or specify it alone
                      to create an empty persistent disk. \n If you specify this field
                      along with sourceImage or sourceSnapshot, the value of sizeGb
                      must not be less than the size of the sourceImage or the size
                      of the snapshot."
                    format: int64
                    type: integer
                  snapshot:
                    description: "The source snapshot used to create this disk. You
                      can provide this as a partial or full URL to the resource. For
                      example, the following are valid values: \n * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot'
                      * 'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot'
                      * 'snapshot'"
                    type: string
                  sourceSnapshotEncryptionKey:
                    description: The customer-supplied encryption key of the source
                      snapshot. Required if the source snapshot is protected by a
                      customer-supplied encryption key.
                    properties:
                      rawKey:
                        description: Specifies a 256-bit customer-supplied encryption
                          key, encoded in RFC 4648 base64 to either encrypt or decrypt
                          this resource.
                        type: string
                      sha256:
                        description: The RFC 4648 base64 encoded SHA-256 hash of the
                          customer-supplied encryption key that protects this resource.
                        type: string
                    type: object
                  sourceSnapshotID:
                    description: The unique ID of the snapshot used to create this
                      disk. This value identifies the exact snapshot that was used
                      to create this persistent disk. For example, if you created
                      the persistent disk from a snapshot that was later deleted and
                      recreated under the same name, the source snapshot ID would
                      identify the exact version of the snapshot that was used.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    description: URL of the disk type resource describing which disk
                      type to use to create the disk. Provide this when creating the
                      disk.
                    type: string
                  users:
                    description: 'Links to the users of the disk (attached instances)
                      in form: project/zones/zone/instances/instance'
                    items:
                      type: string
                    type: array
                required:
                - name
                - providerRef
                - replicaZones
                type: object
              labelFingerprint:
                description: The fingerprint used for optimistic locking of this resource.  Used
                  internally during updates.
                type: string
              labels:
                additionalProperties:
                  type: string
                description: Labels to apply to this disk.  A list of key->value pairs.
                type: object
              lastAttachTimestamp:
                description: Last attach timestamp in RFC3339 text format.
                type: string
              lastDetachTimestamp:
                description: Last detach timestamp in RFC3339 text format.
                type: string
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              physicalBlockSizeBytes:
                description: Physical block size of the persistent disk, in bytes.
                  If not present in a request, a default value is used. Currently
                  supported sizes are 4096 and 16384, other sizes may be added in
                  the future. If an unsupported value is requested, the error message
                  will list the supported values for the caller's project.
                format: int64
                type: integer
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: A reference to the region where the disk resides.
                type: string
              replicaZones:
                description: URLs of the zones where the disk should be replicated
                  to.
                items:
                  type: string
                maxItems: 2
                minItems: 2
                type: array
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              size:
                description: "Size of the persistent disk, specified in GB. You can
                  specify this field when creating a persistent disk using the sourceImage
                  or sourceSnapshot parameter, or specify it alone to create an empty
                  persistent disk. \n If you specify this field along with sourceImage
                  or sourceSnapshot, the value of sizeGb must not be less than the
                  size of the sourceImage or the size of the snapshot."
                format: int64
                type: integer
              snapshot:
                description: "The source snapshot used to create this disk. You can
                  provide this as a partial or full URL to the resource. For example,
                  the following are valid values: \n * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot'
                  * 'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot'
                  * 'snapshot'"
                type: string
              sourceSnapshotEncryptionKey:
                description: The customer-supplied encryption key of the source snapshot.
                  Required if the source snapshot is protected by a customer-supplied
                  encryption key.
                properties:
                  rawKey:
                    description: Specifies a 256-bit customer-supplied encryption
                      key, encoded in RFC 4648 base64 to either encrypt or decrypt
                      this resource.
                    type: string
                  sha256:
                    description: The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
                      encryption key that protects this resource.
                    type: string
                type: object
              sourceSnapshotID:
                description: The unique ID of the snapshot used to create this disk.
                  This value identifies the exact snapshot that was used to create
                  this persistent disk. For example, if you created the persistent
                  disk from a snapshot that was later deleted and recreated under
                  the same name, the source snapshot ID would identify the exact version
                  of the snapshot that was used.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              type:
                description: URL of the disk type resource describing which disk type
                  to use to create the disk. Provide this when creating the disk.
                type: string
              users:
                description: 'Links to the users of the disk (attached instances)
                  in form: project/zones/zone/instances/instance'
                items:
                  type: string
                type: array
            required:
            - name
            - providerRef
            - replicaZones
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: instancetemplates.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: InstanceTemplate
    listKind: InstanceTemplateList
    plural: instancetemplates
    singular: instancetemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              canIPForward:
                description: Whether to allow sending and receiving of packets with
                  non-matching source or destination IPs. This defaults to false.
                type: boolean
              confidentialInstanceConfig:
                description: The Confidential VM config being used by the instance.
                  on_host_maintenance has to be set to TERMINATE or this will fail
                  to create.
                properties:
                  enableConfidentialCompute:
                    description: Defines whether the instance should have confidential
                      compute enabled.
                    type: boolean
                required:
                - enableConfidentialCompute
                type: object
              description:
                description: A brief description of this resource.
                type: string
              disk:
                description: Disks to attach to instances created from this template.
                  This can be specified multiple times for multiple disks.
                items:
                  properties:
                    autoDelete:
                      description: Whether or not the disk should be auto-deleted.
                        This defaults to true.
                      type: boolean
                    boot:
                      description: Indicates that this is a boot disk.
                      type: boolean
                    deviceName:
                      description: A unique device name that is reflected into the
                        /dev/ tree of a Linux operating system running within the
                        instance. If not specified, the server chooses a default device
                        name to apply to this disk.
                      type: string
                    diskEncryptionKey:
                      description: Encrypts or decrypts a disk using a customer-supplied
                        encryption key.
                      properties:
                        kmsKeySelfLink:
                          description: The self link of the encryption key that is
                            stored in Google Cloud KMS.
                          type: string
                      required:
                      - kmsKeySelfLink
                      type: object
                    diskName:
                      description: Name of the disk. When not provided, this defaults
                        to the name of the instance.
                      type: string
                    diskSizeGb:
                      description: The size of the image in gigabytes. If not specified,
                        it will inherit the size of its base image. For SCRATCH disks,
                        the size must be exactly 375GB.
                      format: int64
                      type: integer
                    diskType:
                      description: The Google Compute Engine disk type. Can be either
                        "pd-ssd", "local-ssd", "pd-balanced" or "pd-standard".
                      type: string
                    interface:
                      description: Specifies the disk interface to use for attaching
                        this disk.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: A set of key/value label pairs to assign to disks,
                      type: object
                    mode:
                      description: The mode in which to attach this disk, either READ_WRITE
                        or READ_ONLY. If you are attaching or creating a boot disk,
                        this must read-write mode.
                      type: string
                    resourcePolicies:
                      description: A list (short name or id) of resource policies
                        to attach to this disk. Currently a max of 1 resource policy
                        is supported.
                      items:
                        type: string
                      type: array
                    source:
                      description: 'The name (not self_link) of the disk (such as
                        those managed by google_compute_disk) to attach. ~> Note:
                        Either source or source_image is required when creating a
                        new instance except for when creating a local SSD.'
                      type: string
                    sourceImage:
                      description: 'The image from which to initialize this disk.
                        This can be one of: the image''s self_link, projects/{project}/global/images/{image},
                        projects/{project}/global/images/family/{family}, global/images/{image},
                        global/images/family/{family}, family/{family}, {project}/{family},
                        {project}/{image}, {family}, or {image}. ~> Note: Either source
                        or source_image is required when creating a new instance except
                        for when creating a local SSD.'
                      type: string
                    type:
                      description: The type of Google Compute Engine disk, can be
                        either "SCRATCH" or "PERSISTENT".
                      type: string
                  type: object
                type: array
              enableDisplay:
                description: 'Enable Virtual Displays on this instance. Note: allow_stopping_for_update
                  must be set to true in order to update this field.'
                type: boolean
              guestAccelerator:
                description: List of the type and count of accelerator cards attached
                  to the instance.
                items:
                  properties:
                    count:
                      description: The number of the guest accelerator cards exposed
                        to this instance.
                      format: int64
                      type: integer
                    type:
                      description: The accelerator type resource to expose to this
                        instance. E.g. nvidia-tesla-k80.
                      type: string
                  required:
                  - count
                  - type
                  type: object
                type: array
              id:
                type: string
              instanceDescription:
                description: A description of the instance.
                type: string
              kubeformOutput:
                properties:
                  canIPForward:
                    description: Whether to allow sending and receiving of packets
                      with non-matching source or destination IPs. This defaults to
                      false.
                    type: boolean
                  confidentialInstanceConfig:
                    description: The Confidential VM config being used by the instance.
                      on_host_maintenance has to be set to TERMINATE or this will
                      fail to create.
                    properties:
                      enableConfidentialCompute:
                        description: Defines whether the instance should have confidential
                          compute enabled.
                        type: boolean
                    required:
                    - enableConfidentialCompute
                    type: object
                  description:
                    description: A brief description of this resource.
                    type: string
                  disk:
                    description: Disks to attach to instances created from this template.
                      This can be specified multiple times for multiple disks.
                    items:
                      properties:
                        autoDelete:
                          description: Whether or not the disk should be auto-deleted.
                            This defaults to true.
                          type: boolean
                        boot:
                          description: Indicates that this is a boot disk.
                          type: boolean
                        deviceName:
                          description: A unique device name that is reflected into
                            the /dev/ tree of a Linux operating system running within
                            the instance. If not specified, the server chooses a default
                            device name to apply to this disk.
                          type: string
                        diskEncryptionKey:
                          description: Encrypts or decrypts a disk using a customer-supplied
                            encryption key.
                          properties:
                            kmsKeySelfLink:
                              description: The self link of the encryption key that
                                is stored in Google Cloud KMS.
                              type: string
                          required:
                          - kmsKeySelfLink
                          type: object
                        diskName:
                          description: Name of the disk. When not provided, this defaults
                            to the name of the instance.
                          type: string
                        diskSizeGb:
                          description: The size of the image in gigabytes. If not
                            specified, it will inherit the size of its base image.
                            For SCRATCH disks, the size must be exactly 375GB.
                          format: int64
                          type: integer
                        diskType:
                          description: The Google Compute Engine disk type. Can be
                            either "pd-ssd", "local-ssd", "pd-balanced" or "pd-standard".
                          type: string
                        interface:
                          description: Specifies the disk interface to use for attaching
                            this disk.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: A set of key/value label pairs to assign to
                            disks,
                          type: object
                        mode:
                          description: The mode in which to attach this disk, either
                            READ_WRITE or READ_ONLY. If you are attaching or creating
                            a boot disk, this must read-write mode.
                          type: string
                        resourcePolicies:
                          description: A list (short name or id) of resource policies
                            to attach to this disk. Currently a max of 1 resource
                            policy is supported.
                          items:
                            type: string
                          type: array
                        source:
                          description: 'The name (not self_link) of the disk (such
                            as those managed by google_compute_disk) to attach. ~>
                            Note: Either source or source_image is required when creating
                            a new instance except for when creating a local SSD.'
                          type: string
                        sourceImage:
                          description: 'The image from which to initialize this disk.
                            This can be one of: the image''s self_link, projects/{project}/global/images/{image},
                            projects/{project}/global/images/family/{family}, global/images/{image},
                            global/images/family/{family}, family/{family}, {project}/{family},
                            {project}/{image}, {family}, or {image}. ~> Note: Either
                            source or source_image is required when creating a new
                            instance except for when creating a local SSD.'
                          type: string
                        type:
                          description: The type of Google Compute Engine disk, can
                            be either "SCRATCH" or "PERSISTENT".
                          type: string
                      type: object
                    type: array
                  enableDisplay:
                    description: 'Enable Virtual Displays on this instance. Note:
                      allow_stopping_for_update must be set to true in order to update
                      this field.'
                    type: boolean
                  guestAccelerator:
                    description: List of the type and count of accelerator cards attached
                      to the instance.
                    items:
                      properties:
                        count:
                          description: The number of the guest accelerator cards exposed
                            to this instance.
                          format: int64
                          type: integer
                        type:
                          description: The accelerator type resource to expose to
                            this instance. E.g. nvidia-tesla-k80.
                          type: string
                      required:
                      - count
                      - type
                      type: object
                    type: array
                  id:
                    type: string
                  instanceDescription:
                    description: A description of the instance.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to instances
                      created from this template,
                    type: object
                  machineType:
                    description: The machine type to create. To create a machine with
                      a custom type (such as extended memory), format the value like
                      custom-VCPUS-MEM_IN_MB like custom-6-20480 for 6 vCPU and 20GB
                      of RAM.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: Metadata key/value pairs to make available from within
                      instances created from this template.
                    type: object
                  metadataFingerprint:
                    description: The unique fingerprint of the metadata.
                    type: string
                  metadataStartupScript:
                    description: An alternative to using the startup-script metadata
                      key, mostly to match the compute_instance resource. This replaces
                      the startup-script metadata key on the created instance and
                      thus the two mechanisms are not allowed to be used simultaneously.
                    type: string
                  minCPUPlatform:
                    description: Specifies a minimum CPU platform. Applicable values
                      are the friendly names of CPU platforms, such as Intel Haswell
                      or Intel Skylake.
                    type: string
                  name:
                    description: The name of the instance template. If you leave this
                      blank, Terraform will auto-generate a unique name.
                    type: string
                  namePrefix:
                    description: Creates a unique name beginning with the specified
                      prefix. Conflicts with name.
                    type: string
                  networkInterface:
                    description: Networks to attach to instances created from this
                      template. This can be specified multiple times for multiple
                      networks.
                    items:
                      properties:
                        accessConfig:
                          description: Access configurations, i.e. IPs via which this
                            instance can be accessed via the Internet. Omit to ensure
                            that the instance is not accessible from the Internet
                            (this means that ssh provisioners will not work unless
                            you are running Terraform can send traffic to the instance's
                            network (e.g. via tunnel or because it is running on another
                            cloud instance on that network). This block can be repeated
                            multiple times.
                          items:
                            properties:
                              natIP:
                                description: The IP address that will be 1:1 mapped
                                  to the instance's network ip. If not given, one
                                  will be generated.
                                type: string
                              networkTier:
                                description: 'The networking tier used for configuring
                                  this instance template. This field can take the
                                  following values: PREMIUM or STANDARD. If this field
                                  is not specified, it is assumed to be PREMIUM.'
                                type: string
                              publicPtrDomainName:
                                description: The DNS domain name for the public PTR
                                  record.The DNS domain name for the public PTR record.
                                type: string
                            type: object
                          type: array
                        aliasIPRange:
                          description: An array of alias IP ranges for this network
                            interface. Can only be specified for network interfaces
                            on subnet-mode networks.
                          items:
                            properties:
                              ipCIDRRange:
                                description: The IP CIDR range represented by this
                                  alias IP range. This IP CIDR range must belong to
                                  the specified subnetwork and cannot contain IP addresses
                                  reserved by system or used by other network interfaces.
                                  At the time of writing only a netmask (e.g. /24)
                                  may be supplied, with a CIDR format resulting in
                                  an API error.
                                type: string
                              subnetworkRangeName:
                                description: The subnetwork secondary range name specifying
                                  the secondary range from which to allocate the IP
                                  CIDR range for this alias IP range. If left unspecified,
                                  the primary range of the subnetwork will be used.
                                type: string
                            required:
                            - ipCIDRRange
                            type: object
                          type: array
                        name:
                          description: The name of the network_interface.
                          type: string
                        network:
                          description: The name or self_link of the network to attach
                            this interface to. Use network attribute for Legacy or
                            Auto subnetted networks and subnetwork for custom subnetted
                            networks.
                          type: string
                        networkIP:
                          description: The private IP address to assign to the instance.
                            If empty, the address will be automatically assigned.
                          type: string
                        nicType:
                          description: The type of vNIC to be used on this interface.
                            Possible values:GVNIC, VIRTIO_NET
                          type: string
                        subnetwork:
                          description: The name of the subnetwork to attach this interface
                            to. The subnetwork must exist in the same region this
                            instance will be created in. Either network or subnetwork
                            must be provided.
                          type: string
                        subnetworkProject:
                          description: The ID of the project in which the subnetwork
                            belongs. If it is not provided, the provider project is
                            used.
                          type: string
                      type: object
                    type: array
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: An instance template is a global resource that is
                      not bound to a zone or a region. However, you can still specify
                      some regional resources in an instance template, which restricts
                      the template to the region where that resource resides. For
                      example, a custom subnetwork resource is tied to a specific
                      region. Defaults to the region of the Provider if no value is
                      given.
                    type: string
                  scheduling:
                    description: The scheduling strategy to use.
                    properties:
                      automaticRestart:
                        description: Specifies whether the instance should be automatically
                          restarted if it is terminated by Compute Engine (not terminated
                          by a user). This defaults to true.
                        type: boolean
                      minNodeCpus:
                        description: Minimum number of cpus for the instance.
                        format: int64
                        type: integer
                      nodeAffinities:
                        description: Specifies node affinities or anti-affinities
                          to determine which sole-tenant nodes your instances and
                          managed instance groups will use as host systems.
                        items:
                          properties:
                            key:
                              type: string
                            operator:
                              type: string
                            values:
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          - values
                          type: object
                        type: array
                      onHostMaintenance:
                        description: Defines the maintenance behavior for this instance.
                        type: string
                      preemptible:
                        description: Allows instance to be preempted. This defaults
                          to false.
                        type: boolean
                    type: object
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                  serviceAccount:
                    description: Service account to attach to the instance.
                    properties:
                      email:
                        description: The service account e-mail address. If not given,
                          the default Google Compute Engine service account is used.
                        type: string
                      scopes:
                        description: A list of service scopes. Both OAuth2 URLs and
                          gcloud short names are supported. To allow full access to
                          all Cloud APIs, use the cloud-platform scope.
                        items:
                          type: string
                        type: array
                    required:
                    - scopes
                    type: object
                  shieldedInstanceConfig:
                    description: 'Enable Shielded VM on this instance. Shielded VM
                      provides verifiable integrity to prevent against malware and
                      rootkits. Defaults to disabled. Note: shielded_instance_config
                      can only be used with boot images with shielded vm support.'
                    properties:
                      enableIntegrityMonitoring:
                        description: Compare the most recent boot measurements to
                          the integrity policy baseline and return a pair of pass/fail
                          results depending on whether they match or not. Defaults
                          to true.
                        type: boolean
                      enableSecureBoot:
                        description: Verify the digital signature of all boot components,
                          and halt the boot process if signature verification fails.
                          Defaults to false.
                        type: boolean
                      enableVtpm:
                        description: Use a virtualized trusted platform module, which
                          is a specialized computer chip you can use to encrypt objects
                          like keys and certificates. Defaults to true.
                        type: boolean
                    type: object
                  tags:
                    description: Tags to attach to the instance.
                    items:
                      type: string
                    type: array
                  tagsFingerprint:
                    description: The unique fingerprint of the tags.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - disk
                - machineType
                - providerRef
                type: object
              labels:
                additionalProperties:
                  type: string
                description: A set of key/value label pairs to assign to instances
                  created from this template,
                type: object
              machineType:
                description: The machine type to create. To create a machine with
                  a custom type (such as extended memory), format the value like custom-VCPUS-MEM_IN_MB
                  like custom-6-20480 for 6 vCPU and 20GB of RAM.
                type: string
              metadata:
                additionalProperties:
                  type: string
                description: Metadata key/value pairs to make available from within
                  instances created from this template.
                type: object
              metadataFingerprint:
                description: The unique fingerprint of the metadata.
                type: string
              metadataStartupScript:
                description: An alternative to using the startup-script metadata key,
                  mostly to match the compute_instance resource. This replaces the
                  startup-script metadata key on the created instance and thus the
                  two mechanisms are not allowed to be used simultaneously.
                type: string
              minCPUPlatform:
                description: Specifies a minimum CPU platform. Applicable values are
                  the friendly names of CPU platforms, such as Intel Haswell or Intel
                  Skylake.
                type: string
              name:
                description: The name of the instance template. If you leave this
                  blank, Terraform will auto-generate a unique name.
                type: string
              namePrefix:
                description: Creates a unique name beginning with the specified prefix.
                  Conflicts with name.
                type: string
              networkInterface:
                description: Networks to attach to instances created from this template.
                  This can be specified multiple times for multiple networks.
                items:
                  properties:
                    accessConfig:
                      description: Access configurations, i.e. IPs via which this
                        instance can be accessed via the Internet. Omit to ensure
                        that the instance is not accessible from the Internet (this
                        means that ssh provisioners will not work unless you are running
                        Terraform can send traffic to the instance's network (e.g.
                        via tunnel or because it is running on another cloud instance
                        on that network). This block can be repeated multiple times.
                      items:
                        properties:
                          natIP:
                            description: The IP address that will be 1:1 mapped to
                              the instance's network ip. If not given, one will be
                              generated.
                            type: string
                          networkTier:
                            description: 'The networking tier used for configuring
                              this instance template. This field can take the following
                              values: PREMIUM or STANDARD. If this field is not specified,
                              it is assumed to be PREMIUM.'
                            type: string
                          publicPtrDomainName:
                            description: The DNS domain name for the public PTR record.The
                              DNS domain name for the public PTR record.
                            type: string
                        type: object
                      type: array
                    aliasIPRange:
                      description: An array of alias IP ranges for this network interface.
                        Can only be specified for network interfaces on subnet-mode
                        networks.
                      items:
                        properties:
                          ipCIDRRange:
                            description: The IP CIDR range represented by this alias
                              IP range. This IP CIDR range must belong to the specified
                              subnetwork and cannot contain IP addresses reserved
                              by system or used by other network interfaces. At the
                              time of writing only a netmask (e.g. /24) may be supplied,
                              with a CIDR format resulting in an API error.
                            type: string
                          subnetworkRangeName:
                            description: The subnetwork secondary range name specifying
                              the secondary range from which to allocate the IP CIDR
                              range for this alias IP range. If left unspecified,
                              the primary range of the subnetwork will be used.
                            type: string
                        required:
                        - ipCIDRRange
                        type: object
                      type: array
                    name:
                      description: The name of the network_interface.
                      type: string
                    network:
                      description: The name or self_link of the network to attach
                        this interface to. Use network attribute for Legacy or Auto
                        subnetted networks and subnetwork for custom subnetted networks.
                      type: string
                    networkIP:
                      description: The private IP address to assign to the instance.
                        If empty, the address will be automatically assigned.
                      type: string
                    nicType:
                      description: The type of vNIC to be used on this interface.
                        Possible values:GVNIC, VIRTIO_NET
                      type: string
                    subnetwork:
                      description: The name of the subnetwork to attach this interface
                        to. The subnetwork must exist in the same region this instance
                        will be created in. Either network or subnetwork must be provided.
                      type: string
                    subnetworkProject:
                      description: The ID of the project in which the subnetwork belongs.
                        If it is not provided, the provider project is used.
                      type: string
                  type: object
                type: array
              project:
                description: The ID of the project in which the resource belongs.
                  If it is not provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: An instance template is a global resource that is not
                  bound to a zone or a region. However, you can still specify some
                  regional resources in an instance template, which restricts the
                  template to the region where that resource resides. For example,
                  a custom subnetwork resource is tied to a specific region. Defaults
                  to the region of the Provider if no value is given.
                type: string
              scheduling:
                description: The scheduling strategy to use.
                properties:
                  automaticRestart:
                    description: Specifies whether the instance should be automatically
                      restarted if it is terminated by Compute Engine (not terminated
                      by a user). This defaults to true.
                    type: boolean
                  minNodeCpus:
                    description: Minimum number of cpus for the instance.
                    format: int64
                    type: integer
                  nodeAffinities:
                    description: Specifies node affinities or anti-affinities to determine
                      which sole-tenant nodes your instances and managed instance
                      groups will use as host systems.
                    items:
                      properties:
                        key:
                          type: string
                        operator:
                          type: string
                        values:
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      - values
                      type: object
                    type: array
                  onHostMaintenance:
                    description: Defines the maintenance behavior for this instance.
                    type: string
                  preemptible:
                    description: Allows instance to be preempted. This defaults to
                      false.
                    type: boolean
                type: object
              selfLink:
                description: The URI of the created resource.
                type: string
              serviceAccount:
                description: Service account to attach to the instance.
                properties:
                  email:
                    description: The service account e-mail address. If not given,
                      the default Google Compute Engine service account is used.
                    type: string
                  scopes:
                    description: A list of service scopes. Both OAuth2 URLs and gcloud
                      short names are supported. To allow full access to all Cloud
                      APIs, use the cloud-platform scope.
                    items:
                      type: string
                    type: array
                required:
                - scopes
                type: object
              shieldedInstanceConfig:
                description: 'Enable Shielded VM on this instance. Shielded VM provides
                  verifiable integrity to prevent against malware and rootkits. Defaults
                  to disabled. Note: shielded_instance_config can only be used with
                  boot images with shielded vm support.'
                properties:
                  enableIntegrityMonitoring:
                    description: Compare the most recent boot measurements to the
                      integrity policy baseline and return a pair of pass/fail results
                      depending on whether they match or not. Defaults to true.
                    type: boolean
                  enableSecureBoot:
                    description: Verify the digital signature of all boot components,
                      and halt the boot process if signature verification fails. Defaults
                      to false.
                    type: boolean
                  enableVtpm:
                    description: Use a virtualized trusted platform module, which
                      is a specialized computer chip you can use to encrypt objects
                      like keys and certificates. Defaults to true.
                    type: boolean
                type: object
              tags:
                description: Tags to attach to the instance.
                items:
                  type: string
                type: array
              tagsFingerprint:
                description: The unique fingerprint of the tags.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - disk
            - machineType
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: regiondiskiammembers.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RegionDiskIamMember
    listKind: RegionDiskIamMemberList
    plural: regiondiskiammembers
    singular: regiondiskiammember
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  member:
                    type: string
                  name:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    type: string
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - member
                - name
                - providerRef
                - role
                type: object
              member:
                type: string
              name:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                type: string
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - member
            - name
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: sslpolicies.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: SslPolicy
    listKind: SslPolicyList
    plural: sslpolicies
    singular: sslpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              customFeatures:
                description: "Profile specifies the set of SSL features that can be
                  used by the load balancer when negotiating SSL with clients. This
                  can be one of 'COMPATIBLE', 'MODERN', 'RESTRICTED', or 'CUSTOM'.
                  If using 'CUSTOM', the set of SSL features to enable must be specified
                  in the 'customFeatures' field. \n See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
                  for which ciphers are available to use. **Note**: this argument
                  *must* be present when using the 'CUSTOM' profile. This argument
                  *must not* be present when using any other profile."
                items:
                  type: string
                type: array
              description:
                description: An optional description of this resource.
                type: string
              enabledFeatures:
                description: The list of features enabled in the SSL policy.
                items:
                  type: string
                type: array
              fingerprint:
                description: Fingerprint of this resource. A hash of the contents
                  stored in this object. This field is used in optimistic locking.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  customFeatures:
                    description: "Profile specifies the set of SSL features that can
                      be used by the load balancer when negotiating SSL with clients.
                      This can be one of 'COMPATIBLE', 'MODERN', 'RESTRICTED', or
                      'CUSTOM'. If using 'CUSTOM', the set of SSL features to enable
                      must be specified in the 'customFeatures' field. \n See the
                      [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
                      for which ciphers are available to use. **Note**: this argument
                      *must* be present when using the 'CUSTOM' profile. This argument
                      *must not* be present when using any other profile."
                    items:
                      type: string
                    type: array
                  description:
                    description: An optional description of this resource.
                    type: string
                  enabledFeatures:
                    description: The list of features enabled in the SSL policy.
                    items:
                      type: string
                    type: array
                  fingerprint:
                    description: Fingerprint of this resource. A hash of the contents
                      stored in this object. This field is used in optimistic locking.
                    type: string
                  id:
                    type: string
                  minTLSVersion:
                    description: 'The minimum version of SSL protocol that can be
                      used by the clients to establish a connection with the load
                      balancer. Default value: "TLS_1_0" Possible values: ["TLS_1_0",
                      "TLS_1_1", "TLS_1_2"]'
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  profile:
                    description: "Profile specifies the set of SSL features that can
                      be used by the load balancer when negotiating SSL with clients.
                      If using 'CUSTOM', the set of SSL features to enable must be
                      specified in the 'customFeatures' field. \n See the [official
                      documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
                      for information on what cipher suites each profile provides.
                      If 'CUSTOM' is used, the 'custom_features' attribute **must
                      be set**. Default value: \"COMPATIBLE\" Possible values: [\"COMPATIBLE\",
                      \"MODERN\", \"RESTRICTED\", \"CUSTOM\"]"
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                type: object
              minTLSVersion:
                description: 'The minimum version of SSL protocol that can be used
                  by the clients to establish a connection with the load balancer.
                  Default value: "TLS_1_0" Possible values: ["TLS_1_0", "TLS_1_1",
                  "TLS_1_2"]'
                type: string
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              profile:
                description: "Profile specifies the set of SSL features that can be
                  used by the load balancer when negotiating SSL with clients. If
                  using 'CUSTOM', the set of SSL features to enable must be specified
                  in the 'customFeatures' field. \n See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
                  for information on what cipher suites each profile provides. If
                  'CUSTOM' is used, the 'custom_features' attribute **must be set**.
                  Default value: \"COMPATIBLE\" Possible values: [\"COMPATIBLE\",
                  \"MODERN\", \"RESTRICTED\", \"CUSTOM\"]"
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: sslcertificates.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: SslCertificate
    listKind: SslCertificateList
    plural: sslcertificates
    singular: sslcertificate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              certificateID:
                description: The unique identifier for the resource.
                format: int64
                type: integer
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  certificateID:
                    description: The unique identifier for the resource.
                    format: int64
                    type: integer
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: "Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                      \n These are in the same namespace as the managed SSL certificates."
                    type: string
                  namePrefix:
                    description: Creates a unique name beginning with the specified
                      prefix. Conflicts with name.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - providerRef
                type: object
              name:
                description: "Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash. \n These are
                  in the same namespace as the managed SSL certificates."
                type: string
              namePrefix:
                description: Creates a unique name beginning with the specified prefix.
                  Conflicts with name.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: regionhealthchecks.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RegionHealthCheck
    listKind: RegionHealthCheckList
    plural: regionhealthchecks
    singular: regionhealthcheck
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              checkIntervalSec:
                description: How often (in seconds) to send a health check. The default
                  value is 5 seconds.
                format: int64
                type: integer
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              grpcHealthCheck:
                description: A nested object resource
                properties:
                  grpcServiceName:
                    description: "The gRPC service name for the health check. The
                      value of grpcServiceName has the following meanings by convention:
                      \n * Empty serviceName means the overall status of all services
                      at the backend. * Non-empty serviceName means the health of
                      that gRPC service, as defined by the owner of the service. \n
                      The grpcServiceName can only be ASCII."
                    type: string
                  port:
                    description: The port number for the health check request. Must
                      be specified if portName and portSpecification are not set or
                      if port_specification is USE_FIXED_PORT. Valid values are 1
                      through 65535.
                    format: int64
                    type: integer
                  portName:
                    description: Port name as defined in InstanceGroup#NamedPort#name.
                      If both port and port_name are defined, port takes precedence.
                    type: string
                  portSpecification:
                    description: "Specifies how port is selected for health checking,
                      can be one of the following values: \n   * 'USE_FIXED_PORT':
                      The port number in 'port' is used for health checking. \n   *
                      'USE_NAMED_PORT': The 'portName' is used for health checking.
                      \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port
                      specified for each   network endpoint is used for health checking.
                      For other backends, the   port or named port specified in the
                      Backend Service is used for health   checking. \n If not specified,
                      gRPC health check follows behavior specified in 'port' and 'portName'
                      fields. Possible values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\",
                      \"USE_SERVING_PORT\"]"
                    type: string
                type: object
              healthyThreshold:
                description: A so-far unhealthy instance will be marked healthy after
                  this many consecutive successes. The default value is 2.
                format: int64
                type: integer
              http2HealthCheck:
                description: A nested object resource
                properties:
                  host:
                    description: The value of the host header in the HTTP2 health
                      check request. If left empty (default value), the public IP
                      on behalf of which this health check is performed will be used.
                    type: string
                  port:
                    description: The TCP port number for the HTTP2 health check request.
                      The default value is 443.
                    format: int64
                    type: integer
                  portName:
                    description: Port name as defined in InstanceGroup#NamedPort#name.
                      If both port and port_name are defined, port takes precedence.
                    type: string
                  portSpecification:
                    description: "Specifies how port is selected for health checking,
                      can be one of the following values: \n   * 'USE_FIXED_PORT':
                      The port number in 'port' is used for health checking. \n   *
                      'USE_NAMED_PORT': The 'portName' is used for health checking.
                      \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port
                      specified for each   network endpoint is used for health checking.
                      For other backends, the   port or named port specified in the
                      Backend Service is used for health   checking. \n If not specified,
                      HTTP2 health check follows behavior specified in 'port' and
                      'portName' fields. Possible values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\",
                      \"USE_SERVING_PORT\"]"
                    type: string
                  proxyHeader:
                    description: 'Specifies the type of proxy header to append before
                      sending data to the backend. Default value: "NONE" Possible
                      values: ["NONE", "PROXY_V1"]'
                    type: string
                  requestPath:
                    description: The request path of the HTTP2 health check request.
                      The default value is /.
                    type: string
                  response:
                    description: The bytes to match against the beginning of the response
                      data. If left empty (the default value), any response will indicate
                      health. The response data can only be ASCII.
                    type: string
                type: object
              httpHealthCheck:
                description: A nested object resource
                properties:
                  host:
                    description: The value of the host header in the HTTP health check
                      request. If left empty (default value), the public IP on behalf
                      of which this health check is performed will be used.
                    type: string
                  port:
                    description: The TCP port number for the HTTP health check request.
                      The default value is 80.
                    format: int64
                    type: integer
                  portName:
                    description: Port name as defined in InstanceGroup#NamedPort#name.
                      If both port and port_name are defined, port takes precedence.
                    type: string
                  portSpecification:
                    description: "Specifies how port is selected for health checking,
                      can be one of the following values: \n   * 'USE_FIXED_PORT':
                      The port number in 'port' is used for health checking. \n   *
                      'USE_NAMED_PORT': The 'portName' is used for health checking.
                      \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port
                      specified for each   network endpoint is used for health checking.
                      For other backends, the   port or named port specified in the
                      Backend Service is used for health   checking. \n If not specified,
                      HTTP health check follows behavior specified in 'port' and 'portName'
                      fields. Possible values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\",
                      \"USE_SERVING_PORT\"]"
                    type: string
                  proxyHeader:
                    description: 'Specifies the type of proxy header to append before
                      sending data to the backend. Default value: "NONE" Possible
                      values: ["NONE", "PROXY_V1"]'
                    type: string
                  requestPath:
                    description: The request path of the HTTP health check request.
                      The default value is /.
                    type: string
                  response:
                    description: The bytes to match against the beginning of the response
                      data. If left empty (the default value), any response will indicate
                      health. The response data can only be ASCII.
                    type: string
                type: object
              httpsHealthCheck:
                description: A nested object resource
                properties:
                  host:
                    description: The value of the host header in the HTTPS health
                      check request. If left empty (default value), the public IP
                      on behalf of which this health check is performed will be used.
                    type: string
                  port:
                    description: The TCP port number for the HTTPS health check request.
                      The default value is 443.
                    format: int64
                    type: integer
                  portName:
                    description: Port name as defined in InstanceGroup#NamedPort#name.
                      If both port and port_name are defined, port takes precedence.
                    type: string
                  portSpecification:
                    description: "Specifies how port is selected for health checking,
                      can be one of the following values: \n   * 'USE_FIXED_PORT':
                      The port number in 'port' is used for health checking. \n   *
                      'USE_NAMED_PORT': The 'portName' is used for health checking.
                      \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port
                      specified for each   network endpoint is used for health checking.
                      For other backends, the   port or named port specified in the
                      Backend Service is used for health   checking. \n If not specified,
                      HTTPS health check follows behavior specified in 'port' and
                      'portName' fields. Possible values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\",
                      \"USE_SERVING_PORT\"]"
                    type: string
                  proxyHeader:
                    description: 'Specifies the type of proxy header to append before
                      sending data to the backend. Default value: "NONE" Possible
                      values: ["NONE", "PROXY_V1"]'
                    type: string
                  requestPath:
                    description: The request path of the HTTPS health check request.
                      The default value is /.
                    type: string
                  response:
                    description: The bytes to match against the beginning of the response
                      data. If left empty (the default value), any response will indicate
                      health. The response data can only be ASCII.
                    type: string
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  checkIntervalSec:
                    description: How often (in seconds) to send a health check. The
                      default value is 5 seconds.
                    format: int64
                    type: integer
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  grpcHealthCheck:
                    description: A nested object resource
                    properties:
                      grpcServiceName:
                        description: "The gRPC service name for the health check.
                          The value of grpcServiceName has the following meanings
                          by convention: \n * Empty serviceName means the overall
                          status of all services at the backend. * Non-empty serviceName
                          means the health of that gRPC service, as defined by the
                          owner of the service. \n The grpcServiceName can only be
                          ASCII."
                        type: string
                      port:
                        description: The port number for the health check request.
                          Must be specified if portName and portSpecification are
                          not set or if port_specification is USE_FIXED_PORT. Valid
                          values are 1 through 65535.
                        format: int64
                        type: integer
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name.
                          If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: "Specifies how port is selected for health checking,
                          can be one of the following values: \n   * 'USE_FIXED_PORT':
                          The port number in 'port' is used for health checking. \n
                          \  * 'USE_NAMED_PORT': The 'portName' is used for health
                          checking. \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup,
                          the port specified for each   network endpoint is used for
                          health checking. For other backends, the   port or named
                          port specified in the Backend Service is used for health
                          \  checking. \n If not specified, gRPC health check follows
                          behavior specified in 'port' and 'portName' fields. Possible
                          values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"]"
                        type: string
                    type: object
                  healthyThreshold:
                    description: A so-far unhealthy instance will be marked healthy
                      after this many consecutive successes. The default value is
                      2.
                    format: int64
                    type: integer
                  http2HealthCheck:
                    description: A nested object resource
                    properties:
                      host:
                        description: The value of the host header in the HTTP2 health
                          check request. If left empty (default value), the public
                          IP on behalf of which this health check is performed will
                          be used.
                        type: string
                      port:
                        description: The TCP port number for the HTTP2 health check
                          request. The default value is 443.
                        format: int64
                        type: integer
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name.
                          If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: "Specifies how port is selected for health checking,
                          can be one of the following values: \n   * 'USE_FIXED_PORT':
                          The port number in 'port' is used for health checking. \n
                          \  * 'USE_NAMED_PORT': The 'portName' is used for health
                          checking. \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup,
                          the port specified for each   network endpoint is used for
                          health checking. For other backends, the   port or named
                          port specified in the Backend Service is used for health
                          \  checking. \n If not specified, HTTP2 health check follows
                          behavior specified in 'port' and 'portName' fields. Possible
                          values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"]"
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append
                          before sending data to the backend. Default value: "NONE"
                          Possible values: ["NONE", "PROXY_V1"]'
                        type: string
                      requestPath:
                        description: The request path of the HTTP2 health check request.
                          The default value is /.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the
                          response data. If left empty (the default value), any response
                          will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  httpHealthCheck:
                    description: A nested object resource
                    properties:
                      host:
                        description: The value of the host header in the HTTP health
                          check request. If left empty (default value), the public
                          IP on behalf of which this health check is performed will
                          be used.
                        type: string
                      port:
                        description: The TCP port number for the HTTP health check
                          request. The default value is 80.
                        format: int64
                        type: integer
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name.
                          If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: "Specifies how port is selected for health checking,
                          can be one of the following values: \n   * 'USE_FIXED_PORT':
                          The port number in 'port' is used for health checking. \n
                          \  * 'USE_NAMED_PORT': The 'portName' is used for health
                          checking. \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup,
                          the port specified for each   network endpoint is used for
                          health checking. For other backends, the   port or named
                          port specified in the Backend Service is used for health
                          \  checking. \n If not specified, HTTP health check follows
                          behavior specified in 'port' and 'portName' fields. Possible
                          values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"]"
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append
                          before sending data to the backend. Default value: "NONE"
                          Possible values: ["NONE", "PROXY_V1"]'
                        type: string
                      requestPath:
                        description: The request path of the HTTP health check request.
                          The default value is /.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the
                          response data. If left empty (the default value), any response
                          will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  httpsHealthCheck:
                    description: A nested object resource
                    properties:
                      host:
                        description: The value of the host header in the HTTPS health
                          check request. If left empty (default value), the public
                          IP on behalf of which this health check is performed will
                          be used.
                        type: string
                      port:
                        description: The TCP port number for the HTTPS health check
                          request. The default value is 443.
                        format: int64
                        type: integer
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name.
                          If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: "Specifies how port is selected for health checking,
                          can be one of the following values: \n   * 'USE_FIXED_PORT':
                          The port number in 'port' is used for health checking. \n
                          \  * 'USE_NAMED_PORT': The 'portName' is used for health
                          checking. \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup,
                          the port specified for each   network endpoint is used for
                          health checking. For other backends, the   port or named
                          port specified in the Backend Service is used for health
                          \  checking. \n If not specified, HTTPS health check follows
                          behavior specified in 'port' and 'portName' fields. Possible
                          values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"]"
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append
                          before sending data to the backend. Default value: "NONE"
                          Possible values: ["NONE", "PROXY_V1"]'
                        type: string
                      requestPath:
                        description: The request path of the HTTPS health check request.
                          The default value is /.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the
                          response data. If left empty (the default value), any response
                          will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035.  Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: The Region in which the created health check should
                      reside. If it is not provided, the provider region is used.
                    type: string
                  selfLink:
                    type: string
                  sslHealthCheck:
                    description: A nested object resource
                    properties:
                      port:
                        description: The TCP port number for the SSL health check
                          request. The default value is 443.
                        format: int64
                        type: integer
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name.
                          If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: "Specifies how port is selected for health checking,
                          can be one of the following values: \n   * 'USE_FIXED_PORT':
                          The port number in 'port' is used for health checking. \n
                          \  * 'USE_NAMED_PORT': The 'portName' is used for health
                          checking. \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup,
                          the port specified for each   network endpoint is used for
                          health checking. For other backends, the   port or named
                          port specified in the Backend Service is used for health
                          \  checking. \n If not specified, SSL health check follows
                          behavior specified in 'port' and 'portName' fields. Possible
                          values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"]"
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append
                          before sending data to the backend. Default value: "NONE"
                          Possible values: ["NONE", "PROXY_V1"]'
                        type: string
                      request:
                        description: The application data to send once the SSL connection
                          has been established (default value is empty). If both request
                          and response are empty, the connection establishment alone
                          will indicate health. The request data can only be ASCII.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the
                          response data. If left empty (the default value), any response
                          will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  tcpHealthCheck:
                    description: A nested object resource
                    properties:
                      port:
                        description: The TCP port number for the TCP health check
                          request. The default value is 80.
                        format: int64
                        type: integer
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name.
                          If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: "Specifies how port is selected for health checking,
                          can be one of the following values: \n   * 'USE_FIXED_PORT':
                          The port number in 'port' is used for health checking. \n
                          \  * 'USE_NAMED_PORT': The 'portName' is used for health
                          checking. \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup,
                          the port specified for each   network endpoint is used for
                          health checking. For other backends, the   port or named
                          port specified in the Backend Service is used for health
                          \  checking. \n If not specified, TCP health check follows
                          behavior specified in 'port' and 'portName' fields. Possible
                          values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"]"
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append
                          before sending data to the backend. Default value: "NONE"
                          Possible values: ["NONE", "PROXY_V1"]'
                        type: string
                      request:
                        description: The application data to send once the TCP connection
                          has been established (default value is empty). If both request
                          and response are empty, the connection establishment alone
                          will indicate health. The request data can only be ASCII.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the
                          response data. If left empty (the default value), any response
                          will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeoutSec:
                    description: How long (in seconds) to wait before claiming failure.
                      The default value is 5 seconds.  It is invalid for timeoutSec
                      to have greater value than checkIntervalSec.
                    format: int64
                    type: integer
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    description: The type of the health check. One of HTTP, HTTP2,
                      HTTPS, TCP, or SSL.
                    type: string
                  unhealthyThreshold:
                    description: A so-far healthy instance will be marked unhealthy
                      after this many consecutive failures. The default value is 2.
                    format: int64
                    type: integer
                required:
                - name
                - providerRef
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.  Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: The Region in which the created health check should reside.
                  If it is not provided, the provider region is used.
                type: string
              selfLink:
                type: string
              sslHealthCheck:
                description: A nested object resource
                properties:
                  port:
                    description: The TCP port number for the SSL health check request.
                      The default value is 443.
                    format: int64
                    type: integer
                  portName:
                    description: Port name as defined in InstanceGroup#NamedPort#name.
                      If both port and port_name are defined, port takes precedence.
                    type: string
                  portSpecification:
                    description: "Specifies how port is selected for health checking,
                      can be one of the following values: \n   * 'USE_FIXED_PORT':
                      The port number in 'port' is used for health checking. \n   *
                      'USE_NAMED_PORT': The 'portName' is used for health checking.
                      \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port
                      specified for each   network endpoint is used for health checking.
                      For other backends, the   port or named port specified in the
                      Backend Service is used for health   checking. \n If not specified,
                      SSL health check follows behavior specified in 'port' and 'portName'
                      fields. Possible values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\",
                      \"USE_SERVING_PORT\"]"
                    type: string
                  proxyHeader:
                    description: 'Specifies the type of proxy header to append before
                      sending data to the backend. Default value: "NONE" Possible
                      values: ["NONE", "PROXY_V1"]'
                    type: string
                  request:
                    description: The application data to send once the SSL connection
                      has been established (default value is empty). If both request
                      and response are empty, the connection establishment alone will
                      indicate health. The request data can only be ASCII.
                    type: string
                  response:
                    description: The bytes to match against the beginning of the response
                      data. If left empty (the default value), any response will indicate
                      health. The response data can only be ASCII.
                    type: string
                type: object
              tcpHealthCheck:
                description: A nested object resource
                properties:
                  port:
                    description: The TCP port number for the TCP health check request.
                      The default value is 80.
                    format: int64
                    type: integer
                  portName:
                    description: Port name as defined in InstanceGroup#NamedPort#name.
                      If both port and port_name are defined, port takes precedence.
                    type: string
                  portSpecification:
                    description: "Specifies how port is selected for health checking,
                      can be one of the following values: \n   * 'USE_FIXED_PORT':
                      The port number in 'port' is used for health checking. \n   *
                      'USE_NAMED_PORT': The 'portName' is used for health checking.
                      \n   * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port
                      specified for each   network endpoint is used for health checking.
                      For other backends, the   port or named port specified in the
                      Backend Service is used for health   checking. \n If not specified,
                      TCP health check follows behavior specified in 'port' and 'portName'
                      fields. Possible values: [\"USE_FIXED_PORT\", \"USE_NAMED_PORT\",
                      \"USE_SERVING_PORT\"]"
                    type: string
                  proxyHeader:
                    description: 'Specifies the type of proxy header to append before
                      sending data to the backend. Default value: "NONE" Possible
                      values: ["NONE", "PROXY_V1"]'
                    type: string
                  request:
                    description: The application data to send once the TCP connection
                      has been established (default value is empty). If both request
                      and response are empty, the connection establishment alone will
                      indicate health. The request data can only be ASCII.
                    type: string
                  response:
                    description: The bytes to match against the beginning of the response
                      data. If left empty (the default value), any response will indicate
                      health. The response data can only be ASCII.
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeoutSec:
                description: How long (in seconds) to wait before claiming failure.
                  The default value is 5 seconds.  It is invalid for timeoutSec to
                  have greater value than checkIntervalSec.
                format: int64
                type: integer
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              type:
                description: The type of the health check. One of HTTP, HTTP2, HTTPS,
                  TCP, or SSL.
                type: string
              unhealthyThreshold:
                description: A so-far healthy instance will be marked unhealthy after
                  this many consecutive failures. The default value is 2.
                format: int64
                type: integer
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: instanceiambindings.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: InstanceIamBinding
    listKind: InstanceIamBindingList
    plural: instanceiambindings
    singular: instanceiambinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              instanceName:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  instanceName:
                    type: string
                  members:
                    items:
                      type: string
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  zone:
                    type: string
                required:
                - instanceName
                - members
                - providerRef
                - role
                type: object
              members:
                items:
                  type: string
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              zone:
                type: string
            required:
            - instanceName
            - members
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: regionbackendservices.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RegionBackendService
    listKind: RegionBackendServiceList
    plural: regionbackendservices
    singular: regionbackendservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              affinityCookieTtlSec:
                description: "Lifetime of cookies in seconds if session_affinity is
                  GENERATED_COOKIE. If set to 0, the cookie is non-persistent and
                  lasts only until the end of the browser session (or equivalent).
                  The maximum allowed value for TTL is one day. \n When the load balancing
                  scheme is INTERNAL, this field is not used."
                format: int64
                type: integer
              backend:
                description: The set of backends that serve this RegionBackendService.
                items:
                  properties:
                    balancingMode:
                      description: 'Specifies the balancing mode for this backend.
                        Default value: "CONNECTION" Possible values: ["UTILIZATION",
                        "RATE", "CONNECTION"]'
                      type: string
                    capacityScaler:
                      description: "A multiplier applied to the group's maximum servicing
                        capacity (based on UTILIZATION, RATE or CONNECTION). \n ~>**NOTE**:
                        This field cannot be set for INTERNAL region backend services
                        (default loadBalancingScheme), but is required for non-INTERNAL
                        backend service. The total capacity_scaler for all backends
                        must be non-zero. \n A setting of 0 means the group is completely
                        drained, offering 0% of its available Capacity. Valid range
                        is [0.0,1.0]."
                      format: double
                      type: number
                    description:
                      description: An optional description of this resource. Provide
                        this property when you create the resource.
                      type: string
                    failover:
                      description: This field designates whether this is a failover
                        backend. More than one failover backend can be configured
                        for a given RegionBackendService.
                      type: boolean
                    group:
                      description: "The fully-qualified URL of an Instance Group or
                        Network Endpoint Group resource. In case of instance group
                        this defines the list of instances that serve traffic. Member
                        virtual machine instances from each instance group must live
                        in the same zone as the instance group itself. No two backends
                        in a backend service are allowed to use same Instance Group
                        resource. \n For Network Endpoint Groups this defines list
                        of endpoints. All endpoints of Network Endpoint Group must
                        be hosted on instances located in the same zone as the Network
                        Endpoint Group. \n Backend services cannot mix Instance Group
                        and Network Endpoint Group backends. \n When the 'load_balancing_scheme'
                        is INTERNAL, only instance groups are supported. \n Note that
                        you must specify an Instance Group or Network Endpoint Group
                        resource using the fully-qualified URL, rather than a partial
                        URL."
                      type: string
                    maxConnections:
                      description: "The max number of simultaneous connections for
                        the group. Can be used with either CONNECTION or UTILIZATION
                        balancing modes. Cannot be set for INTERNAL backend services.
                        \n For CONNECTION mode, either maxConnections or one of maxConnectionsPerInstance
                        or maxConnectionsPerEndpoint, as appropriate for group type,
                        must be set."
                      format: int64
                      type: integer
                    maxConnectionsPerEndpoint:
                      description: "The max number of simultaneous connections that
                        a single backend network endpoint can handle. Cannot be set
                        for INTERNAL backend services. \n This is used to calculate
                        the capacity of the group. Can be used in either CONNECTION
                        or UTILIZATION balancing modes. For CONNECTION mode, either
                        maxConnections or maxConnectionsPerEndpoint must be set."
                      format: int64
                      type: integer
                    maxConnectionsPerInstance:
                      description: "The max number of simultaneous connections that
                        a single backend instance can handle. Cannot be set for INTERNAL
                        backend services. \n This is used to calculate the capacity
                        of the group. Can be used in either CONNECTION or UTILIZATION
                        balancing modes. For CONNECTION mode, either maxConnections
                        or maxConnectionsPerInstance must be set."
                      format: int64
                      type: integer
                    maxRate:
                      description: "The max requests per second (RPS) of the group.
                        Cannot be set for INTERNAL backend services. \n Can be used
                        with either RATE or UTILIZATION balancing modes, but required
                        if RATE mode. Either maxRate or one of maxRatePerInstance
                        or maxRatePerEndpoint, as appropriate for group type, must
                        be set."
                      format: int64
                      type: integer
                    maxRatePerEndpoint:
                      description: The max requests per second (RPS) that a single
                        backend network endpoint can handle. This is used to calculate
                        the capacity of the group. Can be used in either balancing
                        mode. For RATE mode, either maxRate or maxRatePerEndpoint
                        must be set. Cannot be set for INTERNAL backend services.
                      format: double
                      type: number
                    maxRatePerInstance:
                      description: The max requests per second (RPS) that a single
                        backend instance can handle. This is used to calculate the
                        capacity of the group. Can be used in either balancing mode.
                        For RATE mode, either maxRate or maxRatePerInstance must be
                        set. Cannot be set for INTERNAL backend services.
                      format: double
                      type: number
                    maxUtilization:
                      description: Used when balancingMode is UTILIZATION. This ratio
                        defines the CPU utilization target for the group. Valid range
                        is [0.0, 1.0]. Cannot be set for INTERNAL backend services.
                      format: double
                      type: number
                  required:
                  - group
                  type: object
                type: array
              cdnPolicy:
                description: Cloud CDN configuration for this BackendService.
                properties:
                  cacheKeyPolicy:
                    description: The CacheKeyPolicy for this CdnPolicy.
                    properties:
                      includeHost:
                        description: If true requests to different hosts will be cached
                          separately.
                        type: boolean
                      includeProtocol:
                        description: If true, http and https requests will be cached
                          separately.
                        type: boolean
                      includeQueryString:
                        description: "If true, include query string parameters in
                          the cache key according to query_string_whitelist and query_string_blacklist.
                          If neither is set, the entire query string will be included.
                          \n If false, the query string will be excluded from the
                          cache key entirely."
                        type: boolean
                      queryStringBlacklist:
                        description: "Names of query string parameters to exclude
                          in cache keys. \n All other parameters will be included.
                          Either specify query_string_whitelist or query_string_blacklist,
                          not both. '&' and '=' will be percent encoded and not treated
                          as delimiters."
                        items:
                          type: string
                        type: array
                      queryStringWhitelist:
                        description: "Names of query string parameters to include
                          in cache keys. \n All other parameters will be excluded.
                          Either specify query_string_whitelist or query_string_blacklist,
                          not both. '&' and '=' will be percent encoded and not treated
                          as delimiters."
                        items:
                          type: string
                        type: array
                    type: object
                  signedURLCacheMaxAgeSec:
                    description: "Maximum number of seconds the response to a signed
                      URL request will be considered fresh, defaults to 1hr (3600s).
                      After this time period, the response will be revalidated before
                      being served. \n When serving responses to signed URL requests,
                      Cloud CDN will internally behave as though all responses from
                      this backend had a \"Cache-Control: public, max-age=[TTL]\"
                      header, regardless of any existing Cache-Control header. The
                      actual headers served in responses will not be altered."
                    format: int64
                    type: integer
                type: object
              circuitBreakers:
                description: Settings controlling the volume of connections to a backend
                  service. This field is applicable only when the 'load_balancing_scheme'
                  is set to INTERNAL_MANAGED and the 'protocol' is set to HTTP, HTTPS,
                  or HTTP2.
                properties:
                  maxConnections:
                    description: The maximum number of connections to the backend
                      cluster. Defaults to 1024.
                    format: int64
                    type: integer
                  maxPendingRequests:
                    description: The maximum number of pending requests to the backend
                      cluster. Defaults to 1024.
                    format: int64
                    type: integer
                  maxRequests:
                    description: The maximum number of parallel requests to the backend
                      cluster. Defaults to 1024.
                    format: int64
                    type: integer
                  maxRequestsPerConnection:
                    description: Maximum requests for a single backend connection.
                      This parameter is respected by both the HTTP/1.1 and HTTP/2
                      implementations. If not specified, there is no limit. Setting
                      this parameter to 1 will effectively disable keep alive.
                    format: int64
                    type: integer
                  maxRetries:
                    description: The maximum number of parallel retries to the backend
                      cluster. Defaults to 3.
                    format: int64
                    type: integer
                type: object
              connectionDrainingTimeoutSec:
                description: Time for which instance will be drained (not accept new
                  connections, but still work to finish started).
                format: int64
                type: integer
              consistentHash:
                description: Consistent Hash-based load balancing can be used to provide
                  soft session affinity based on HTTP headers, cookies or other properties.
                  This load balancing policy is applicable only for HTTP connections.
                  The affinity to a particular destination host will be lost when
                  one or more hosts are added/removed from the destination service.
                  This field specifies parameters that control consistent hashing.
                  This field only applies when all of the following are true -   *
                  'load_balancing_scheme' is set to INTERNAL_MANAGED   * 'protocol'
                  is set to HTTP, HTTPS, or HTTP2   * 'locality_lb_policy' is set
                  to MAGLEV or RING_HASH
                properties:
                  httpCookie:
                    description: Hash is based on HTTP Cookie. This field describes
                      a HTTP cookie that will be used as the hash key for the consistent
                      hash load balancer. If the cookie is not present, it will be
                      generated. This field is applicable if the sessionAffinity is
                      set to HTTP_COOKIE.
                    properties:
                      name:
                        description: Name of the cookie.
                        type: string
                      path:
                        description: Path to set for the cookie.
                        type: string
                      ttl:
                        description: Lifetime of the cookie.
                        properties:
                          nanos:
                            description: Span of time that's a fraction of a second
                              at nanosecond resolution. Durations less than one second
                              are represented with a 0 seconds field and a positive
                              nanos field. Must be from 0 to 999,999,999 inclusive.
                            format: int64
                            type: integer
                          seconds:
                            description: Span of time at a resolution of a second.
                              Must be from 0 to 315,576,000,000 inclusive.
                            format: int64
                            type: integer
                        required:
                        - seconds
                        type: object
                    type: object
                  httpHeaderName:
                    description: The hash based on the value of the specified header
                      field. This field is applicable if the sessionAffinity is set
                      to HEADER_FIELD.
                    type: string
                  minimumRingSize:
                    description: The minimum number of virtual nodes to use for the
                      hash ring. Larger ring sizes result in more granular load distributions.
                      If the number of hosts in the load balancing pool is larger
                      than the ring size, each host will be assigned a single virtual
                      node. Defaults to 1024.
                    format: int64
                    type: integer
                type: object
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              enableCdn:
                description: If true, enable Cloud CDN for this RegionBackendService.
                type: boolean
              failoverPolicy:
                description: Policy for failovers.
                properties:
                  disableConnectionDrainOnFailover:
                    description: 'On failover or failback, this field indicates whether
                      connection drain will be honored. Setting this to true has the
                      following effect: connections to the old active pool are not
                      drained. Connections to the new active pool use the timeout
                      of 10 min (currently fixed). Setting to false has the following
                      effect: both old and new connections will have a drain timeout
                      of 10 min. This can be set to true only if the protocol is TCP.
                      The default is false.'
                    type: boolean
                  dropTrafficIfUnhealthy:
                    description: This option is used only when no healthy VMs are
                      detected in the primary and backup instance groups. When set
                      to true, traffic is dropped. When set to false, new connections
                      are sent across all VMs in the primary group. The default is
                      false.
                    type: boolean
                  failoverRatio:
                    description: The value of the field must be in [0, 1]. If the
                      ratio of the healthy VMs in the primary backend is at or below
                      this number, traffic arriving at the load-balanced IP will be
                      directed to the failover backend. In case where 'failoverRatio'
                      is not set or all the VMs in the backup backend are unhealthy,
                      the traffic will be directed back to the primary backend in
                      the "force" mode, where traffic will be spread to the healthy
                      VMs with the best effort, or to all VMs when no VM is healthy.
                      This field is only used with l4 load balancing.
                    format: double
                    type: number
                type: object
              fingerprint:
                description: Fingerprint of this resource. A hash of the contents
                  stored in this object. This field is used in optimistic locking.
                type: string
              healthChecks:
                description: "The set of URLs to HealthCheck resources for health
                  checking this RegionBackendService. Currently at most one health
                  check can be specified. \n A health check must be specified unless
                  the backend service uses an internet or serverless NEG as a backend."
                items:
                  type: string
                type: array
              id:
                type: string
              kubeformOutput:
                properties:
                  affinityCookieTtlSec:
                    description: "Lifetime of cookies in seconds if session_affinity
                      is GENERATED_COOKIE. If set to 0, the cookie is non-persistent
                      and lasts only until the end of the browser session (or equivalent).
                      The maximum allowed value for TTL is one day. \n When the load
                      balancing scheme is INTERNAL, this field is not used."
                    format: int64
                    type: integer
                  backend:
                    description: The set of backends that serve this RegionBackendService.
                    items:
                      properties:
                        balancingMode:
                          description: 'Specifies the balancing mode for this backend.
                            Default value: "CONNECTION" Possible values: ["UTILIZATION",
                            "RATE", "CONNECTION"]'
                          type: string
                        capacityScaler:
                          description: "A multiplier applied to the group's maximum
                            servicing capacity (based on UTILIZATION, RATE or CONNECTION).
                            \n ~>**NOTE**: This field cannot be set for INTERNAL region
                            backend services (default loadBalancingScheme), but is
                            required for non-INTERNAL backend service. The total capacity_scaler
                            for all backends must be non-zero. \n A setting of 0 means
                            the group is completely drained, offering 0% of its available
                            Capacity. Valid range is [0.0,1.0]."
                          format: double
                          type: number
                        description:
                          description: An optional description of this resource. Provide
                            this property when you create the resource.
                          type: string
                        failover:
                          description: This field designates whether this is a failover
                            backend. More than one failover backend can be configured
                            for a given RegionBackendService.
                          type: boolean
                        group:
                          description: "The fully-qualified URL of an Instance Group
                            or Network Endpoint Group resource. In case of instance
                            group this defines the list of instances that serve traffic.
                            Member virtual machine instances from each instance group
                            must live in the same zone as the instance group itself.
                            No two backends in a backend service are allowed to use
                            same Instance Group resource. \n For Network Endpoint
                            Groups this defines list of endpoints. All endpoints of
                            Network Endpoint Group must be hosted on instances located
                            in the same zone as the Network Endpoint Group. \n Backend
                            services cannot mix Instance Group and Network Endpoint
                            Group backends. \n When the 'load_balancing_scheme' is
                            INTERNAL, only instance groups are supported. \n Note
                            that you must specify an Instance Group or Network Endpoint
                            Group resource using the fully-qualified URL, rather than
                            a partial URL."
                          type: string
                        maxConnections:
                          description: "The max number of simultaneous connections
                            for the group. Can be used with either CONNECTION or UTILIZATION
                            balancing modes. Cannot be set for INTERNAL backend services.
                            \n For CONNECTION mode, either maxConnections or one of
                            maxConnectionsPerInstance or maxConnectionsPerEndpoint,
                            as appropriate for group type, must be set."
                          format: int64
                          type: integer
                        maxConnectionsPerEndpoint:
                          description: "The max number of simultaneous connections
                            that a single backend network endpoint can handle. Cannot
                            be set for INTERNAL backend services. \n This is used
                            to calculate the capacity of the group. Can be used in
                            either CONNECTION or UTILIZATION balancing modes. For
                            CONNECTION mode, either maxConnections or maxConnectionsPerEndpoint
                            must be set."
                          format: int64
                          type: integer
                        maxConnectionsPerInstance:
                          description: "The max number of simultaneous connections
                            that a single backend instance can handle. Cannot be set
                            for INTERNAL backend services. \n This is used to calculate
                            the capacity of the group. Can be used in either CONNECTION
                            or UTILIZATION balancing modes. For CONNECTION mode, either
                            maxConnections or maxConnectionsPerInstance must be set."
                          format: int64
                          type: integer
                        maxRate:
                          description: "The max requests per second (RPS) of the group.
                            Cannot be set for INTERNAL backend services. \n Can be
                            used with either RATE or UTILIZATION balancing modes,
                            but required if RATE mode. Either maxRate or one of maxRatePerInstance
                            or maxRatePerEndpoint, as appropriate for group type,
                            must be set."
                          format: int64
                          type: integer
                        maxRatePerEndpoint:
                          description: The max requests per second (RPS) that a single
                            backend network endpoint can handle. This is used to calculate
                            the capacity of the group. Can be used in either balancing
                            mode. For RATE mode, either maxRate or maxRatePerEndpoint
                            must be set. Cannot be set for INTERNAL backend services.
                          format: double
                          type: number
                        maxRatePerInstance:
                          description: The max requests per second (RPS) that a single
                            backend instance can handle. This is used to calculate
                            the capacity of the group. Can be used in either balancing
                            mode. For RATE mode, either maxRate or maxRatePerInstance
                            must be set. Cannot be set for INTERNAL backend services.
                          format: double
                          type: number
                        maxUtilization:
                          description: Used when balancingMode is UTILIZATION. This
                            ratio defines the CPU utilization target for the group.
                            Valid range is [0.0, 1.0]. Cannot be set for INTERNAL
                            backend services.
                          format: double
                          type: number
                      required:
                      - group
                      type: object
                    type: array
                  cdnPolicy:
                    description: Cloud CDN configuration for this BackendService.
                    properties:
                      cacheKeyPolicy:
                        description: The CacheKeyPolicy for this CdnPolicy.
                        properties:
                          includeHost:
                            description: If true requests to different hosts will
                              be cached separately.
                            type: boolean
                          includeProtocol:
                            description: If true, http and https requests will be
                              cached separately.
                            type: boolean
                          includeQueryString:
                            description: "If true, include query string parameters
                              in the cache key according to query_string_whitelist
                              and query_string_blacklist. If neither is set, the entire
                              query string will be included. \n If false, the query
                              string will be excluded from the cache key entirely."
                            type: boolean
                          queryStringBlacklist:
                            description: "Names of query string parameters to exclude
                              in cache keys. \n All other parameters will be included.
                              Either specify query_string_whitelist or query_string_blacklist,
                              not both. '&' and '=' will be percent encoded and not
                              treated as delimiters."
                            items:
                              type: string
                            type: array
                          queryStringWhitelist:
                            description: "Names of query string parameters to include
                              in cache keys. \n All other parameters will be excluded.
                              Either specify query_string_whitelist or query_string_blacklist,
                              not both. '&' and '=' will be percent encoded and not
                              treated as delimiters."
                            items:
                              type: string
                            type: array
                        type: object
                      signedURLCacheMaxAgeSec:
                        description: "Maximum number of seconds the response to a
                          signed URL request will be considered fresh, defaults to
                          1hr (3600s). After this time period, the response will be
                          revalidated before being served. \n When serving responses
                          to signed URL requests, Cloud CDN will internally behave
                          as though all responses from this backend had a \"Cache-Control:
                          public, max-age=[TTL]\" header, regardless of any existing
                          Cache-Control header. The actual headers served in responses
                          will not be altered."
                        format: int64
                        type: integer
                    type: object
                  circuitBreakers:
                    description: Settings controlling the volume of connections to
                      a backend service. This field is applicable only when the 'load_balancing_scheme'
                      is set to INTERNAL_MANAGED and the 'protocol' is set to HTTP,
                      HTTPS, or HTTP2.
                    properties:
                      maxConnections:
                        description: The maximum number of connections to the backend
                          cluster. Defaults to 1024.
                        format: int64
                        type: integer
                      maxPendingRequests:
                        description: The maximum number of pending requests to the
                          backend cluster. Defaults to 1024.
                        format: int64
                        type: integer
                      maxRequests:
                        description: The maximum number of parallel requests to the
                          backend cluster. Defaults to 1024.
                        format: int64
                        type: integer
                      maxRequestsPerConnection:
                        description: Maximum requests for a single backend connection.
                          This parameter is respected by both the HTTP/1.1 and HTTP/2
                          implementations. If not specified, there is no limit. Setting
                          this parameter to 1 will effectively disable keep alive.
                        format: int64
                        type: integer
                      maxRetries:
                        description: The maximum number of parallel retries to the
                          backend cluster. Defaults to 3.
                        format: int64
                        type: integer
                    type: object
                  connectionDrainingTimeoutSec:
                    description: Time for which instance will be drained (not accept
                      new connections, but still work to finish started).
                    format: int64
                    type: integer
                  consistentHash:
                    description: Consistent Hash-based load balancing can be used
                      to provide soft session affinity based on HTTP headers, cookies
                      or other properties. This load balancing policy is applicable
                      only for HTTP connections. The affinity to a particular destination
                      host will be lost when one or more hosts are added/removed from
                      the destination service. This field specifies parameters that
                      control consistent hashing. This field only applies when all
                      of the following are true -   * 'load_balancing_scheme' is set
                      to INTERNAL_MANAGED   * 'protocol' is set to HTTP, HTTPS, or
                      HTTP2   * 'locality_lb_policy' is set to MAGLEV or RING_HASH
                    properties:
                      httpCookie:
                        description: Hash is based on HTTP Cookie. This field describes
                          a HTTP cookie that will be used as the hash key for the
                          consistent hash load balancer. If the cookie is not present,
                          it will be generated. This field is applicable if the sessionAffinity
                          is set to HTTP_COOKIE.
                        properties:
                          name:
                            description: Name of the cookie.
                            type: string
                          path:
                            description: Path to set for the cookie.
                            type: string
                          ttl:
                            description: Lifetime of the cookie.
                            properties:
                              nanos:
                                description: Span of time that's a fraction of a second
                                  at nanosecond resolution. Durations less than one
                                  second are represented with a 0 seconds field and
                                  a positive nanos field. Must be from 0 to 999,999,999
                                  inclusive.
                                format: int64
                                type: integer
                              seconds:
                                description: Span of time at a resolution of a second.
                                  Must be from 0 to 315,576,000,000 inclusive.
                                format: int64
                                type: integer
                            required:
                            - seconds
                            type: object
                        type: object
                      httpHeaderName:
                        description: The hash based on the value of the specified
                          header field. This field is applicable if the sessionAffinity
                          is set to HEADER_FIELD.
                        type: string
                      minimumRingSize:
                        description: The minimum number of virtual nodes to use for
                          the hash ring. Larger ring sizes result in more granular
                          load distributions. If the number of hosts in the load balancing
                          pool is larger than the ring size, each host will be assigned
                          a single virtual node. Defaults to 1024.
                        format: int64
                        type: integer
                    type: object
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  enableCdn:
                    description: If true, enable Cloud CDN for this RegionBackendService.
                    type: boolean
                  failoverPolicy:
                    description: Policy for failovers.
                    properties:
                      disableConnectionDrainOnFailover:
                        description: 'On failover or failback, this field indicates
                          whether connection drain will be honored. Setting this to
                          true has the following effect: connections to the old active
                          pool are not drained. Connections to the new active pool
                          use the timeout of 10 min (currently fixed). Setting to
                          false has the following effect: both old and new connections
                          will have a drain timeout of 10 min. This can be set to
                          true only if the protocol is TCP. The default is false.'
                        type: boolean
                      dropTrafficIfUnhealthy:
                        description: This option is used only when no healthy VMs
                          are detected in the primary and backup instance groups.
                          When set to true, traffic is dropped. When set to false,
                          new connections are sent across all VMs in the primary group.
                          The default is false.
                        type: boolean
                      failoverRatio:
                        description: The value of the field must be in [0, 1]. If
                          the ratio of the healthy VMs in the primary backend is at
                          or below this number, traffic arriving at the load-balanced
                          IP will be directed to the failover backend. In case where
                          'failoverRatio' is not set or all the VMs in the backup
                          backend are unhealthy, the traffic will be directed back
                          to the primary backend in the "force" mode, where traffic
                          will be spread to the healthy VMs with the best effort,
                          or to all VMs when no VM is healthy. This field is only
                          used with l4 load balancing.
                        format: double
                        type: number
                    type: object
                  fingerprint:
                    description: Fingerprint of this resource. A hash of the contents
                      stored in this object. This field is used in optimistic locking.
                    type: string
                  healthChecks:
                    description: "The set of URLs to HealthCheck resources for health
                      checking this RegionBackendService. Currently at most one health
                      check can be specified. \n A health check must be specified
                      unless the backend service uses an internet or serverless NEG
                      as a backend."
                    items:
                      type: string
                    type: array
                  id:
                    type: string
                  loadBalancingScheme:
                    description: 'Indicates what kind of load balancing this regional
                      backend service will be used for. A backend service created
                      for one type of load balancing cannot be used with the other(s).
                      Default value: "INTERNAL" Possible values: ["EXTERNAL", "INTERNAL",
                      "INTERNAL_MANAGED"]'
                    type: string
                  localityLbPolicy:
                    description: "The load balancing algorithm used within the scope
                      of the locality. The possible values are - \n * ROUND_ROBIN
                      - This is a simple policy in which each healthy backend                 is
                      selected in round robin order. \n * LEAST_REQUEST - An O(1)
                      algorithm which selects two random healthy                   hosts
                      and picks the host which has fewer active requests. \n * RING_HASH
                      - The ring/modulo hash load balancer implements consistent               hashing
                      to backends. The algorithm has the property that the               addition/removal
                      of a host from a set of N hosts only affects               1/N
                      of the requests. \n * RANDOM - The load balancer selects a random
                      healthy host. \n * ORIGINAL_DESTINATION - Backend host is selected
                      based on the client                          connection metadata,
                      i.e., connections are opened                          to the
                      same address as the destination address of                          the
                      incoming connection before the connection                          was
                      redirected to the load balancer. \n * MAGLEV - used as a drop
                      in replacement for the ring hash load balancer.            Maglev
                      is not as stable as ring hash but has faster table lookup            build
                      times and host selection times. For more information about            Maglev,
                      refer to https://ai.google/research/pubs/pub44824 \n This field
                      is applicable only when the 'load_balancing_scheme' is set to
                      INTERNAL_MANAGED and the 'protocol' is set to HTTP, HTTPS, or
                      HTTP2. Possible values: [\"ROUND_ROBIN\", \"LEAST_REQUEST\",
                      \"RING_HASH\", \"RANDOM\", \"ORIGINAL_DESTINATION\", \"MAGLEV\"]"
                    type: string
                  logConfig:
                    description: This field denotes the logging options for the load
                      balancer traffic served by this backend service. If logging
                      is enabled, logs will be exported to Stackdriver.
                    properties:
                      enable:
                        description: Whether to enable logging for the load balancer
                          traffic served by this backend service.
                        type: boolean
                      sampleRate:
                        description: This field can only be specified if logging is
                          enabled for this backend service. The value of the field
                          must be in [0, 1]. This configures the sampling rate of
                          requests to the load balancer where 1.0 means all logged
                          requests are reported and 0.0 means no logged requests are
                          reported. The default value is 1.0.
                        format: double
                        type: number
                    type: object
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  network:
                    description: The URL of the network to which this backend service
                      belongs. This field can only be specified when the load balancing
                      scheme is set to INTERNAL.
                    type: string
                  outlierDetection:
                    description: Settings controlling eviction of unhealthy hosts
                      from the load balancing pool. This field is applicable only
                      when the 'load_balancing_scheme' is set to INTERNAL_MANAGED
                      and the 'protocol' is set to HTTP, HTTPS, or HTTP2.
                    properties:
                      baseEjectionTime:
                        description: The base time that a host is ejected for. The
                          real time is equal to the base time multiplied by the number
                          of times the host has been ejected. Defaults to 30000ms
                          or 30s.
                        properties:
                          nanos:
                            description: Span of time that's a fraction of a second
                              at nanosecond resolution. Durations less than one second
                              are represented with a 0 'seconds' field and a positive
                              'nanos' field. Must be from 0 to 999,999,999 inclusive.
                            format: int64
                            type: integer
                          seconds:
                            description: Span of time at a resolution of a second.
                              Must be from 0 to 315,576,000,000 inclusive.
                            format: int64
                            type: integer
                        required:
                        - seconds
                        type: object
                      consecutiveErrors:
                        description: Number of errors before a host is ejected from
                          the connection pool. When the backend host is accessed over
                          HTTP, a 5xx return code qualifies as an error. Defaults
                          to 5.
                        format: int64
                        type: integer
                      consecutiveGatewayFailure:
                        description: The number of consecutive gateway failures (502,
                          503, 504 status or connection errors that are mapped to
                          one of those status codes) before a consecutive gateway
                          failure ejection occurs. Defaults to 5.
                        format: int64
                        type: integer
                      enforcingConsecutiveErrors:
                        description: The percentage chance that a host will be actually
                          ejected when an outlier status is detected through consecutive
                          5xx. This setting can be used to disable ejection or to
                          ramp it up slowly. Defaults to 100.
                        format: int64
                        type: integer
                      enforcingConsecutiveGatewayFailure:
                        description: The percentage chance that a host will be actually
                          ejected when an outlier status is detected through consecutive
                          gateway failures. This setting can be used to disable ejection
                          or to ramp it up slowly. Defaults to 0.
                        format: int64
                        type: integer
                      enforcingSuccessRate:
                        description: The percentage chance that a host will be actually
                          ejected when an outlier status is detected through success
                          rate statistics. This setting can be used to disable ejection
                          or to ramp it up slowly. Defaults to 100.
                        format: int64
                        type: integer
                      interval:
                        description: Time interval between ejection sweep analysis.
                          This can result in both new ejections as well as hosts being
                          returned to service. Defaults to 10 seconds.
                        properties:
                          nanos:
                            description: Span of time that's a fraction of a second
                              at nanosecond resolution. Durations less than one second
                              are represented with a 0 'seconds' field and a positive
                              'nanos' field. Must be from 0 to 999,999,999 inclusive.
                            format: int64
                            type: integer
                          seconds:
                            description: Span of time at a resolution of a second.
                              Must be from 0 to 315,576,000,000 inclusive.
                            format: int64
                            type: integer
                        required:
                        - seconds
                        type: object
                      maxEjectionPercent:
                        description: Maximum percentage of hosts in the load balancing
                          pool for the backend service that can be ejected. Defaults
                          to 10%.
                        format: int64
                        type: integer
                      successRateMinimumHosts:
                        description: The number of hosts in a cluster that must have
                          enough request volume to detect success rate outliers. If
                          the number of hosts is less than this setting, outlier detection
                          via success rate statistics is not performed for any host
                          in the cluster. Defaults to 5.
                        format: int64
                        type: integer
                      successRateRequestVolume:
                        description: The minimum number of total requests that must
                          be collected in one interval (as defined by the interval
                          duration above) to include this host in success rate based
                          outlier detection. If the volume is lower than this setting,
                          outlier detection via success rate statistics is not performed
                          for that host. Defaults to 100.
                        format: int64
                        type: integer
                      successRateStdevFactor:
                        description: 'This factor is used to determine the ejection
                          threshold for success rate outlier ejection. The ejection
                          threshold is the difference between the mean success rate,
                          and the product of this factor and the standard deviation
                          of the mean success rate: mean - (stdev * success_rate_stdev_factor).
                          This factor is divided by a thousand to get a double. That
                          is, if the desired factor is 1.9, the runtime value should
                          be 1900. Defaults to 1900.'
                        format: int64
                        type: integer
                    type: object
                  portName:
                    description: A named port on a backend instance group representing
                      the port for communication to the backend VMs in that group.
                      Required when the loadBalancingScheme is EXTERNAL, INTERNAL_MANAGED,
                      or INTERNAL_SELF_MANAGED and the backends are instance groups.
                      The named port must be defined on each backend instance group.
                      This parameter has no meaning if the backends are NEGs. API
                      sets a default of "http" if not given. Must be omitted when
                      the loadBalancingScheme is INTERNAL (Internal TCP/UDP Load Balancing).
                    type: string
                  project:
                    type: string
                  protocol:
                    description: 'The protocol this RegionBackendService uses to communicate
                      with backends. The default is HTTP. **NOTE**: HTTP2 is only
                      valid for beta HTTP/2 load balancer types and may result in
                      errors if used with the GA API. Possible values: ["HTTP", "HTTPS",
                      "HTTP2", "SSL", "TCP", "UDP", "GRPC"]'
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: The Region in which the created backend service should
                      reside. If it is not provided, the provider region is used.
                    type: string
                  selfLink:
                    type: string
                  sessionAffinity:
                    description: 'Type of session affinity to use. The default is
                      NONE. Session affinity is not applicable if the protocol is
                      UDP. Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO",
                      "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD", "HTTP_COOKIE"]'
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeoutSec:
                    description: How many seconds to wait for the backend before considering
                      it a failed request. Default is 30 seconds. Valid range is [1,
                      86400].
                    format: int64
                    type: integer
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                type: object
              loadBalancingScheme:
                description: 'Indicates what kind of load balancing this regional
                  backend service will be used for. A backend service created for
                  one type of load balancing cannot be used with the other(s). Default
                  value: "INTERNAL" Possible values: ["EXTERNAL", "INTERNAL", "INTERNAL_MANAGED"]'
                type: string
              localityLbPolicy:
                description: "The load balancing algorithm used within the scope of
                  the locality. The possible values are - \n * ROUND_ROBIN - This
                  is a simple policy in which each healthy backend                 is
                  selected in round robin order. \n * LEAST_REQUEST - An O(1) algorithm
                  which selects two random healthy                   hosts and picks
                  the host which has fewer active requests. \n * RING_HASH - The ring/modulo
                  hash load balancer implements consistent               hashing to
                  backends. The algorithm has the property that the               addition/removal
                  of a host from a set of N hosts only affects               1/N of
                  the requests. \n * RANDOM - The load balancer selects a random healthy
                  host. \n * ORIGINAL_DESTINATION - Backend host is selected based
                  on the client                          connection metadata, i.e.,
                  connections are opened                          to the same address
                  as the destination address of                          the incoming
                  connection before the connection                          was redirected
                  to the load balancer. \n * MAGLEV - used as a drop in replacement
                  for the ring hash load balancer.            Maglev is not as stable
                  as ring hash but has faster table lookup            build times
                  and host selection times. For more information about            Maglev,
                  refer to https://ai.google/research/pubs/pub44824 \n This field
                  is applicable only when the 'load_balancing_scheme' is set to INTERNAL_MANAGED
                  and the 'protocol' is set to HTTP, HTTPS, or HTTP2. Possible values:
                  [\"ROUND_ROBIN\", \"LEAST_REQUEST\", \"RING_HASH\", \"RANDOM\",
                  \"ORIGINAL_DESTINATION\", \"MAGLEV\"]"
                type: string
              logConfig:
                description: This field denotes the logging options for the load balancer
                  traffic served by this backend service. If logging is enabled, logs
                  will be exported to Stackdriver.
                properties:
                  enable:
                    description: Whether to enable logging for the load balancer traffic
                      served by this backend service.
                    type: boolean
                  sampleRate:
                    description: This field can only be specified if logging is enabled
                      for this backend service. The value of the field must be in
                      [0, 1]. This configures the sampling rate of requests to the
                      load balancer where 1.0 means all logged requests are reported
                      and 0.0 means no logged requests are reported. The default value
                      is 1.0.
                    format: double
                    type: number
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              network:
                description: The URL of the network to which this backend service
                  belongs. This field can only be specified when the load balancing
                  scheme is set to INTERNAL.
                type: string
              outlierDetection:
                description: Settings controlling eviction of unhealthy hosts from
                  the load balancing pool. This field is applicable only when the
                  'load_balancing_scheme' is set to INTERNAL_MANAGED and the 'protocol'
                  is set to HTTP, HTTPS, or HTTP2.
                properties:
                  baseEjectionTime:
                    description: The base time that a host is ejected for. The real
                      time is equal to the base time multiplied by the number of times
                      the host has been ejected. Defaults to 30000ms or 30s.
                    properties:
                      nanos:
                        description: Span of time that's a fraction of a second at
                          nanosecond resolution. Durations less than one second are
                          represented with a 0 'seconds' field and a positive 'nanos'
                          field. Must be from 0 to 999,999,999 inclusive.
                        format: int64
                        type: integer
                      seconds:
                        description: Span of time at a resolution of a second. Must
                          be from 0 to 315,576,000,000 inclusive.
                        format: int64
                        type: integer
                    required:
                    - seconds
                    type: object
                  consecutiveErrors:
                    description: Number of errors before a host is ejected from the
                      connection pool. When the backend host is accessed over HTTP,
                      a 5xx return code qualifies as an error. Defaults to 5.
                    format: int64
                    type: integer
                  consecutiveGatewayFailure:
                    description: The number of consecutive gateway failures (502,
                      503, 504 status or connection errors that are mapped to one
                      of those status codes) before a consecutive gateway failure
                      ejection occurs. Defaults to 5.
                    format: int64
                    type: integer
                  enforcingConsecutiveErrors:
                    description: The percentage chance that a host will be actually
                      ejected when an outlier status is detected through consecutive
                      5xx. This setting can be used to disable ejection or to ramp
                      it up slowly. Defaults to 100.
                    format: int64
                    type: integer
                  enforcingConsecutiveGatewayFailure:
                    description: The percentage chance that a host will be actually
                      ejected when an outlier status is detected through consecutive
                      gateway failures. This setting can be used to disable ejection
                      or to ramp it up slowly. Defaults to 0.
                    format: int64
                    type: integer
                  enforcingSuccessRate:
                    description: The percentage chance that a host will be actually
                      ejected when an outlier status is detected through success rate
                      statistics. This setting can be used to disable ejection or
                      to ramp it up slowly. Defaults to 100.
                    format: int64
                    type: integer
                  interval:
                    description: Time interval between ejection sweep analysis. This
                      can result in both new ejections as well as hosts being returned
                      to service. Defaults to 10 seconds.
                    properties:
                      nanos:
                        description: Span of time that's a fraction of a second at
                          nanosecond resolution. Durations less than one second are
                          represented with a 0 'seconds' field and a positive 'nanos'
                          field. Must be from 0 to 999,999,999 inclusive.
                        format: int64
                        type: integer
                      seconds:
                        description: Span of time at a resolution of a second. Must
                          be from 0 to 315,576,000,000 inclusive.
                        format: int64
                        type: integer
                    required:
                    - seconds
                    type: object
                  maxEjectionPercent:
                    description: Maximum percentage of hosts in the load balancing
                      pool for the backend service that can be ejected. Defaults to
                      10%.
                    format: int64
                    type: integer
                  successRateMinimumHosts:
                    description: The number of hosts in a cluster that must have enough
                      request volume to detect success rate outliers. If the number
                      of hosts is less than this setting, outlier detection via success
                      rate statistics is not performed for any host in the cluster.
                      Defaults to 5.
                    format: int64
                    type: integer
                  successRateRequestVolume:
                    description: The minimum number of total requests that must be
                      collected in one interval (as defined by the interval duration
                      above) to include this host in success rate based outlier detection.
                      If the volume is lower than this setting, outlier detection
                      via success rate statistics is not performed for that host.
                      Defaults to 100.
                    format: int64
                    type: integer
                  successRateStdevFactor:
                    description: 'This factor is used to determine the ejection threshold
                      for success rate outlier ejection. The ejection threshold is
                      the difference between the mean success rate, and the product
                      of this factor and the standard deviation of the mean success
                      rate: mean - (stdev * success_rate_stdev_factor). This factor
                      is divided by a thousand to get a double. That is, if the desired
                      factor is 1.9, the runtime value should be 1900. Defaults to
                      1900.'
                    format: int64
                    type: integer
                type: object
              portName:
                description: A named port on a backend instance group representing
                  the port for communication to the backend VMs in that group. Required
                  when the loadBalancingScheme is EXTERNAL, INTERNAL_MANAGED, or INTERNAL_SELF_MANAGED
                  and the backends are instance groups. The named port must be defined
                  on each backend instance group. This parameter has no meaning if
                  the backends are NEGs. API sets a default of "http" if not given.
                  Must be omitted when the loadBalancingScheme is INTERNAL (Internal
                  TCP/UDP Load Balancing).
                type: string
              project:
                type: string
              protocol:
                description: 'The protocol this RegionBackendService uses to communicate
                  with backends. The default is HTTP. **NOTE**: HTTP2 is only valid
                  for beta HTTP/2 load balancer types and may result in errors if
                  used with the GA API. Possible values: ["HTTP", "HTTPS", "HTTP2",
                  "SSL", "TCP", "UDP", "GRPC"]'
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: The Region in which the created backend service should
                  reside. If it is not provided, the provider region is used.
                type: string
              selfLink:
                type: string
              sessionAffinity:
                description: 'Type of session affinity to use. The default is NONE.
                  Session affinity is not applicable if the protocol is UDP. Possible
                  values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO",
                  "GENERATED_COOKIE", "HEADER_FIELD", "HTTP_COOKIE"]'
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeoutSec:
                description: How many seconds to wait for the backend before considering
                  it a failed request. Default is 30 seconds. Valid range is [1, 86400].
                format: int64
                type: integer
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: interconnectattachments.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: InterconnectAttachment
    listKind: InterconnectAttachmentList
    plural: interconnectattachments
    singular: interconnectattachment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              adminEnabled:
                description: Whether the VLAN attachment is enabled or disabled.  When
                  using PARTNER type this will Pre-Activate the interconnect attachment
                type: boolean
              bandwidth:
                description: 'Provisioned bandwidth capacity for the interconnect
                  attachment. For attachments of type DEDICATED, the user can set
                  the bandwidth. For attachments of type PARTNER, the Google Partner
                  that is operating the interconnect must set the bandwidth. Output
                  only for PARTNER type, mutable for PARTNER_PROVIDER and DEDICATED,
                  Defaults to BPS_10G Possible values: ["BPS_50M", "BPS_100M", "BPS_200M",
                  "BPS_300M", "BPS_400M", "BPS_500M", "BPS_1G", "BPS_2G", "BPS_5G",
                  "BPS_10G", "BPS_20G", "BPS_50G"]'
                type: string
              candidateSubnets:
                description: Up to 16 candidate prefixes that can be used to restrict
                  the allocation of cloudRouterIpAddress and customerRouterIpAddress
                  for this attachment. All prefixes must be within link-local address
                  space (169.254.0.0/16) and must be /29 or shorter (/28, /27, etc).
                  Google will attempt to select an unused /29 from the supplied candidate
                  prefix(es). The request will fail if all possible /29s are in use
                  on Google's edge. If not supplied, Google will randomly select an
                  unused /29 from all of link-local space.
                items:
                  type: string
                type: array
              cloudRouterIPAddress:
                description: IPv4 address + prefix length to be configured on Cloud
                  Router Interface for this interconnect attachment.
                type: string
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              customerRouterIPAddress:
                description: IPv4 address + prefix length to be configured on the
                  customer router subinterface for this interconnect attachment.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              edgeAvailabilityDomain:
                description: Desired availability domain for the attachment. Only
                  available for type PARTNER, at creation time. For improved reliability,
                  customers should configure a pair of attachments with one per availability
                  domain. The selected availability domain will be provided to the
                  Partner via the pairing key so that the provisioned circuit will
                  lie in the specified domain. If not specified, the value will default
                  to AVAILABILITY_DOMAIN_ANY.
                type: string
              googleReferenceID:
                description: Google reference ID, to be used when raising support
                  tickets with Google or otherwise to debug backend connectivity issues.
                type: string
              id:
                type: string
              interconnect:
                description: URL of the underlying Interconnect object that this attachment's
                  traffic will traverse through. Required if type is DEDICATED, must
                  not be set if type is PARTNER.
                type: string
              kubeformOutput:
                properties:
                  adminEnabled:
                    description: Whether the VLAN attachment is enabled or disabled.  When
                      using PARTNER type this will Pre-Activate the interconnect attachment
                    type: boolean
                  bandwidth:
                    description: 'Provisioned bandwidth capacity for the interconnect
                      attachment. For attachments of type DEDICATED, the user can
                      set the bandwidth. For attachments of type PARTNER, the Google
                      Partner that is operating the interconnect must set the bandwidth.
                      Output only for PARTNER type, mutable for PARTNER_PROVIDER and
                      DEDICATED, Defaults to BPS_10G Possible values: ["BPS_50M",
                      "BPS_100M", "BPS_200M", "BPS_300M", "BPS_400M", "BPS_500M",
                      "BPS_1G", "BPS_2G", "BPS_5G", "BPS_10G", "BPS_20G", "BPS_50G"]'
                    type: string
                  candidateSubnets:
                    description: Up to 16 candidate prefixes that can be used to restrict
                      the allocation of cloudRouterIpAddress and customerRouterIpAddress
                      for this attachment. All prefixes must be within link-local
                      address space (169.254.0.0/16) and must be /29 or shorter (/28,
                      /27, etc). Google will attempt to select an unused /29 from
                      the supplied candidate prefix(es). The request will fail if
                      all possible /29s are in use on Google's edge. If not supplied,
                      Google will randomly select an unused /29 from all of link-local
                      space.
                    items:
                      type: string
                    type: array
                  cloudRouterIPAddress:
                    description: IPv4 address + prefix length to be configured on
                      Cloud Router Interface for this interconnect attachment.
                    type: string
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  customerRouterIPAddress:
                    description: IPv4 address + prefix length to be configured on
                      the customer router subinterface for this interconnect attachment.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  edgeAvailabilityDomain:
                    description: Desired availability domain for the attachment. Only
                      available for type PARTNER, at creation time. For improved reliability,
                      customers should configure a pair of attachments with one per
                      availability domain. The selected availability domain will be
                      provided to the Partner via the pairing key so that the provisioned
                      circuit will lie in the specified domain. If not specified,
                      the value will default to AVAILABILITY_DOMAIN_ANY.
                    type: string
                  googleReferenceID:
                    description: Google reference ID, to be used when raising support
                      tickets with Google or otherwise to debug backend connectivity
                      issues.
                    type: string
                  id:
                    type: string
                  interconnect:
                    description: URL of the underlying Interconnect object that this
                      attachment's traffic will traverse through. Required if type
                      is DEDICATED, must not be set if type is PARTNER.
                    type: string
                  mtu:
                    description: Maximum Transmission Unit (MTU), in bytes, of packets
                      passing through this interconnect attachment. Currently, only
                      1440 and 1500 are allowed. If not specified, the value will
                      default to 1440.
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  pairingKey:
                    description: '[Output only for type PARTNER. Not present for DEDICATED].
                      The opaque identifier of an PARTNER attachment used to initiate
                      provisioning with a selected partner. Of the form "XXXXX/region/domain"'
                    type: string
                  partnerAsn:
                    description: '[Output only for type PARTNER. Not present for DEDICATED].
                      Optional BGP ASN for the router that should be supplied by a
                      layer 3 Partner if they configured BGP on behalf of the customer.'
                    type: string
                  privateInterconnectInfo:
                    description: Information specific to an InterconnectAttachment.
                      This property is populated if the interconnect that this is
                      attached to is of type DEDICATED.
                    items:
                      properties:
                        tag8021q:
                          description: 802.1q encapsulation tag to be used for traffic
                            between Google and the customer, going to and from this
                            network and region.
                          format: int64
                          type: integer
                      type: object
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: Region where the regional interconnect attachment
                      resides.
                    type: string
                  router:
                    description: URL of the cloud router to be used for dynamic routing.
                      This router must be in the same region as this InterconnectAttachment.
                      The InterconnectAttachment will automatically connect the Interconnect
                      to the network & region within which the Cloud Router is configured.
                    type: string
                  selfLink:
                    type: string
                  state:
                    description: '[Output Only] The current state of this attachment''s
                      functionality.'
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    description: 'The type of InterconnectAttachment you wish to create.
                      Defaults to DEDICATED. Possible values: ["DEDICATED", "PARTNER",
                      "PARTNER_PROVIDER"]'
                    type: string
                  vlanTag8021q:
                    description: The IEEE 802.1Q VLAN tag for this attachment, in
                      the range 2-4094. When using PARTNER type this will be managed
                      upstream.
                    format: int64
                    type: integer
                required:
                - name
                - providerRef
                - router
                type: object
              mtu:
                description: Maximum Transmission Unit (MTU), in bytes, of packets
                  passing through this interconnect attachment. Currently, only 1440
                  and 1500 are allowed. If not specified, the value will default to
                  1440.
                type: string
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              pairingKey:
                description: '[Output only for type PARTNER. Not present for DEDICATED].
                  The opaque identifier of an PARTNER attachment used to initiate
                  provisioning with a selected partner. Of the form "XXXXX/region/domain"'
                type: string
              partnerAsn:
                description: '[Output only for type PARTNER. Not present for DEDICATED].
                  Optional BGP ASN for the router that should be supplied by a layer
                  3 Partner if they configured BGP on behalf of the customer.'
                type: string
              privateInterconnectInfo:
                description: Information specific to an InterconnectAttachment. This
                  property is populated if the interconnect that this is attached
                  to is of type DEDICATED.
                items:
                  properties:
                    tag8021q:
                      description: 802.1q encapsulation tag to be used for traffic
                        between Google and the customer, going to and from this network
                        and region.
                      format: int64
                      type: integer
                  type: object
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: Region where the regional interconnect attachment resides.
                type: string
              router:
                description: URL of the cloud router to be used for dynamic routing.
                  This router must be in the same region as this InterconnectAttachment.
                  The InterconnectAttachment will automatically connect the Interconnect
                  to the network & region within which the Cloud Router is configured.
                type: string
              selfLink:
                type: string
              state:
                description: '[Output Only] The current state of this attachment''s
                  functionality.'
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              type:
                description: 'The type of InterconnectAttachment you wish to create.
                  Defaults to DEDICATED. Possible values: ["DEDICATED", "PARTNER",
                  "PARTNER_PROVIDER"]'
                type: string
              vlanTag8021q:
                description: The IEEE 802.1Q VLAN tag for this attachment, in the
                  range 2-4094. When using PARTNER type this will be managed upstream.
                format: int64
                type: integer
            required:
            - name
            - providerRef
            - router
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: nodetemplates.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: NodeTemplate
    listKind: NodeTemplateList
    plural: nodetemplates
    singular: nodetemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              cpuOvercommitType:
                description: 'CPU overcommit. Default value: "NONE" Possible values:
                  ["ENABLED", "NONE"]'
                type: string
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional textual description of the resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  cpuOvercommitType:
                    description: 'CPU overcommit. Default value: "NONE" Possible values:
                      ["ENABLED", "NONE"]'
                    type: string
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional textual description of the resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource.
                    type: string
                  nodeAffinityLabels:
                    additionalProperties:
                      type: string
                    description: Labels to use for node affinity, which will be used
                      in instance scheduling.
                    type: object
                  nodeType:
                    description: Node type to use for nodes group that are created
                      from this template. Only one of nodeTypeFlexibility and nodeType
                      can be specified.
                    type: string
                  nodeTypeFlexibility:
                    description: Flexible properties for the desired node type. Node
                      groups that use this node template will create nodes of a type
                      that matches these properties. Only one of nodeTypeFlexibility
                      and nodeType can be specified.
                    properties:
                      cpus:
                        description: Number of virtual CPUs to use.
                        type: string
                      localSsd:
                        description: Use local SSD
                        type: string
                      memory:
                        description: Physical memory available to the node, defined
                          in MB.
                        type: string
                    type: object
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: Region where nodes using the node template will be
                      created. If it is not provided, the provider region is used.
                    type: string
                  selfLink:
                    type: string
                  serverBinding:
                    description: The server binding policy for nodes using this template.
                      Determines where the nodes should restart following a maintenance
                      event.
                    properties:
                      type:
                        description: "Type of server binding policy. If 'RESTART_NODE_ON_ANY_SERVER',
                          nodes using this template will restart on any physical server
                          following a maintenance event. \n If 'RESTART_NODE_ON_MINIMAL_SERVER',
                          nodes using this template will restart on the same physical
                          server following a maintenance event, instead of being live
                          migrated to or restarted on a new physical server. This
                          option may be useful if you are using software licenses
                          tied to the underlying server characteristics such as physical
                          sockets or cores, to avoid the need for additional licenses
                          when maintenance occurs. However, VMs on such nodes will
                          experience outages while maintenance is applied. Possible
                          values: [\"RESTART_NODE_ON_ANY_SERVER\", \"RESTART_NODE_ON_MINIMAL_SERVERS\"]"
                        type: string
                    required:
                    - type
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - providerRef
                type: object
              name:
                description: Name of the resource.
                type: string
              nodeAffinityLabels:
                additionalProperties:
                  type: string
                description: Labels to use for node affinity, which will be used in
                  instance scheduling.
                type: object
              nodeType:
                description: Node type to use for nodes group that are created from
                  this template. Only one of nodeTypeFlexibility and nodeType can
                  be specified.
                type: string
              nodeTypeFlexibility:
                description: Flexible properties for the desired node type. Node groups
                  that use this node template will create nodes of a type that matches
                  these properties. Only one of nodeTypeFlexibility and nodeType can
                  be specified.
                properties:
                  cpus:
                    description: Number of virtual CPUs to use.
                    type: string
                  localSsd:
                    description: Use local SSD
                    type: string
                  memory:
                    description: Physical memory available to the node, defined in
                      MB.
                    type: string
                type: object
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: Region where nodes using the node template will be created.
                  If it is not provided, the provider region is used.
                type: string
              selfLink:
                type: string
              serverBinding:
                description: The server binding policy for nodes using this template.
                  Determines where the nodes should restart following a maintenance
                  event.
                properties:
                  type:
                    description: "Type of server binding policy. If 'RESTART_NODE_ON_ANY_SERVER',
                      nodes using this template will restart on any physical server
                      following a maintenance event. \n If 'RESTART_NODE_ON_MINIMAL_SERVER',
                      nodes using this template will restart on the same physical
                      server following a maintenance event, instead of being live
                      migrated to or restarted on a new physical server. This option
                      may be useful if you are using software licenses tied to the
                      underlying server characteristics such as physical sockets or
                      cores, to avoid the need for additional licenses when maintenance
                      occurs. However, VMs on such nodes will experience outages while
                      maintenance is applied. Possible values: [\"RESTART_NODE_ON_ANY_SERVER\",
                      \"RESTART_NODE_ON_MINIMAL_SERVERS\"]"
                    type: string
                required:
                - type
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: regionnetworkendpointgroups.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RegionNetworkEndpointGroup
    listKind: RegionNetworkEndpointGroupList
    plural: regionnetworkendpointgroups
    singular: regionnetworkendpointgroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              appEngine:
                description: Only valid when networkEndpointType is "SERVERLESS".
                  Only one of cloud_run, app_engine or cloud_function may be set.
                properties:
                  service:
                    description: 'Optional serving service. The service name must
                      be 1-63 characters long, and comply with RFC1035. Example value:
                      "default", "my-service".'
                    type: string
                  urlMask:
                    description: "A template to parse service and version fields from
                      a request URL. URL mask allows for routing to multiple App Engine
                      services without having to create multiple Network Endpoint
                      Groups and backend services. \n For example, the request URLs
                      \"foo1-dot-appname.appspot.com/v1\" and \"foo1-dot-appname.appspot.com/v2\"
                      can be backed by the same Serverless NEG with URL mask \"-dot-appname.appspot.com/\".
                      The URL mask will parse them to { service = \"foo1\", version
                      = \"v1\" } and { service = \"foo1\", version = \"v2\" } respectively."
                    type: string
                  version:
                    description: 'Optional serving version. The version must be 1-63
                      characters long, and comply with RFC1035. Example value: "v1",
                      "v2".'
                    type: string
                type: object
              cloudFunction:
                description: Only valid when networkEndpointType is "SERVERLESS".
                  Only one of cloud_run, app_engine or cloud_function may be set.
                properties:
                  function:
                    description: 'A user-defined name of the Cloud Function. The function
                      name is case-sensitive and must be 1-63 characters long. Example
                      value: "func1".'
                    type: string
                  urlMask:
                    description: "A template to parse function field from a request
                      URL. URL mask allows for routing to multiple Cloud Functions
                      without having to create multiple Network Endpoint Groups and
                      backend services. \n For example, request URLs \"mydomain.com/function1\"
                      and \"mydomain.com/function2\" can be backed by the same Serverless
                      NEG with URL mask \"/\". The URL mask will parse them to { function
                      = \"function1\" } and { function = \"function2\" } respectively."
                    type: string
                type: object
              cloudRun:
                description: Only valid when networkEndpointType is "SERVERLESS".
                  Only one of cloud_run, app_engine or cloud_function may be set.
                properties:
                  service:
                    description: 'Cloud Run service is the main resource of Cloud
                      Run. The service must be 1-63 characters long, and comply with
                      RFC1035. Example value: "run-service".'
                    type: string
                  tag:
                    description: 'Cloud Run tag represents the "named-revision" to
                      provide additional fine-grained traffic routing information.
                      The tag must be 1-63 characters long, and comply with RFC1035.
                      Example value: "revision-0010".'
                    type: string
                  urlMask:
                    description: "A template to parse service and tag fields from
                      a request URL. URL mask allows for routing to multiple Run services
                      without having to create multiple network endpoint groups and
                      backend services. \n For example, request URLs \"foo1.domain.com/bar1\"
                      and \"foo1.domain.com/bar2\" an be backed by the same Serverless
                      Network Endpoint Group (NEG) with URL mask \".domain.com/\".
                      The URL mask will parse them to { service=\"bar1\", tag=\"foo1\"
                      } and { service=\"bar2\", tag=\"foo2\" } respectively."
                    type: string
                type: object
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  appEngine:
                    description: Only valid when networkEndpointType is "SERVERLESS".
                      Only one of cloud_run, app_engine or cloud_function may be set.
                    properties:
                      service:
                        description: 'Optional serving service. The service name must
                          be 1-63 characters long, and comply with RFC1035. Example
                          value: "default", "my-service".'
                        type: string
                      urlMask:
                        description: "A template to parse service and version fields
                          from a request URL. URL mask allows for routing to multiple
                          App Engine services without having to create multiple Network
                          Endpoint Groups and backend services. \n For example, the
                          request URLs \"foo1-dot-appname.appspot.com/v1\" and \"foo1-dot-appname.appspot.com/v2\"
                          can be backed by the same Serverless NEG with URL mask \"-dot-appname.appspot.com/\".
                          The URL mask will parse them to { service = \"foo1\", version
                          = \"v1\" } and { service = \"foo1\", version = \"v2\" }
                          respectively."
                        type: string
                      version:
                        description: 'Optional serving version. The version must be
                          1-63 characters long, and comply with RFC1035. Example value:
                          "v1", "v2".'
                        type: string
                    type: object
                  cloudFunction:
                    description: Only valid when networkEndpointType is "SERVERLESS".
                      Only one of cloud_run, app_engine or cloud_function may be set.
                    properties:
                      function:
                        description: 'A user-defined name of the Cloud Function. The
                          function name is case-sensitive and must be 1-63 characters
                          long. Example value: "func1".'
                        type: string
                      urlMask:
                        description: "A template to parse function field from a request
                          URL. URL mask allows for routing to multiple Cloud Functions
                          without having to create multiple Network Endpoint Groups
                          and backend services. \n For example, request URLs \"mydomain.com/function1\"
                          and \"mydomain.com/function2\" can be backed by the same
                          Serverless NEG with URL mask \"/\". The URL mask will parse
                          them to { function = \"function1\" } and { function = \"function2\"
                          } respectively."
                        type: string
                    type: object
                  cloudRun:
                    description: Only valid when networkEndpointType is "SERVERLESS".
                      Only one of cloud_run, app_engine or cloud_function may be set.
                    properties:
                      service:
                        description: 'Cloud Run service is the main resource of Cloud
                          Run. The service must be 1-63 characters long, and comply
                          with RFC1035. Example value: "run-service".'
                        type: string
                      tag:
                        description: 'Cloud Run tag represents the "named-revision"
                          to provide additional fine-grained traffic routing information.
                          The tag must be 1-63 characters long, and comply with RFC1035.
                          Example value: "revision-0010".'
                        type: string
                      urlMask:
                        description: "A template to parse service and tag fields from
                          a request URL. URL mask allows for routing to multiple Run
                          services without having to create multiple network endpoint
                          groups and backend services. \n For example, request URLs
                          \"foo1.domain.com/bar1\" and \"foo1.domain.com/bar2\" an
                          be backed by the same Serverless Network Endpoint Group
                          (NEG) with URL mask \".domain.com/\". The URL mask will
                          parse them to { service=\"bar1\", tag=\"foo1\" } and { service=\"bar2\",
                          tag=\"foo2\" } respectively."
                        type: string
                    type: object
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource; provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  networkEndpointType:
                    description: 'Type of network endpoints in this network endpoint
                      group. Defaults to SERVERLESS Default value: "SERVERLESS" Possible
                      values: ["SERVERLESS"]'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: A reference to the region where the Serverless NEGs
                      Reside.
                    type: string
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                - region
                type: object
              name:
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              networkEndpointType:
                description: 'Type of network endpoints in this network endpoint group.
                  Defaults to SERVERLESS Default value: "SERVERLESS" Possible values:
                  ["SERVERLESS"]'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: A reference to the region where the Serverless NEGs Reside.
                type: string
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            - region
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: routers.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: Router
    listKind: RouterList
    plural: routers
    singular: router
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bgp:
                description: BGP information specific to this router.
                properties:
                  advertiseMode:
                    description: 'User-specified flag to indicate which mode to use
                      for advertisement. Default value: "DEFAULT" Possible values:
                      ["DEFAULT", "CUSTOM"]'
                    type: string
                  advertisedGroups:
                    description: "User-specified list of prefix groups to advertise
                      in custom mode. This field can only be populated if advertiseMode
                      is CUSTOM and is advertised to all peers of the router. These
                      groups will be advertised in addition to any specified prefixes.
                      Leave this field blank to advertise no custom groups. \n This
                      enum field has the one valid value: ALL_SUBNETS"
                    items:
                      type: string
                    type: array
                  advertisedIPRanges:
                    description: User-specified list of individual IP ranges to advertise
                      in custom mode. This field can only be populated if advertiseMode
                      is CUSTOM and is advertised to all peers of the router. These
                      IP ranges will be advertised in addition to any specified groups.
                      Leave this field blank to advertise no custom IP ranges.
                    items:
                      properties:
                        description:
                          description: User-specified description for the IP range.
                          type: string
                        range:
                          description: The IP range to advertise. The value must be
                            a CIDR-formatted string.
                          type: string
                      required:
                      - range
                      type: object
                    type: array
                  asn:
                    description: Local BGP Autonomous System Number (ASN). Must be
                      an RFC6996 private ASN, either 16-bit or 32-bit. The value will
                      be fixed for this router resource. All VPN tunnels that link
                      to this router will have the same local ASN.
                    format: int64
                    type: integer
                required:
                - asn
                type: object
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  bgp:
                    description: BGP information specific to this router.
                    properties:
                      advertiseMode:
                        description: 'User-specified flag to indicate which mode to
                          use for advertisement. Default value: "DEFAULT" Possible
                          values: ["DEFAULT", "CUSTOM"]'
                        type: string
                      advertisedGroups:
                        description: "User-specified list of prefix groups to advertise
                          in custom mode. This field can only be populated if advertiseMode
                          is CUSTOM and is advertised to all peers of the router.
                          These groups will be advertised in addition to any specified
                          prefixes. Leave this field blank to advertise no custom
                          groups. \n This enum field has the one valid value: ALL_SUBNETS"
                        items:
                          type: string
                        type: array
                      advertisedIPRanges:
                        description: User-specified list of individual IP ranges to
                          advertise in custom mode. This field can only be populated
                          if advertiseMode is CUSTOM and is advertised to all peers
                          of the router. These IP ranges will be advertised in addition
                          to any specified groups. Leave this field blank to advertise
                          no custom IP ranges.
                        items:
                          properties:
                            description:
                              description: User-specified description for the IP range.
                              type: string
                            range:
                              description: The IP range to advertise. The value must
                                be a CIDR-formatted string.
                              type: string
                          required:
                          - range
                          type: object
                        type: array
                      asn:
                        description: Local BGP Autonomous System Number (ASN). Must
                          be an RFC6996 private ASN, either 16-bit or 32-bit. The
                          value will be fixed for this router resource. All VPN tunnels
                          that link to this router will have the same local ASN.
                        format: int64
                        type: integer
                    required:
                    - asn
                    type: object
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. The name must be 1-63 characters
                      long, and comply with RFC1035. Specifically, the name must be
                      1-63 characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  network:
                    description: A reference to the network to which this router belongs.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: Region where the router resides.
                    type: string
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - network
                - providerRef
                type: object
              name:
                description: Name of the resource. The name must be 1-63 characters
                  long, and comply with RFC1035. Specifically, the name must be 1-63
                  characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              network:
                description: A reference to the network to which this router belongs.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: Region where the router resides.
                type: string
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - network
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: managedsslcertificates.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: ManagedSSLCertificate
    listKind: ManagedSSLCertificateList
    plural: managedsslcertificates
    singular: managedsslcertificate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              certificateID:
                description: The unique identifier for the resource.
                format: int64
                type: integer
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              expireTime:
                description: Expire time of the certificate.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  certificateID:
                    description: The unique identifier for the resource.
                    format: int64
                    type: integer
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  expireTime:
                    description: Expire time of the certificate.
                    type: string
                  id:
                    type: string
                  managed:
                    description: Properties relevant to a managed certificate.  These
                      will be used if the certificate is managed (as indicated by
                      a value of 'MANAGED' in 'type').
                    properties:
                      domains:
                        description: Domains for which a managed SSL certificate will
                          be valid.  Currently, there can be up to 100 domains in
                          this list.
                        items:
                          type: string
                        maxItems: 100
                        type: array
                    required:
                    - domains
                    type: object
                  name:
                    description: "Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                      \n These are in the same namespace as the managed SSL certificates."
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  subjectAlternativeNames:
                    description: Domains associated with the certificate via Subject
                      Alternative Name.
                    items:
                      type: string
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    description: 'Enum field whose value is always ''MANAGED'' - used
                      to signal to the API which type this is. Default value: "MANAGED"
                      Possible values: ["MANAGED"]'
                    type: string
                required:
                - providerRef
                type: object
              managed:
                description: Properties relevant to a managed certificate.  These
                  will be used if the certificate is managed (as indicated by a value
                  of 'MANAGED' in 'type').
                properties:
                  domains:
                    description: Domains for which a managed SSL certificate will
                      be valid.  Currently, there can be up to 100 domains in this
                      list.
                    items:
                      type: string
                    maxItems: 100
                    type: array
                required:
                - domains
                type: object
              name:
                description: "Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash. \n These are
                  in the same namespace as the managed SSL certificates."
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              subjectAlternativeNames:
                description: Domains associated with the certificate via Subject Alternative
                  Name.
                items:
                  type: string
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              type:
                description: 'Enum field whose value is always ''MANAGED'' - used
                  to signal to the API which type this is. Default value: "MANAGED"
                  Possible values: ["MANAGED"]'
                type: string
            required:
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: regioninstancegroupmanagers.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RegionInstanceGroupManager
    listKind: RegionInstanceGroupManagerList
    plural: regioninstancegroupmanagers
    singular: regioninstancegroupmanager
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              autoHealingPolicies:
                description: The autohealing policies for this managed instance group.
                  You can specify only one value.
                properties:
                  healthCheck:
                    description: The health check resource that signals autohealing.
                    type: string
                  initialDelaySec:
                    description: The number of seconds that the managed instance group
                      waits before it applies autohealing policies to new instances
                      or recently recreated instances. Between 0 and 3600.
                    format: int64
                    type: integer
                required:
                - healthCheck
                - initialDelaySec
                type: object
              baseInstanceName:
                description: The base instance name to use for instances in this group.
                  The value must be a valid RFC1035 name. Supported characters are
                  lowercase letters, numbers, and hyphens (-). Instances are named
                  by appending a hyphen and a random four-character string to the
                  base instance name.
                type: string
              description:
                description: An optional textual description of the instance group
                  manager.
                type: string
              distributionPolicyTargetShape:
                description: The shape to which the group converges either proactively
                  or on resize events (depending on the value set in updatePolicy.instanceRedistributionType).
                type: string
              distributionPolicyZones:
                description: The distribution policy for this managed instance group.
                  You can specify one or more values.
                items:
                  type: string
                type: array
              fingerprint:
                description: The fingerprint of the instance group manager.
                type: string
              id:
                type: string
              instanceGroup:
                description: The full URL of the instance group created by the manager.
                type: string
              kubeformOutput:
                properties:
                  autoHealingPolicies:
                    description: The autohealing policies for this managed instance
                      group. You can specify only one value.
                    properties:
                      healthCheck:
                        description: The health check resource that signals autohealing.
                        type: string
                      initialDelaySec:
                        description: The number of seconds that the managed instance
                          group waits before it applies autohealing policies to new
                          instances or recently recreated instances. Between 0 and
                          3600.
                        format: int64
                        type: integer
                    required:
                    - healthCheck
                    - initialDelaySec
                    type: object
                  baseInstanceName:
                    description: The base instance name to use for instances in this
                      group. The value must be a valid RFC1035 name. Supported characters
                      are lowercase letters, numbers, and hyphens (-). Instances are
                      named by appending a hyphen and a random four-character string
                      to the base instance name.
                    type: string
                  description:
                    description: An optional textual description of the instance group
                      manager.
                    type: string
                  distributionPolicyTargetShape:
                    description: The shape to which the group converges either proactively
                      or on resize events (depending on the value set in updatePolicy.instanceRedistributionType).
                    type: string
                  distributionPolicyZones:
                    description: The distribution policy for this managed instance
                      group. You can specify one or more values.
                    items:
                      type: string
                    type: array
                  fingerprint:
                    description: The fingerprint of the instance group manager.
                    type: string
                  id:
                    type: string
                  instanceGroup:
                    description: The full URL of the instance group created by the
                      manager.
                    type: string
                  name:
                    description: The name of the instance group manager. Must be 1-63
                      characters long and comply with RFC1035. Supported characters
                      include lowercase letters, numbers, and hyphens.
                    type: string
                  namedPort:
                    description: The named port configuration.
                    items:
                      properties:
                        name:
                          description: The name of the port.
                          type: string
                        port:
                          description: The port number.
                          format: int64
                          type: integer
                      required:
                      - name
                      - port
                      type: object
                    type: array
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: The region where the managed instance group resides.
                    type: string
                  selfLink:
                    description: The URL of the created resource.
                    type: string
                  statefulDisk:
                    description: Disks created on the instances that will be preserved
                      on instance delete, update, etc. Structure is documented below.
                      For more information see the official documentation. Proactive
                      cross zone instance redistribution must be disabled before you
                      can update stateful disks on existing instance group managers.
                      This can be controlled via the update_policy.
                    items:
                      properties:
                        deleteRule:
                          description: A value that prescribes what should happen
                            to the stateful disk when the VM instance is deleted.
                            The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION.
                            NEVER - detach the disk when the VM is deleted, but do
                            not delete the disk. ON_PERMANENT_INSTANCE_DELETION will
                            delete the stateful disk when the VM is permanently deleted
                            from the instance group. The default is NEVER.
                          type: string
                        deviceName:
                          description: The device name of the disk to be attached.
                          type: string
                      required:
                      - deviceName
                      type: object
                    type: array
                  targetPools:
                    description: The full URL of all target pools to which new instances
                      in the group are added. Updating the target pools attribute
                      does not affect existing instances.
                    items:
                      type: string
                    type: array
                  targetSize:
                    description: The target number of running instances for this managed
                      instance group. This value should always be explicitly set unless
                      this resource is attached to an autoscaler, in which case it
                      should never be set. Defaults to 0.
                    format: int64
                    type: integer
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  updatePolicy:
                    description: The update policy for this managed instance group.
                    properties:
                      instanceRedistributionType:
                        description: 'The instance redistribution policy for regional
                          managed instance groups. Valid values are: "PROACTIVE",
                          "NONE". If PROACTIVE (default), the group attempts to maintain
                          an even distribution of VM instances across zones in the
                          region. If NONE, proactive redistribution is disabled.'
                        type: string
                      maxSurgeFixed:
                        description: The maximum number of instances that can be created
                          above the specified targetSize during the update process.
                          Conflicts with max_surge_percent. It has to be either 0
                          or at least equal to the number of zones. If fixed values
                          are used, at least one of max_unavailable_fixed or max_surge_fixed
                          must be greater than 0.
                        format: int64
                        type: integer
                      maxSurgePercent:
                        description: The maximum number of instances(calculated as
                          percentage) that can be created above the specified targetSize
                          during the update process. Conflicts with max_surge_fixed.
                          Percent value is only allowed for regional managed instance
                          groups with size at least 10.
                        format: int64
                        type: integer
                      maxUnavailableFixed:
                        description: The maximum number of instances that can be unavailable
                          during the update process. Conflicts with max_unavailable_percent.
                          It has to be either 0 or at least equal to the number of
                          zones. If fixed values are used, at least one of max_unavailable_fixed
                          or max_surge_fixed must be greater than 0.
                        format: int64
                        type: integer
                      maxUnavailablePercent:
                        description: The maximum number of instances(calculated as
                          percentage) that can be unavailable during the update process.
                          Conflicts with max_unavailable_fixed. Percent value is only
                          allowed for regional managed instance groups with size at
                          least 10.
                        format: int64
                        type: integer
                      minReadySec:
                        description: Minimum number of seconds to wait for after a
                          newly created instance becomes available. This value must
                          be from range [0, 3600].
                        format: int64
                        type: integer
                      minimalAction:
                        description: Minimal action to be taken on an instance. You
                          can specify either RESTART to restart existing instances
                          or REPLACE to delete and create new instances from the target
                          template. If you specify a RESTART, the Updater will attempt
                          to perform that action only. However, if the Updater determines
                          that the minimal action you specify is not enough to perform
                          the update, it might perform a more disruptive action.
                        type: string
                      replacementMethod:
                        description: 'The instance replacement method for regional
                          managed instance groups. Valid values are: "RECREATE", "SUBSTITUTE".
                          If SUBSTITUTE (default), the group replaces VM instances
                          with new instances that have randomly generated names. If
                          RECREATE, instance names are preserved.  You must also set
                          max_unavailable_fixed or max_unavailable_percent to be greater
                          than 0.'
                        type: string
                      type:
                        description: The type of update process. You can specify either
                          PROACTIVE so that the instance group manager proactively
                          executes actions in order to bring instances to their target
                          versions or OPPORTUNISTIC so that no action is proactively
                          executed but the update will be performed as part of other
                          actions (for example, resizes or recreateInstances calls).
                        type: string
                    required:
                    - minimalAction
                    - type
                    type: object
                  version:
                    description: Application versions managed by this instance group.
                      Each version deals with a specific instance template, allowing
                      canary release scenarios.
                    items:
                      properties:
                        instanceTemplate:
                          description: The full URL to an instance template from which
                            all new instances of this version will be created.
                          type: string
                        name:
                          description: Version name.
                          type: string
                        targetSize:
                          description: The number of instances calculated as a fixed
                            number or a percentage depending on the settings.
                          properties:
                            fixed:
                              description: The number of instances which are managed
                                for this version. Conflicts with percent.
                              format: int64
                              type: integer
                            percent:
                              description: The number of instances (calculated as
                                percentage) which are managed for this version. Conflicts
                                with fixed. Note that when using percent, rounding
                                will be in favor of explicitly set target_size values;
                                a managed instance group with 2 instances and 2 versions,
                                one of which has a target_size.percent of 60 will
                                create 2 instances of that version.
                              format: int64
                              type: integer
                          type: object
                      required:
                      - instanceTemplate
                      type: object
                    type: array
                  waitForInstances:
                    description: Whether to wait for all instances to be created/updated
                      before returning. Note that if this is set to true and the operation
                      does not succeed, Terraform will continue trying until it times
                      out.
                    type: boolean
                required:
                - baseInstanceName
                - name
                - providerRef
                - version
                type: object
              name:
                description: The name of the instance group manager. Must be 1-63
                  characters long and comply with RFC1035. Supported characters include
                  lowercase letters, numbers, and hyphens.
                type: string
              namedPort:
                description: The named port configuration.
                items:
                  properties:
                    name:
                      description: The name of the port.
                      type: string
                    port:
                      description: The port number.
                      format: int64
                      type: integer
                  required:
                  - name
                  - port
                  type: object
                type: array
              project:
                description: The ID of the project in which the resource belongs.
                  If it is not provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: The region where the managed instance group resides.
                type: string
              selfLink:
                description: The URL of the created resource.
                type: string
              statefulDisk:
                description: Disks created on the instances that will be preserved
                  on instance delete, update, etc. Structure is documented below.
                  For more information see the official documentation. Proactive cross
                  zone instance redistribution must be disabled before you can update
                  stateful disks on existing instance group managers. This can be
                  controlled via the update_policy.
                items:
                  properties:
                    deleteRule:
                      description: A value that prescribes what should happen to the
                        stateful disk when the VM instance is deleted. The available
                        options are NEVER and ON_PERMANENT_INSTANCE_DELETION. NEVER
                        - detach the disk when the VM is deleted, but do not delete
                        the disk. ON_PERMANENT_INSTANCE_DELETION will delete the stateful
                        disk when the VM is permanently deleted from the instance
                        group. The default is NEVER.
                      type: string
                    deviceName:
                      description: The device name of the disk to be attached.
                      type: string
                  required:
                  - deviceName
                  type: object
                type: array
              targetPools:
                description: The full URL of all target pools to which new instances
                  in the group are added. Updating the target pools attribute does
                  not affect existing instances.
                items:
                  type: string
                type: array
              targetSize:
                description: The target number of running instances for this managed
                  instance group. This value should always be explicitly set unless
                  this resource is attached to an autoscaler, in which case it should
                  never be set. Defaults to 0.
                format: int64
                type: integer
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              updatePolicy:
                description: The update policy for this managed instance group.
                properties:
                  instanceRedistributionType:
                    description: 'The instance redistribution policy for regional
                      managed instance groups. Valid values are: "PROACTIVE", "NONE".
                      If PROACTIVE (default), the group attempts to maintain an even
                      distribution of VM instances across zones in the region. If
                      NONE, proactive redistribution is disabled.'
                    type: string
                  maxSurgeFixed:
                    description: The maximum number of instances that can be created
                      above the specified targetSize during the update process. Conflicts
                      with max_surge_percent. It has to be either 0 or at least equal
                      to the number of zones. If fixed values are used, at least one
                      of max_unavailable_fixed or max_surge_fixed must be greater
                      than 0.
                    format: int64
                    type: integer
                  maxSurgePercent:
                    description: The maximum number of instances(calculated as percentage)
                      that can be created above the specified targetSize during the
                      update process. Conflicts with max_surge_fixed. Percent value
                      is only allowed for regional managed instance groups with size
                      at least 10.
                    format: int64
                    type: integer
                  maxUnavailableFixed:
                    description: The maximum number of instances that can be unavailable
                      during the update process. Conflicts with max_unavailable_percent.
                      It has to be either 0 or at least equal to the number of zones.
                      If fixed values are used, at least one of max_unavailable_fixed
                      or max_surge_fixed must be greater than 0.
                    format: int64
                    type: integer
                  maxUnavailablePercent:
                    description: The maximum number of instances(calculated as percentage)
                      that can be unavailable during the update process. Conflicts
                      with max_unavailable_fixed. Percent value is only allowed for
                      regional managed instance groups with size at least 10.
                    format: int64
                    type: integer
                  minReadySec:
                    description: Minimum number of seconds to wait for after a newly
                      created instance becomes available. This value must be from
                      range [0, 3600].
                    format: int64
                    type: integer
                  minimalAction:
                    description: Minimal action to be taken on an instance. You can
                      specify either RESTART to restart existing instances or REPLACE
                      to delete and create new instances from the target template.
                      If you specify a RESTART, the Updater will attempt to perform
                      that action only. However, if the Updater determines that the
                      minimal action you specify is not enough to perform the update,
                      it might perform a more disruptive action.
                    type: string
                  replacementMethod:
                    description: 'The instance replacement method for regional managed
                      instance groups. Valid values are: "RECREATE", "SUBSTITUTE".
                      If SUBSTITUTE (default), the group replaces VM instances with
                      new instances that have randomly generated names. If RECREATE,
                      instance names are preserved.  You must also set max_unavailable_fixed
                      or max_unavailable_percent to be greater than 0.'
                    type: string
                  type:
                    description: The type of update process. You can specify either
                      PROACTIVE so that the instance group manager proactively executes
                      actions in order to bring instances to their target versions
                      or OPPORTUNISTIC so that no action is proactively executed but
                      the update will be performed as part of other actions (for example,
                      resizes or recreateInstances calls).
                    type: string
                required:
                - minimalAction
                - type
                type: object
              version:
                description: Application versions managed by this instance group.
                  Each version deals with a specific instance template, allowing canary
                  release scenarios.
                items:
                  properties:
                    instanceTemplate:
                      description: The full URL to an instance template from which
                        all new instances of this version will be created.
                      type: string
                    name:
                      description: Version name.
                      type: string
                    targetSize:
                      description: The number of instances calculated as a fixed number
                        or a percentage depending on the settings.
                      properties:
                        fixed:
                          description: The number of instances which are managed for
                            this version. Conflicts with percent.
                          format: int64
                          type: integer
                        percent:
                          description: The number of instances (calculated as percentage)
                            which are managed for this version. Conflicts with fixed.
                            Note that when using percent, rounding will be in favor
                            of explicitly set target_size values; a managed instance
                            group with 2 instances and 2 versions, one of which has
                            a target_size.percent of 60 will create 2 instances of
                            that version.
                          format: int64
                          type: integer
                      type: object
                  required:
                  - instanceTemplate
                  type: object
                type: array
              waitForInstances:
                description: Whether to wait for all instances to be created/updated
                  before returning. Note that if this is set to true and the operation
                  does not succeed, Terraform will continue trying until it times
                  out.
                type: boolean
            required:
            - baseInstanceName
            - name
            - providerRef
            - version
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: sharedvpcserviceprojects.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: SharedVpcServiceProject
    listKind: SharedVpcServiceProjectList
    plural: sharedvpcserviceprojects
    singular: sharedvpcserviceproject
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              hostProject:
                description: The ID of a host project to associate.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  hostProject:
                    description: The ID of a host project to associate.
                    type: string
                  id:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  serviceProject:
                    description: The ID of the project that will serve as a Shared
                      VPC service project.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - hostProject
                - providerRef
                - serviceProject
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              serviceProject:
                description: The ID of the project that will serve as a Shared VPC
                  service project.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - hostProject
            - providerRef
            - serviceProject
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: regiondiskiambindings.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RegionDiskIamBinding
    listKind: RegionDiskIamBindingList
    plural: regiondiskiambindings
    singular: regiondiskiambinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  members:
                    items:
                      type: string
                    type: array
                  name:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    type: string
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - members
                - name
                - providerRef
                - role
                type: object
              members:
                items:
                  type: string
                type: array
              name:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                type: string
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - members
            - name
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: urlmaps.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: UrlMap
    listKind: UrlMapList
    plural: urlmaps
    singular: urlmap
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              defaultRouteAction:
                description: "defaultRouteAction takes effect when none of the hostRules
                  match. The load balancer performs advanced routing actions like
                  URL rewrites, header transformations, etc. prior to forwarding the
                  request to the selected backend. If defaultRouteAction specifies
                  any weightedBackendServices, defaultService must not be set. Conversely
                  if defaultService is set, defaultRouteAction cannot contain any
                  weightedBackendServices. \n Only one of defaultRouteAction or defaultUrlRedirect
                  must be set."
                properties:
                  corsPolicy:
                    description: The specification for allowing client side cross-origin
                      requests. Please see [W3C Recommendation for Cross Origin Resource
                      Sharing](https://www.w3.org/TR/cors/)
                    properties:
                      allowCredentials:
                        description: In response to a preflight request, setting this
                          to true indicates that the actual request can include user
                          credentials. This translates to the Access-Control-Allow-Credentials
                          header.
                        type: boolean
                      allowHeaders:
                        description: Specifies the content for the Access-Control-Allow-Headers
                          header.
                        items:
                          type: string
                        type: array
                      allowMethods:
                        description: Specifies the content for the Access-Control-Allow-Methods
                          header.
                        items:
                          type: string
                        type: array
                      allowOriginRegexes:
                        description: Specifies the regular expression patterns that
                          match allowed origins. For regular expression grammar please
                          see en.cppreference.com/w/cpp/regex/ecmascript An origin
                          is allowed if it matches either an item in allowOrigins
                          or an item in allowOriginRegexes.
                        items:
                          type: string
                        type: array
                      allowOrigins:
                        description: Specifies the list of origins that will be allowed
                          to do CORS requests. An origin is allowed if it matches
                          either an item in allowOrigins or an item in allowOriginRegexes.
                        items:
                          type: string
                        type: array
                      disabled:
                        description: If true, specifies the CORS policy is disabled.
                          The default value is false, which indicates that the CORS
                          policy is in effect.
                        type: boolean
                      exposeHeaders:
                        description: Specifies the content for the Access-Control-Expose-Headers
                          header.
                        items:
                          type: string
                        type: array
                      maxAge:
                        description: Specifies how long results of a preflight request
                          can be cached in seconds. This translates to the Access-Control-Max-Age
                          header.
                        format: int64
                        type: integer
                    type: object
                  faultInjectionPolicy:
                    description: "The specification for fault injection introduced
                      into traffic to test the resiliency of clients to backend service
                      failure. As part of fault injection, when clients send requests
                      to a backend service, delays can be introduced by Loadbalancer
                      on a percentage of requests before sending those request to
                      the backend service. Similarly requests from clients can be
                      aborted by the Loadbalancer for a percentage of requests. \n
                      timeout and retryPolicy will be ignored by clients that are
                      configured with a faultInjectionPolicy."
                    properties:
                      abort:
                        description: The specification for how client requests are
                          aborted as part of fault injection.
                        properties:
                          httpStatus:
                            description: The HTTP status code used to abort the request.
                              The value must be between 200 and 599 inclusive.
                            format: int64
                            type: integer
                          percentage:
                            description: The percentage of traffic (connections/operations/requests)
                              which will be aborted as part of fault injection. The
                              value must be between 0.0 and 100.0 inclusive.
                            format: double
                            type: number
                        type: object
                      delay:
                        description: The specification for how client requests are
                          delayed as part of fault injection, before being sent to
                          a backend service.
                        properties:
                          fixedDelay:
                            description: Specifies the value of the fixed delay interval.
                            properties:
                              nanos:
                                description: Span of time that's a fraction of a second
                                  at nanosecond resolution. Durations less than one
                                  second are represented with a 0 seconds field and
                                  a positive nanos field. Must be from 0 to 999,999,999
                                  inclusive.
                                format: int64
                                type: integer
                              seconds:
                                description: 'Span of time at a resolution of a second.
                                  Must be from 0 to 315,576,000,000 inclusive. Note:
                                  these bounds are computed from: 60 sec/min * 60
                                  min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                                type: string
                            type: object
                          percentage:
                            description: The percentage of traffic (connections/operations/requests)
                              on which delay will be introduced as part of fault injection.
                              The value must be between 0.0 and 100.0 inclusive.
                            format: double
                            type: number
                        type: object
                    type: object
                  requestMirrorPolicy:
                    description: Specifies the policy on how requests intended for
                      the route's backends are shadowed to a separate mirrored backend
                      service. Loadbalancer does not wait for responses from the shadow
                      service. Prior to sending traffic to the shadow service, the
                      host / authority header is suffixed with -shadow.
                    properties:
                      backendService:
                        description: The full or partial URL to the BackendService
                          resource being mirrored to.
                        type: string
                    required:
                    - backendService
                    type: object
                  retryPolicy:
                    description: Specifies the retry policy associated with this route.
                    properties:
                      numRetries:
                        description: Specifies the allowed number retries. This number
                          must be > 0. If not specified, defaults to 1.
                        format: int64
                        type: integer
                      perTryTimeout:
                        description: "Specifies a non-zero timeout per retry attempt.
                          \n If not specified, will use the timeout set in HttpRouteAction.
                          If timeout in HttpRouteAction is not set, will use the largest
                          timeout among all backend services associated with the route."
                        properties:
                          nanos:
                            description: Span of time that's a fraction of a second
                              at nanosecond resolution. Durations less than one second
                              are represented with a 0 seconds field and a positive
                              nanos field. Must be from 0 to 999,999,999 inclusive.
                            format: int64
                            type: integer
                          seconds:
                            description: 'Span of time at a resolution of a second.
                              Must be from 0 to 315,576,000,000 inclusive. Note: these
                              bounds are computed from: 60 sec/min * 60 min/hr * 24
                              hr/day * 365.25 days/year * 10000 years'
                            type: string
                        type: object
                      retryConditions:
                        description: "Specfies one or more conditions when this retry
                          rule applies. Valid values are: \n * 5xx: Loadbalancer will
                          attempt a retry if the backend service responds with any
                          5xx response code,   or if the backend service does not
                          respond at all, example: disconnects, reset, read timeout,
                          * connection failure, and refused streams. * gateway-error:
                          Similar to 5xx, but only applies to response codes 502,
                          503 or 504. * connect-failure: Loadbalancer will retry on
                          failures connecting to backend services,   for example due
                          to connection timeouts. * retriable-4xx: Loadbalancer will
                          retry for retriable 4xx response codes.   Currently the
                          only retriable error supported is 409. * refused-stream:Loadbalancer
                          will retry if the backend service resets the stream with
                          a REFUSED_STREAM error code.   This reset type indicates
                          that it is safe to retry. * cancelled: Loadbalancer will
                          retry if the gRPC status code in the response header is
                          set to cancelled * deadline-exceeded: Loadbalancer will
                          retry if the gRPC status code in the response header is
                          set to deadline-exceeded * resource-exhausted: Loadbalancer
                          will retry if the gRPC status code in the response header
                          is set to resource-exhausted * unavailable: Loadbalancer
                          will retry if the gRPC status code in the response header
                          is set to unavailable"
                        items:
                          type: string
                        type: array
                    type: object
                  timeout:
                    description: "Specifies the timeout for the selected route. Timeout
                      is computed from the time the request has been fully processed
                      (i.e. end-of-stream) up until the response has been completely
                      processed. Timeout includes all retries. \n If not specified,
                      will use the largest timeout among all backend services associated
                      with the route."
                    properties:
                      nanos:
                        description: Span of time that's a fraction of a second at
                          nanosecond resolution. Durations less than one second are
                          represented with a 0 seconds field and a positive nanos
                          field. Must be from 0 to 999,999,999 inclusive.
                        format: int64
                        type: integer
                      seconds:
                        description: 'Span of time at a resolution of a second. Must
                          be from 0 to 315,576,000,000 inclusive. Note: these bounds
                          are computed from: 60 sec/min * 60 min/hr * 24 hr/day *
                          365.25 days/year * 10000 years'
                        type: string
                    type: object
                  urlRewrite:
                    description: The spec to modify the URL of the request, prior
                      to forwarding the request to the matched service.
                    properties:
                      hostRewrite:
                        description: "Prior to forwarding the request to the selected
                          service, the request's host header is replaced with contents
                          of hostRewrite. \n The value must be between 1 and 255 characters."
                        type: string
                      pathPrefixRewrite:
                        description: "Prior to forwarding the request to the selected
                          backend service, the matching portion of the request's path
                          is replaced by pathPrefixRewrite. \n The value must be between
                          1 and 1024 characters."
                        type: string
                    type: object
                  weightedBackendServices:
                    description: "A list of weighted backend services to send traffic
                      to when a route match occurs. The weights determine the fraction
                      of traffic that flows to their corresponding backend service.
                      If all traffic needs to go to a single backend service, there
                      must be one weightedBackendService with weight set to a non
                      0 number. \n Once a backendService is identified and before
                      forwarding the request to the backend service, advanced routing
                      actions like Url rewrites and header transformations are applied
                      depending on additional settings specified in this HttpRouteAction."
                    items:
                      properties:
                        backendService:
                          description: The full or partial URL to the default BackendService
                            resource. Before forwarding the request to backendService,
                            the loadbalancer applies any relevant headerActions specified
                            as part of this backendServiceWeight.
                          type: string
                        headerAction:
                          description: "Specifies changes to request and response
                            headers that need to take effect for the selected backendService.
                            \n headerAction specified here take effect before headerAction
                            in the enclosing HttpRouteRule, PathMatcher and UrlMap."
                          properties:
                            requestHeadersToAdd:
                              description: Headers to add to a matching request prior
                                to forwarding the request to the backendService.
                              items:
                                properties:
                                  headerName:
                                    description: The name of the header to add.
                                    type: string
                                  headerValue:
                                    description: The value of the header to add.
                                    type: string
                                  replace:
                                    description: If false, headerValue is appended
                                      to any values that already exist for the header.
                                      If true, headerValue is set for the header,
                                      discarding any values that were set for that
                                      header.
                                    type: boolean
                                type: object
                              type: array
                            requestHeadersToRemove:
                              description: A list of header names for headers that
                                need to be removed from the request prior to forwarding
                                the request to the backendService.
                              items:
                                type: string
                              type: array
                            responseHeadersToAdd:
                              description: Headers to add the response prior to sending
                                the response back to the client.
                              items:
                                properties:
                                  headerName:
                                    description: The name of the header to add.
                                    type: string
                                  headerValue:
                                    description: The value of the header to add.
                                    type: string
                                  replace:
                                    description: If false, headerValue is appended
                                      to any values that already exist for the header.
                                      If true, headerValue is set for the header,
                                      discarding any values that were set for that
                                      header.
                                    type: boolean
                                type: object
                              type: array
                            responseHeadersToRemove:
                              description: A list of header names for headers that
                                need to be removed from the response prior to sending
                                the response back to the client.
                              items:
                                type: string
                              type: array
                          type: object
                        weight:
                          description: "Specifies the fraction of traffic sent to
                            backendService, computed as weight / (sum of all weightedBackendService
                            weights in routeAction) . \n The selection of a backend
                            service is determined only for new traffic. Once a user's
                            request has been directed to a backendService, subsequent
                            requests will be sent to the same backendService as determined
                            by the BackendService's session affinity policy. \n The
                            value must be between 0 and 1000"
                          format: int64
                          type: integer
                      type: object
                    type: array
                type: object
              defaultService:
                description: The backend service or backend bucket to use when none
                  of the given rules match.
                type: string
              defaultURLRedirect:
                description: When none of the specified hostRules match, the request
                  is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect
                  is specified, defaultService or defaultRouteAction must not be set.
                properties:
                  hostRedirect:
                    description: The host that will be used in the redirect response
                      instead of the one that was supplied in the request. The value
                      must be between 1 and 255 characters.
                    type: string
                  httpsRedirect:
                    description: If set to true, the URL scheme in the redirected
                      request is set to https. If set to false, the URL scheme of
                      the redirected request will remain the same as that of the request.
                      This must only be set for UrlMaps used in TargetHttpProxys.
                      Setting this true for TargetHttpsProxy is not permitted. The
                      default is set to false.
                    type: boolean
                  pathRedirect:
                    description: The path that will be used in the redirect response
                      instead of the one that was supplied in the request. pathRedirect
                      cannot be supplied together with prefixRedirect. Supply one
                      alone or neither. If neither is supplied, the path of the original
                      request will be used for the redirect. The value must be between
                      1 and 1024 characters.
                    type: string
                  prefixRedirect:
                    description: The prefix that replaces the prefixMatch specified
                      in the HttpRouteRuleMatch, retaining the remaining portion of
                      the URL before redirecting the request. prefixRedirect cannot
                      be supplied together with pathRedirect. Supply one alone or
                      neither. If neither is supplied, the path of the original request
                      will be used for the redirect. The value must be between 1 and
                      1024 characters.
                    type: string
                  redirectResponseCode:
                    description: "The HTTP Status code to use for this RedirectAction.
                      Supported values are: \n * MOVED_PERMANENTLY_DEFAULT, which
                      is the default value and corresponds to 301. \n * FOUND, which
                      corresponds to 302. \n * SEE_OTHER which corresponds to 303.
                      \n * TEMPORARY_REDIRECT, which corresponds to 307. In this case,
                      the request method will be retained. \n * PERMANENT_REDIRECT,
                      which corresponds to 308. In this case, the request method will
                      be retained. Possible values: [\"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\",
                      \"PERMANENT_REDIRECT\", \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                    type: string
                  stripQuery:
                    description: If set to true, any accompanying query portion of
                      the original URL is removed prior to redirecting the request.
                      If set to false, the query portion of the original URL is retained.
                      The default is set to false.  This field is required to ensure
                      an empty block is not set. The normal default value is false.
                    type: boolean
                required:
                - stripQuery
                type: object
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              fingerprint:
                description: Fingerprint of this resource. A hash of the contents
                  stored in this object. This field is used in optimistic locking.
                type: string
              headerAction:
                description: Specifies changes to request and response headers that
                  need to take effect for the selected backendService. The headerAction
                  specified here take effect after headerAction specified under pathMatcher.
                properties:
                  requestHeadersToAdd:
                    description: Headers to add to a matching request prior to forwarding
                      the request to the backendService.
                    items:
                      properties:
                        headerName:
                          description: The name of the header.
                          type: string
                        headerValue:
                          description: The value of the header to add.
                          type: string
                        replace:
                          description: If false, headerValue is appended to any values
                            that already exist for the header. If true, headerValue
                            is set for the header, discarding any values that were
                            set for that header.
                          type: boolean
                      required:
                      - headerName
                      - headerValue
                      - replace
                      type: object
                    type: array
                  requestHeadersToRemove:
                    description: A list of header names for headers that need to be
                      removed from the request prior to forwarding the request to
                      the backendService.
                    items:
                      type: string
                    type: array
                  responseHeadersToAdd:
                    description: Headers to add the response prior to sending the
                      response back to the client.
                    items:
                      properties:
                        headerName:
                          description: The name of the header.
                          type: string
                        headerValue:
                          description: The value of the header to add.
                          type: string
                        replace:
                          description: If false, headerValue is appended to any values
                            that already exist for the header. If true, headerValue
                            is set for the header, discarding any values that were
                            set for that header.
                          type: boolean
                      required:
                      - headerName
                      - headerValue
                      - replace
                      type: object
                    type: array
                  responseHeadersToRemove:
                    description: A list of header names for headers that need to be
                      removed from the response prior to sending the response back
                      to the client.
                    items:
                      type: string
                    type: array
                type: object
              hostRule:
                description: The list of HostRules to use against the URL.
                items:
                  properties:
                    description:
                      description: An optional description of this resource. Provide
                        this property when you create the resource.
                      type: string
                    hosts:
                      description: The list of host patterns to match. They must be
                        valid hostnames, except * will match any string of ([a-z0-9-.]*).
                        In that case, * must be the first character and must be followed
                        in the pattern by either - or ..
                      items:
                        type: string
                      type: array
                    pathMatcher:
                      description: The name of the PathMatcher to use to match the
                        path portion of the URL if the hostRule matches the URL's
                        host portion.
                      type: string
                  required:
                  - hosts
                  - pathMatcher
                  type: object
                type: array
              id:
                type: string
              kubeformOutput:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  defaultRouteAction:
                    description: "defaultRouteAction takes effect when none of the
                      hostRules match. The load balancer performs advanced routing
                      actions like URL rewrites, header transformations, etc. prior
                      to forwarding the request to the selected backend. If defaultRouteAction
                      specifies any weightedBackendServices, defaultService must not
                      be set. Conversely if defaultService is set, defaultRouteAction
                      cannot contain any weightedBackendServices. \n Only one of defaultRouteAction
                      or defaultUrlRedirect must be set."
                    properties:
                      corsPolicy:
                        description: The specification for allowing client side cross-origin
                          requests. Please see [W3C Recommendation for Cross Origin
                          Resource Sharing](https://www.w3.org/TR/cors/)
                        properties:
                          allowCredentials:
                            description: In response to a preflight request, setting
                              this to true indicates that the actual request can include
                              user credentials. This translates to the Access-Control-Allow-Credentials
                              header.
                            type: boolean
                          allowHeaders:
                            description: Specifies the content for the Access-Control-Allow-Headers
                              header.
                            items:
                              type: string
                            type: array
                          allowMethods:
                            description: Specifies the content for the Access-Control-Allow-Methods
                              header.
                            items:
                              type: string
                            type: array
                          allowOriginRegexes:
                            description: Specifies the regular expression patterns
                              that match allowed origins. For regular expression grammar
                              please see en.cppreference.com/w/cpp/regex/ecmascript
                              An origin is allowed if it matches either an item in
                              allowOrigins or an item in allowOriginRegexes.
                            items:
                              type: string
                            type: array
                          allowOrigins:
                            description: Specifies the list of origins that will be
                              allowed to do CORS requests. An origin is allowed if
                              it matches either an item in allowOrigins or an item
                              in allowOriginRegexes.
                            items:
                              type: string
                            type: array
                          disabled:
                            description: If true, specifies the CORS policy is disabled.
                              The default value is false, which indicates that the
                              CORS policy is in effect.
                            type: boolean
                          exposeHeaders:
                            description: Specifies the content for the Access-Control-Expose-Headers
                              header.
                            items:
                              type: string
                            type: array
                          maxAge:
                            description: Specifies how long results of a preflight
                              request can be cached in seconds. This translates to
                              the Access-Control-Max-Age header.
                            format: int64
                            type: integer
                        type: object
                      faultInjectionPolicy:
                        description: "The specification for fault injection introduced
                          into traffic to test the resiliency of clients to backend
                          service failure. As part of fault injection, when clients
                          send requests to a backend service, delays can be introduced
                          by Loadbalancer on a percentage of requests before sending
                          those request to the backend service. Similarly requests
                          from clients can be aborted by the Loadbalancer for a percentage
                          of requests. \n timeout and retryPolicy will be ignored
                          by clients that are configured with a faultInjectionPolicy."
                        properties:
                          abort:
                            description: The specification for how client requests
                              are aborted as part of fault injection.
                            properties:
                              httpStatus:
                                description: The HTTP status code used to abort the
                                  request. The value must be between 200 and 599 inclusive.
                                format: int64
                                type: integer
                              percentage:
                                description: The percentage of traffic (connections/operations/requests)
                                  which will be aborted as part of fault injection.
                                  The value must be between 0.0 and 100.0 inclusive.
                                format: double
                                type: number
                            type: object
                          delay:
                            description: The specification for how client requests
                              are delayed as part of fault injection, before being
                              sent to a backend service.
                            properties:
                              fixedDelay:
                                description: Specifies the value of the fixed delay
                                  interval.
                                properties:
                                  nanos:
                                    description: Span of time that's a fraction of
                                      a second at nanosecond resolution. Durations
                                      less than one second are represented with a
                                      0 seconds field and a positive nanos field.
                                      Must be from 0 to 999,999,999 inclusive.
                                    format: int64
                                    type: integer
                                  seconds:
                                    description: 'Span of time at a resolution of
                                      a second. Must be from 0 to 315,576,000,000
                                      inclusive. Note: these bounds are computed from:
                                      60 sec/min * 60 min/hr * 24 hr/day * 365.25
                                      days/year * 10000 years'
                                    type: string
                                type: object
                              percentage:
                                description: The percentage of traffic (connections/operations/requests)
                                  on which delay will be introduced as part of fault
                                  injection. The value must be between 0.0 and 100.0
                                  inclusive.
                                format: double
                                type: number
                            type: object
                        type: object
                      requestMirrorPolicy:
                        description: Specifies the policy on how requests intended
                          for the route's backends are shadowed to a separate mirrored
                          backend service. Loadbalancer does not wait for responses
                          from the shadow service. Prior to sending traffic to the
                          shadow service, the host / authority header is suffixed
                          with -shadow.
                        properties:
                          backendService:
                            description: The full or partial URL to the BackendService
                              resource being mirrored to.
                            type: string
                        required:
                        - backendService
                        type: object
                      retryPolicy:
                        description: Specifies the retry policy associated with this
                          route.
                        properties:
                          numRetries:
                            description: Specifies the allowed number retries. This
                              number must be > 0. If not specified, defaults to 1.
                            format: int64
                            type: integer
                          perTryTimeout:
                            description: "Specifies a non-zero timeout per retry attempt.
                              \n If not specified, will use the timeout set in HttpRouteAction.
                              If timeout in HttpRouteAction is not set, will use the
                              largest timeout among all backend services associated
                              with the route."
                            properties:
                              nanos:
                                description: Span of time that's a fraction of a second
                                  at nanosecond resolution. Durations less than one
                                  second are represented with a 0 seconds field and
                                  a positive nanos field. Must be from 0 to 999,999,999
                                  inclusive.
                                format: int64
                                type: integer
                              seconds:
                                description: 'Span of time at a resolution of a second.
                                  Must be from 0 to 315,576,000,000 inclusive. Note:
                                  these bounds are computed from: 60 sec/min * 60
                                  min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                                type: string
                            type: object
                          retryConditions:
                            description: "Specfies one or more conditions when this
                              retry rule applies. Valid values are: \n * 5xx: Loadbalancer
                              will attempt a retry if the backend service responds
                              with any 5xx response code,   or if the backend service
                              does not respond at all, example: disconnects, reset,
                              read timeout, * connection failure, and refused streams.
                              * gateway-error: Similar to 5xx, but only applies to
                              response codes 502, 503 or 504. * connect-failure: Loadbalancer
                              will retry on failures connecting to backend services,
                              \  for example due to connection timeouts. * retriable-4xx:
                              Loadbalancer will retry for retriable 4xx response codes.
                              \  Currently the only retriable error supported is 409.
                              * refused-stream:Loadbalancer will retry if the backend
                              service resets the stream with a REFUSED_STREAM error
                              code.   This reset type indicates that it is safe to
                              retry. * cancelled: Loadbalancer will retry if the gRPC
                              status code in the response header is set to cancelled
                              * deadline-exceeded: Loadbalancer will retry if the
                              gRPC status code in the response header is set to deadline-exceeded
                              * resource-exhausted: Loadbalancer will retry if the
                              gRPC status code in the response header is set to resource-exhausted
                              * unavailable: Loadbalancer will retry if the gRPC status
                              code in the response header is set to unavailable"
                            items:
                              type: string
                            type: array
                        type: object
                      timeout:
                        description: "Specifies the timeout for the selected route.
                          Timeout is computed from the time the request has been fully
                          processed (i.e. end-of-stream) up until the response has
                          been completely processed. Timeout includes all retries.
                          \n If not specified, will use the largest timeout among
                          all backend services associated with the route."
                        properties:
                          nanos:
                            description: Span of time that's a fraction of a second
                              at nanosecond resolution. Durations less than one second
                              are represented with a 0 seconds field and a positive
                              nanos field. Must be from 0 to 999,999,999 inclusive.
                            format: int64
                            type: integer
                          seconds:
                            description: 'Span of time at a resolution of a second.
                              Must be from 0 to 315,576,000,000 inclusive. Note: these
                              bounds are computed from: 60 sec/min * 60 min/hr * 24
                              hr/day * 365.25 days/year * 10000 years'
                            type: string
                        type: object
                      urlRewrite:
                        description: The spec to modify the URL of the request, prior
                          to forwarding the request to the matched service.
                        properties:
                          hostRewrite:
                            description: "Prior to forwarding the request to the selected
                              service, the request's host header is replaced with
                              contents of hostRewrite. \n The value must be between
                              1 and 255 characters."
                            type: string
                          pathPrefixRewrite:
                            description: "Prior to forwarding the request to the selected
                              backend service, the matching portion of the request's
                              path is replaced by pathPrefixRewrite. \n The value
                              must be between 1 and 1024 characters."
                            type: string
                        type: object
                      weightedBackendServices:
                        description: "A list of weighted backend services to send
                          traffic to when a route match occurs. The weights determine
                          the fraction of traffic that flows to their corresponding
                          backend service. If all traffic needs to go to a single
                          backend service, there must be one weightedBackendService
                          with weight set to a non 0 number. \n Once a backendService
                          is identified and before forwarding the request to the backend
                          service, advanced routing actions like Url rewrites and
                          header transformations are applied depending on additional
                          settings specified in this HttpRouteAction."
                        items:
                          properties:
                            backendService:
                              description: The full or partial URL to the default
                                BackendService resource. Before forwarding the request
                                to backendService, the loadbalancer applies any relevant
                                headerActions specified as part of this backendServiceWeight.
                              type: string
                            headerAction:
                              description: "Specifies changes to request and response
                                headers that need to take effect for the selected
                                backendService. \n headerAction specified here take
                                effect before headerAction in the enclosing HttpRouteRule,
                                PathMatcher and UrlMap."
                              properties:
                                requestHeadersToAdd:
                                  description: Headers to add to a matching request
                                    prior to forwarding the request to the backendService.
                                  items:
                                    properties:
                                      headerName:
                                        description: The name of the header to add.
                                        type: string
                                      headerValue:
                                        description: The value of the header to add.
                                        type: string
                                      replace:
                                        description: If false, headerValue is appended
                                          to any values that already exist for the
                                          header. If true, headerValue is set for
                                          the header, discarding any values that were
                                          set for that header.
                                        type: boolean
                                    type: object
                                  type: array
                                requestHeadersToRemove:
                                  description: A list of header names for headers
                                    that need to be removed from the request prior
                                    to forwarding the request to the backendService.
                                  items:
                                    type: string
                                  type: array
                                responseHeadersToAdd:
                                  description: Headers to add the response prior to
                                    sending the response back to the client.
                                  items:
                                    properties:
                                      headerName:
                                        description: The name of the header to add.
                                        type: string
                                      headerValue:
                                        description: The value of the header to add.
                                        type: string
                                      replace:
                                        description: If false, headerValue is appended
                                          to any values that already exist for the
                                          header. If true, headerValue is set for
                                          the header, discarding any values that were
                                          set for that header.
                                        type: boolean
                                    type: object
                                  type: array
                                responseHeadersToRemove:
                                  description: A list of header names for headers
                                    that need to be removed from the response prior
                                    to sending the response back to the client.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            weight:
                              description: "Specifies the fraction of traffic sent
                                to backendService, computed as weight / (sum of all
                                weightedBackendService weights in routeAction) . \n
                                The selection of a backend service is determined only
                                for new traffic. Once a user's request has been directed
                                to a backendService, subsequent requests will be sent
                                to the same backendService as determined by the BackendService's
                                session affinity policy. \n The value must be between
                                0 and 1000"
                              format: int64
                              type: integer
                          type: object
                        type: array
                    type: object
                  defaultService:
                    description: The backend service or backend bucket to use when
                      none of the given rules match.
                    type: string
                  defaultURLRedirect:
                    description: When none of the specified hostRules match, the request
                      is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect
                      is specified, defaultService or defaultRouteAction must not
                      be set.
                    properties:
                      hostRedirect:
                        description: The host that will be used in the redirect response
                          instead of the one that was supplied in the request. The
                          value must be between 1 and 255 characters.
                        type: string
                      httpsRedirect:
                        description: If set to true, the URL scheme in the redirected
                          request is set to https. If set to false, the URL scheme
                          of the redirected request will remain the same as that of
                          the request. This must only be set for UrlMaps used in TargetHttpProxys.
                          Setting this true for TargetHttpsProxy is not permitted.
                          The default is set to false.
                        type: boolean
                      pathRedirect:
                        description: The path that will be used in the redirect response
                          instead of the one that was supplied in the request. pathRedirect
                          cannot be supplied together with prefixRedirect. Supply
                          one alone or neither. If neither is supplied, the path of
                          the original request will be used for the redirect. The
                          value must be between 1 and 1024 characters.
                        type: string
                      prefixRedirect:
                        description: The prefix that replaces the prefixMatch specified
                          in the HttpRouteRuleMatch, retaining the remaining portion
                          of the URL before redirecting the request. prefixRedirect
                          cannot be supplied together with pathRedirect. Supply one
                          alone or neither. If neither is supplied, the path of the
                          original request will be used for the redirect. The value
                          must be between 1 and 1024 characters.
                        type: string
                      redirectResponseCode:
                        description: "The HTTP Status code to use for this RedirectAction.
                          Supported values are: \n * MOVED_PERMANENTLY_DEFAULT, which
                          is the default value and corresponds to 301. \n * FOUND,
                          which corresponds to 302. \n * SEE_OTHER which corresponds
                          to 303. \n * TEMPORARY_REDIRECT, which corresponds to 307.
                          In this case, the request method will be retained. \n *
                          PERMANENT_REDIRECT, which corresponds to 308. In this case,
                          the request method will be retained. Possible values: [\"FOUND\",
                          \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\", \"SEE_OTHER\",
                          \"TEMPORARY_REDIRECT\"]"
                        type: string
                      stripQuery:
                        description: If set to true, any accompanying query portion
                          of the original URL is removed prior to redirecting the
                          request. If set to false, the query portion of the original
                          URL is retained. The default is set to false.  This field
                          is required to ensure an empty block is not set. The normal
                          default value is false.
                        type: boolean
                    required:
                    - stripQuery
                    type: object
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  fingerprint:
                    description: Fingerprint of this resource. A hash of the contents
                      stored in this object. This field is used in optimistic locking.
                    type: string
                  headerAction:
                    description: Specifies changes to request and response headers
                      that need to take effect for the selected backendService. The
                      headerAction specified here take effect after headerAction specified
                      under pathMatcher.
                    properties:
                      requestHeadersToAdd:
                        description: Headers to add to a matching request prior to
                          forwarding the request to the backendService.
                        items:
                          properties:
                            headerName:
                              description: The name of the header.
                              type: string
                            headerValue:
                              description: The value of the header to add.
                              type: string
                            replace:
                              description: If false, headerValue is appended to any
                                values that already exist for the header. If true,
                                headerValue is set for the header, discarding any
                                values that were set for that header.
                              type: boolean
                          required:
                          - headerName
                          - headerValue
                          - replace
                          type: object
                        type: array
                      requestHeadersToRemove:
                        description: A list of header names for headers that need
                          to be removed from the request prior to forwarding the request
                          to the backendService.
                        items:
                          type: string
                        type: array
                      responseHeadersToAdd:
                        description: Headers to add the response prior to sending
                          the response back to the client.
                        items:
                          properties:
                            headerName:
                              description: The name of the header.
                              type: string
                            headerValue:
                              description: The value of the header to add.
                              type: string
                            replace:
                              description: If false, headerValue is appended to any
                                values that already exist for the header. If true,
                                headerValue is set for the header, discarding any
                                values that were set for that header.
                              type: boolean
                          required:
                          - headerName
                          - headerValue
                          - replace
                          type: object
                        type: array
                      responseHeadersToRemove:
                        description: A list of header names for headers that need
                          to be removed from the response prior to sending the response
                          back to the client.
                        items:
                          type: string
                        type: array
                    type: object
                  hostRule:
                    description: The list of HostRules to use against the URL.
                    items:
                      properties:
                        description:
                          description: An optional description of this resource. Provide
                            this property when you create the resource.
                          type: string
                        hosts:
                          description: The list of host patterns to match. They must
                            be valid hostnames, except * will match any string of
                            ([a-z0-9-.]*). In that case, * must be the first character
                            and must be followed in the pattern by either - or ..
                          items:
                            type: string
                          type: array
                        pathMatcher:
                          description: The name of the PathMatcher to use to match
                            the path portion of the URL if the hostRule matches the
                            URL's host portion.
                          type: string
                      required:
                      - hosts
                      - pathMatcher
                      type: object
                    type: array
                  id:
                    type: string
                  mapID:
                    description: The unique identifier for the resource.
                    format: int64
                    type: integer
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  pathMatcher:
                    description: The list of named PathMatchers to use against the
                      URL.
                    items:
                      properties:
                        defaultRouteAction:
                          description: "defaultRouteAction takes effect when none
                            of the pathRules or routeRules match. The load balancer
                            performs advanced routing actions like URL rewrites, header
                            transformations, etc. prior to forwarding the request
                            to the selected backend. If defaultRouteAction specifies
                            any weightedBackendServices, defaultService must not be
                            set. Conversely if defaultService is set, defaultRouteAction
                            cannot contain any weightedBackendServices. \n Only one
                            of defaultRouteAction or defaultUrlRedirect must be set."
                          properties:
                            corsPolicy:
                              description: The specification for allowing client side
                                cross-origin requests. Please see [W3C Recommendation
                                for Cross Origin Resource Sharing](https://www.w3.org/TR/cors/)
                              properties:
                                allowCredentials:
                                  description: In response to a preflight request,
                                    setting this to true indicates that the actual
                                    request can include user credentials. This translates
                                    to the Access-Control-Allow-Credentials header.
                                  type: boolean
                                allowHeaders:
                                  description: Specifies the content for the Access-Control-Allow-Headers
                                    header.
                                  items:
                                    type: string
                                  type: array
                                allowMethods:
                                  description: Specifies the content for the Access-Control-Allow-Methods
                                    header.
                                  items:
                                    type: string
                                  type: array
                                allowOriginRegexes:
                                  description: Specifies the regular expression patterns
                                    that match allowed origins. For regular expression
                                    grammar please see en.cppreference.com/w/cpp/regex/ecmascript
                                    An origin is allowed if it matches either an item
                                    in allowOrigins or an item in allowOriginRegexes.
                                  items:
                                    type: string
                                  type: array
                                allowOrigins:
                                  description: Specifies the list of origins that
                                    will be allowed to do CORS requests. An origin
                                    is allowed if it matches either an item in allowOrigins
                                    or an item in allowOriginRegexes.
                                  items:
                                    type: string
                                  type: array
                                disabled:
                                  description: If true, specifies the CORS policy
                                    is disabled. The default value is false, which
                                    indicates that the CORS policy is in effect.
                                  type: boolean
                                exposeHeaders:
                                  description: Specifies the content for the Access-Control-Expose-Headers
                                    header.
                                  items:
                                    type: string
                                  type: array
                                maxAge:
                                  description: Specifies how long results of a preflight
                                    request can be cached in seconds. This translates
                                    to the Access-Control-Max-Age header.
                                  format: int64
                                  type: integer
                              type: object
                            faultInjectionPolicy:
                              description: "The specification for fault injection
                                introduced into traffic to test the resiliency of
                                clients to backend service failure. As part of fault
                                injection, when clients send requests to a backend
                                service, delays can be introduced by Loadbalancer
                                on a percentage of requests before sending those request
                                to the backend service. Similarly requests from clients
                                can be aborted by the Loadbalancer for a percentage
                                of requests. \n timeout and retryPolicy will be ignored
                                by clients that are configured with a faultInjectionPolicy."
                              properties:
                                abort:
                                  description: The specification for how client requests
                                    are aborted as part of fault injection.
                                  properties:
                                    httpStatus:
                                      description: The HTTP status code used to abort
                                        the request. The value must be between 200
                                        and 599 inclusive.
                                      format: int64
                                      type: integer
                                    percentage:
                                      description: The percentage of traffic (connections/operations/requests)
                                        which will be aborted as part of fault injection.
                                        The value must be between 0.0 and 100.0 inclusive.
                                      format: double
                                      type: number
                                  type: object
                                delay:
                                  description: The specification for how client requests
                                    are delayed as part of fault injection, before
                                    being sent to a backend service.
                                  properties:
                                    fixedDelay:
                                      description: Specifies the value of the fixed
                                        delay interval.
                                      properties:
                                        nanos:
                                          description: Span of time that's a fraction
                                            of a second at nanosecond resolution.
                                            Durations less than one second are represented
                                            with a 0 seconds field and a positive
                                            nanos field. Must be from 0 to 999,999,999
                                            inclusive.
                                          format: int64
                                          type: integer
                                        seconds:
                                          description: 'Span of time at a resolution
                                            of a second. Must be from 0 to 315,576,000,000
                                            inclusive. Note: these bounds are computed
                                            from: 60 sec/min * 60 min/hr * 24 hr/day
                                            * 365.25 days/year * 10000 years'
                                          type: string
                                      type: object
                                    percentage:
                                      description: The percentage of traffic (connections/operations/requests)
                                        on which delay will be introduced as part
                                        of fault injection. The value must be between
                                        0.0 and 100.0 inclusive.
                                      format: double
                                      type: number
                                  type: object
                              type: object
                            requestMirrorPolicy:
                              description: Specifies the policy on how requests intended
                                for the route's backends are shadowed to a separate
                                mirrored backend service. Loadbalancer does not wait
                                for responses from the shadow service. Prior to sending
                                traffic to the shadow service, the host / authority
                                header is suffixed with -shadow.
                              properties:
                                backendService:
                                  description: The full or partial URL to the BackendService
                                    resource being mirrored to.
                                  type: string
                              required:
                              - backendService
                              type: object
                            retryPolicy:
                              description: Specifies the retry policy associated with
                                this route.
                              properties:
                                numRetries:
                                  description: Specifies the allowed number retries.
                                    This number must be > 0. If not specified, defaults
                                    to 1.
                                  format: int64
                                  type: integer
                                perTryTimeout:
                                  description: "Specifies a non-zero timeout per retry
                                    attempt. \n If not specified, will use the timeout
                                    set in HttpRouteAction. If timeout in HttpRouteAction
                                    is not set, will use the largest timeout among
                                    all backend services associated with the route."
                                  properties:
                                    nanos:
                                      description: Span of time that's a fraction
                                        of a second at nanosecond resolution. Durations
                                        less than one second are represented with
                                        a 0 seconds field and a positive nanos field.
                                        Must be from 0 to 999,999,999 inclusive.
                                      format: int64
                                      type: integer
                                    seconds:
                                      description: 'Span of time at a resolution of
                                        a second. Must be from 0 to 315,576,000,000
                                        inclusive. Note: these bounds are computed
                                        from: 60 sec/min * 60 min/hr * 24 hr/day *
                                        365.25 days/year * 10000 years'
                                      type: string
                                  type: object
                                retryConditions:
                                  description: "Specfies one or more conditions when
                                    this retry rule applies. Valid values are: \n
                                    * 5xx: Loadbalancer will attempt a retry if the
                                    backend service responds with any 5xx response
                                    code,   or if the backend service does not respond
                                    at all, example: disconnects, reset, read timeout,
                                    * connection failure, and refused streams. * gateway-error:
                                    Similar to 5xx, but only applies to response codes
                                    502, 503 or 504. * connect-failure: Loadbalancer
                                    will retry on failures connecting to backend services,
                                    \  for example due to connection timeouts. * retriable-4xx:
                                    Loadbalancer will retry for retriable 4xx response
                                    codes.   Currently the only retriable error supported
                                    is 409. * refused-stream:Loadbalancer will retry
                                    if the backend service resets the stream with
                                    a REFUSED_STREAM error code.   This reset type
                                    indicates that it is safe to retry. * cancelled:
                                    Loadbalancer will retry if the gRPC status code
                                    in the response header is set to cancelled * deadline-exceeded:
                                    Loadbalancer will retry if the gRPC status code
                                    in the response header is set to deadline-exceeded
                                    * resource-exhausted: Loadbalancer will retry
                                    if the gRPC status code in the response header
                                    is set to resource-exhausted * unavailable: Loadbalancer
                                    will retry if the gRPC status code in the response
                                    header is set to unavailable"
                                  items:
                                    type: string
                                  type: array
                              type: object
                            timeout:
                              description: "Specifies the timeout for the selected
                                route. Timeout is computed from the time the request
                                has been fully processed (i.e. end-of-stream) up until
                                the response has been completely processed. Timeout
                                includes all retries. \n If not specified, will use
                                the largest timeout among all backend services associated
                                with the route."
                              properties:
                                nanos:
                                  description: Span of time that's a fraction of a
                                    second at nanosecond resolution. Durations less
                                    than one second are represented with a 0 seconds
                                    field and a positive nanos field. Must be from
                                    0 to 999,999,999 inclusive.
                                  format: int64
                                  type: integer
                                seconds:
                                  description: 'Span of time at a resolution of a
                                    second. Must be from 0 to 315,576,000,000 inclusive.
                                    Note: these bounds are computed from: 60 sec/min
                                    * 60 min/hr * 24 hr/day * 365.25 days/year * 10000
                                    years'
                                  type: string
                              type: object
                            urlRewrite:
                              description: The spec to modify the URL of the request,
                                prior to forwarding the request to the matched service.
                              properties:
                                hostRewrite:
                                  description: "Prior to forwarding the request to
                                    the selected service, the request's host header
                                    is replaced with contents of hostRewrite. \n The
                                    value must be between 1 and 255 characters."
                                  type: string
                                pathPrefixRewrite:
                                  description: "Prior to forwarding the request to
                                    the selected backend service, the matching portion
                                    of the request's path is replaced by pathPrefixRewrite.
                                    \n The value must be between 1 and 1024 characters."
                                  type: string
                              type: object
                            weightedBackendServices:
                              description: "A list of weighted backend services to
                                send traffic to when a route match occurs. The weights
                                determine the fraction of traffic that flows to their
                                corresponding backend service. If all traffic needs
                                to go to a single backend service, there must be one
                                weightedBackendService with weight set to a non 0
                                number. \n Once a backendService is identified and
                                before forwarding the request to the backend service,
                                advanced routing actions like Url rewrites and header
                                transformations are applied depending on additional
                                settings specified in this HttpRouteAction."
                              items:
                                properties:
                                  backendService:
                                    description: The full or partial URL to the default
                                      BackendService resource. Before forwarding the
                                      request to backendService, the loadbalancer
                                      applies any relevant headerActions specified
                                      as part of this backendServiceWeight.
                                    type: string
                                  headerAction:
                                    description: "Specifies changes to request and
                                      response headers that need to take effect for
                                      the selected backendService. \n headerAction
                                      specified here take effect before headerAction
                                      in the enclosing HttpRouteRule, PathMatcher
                                      and UrlMap."
                                    properties:
                                      requestHeadersToAdd:
                                        description: Headers to add to a matching
                                          request prior to forwarding the request
                                          to the backendService.
                                        items:
                                          properties:
                                            headerName:
                                              description: The name of the header
                                                to add.
                                              type: string
                                            headerValue:
                                              description: The value of the header
                                                to add.
                                              type: string
                                            replace:
                                              description: If false, headerValue is
                                                appended to any values that already
                                                exist for the header. If true, headerValue
                                                is set for the header, discarding
                                                any values that were set for that
                                                header.
                                              type: boolean
                                          type: object
                                        type: array
                                      requestHeadersToRemove:
                                        description: A list of header names for headers
                                          that need to be removed from the request
                                          prior to forwarding the request to the backendService.
                                        items:
                                          type: string
                                        type: array
                                      responseHeadersToAdd:
                                        description: Headers to add the response prior
                                          to sending the response back to the client.
                                        items:
                                          properties:
                                            headerName:
                                              description: The name of the header
                                                to add.
                                              type: string
                                            headerValue:
                                              description: The value of the header
                                                to add.
                                              type: string
                                            replace:
                                              description: If false, headerValue is
                                                appended to any values that already
                                                exist for the header. If true, headerValue
                                                is set for the header, discarding
                                                any values that were set for that
                                                header.
                                              type: boolean
                                          type: object
                                        type: array
                                      responseHeadersToRemove:
                                        description: A list of header names for headers
                                          that need to be removed from the response
                                          prior to sending the response back to the
                                          client.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  weight:
                                    description: "Specifies the fraction of traffic
                                      sent to backendService, computed as weight /
                                      (sum of all weightedBackendService weights in
                                      routeAction) . \n The selection of a backend
                                      service is determined only for new traffic.
                                      Once a user's request has been directed to a
                                      backendService, subsequent requests will be
                                      sent to the same backendService as determined
                                      by the BackendService's session affinity policy.
                                      \n The value must be between 0 and 1000"
                                    format: int64
                                    type: integer
                                type: object
                              type: array
                          type: object
                        defaultService:
                          description: The backend service or backend bucket to use
                            when none of the given paths match.
                          type: string
                        defaultURLRedirect:
                          description: When none of the specified hostRules match,
                            the request is redirected to a URL specified by defaultUrlRedirect.
                            If defaultUrlRedirect is specified, defaultService or
                            defaultRouteAction must not be set.
                          properties:
                            hostRedirect:
                              description: The host that will be used in the redirect
                                response instead of the one that was supplied in the
                                request. The value must be between 1 and 255 characters.
                              type: string
                            httpsRedirect:
                              description: If set to true, the URL scheme in the redirected
                                request is set to https. If set to false, the URL
                                scheme of the redirected request will remain the same
                                as that of the request. This must only be set for
                                UrlMaps used in TargetHttpProxys. Setting this true
                                for TargetHttpsProxy is not permitted. The default
                                is set to false.
                              type: boolean
                            pathRedirect:
                              description: The path that will be used in the redirect
                                response instead of the one that was supplied in the
                                request. pathRedirect cannot be supplied together
                                with prefixRedirect. Supply one alone or neither.
                                If neither is supplied, the path of the original request
                                will be used for the redirect. The value must be between
                                1 and 1024 characters.
                              type: string
                            prefixRedirect:
                              description: The prefix that replaces the prefixMatch
                                specified in the HttpRouteRuleMatch, retaining the
                                remaining portion of the URL before redirecting the
                                request. prefixRedirect cannot be supplied together
                                with pathRedirect. Supply one alone or neither. If
                                neither is supplied, the path of the original request
                                will be used for the redirect. The value must be between
                                1 and 1024 characters.
                              type: string
                            redirectResponseCode:
                              description: "The HTTP Status code to use for this RedirectAction.
                                Supported values are: \n * MOVED_PERMANENTLY_DEFAULT,
                                which is the default value and corresponds to 301.
                                \n * FOUND, which corresponds to 302. \n * SEE_OTHER
                                which corresponds to 303. \n * TEMPORARY_REDIRECT,
                                which corresponds to 307. In this case, the request
                                method will be retained. \n * PERMANENT_REDIRECT,
                                which corresponds to 308. In this case, the request
                                method will be retained. Possible values: [\"FOUND\",
                                \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\",
                                \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                              type: string
                            stripQuery:
                              description: If set to true, any accompanying query
                                portion of the original URL is removed prior to redirecting
                                the request. If set to false, the query portion of
                                the original URL is retained.  This field is required
                                to ensure an empty block is not set. The normal default
                                value is false.
                              type: boolean
                          required:
                          - stripQuery
                          type: object
                        description:
                          description: An optional description of this resource. Provide
                            this property when you create the resource.
                          type: string
                        headerAction:
                          description: Specifies changes to request and response headers
                            that need to take effect for the selected backendService.
                            HeaderAction specified here are applied after the matching
                            HttpRouteRule HeaderAction and before the HeaderAction
                            in the UrlMap
                          properties:
                            requestHeadersToAdd:
                              description: Headers to add to a matching request prior
                                to forwarding the request to the backendService.
                              items:
                                properties:
                                  headerName:
                                    description: The name of the header.
                                    type: string
                                  headerValue:
                                    description: The value of the header to add.
                                    type: string
                                  replace:
                                    description: If false, headerValue is appended
                                      to any values that already exist for the header.
                                      If true, headerValue is set for the header,
                                      discarding any values that were set for that
                                      header.
                                    type: boolean
                                required:
                                - headerName
                                - headerValue
                                - replace
                                type: object
                              type: array
                            requestHeadersToRemove:
                              description: A list of header names for headers that
                                need to be removed from the request prior to forwarding
                                the request to the backendService.
                              items:
                                type: string
                              type: array
                            responseHeadersToAdd:
                              description: Headers to add the response prior to sending
                                the response back to the client.
                              items:
                                properties:
                                  headerName:
                                    description: The name of the header.
                                    type: string
                                  headerValue:
                                    description: The value of the header to add.
                                    type: string
                                  replace:
                                    description: If false, headerValue is appended
                                      to any values that already exist for the header.
                                      If true, headerValue is set for the header,
                                      discarding any values that were set for that
                                      header.
                                    type: boolean
                                required:
                                - headerName
                                - headerValue
                                - replace
                                type: object
                              type: array
                            responseHeadersToRemove:
                              description: A list of header names for headers that
                                need to be removed from the response prior to sending
                                the response back to the client.
                              items:
                                type: string
                              type: array
                          type: object
                        name:
                          description: The name to which this PathMatcher is referred
                            by the HostRule.
                          type: string
                        pathRule:
                          description: 'The list of path rules. Use this list instead
                            of routeRules when routing based on simple path matching
                            is all that''s required. The order by which path rules
                            are specified does not matter. Matches are always done
                            on the longest-path-first basis. For example: a pathRule
                            with a path /a/b/c/* will match before /a/b/* irrespective
                            of the order in which those paths appear in this list.
                            Within a given pathMatcher, only one of pathRules or routeRules
                            must be set.'
                          items:
                            properties:
                              paths:
                                description: 'The list of path patterns to match.
                                  Each must start with / and the only place a * is
                                  allowed is at the end following a /. The string
                                  fed to the path matcher does not include any text
                                  after the first ? or #, and those chars are not
                                  allowed here.'
                                items:
                                  type: string
                                type: array
                              routeAction:
                                description: In response to a matching path, the load
                                  balancer performs advanced routing actions like
                                  URL rewrites, header transformations, etc. prior
                                  to forwarding the request to the selected backend.
                                  If routeAction specifies any weightedBackendServices,
                                  service must not be set. Conversely if service is
                                  set, routeAction cannot contain any  weightedBackendServices.
                                  Only one of routeAction or urlRedirect must be set.
                                properties:
                                  corsPolicy:
                                    description: The specification for allowing client
                                      side cross-origin requests. Please see W3C Recommendation
                                      for Cross Origin Resource Sharing
                                    properties:
                                      allowCredentials:
                                        description: In response to a preflight request,
                                          setting this to true indicates that the
                                          actual request can include user credentials.
                                          This translates to the Access- Control-Allow-Credentials
                                          header. Defaults to false.
                                        type: boolean
                                      allowHeaders:
                                        description: Specifies the content for the
                                          Access-Control-Allow-Headers header.
                                        items:
                                          type: string
                                        type: array
                                      allowMethods:
                                        description: Specifies the content for the
                                          Access-Control-Allow-Methods header.
                                        items:
                                          type: string
                                        type: array
                                      allowOriginRegexes:
                                        description: Specifies the regular expression
                                          patterns that match allowed origins. For
                                          regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
                                          An origin is allowed if it matches either
                                          allow_origins or allow_origin_regex.
                                        items:
                                          type: string
                                        type: array
                                      allowOrigins:
                                        description: Specifies the list of origins
                                          that will be allowed to do CORS requests.
                                          An origin is allowed if it matches either
                                          allow_origins or allow_origin_regex.
                                        items:
                                          type: string
                                        type: array
                                      disabled:
                                        description: If true, specifies the CORS policy
                                          is disabled.
                                        type: boolean
                                      exposeHeaders:
                                        description: Specifies the content for the
                                          Access-Control-Expose-Headers header.
                                        items:
                                          type: string
                                        type: array
                                      maxAge:
                                        description: Specifies how long the results
                                          of a preflight request can be cached. This
                                          translates to the content for the Access-Control-Max-Age
                                          header.
                                        format: int64
                                        type: integer
                                    required:
                                    - disabled
                                    type: object
                                  faultInjectionPolicy:
                                    description: The specification for fault injection
                                      introduced into traffic to test the resiliency
                                      of clients to backend service failure. As part
                                      of fault injection, when clients send requests
                                      to a backend service, delays can be introduced
                                      by Loadbalancer on a percentage of requests
                                      before sending those request to the backend
                                      service. Similarly requests from clients can
                                      be aborted by the Loadbalancer for a percentage
                                      of requests. timeout and retry_policy will be
                                      ignored by clients that are configured with
                                      a fault_injection_policy.
                                    properties:
                                      abort:
                                        description: The specification for how client
                                          requests are aborted as part of fault injection.
                                        properties:
                                          httpStatus:
                                            description: The HTTP status code used
                                              to abort the request. The value must
                                              be between 200 and 599 inclusive.
                                            format: int64
                                            type: integer
                                          percentage:
                                            description: The percentage of traffic
                                              (connections/operations/requests) which
                                              will be aborted as part of fault injection.
                                              The value must be between 0.0 and 100.0
                                              inclusive.
                                            format: double
                                            type: number
                                        required:
                                        - httpStatus
                                        - percentage
                                        type: object
                                      delay:
                                        description: The specification for how client
                                          requests are delayed as part of fault injection,
                                          before being sent to a backend service.
                                        properties:
                                          fixedDelay:
                                            description: Specifies the value of the
                                              fixed delay interval.
                                            properties:
                                              nanos:
                                                description: Span of time that's a
                                                  fraction of a second at nanosecond
                                                  resolution. Durations less than
                                                  one second are represented with
                                                  a 0 'seconds' field and a positive
                                                  'nanos' field. Must be from 0 to
                                                  999,999,999 inclusive.
                                                format: int64
                                                type: integer
                                              seconds:
                                                description: Span of time at a resolution
                                                  of a second. Must be from 0 to 315,576,000,000
                                                  inclusive.
                                                type: string
                                            required:
                                            - seconds
                                            type: object
                                          percentage:
                                            description: The percentage of traffic
                                              (connections/operations/requests) on
                                              which delay will be introduced as part
                                              of fault injection. The value must be
                                              between 0.0 and 100.0 inclusive.
                                            format: double
                                            type: number
                                        required:
                                        - fixedDelay
                                        - percentage
                                        type: object
                                    type: object
                                  requestMirrorPolicy:
                                    description: Specifies the policy on how requests
                                      intended for the route's backends are shadowed
                                      to a separate mirrored backend service. Loadbalancer
                                      does not wait for responses from the shadow
                                      service. Prior to sending traffic to the shadow
                                      service, the host / authority header is suffixed
                                      with -shadow.
                                    properties:
                                      backendService:
                                        description: The BackendService resource being
                                          mirrored to.
                                        type: string
                                    required:
                                    - backendService
                                    type: object
                                  retryPolicy:
                                    description: Specifies the retry policy associated
                                      with this route.
                                    properties:
                                      numRetries:
                                        description: Specifies the allowed number
                                          retries. This number must be > 0.
                                        format: int64
                                        type: integer
                                      perTryTimeout:
                                        description: Specifies a non-zero timeout
                                          per retry attempt.
                                        properties:
                                          nanos:
                                            description: Span of time that's a fraction
                                              of a second at nanosecond resolution.
                                              Durations less than one second are represented
                                              with a 0 'seconds' field and a positive
                                              'nanos' field. Must be from 0 to 999,999,999
                                              inclusive.
                                            format: int64
                                            type: integer
                                          seconds:
                                            description: Span of time at a resolution
                                              of a second. Must be from 0 to 315,576,000,000
                                              inclusive.
                                            type: string
                                        required:
                                        - seconds
                                        type: object
                                      retryConditions:
                                        description: "Specifies one or more conditions
                                          when this retry rule applies. Valid values
                                          are: \n * 5xx: Loadbalancer will attempt
                                          a retry if the backend service responds
                                          with any 5xx response code, or if the backend
                                          service does not respond at all, example:
                                          disconnects, reset, read timeout, connection
                                          failure, and refused streams. * gateway-error:
                                          Similar to 5xx, but only applies to response
                                          codes 502, 503 or 504. * connect-failure:
                                          Loadbalancer will retry on failures connecting
                                          to backend services, for example due to
                                          connection timeouts. * retriable-4xx: Loadbalancer
                                          will retry for retriable 4xx response codes.
                                          Currently the only retriable error supported
                                          is 409. * refused-stream: Loadbalancer will
                                          retry if the backend service resets the
                                          stream with a REFUSED_STREAM error code.
                                          This reset type indicates that it is safe
                                          to retry. * cancelled: Loadbalancer will
                                          retry if the gRPC status code in the response
                                          header is set to cancelled * deadline-exceeded:
                                          Loadbalancer will retry if the gRPC status
                                          code in the response header is set to deadline-exceeded
                                          * resource-exhausted: Loadbalancer will
                                          retry if the gRPC status code in the response
                                          header is set to resource-exhausted * unavailable:
                                          Loadbalancer will retry if the gRPC status
                                          code in the response header is set to unavailable"
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  timeout:
                                    description: Specifies the timeout for the selected
                                      route. Timeout is computed from the time the
                                      request is has been fully processed (i.e. end-of-stream)
                                      up until the response has been completely processed.
                                      Timeout includes all retries. If not specified,
                                      the default value is 15 seconds.
                                    properties:
                                      nanos:
                                        description: Span of time that's a fraction
                                          of a second at nanosecond resolution. Durations
                                          less than one second are represented with
                                          a 0 'seconds' field and a positive 'nanos'
                                          field. Must be from 0 to 999,999,999 inclusive.
                                        format: int64
                                        type: integer
                                      seconds:
                                        description: Span of time at a resolution
                                          of a second. Must be from 0 to 315,576,000,000
                                          inclusive.
                                        type: string
                                    required:
                                    - seconds
                                    type: object
                                  urlRewrite:
                                    description: The spec to modify the URL of the
                                      request, prior to forwarding the request to
                                      the matched service
                                    properties:
                                      hostRewrite:
                                        description: Prior to forwarding the request
                                          to the selected service, the request's host
                                          header is replaced with contents of hostRewrite.
                                          The value must be between 1 and 255 characters.
                                        type: string
                                      pathPrefixRewrite:
                                        description: Prior to forwarding the request
                                          to the selected backend service, the matching
                                          portion of the request's path is replaced
                                          by pathPrefixRewrite. The value must be
                                          between 1 and 1024 characters.
                                        type: string
                                    type: object
                                  weightedBackendServices:
                                    description: A list of weighted backend services
                                      to send traffic to when a route match occurs.
                                      The weights determine the fraction of traffic
                                      that flows to their corresponding backend service.
                                      If all traffic needs to go to a single backend
                                      service, there must be one  weightedBackendService
                                      with weight set to a non 0 number. Once a backendService
                                      is identified and before forwarding the request
                                      to the backend service, advanced routing actions
                                      like Url rewrites and header transformations
                                      are applied depending on additional settings
                                      specified in this HttpRouteAction.
                                    items:
                                      properties:
                                        backendService:
                                          description: The default BackendService
                                            resource. Before forwarding the request
                                            to backendService, the loadbalancer applies
                                            any relevant headerActions specified as
                                            part of this backendServiceWeight.
                                          type: string
                                        headerAction:
                                          description: Specifies changes to request
                                            and response headers that need to take
                                            effect for the selected backendService.
                                            headerAction specified here take effect
                                            before headerAction in the enclosing HttpRouteRule,
                                            PathMatcher and UrlMap.
                                          properties:
                                            requestHeadersToAdd:
                                              description: Headers to add to a matching
                                                request prior to forwarding the request
                                                to the backendService.
                                              items:
                                                properties:
                                                  headerName:
                                                    description: The name of the header.
                                                    type: string
                                                  headerValue:
                                                    description: The value of the
                                                      header to add.
                                                    type: string
                                                  replace:
                                                    description: If false, headerValue
                                                      is appended to any values that
                                                      already exist for the header.
                                                      If true, headerValue is set
                                                      for the header, discarding any
                                                      values that were set for that
                                                      header.
                                                    type: boolean
                                                required:
                                                - headerName
                                                - headerValue
                                                - replace
                                                type: object
                                              type: array
                                            requestHeadersToRemove:
                                              description: A list of header names
                                                for headers that need to be removed
                                                from the request prior to forwarding
                                                the request to the backendService.
                                              items:
                                                type: string
                                              type: array
                                            responseHeadersToAdd:
                                              description: Headers to add the response
                                                prior to sending the response back
                                                to the client.
                                              items:
                                                properties:
                                                  headerName:
                                                    description: The name of the header.
                                                    type: string
                                                  headerValue:
                                                    description: The value of the
                                                      header to add.
                                                    type: string
                                                  replace:
                                                    description: If false, headerValue
                                                      is appended to any values that
                                                      already exist for the header.
                                                      If true, headerValue is set
                                                      for the header, discarding any
                                                      values that were set for that
                                                      header.
                                                    type: boolean
                                                required:
                                                - headerName
                                                - headerValue
                                                - replace
                                                type: object
                                              type: array
                                            responseHeadersToRemove:
                                              description: A list of header names
                                                for headers that need to be removed
                                                from the response prior to sending
                                                the response back to the client.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        weight:
                                          description: Specifies the fraction of traffic
                                            sent to backendService, computed as weight
                                            / (sum of all weightedBackendService weights
                                            in routeAction) . The selection of a backend
                                            service is determined only for new traffic.
                                            Once a user's request has been directed
                                            to a backendService, subsequent requests
                                            will be sent to the same backendService
                                            as determined by the BackendService's
                                            session affinity policy. The value must
                                            be between 0 and 1000
                                          format: int64
                                          type: integer
                                      required:
                                      - backendService
                                      - weight
                                      type: object
                                    type: array
                                type: object
                              service:
                                description: The backend service or backend bucket
                                  to use if any of the given paths match.
                                type: string
                              urlRedirect:
                                description: When a path pattern is matched, the request
                                  is redirected to a URL specified by urlRedirect.
                                  If urlRedirect is specified, service or routeAction
                                  must not be set.
                                properties:
                                  hostRedirect:
                                    description: The host that will be used in the
                                      redirect response instead of the one that was
                                      supplied in the request. The value must be between
                                      1 and 255 characters.
                                    type: string
                                  httpsRedirect:
                                    description: If set to true, the URL scheme in
                                      the redirected request is set to https. If set
                                      to false, the URL scheme of the redirected request
                                      will remain the same as that of the request.
                                      This must only be set for UrlMaps used in TargetHttpProxys.
                                      Setting this true for TargetHttpsProxy is not
                                      permitted. The default is set to false.
                                    type: boolean
                                  pathRedirect:
                                    description: The path that will be used in the
                                      redirect response instead of the one that was
                                      supplied in the request. pathRedirect cannot
                                      be supplied together with prefixRedirect. Supply
                                      one alone or neither. If neither is supplied,
                                      the path of the original request will be used
                                      for the redirect. The value must be between
                                      1 and 1024 characters.
                                    type: string
                                  prefixRedirect:
                                    description: The prefix that replaces the prefixMatch
                                      specified in the HttpRouteRuleMatch, retaining
                                      the remaining portion of the URL before redirecting
                                      the request. prefixRedirect cannot be supplied
                                      together with pathRedirect. Supply one alone
                                      or neither. If neither is supplied, the path
                                      of the original request will be used for the
                                      redirect. The value must be between 1 and 1024
                                      characters.
                                    type: string
                                  redirectResponseCode:
                                    description: "The HTTP Status code to use for
                                      this RedirectAction. Supported values are: \n
                                      * MOVED_PERMANENTLY_DEFAULT, which is the default
                                      value and corresponds to 301. \n * FOUND, which
                                      corresponds to 302. \n * SEE_OTHER which corresponds
                                      to 303. \n * TEMPORARY_REDIRECT, which corresponds
                                      to 307. In this case, the request method will
                                      be retained. \n * PERMANENT_REDIRECT, which
                                      corresponds to 308. In this case, the request
                                      method will be retained. Possible values: [\"FOUND\",
                                      \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\",
                                      \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                                    type: string
                                  stripQuery:
                                    description: If set to true, any accompanying
                                      query portion of the original URL is removed
                                      prior to redirecting the request. If set to
                                      false, the query portion of the original URL
                                      is retained.  This field is required to ensure
                                      an empty block is not set. The normal default
                                      value is false.
                                    type: boolean
                                required:
                                - stripQuery
                                type: object
                            required:
                            - paths
                            type: object
                          type: array
                        routeRules:
                          description: 'The list of ordered HTTP route rules. Use
                            this list instead of pathRules when advanced route matching
                            and routing actions are desired. The order of specifying
                            routeRules matters: the first rule that matches will cause
                            its specified routing action to take effect. Within a
                            given pathMatcher, only one of pathRules or routeRules
                            must be set. routeRules are not supported in UrlMaps intended
                            for External load balancers.'
                          items:
                            properties:
                              headerAction:
                                description: Specifies changes to request and response
                                  headers that need to take effect for the selected
                                  backendService. The headerAction specified here
                                  are applied before the matching pathMatchers[].headerAction
                                  and after pathMatchers[].routeRules[].r outeAction.weightedBackendService.backendServiceWeightAction[].headerAction
                                properties:
                                  requestHeadersToAdd:
                                    description: Headers to add to a matching request
                                      prior to forwarding the request to the backendService.
                                    items:
                                      properties:
                                        headerName:
                                          description: The name of the header.
                                          type: string
                                        headerValue:
                                          description: The value of the header to
                                            add.
                                          type: string
                                        replace:
                                          description: If false, headerValue is appended
                                            to any values that already exist for the
                                            header. If true, headerValue is set for
                                            the header, discarding any values that
                                            were set for that header.
                                          type: boolean
                                      required:
                                      - headerName
                                      - headerValue
                                      - replace
                                      type: object
                                    type: array
                                  requestHeadersToRemove:
                                    description: A list of header names for headers
                                      that need to be removed from the request prior
                                      to forwarding the request to the backendService.
                                    items:
                                      type: string
                                    type: array
                                  responseHeadersToAdd:
                                    description: Headers to add the response prior
                                      to sending the response back to the client.
                                    items:
                                      properties:
                                        headerName:
                                          description: The name of the header.
                                          type: string
                                        headerValue:
                                          description: The value of the header to
                                            add.
                                          type: string
                                        replace:
                                          description: If false, headerValue is appended
                                            to any values that already exist for the
                                            header. If true, headerValue is set for
                                            the header, discarding any values that
                                            were set for that header.
                                          type: boolean
                                      required:
                                      - headerName
                                      - headerValue
                                      - replace
                                      type: object
                                    type: array
                                  responseHeadersToRemove:
                                    description: A list of header names for headers
                                      that need to be removed from the response prior
                                      to sending the response back to the client.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              matchRules:
                                description: The rules for determining a match.
                                items:
                                  properties:
                                    fullPathMatch:
                                      description: For satisfying the matchRule condition,
                                        the path of the request must exactly match
                                        the value specified in fullPathMatch after
                                        removing any query parameters and anchor that
                                        may be part of the original URL. FullPathMatch
                                        must be between 1 and 1024 characters. Only
                                        one of prefixMatch, fullPathMatch or regexMatch
                                        must be specified.
                                      type: string
                                    headerMatches:
                                      description: Specifies a list of header match
                                        criteria, all of which must match corresponding
                                        headers in the request.
                                      items:
                                        properties:
                                          exactMatch:
                                            description: The value should exactly
                                              match contents of exactMatch. Only one
                                              of exactMatch, prefixMatch, suffixMatch,
                                              regexMatch, presentMatch or rangeMatch
                                              must be set.
                                            type: string
                                          headerName:
                                            description: The name of the HTTP header
                                              to match. For matching against the HTTP
                                              request's authority, use a headerMatch
                                              with the header name ":authority". For
                                              matching a request's method, use the
                                              headerName ":method".
                                            type: string
                                          invertMatch:
                                            description: If set to false, the headerMatch
                                              is considered a match if the match criteria
                                              above are met. If set to true, the headerMatch
                                              is considered a match if the match criteria
                                              above are NOT met. Defaults to false.
                                            type: boolean
                                          prefixMatch:
                                            description: The value of the header must
                                              start with the contents of prefixMatch.
                                              Only one of exactMatch, prefixMatch,
                                              suffixMatch, regexMatch, presentMatch
                                              or rangeMatch must be set.
                                            type: string
                                          presentMatch:
                                            description: A header with the contents
                                              of headerName must exist. The match
                                              takes place whether or not the request's
                                              header has a value or not. Only one
                                              of exactMatch, prefixMatch, suffixMatch,
                                              regexMatch, presentMatch or rangeMatch
                                              must be set.
                                            type: boolean
                                          rangeMatch:
                                            description: The header value must be
                                              an integer and its value must be in
                                              the range specified in rangeMatch. If
                                              the header does not contain an integer,
                                              number or is empty, the match fails.
                                              For example for a range [-5, 0]   -
                                              -3 will match.  - 0 will not match.  -
                                              0.25 will not match.  - -3someString
                                              will not match.   Only one of exactMatch,
                                              prefixMatch, suffixMatch, regexMatch,
                                              presentMatch or rangeMatch must be set.
                                            properties:
                                              rangeEnd:
                                                description: The end of the range
                                                  (exclusive).
                                                format: int64
                                                type: integer
                                              rangeStart:
                                                description: The start of the range
                                                  (inclusive).
                                                format: int64
                                                type: integer
                                            required:
                                            - rangeEnd
                                            - rangeStart
                                            type: object
                                          regexMatch:
                                            description: 'The value of the header
                                              must match the regular expression specified
                                              in regexMatch. For regular expression
                                              grammar, please see: en.cppreference.com/w/cpp/regex/ecmascript  For
                                              matching against a port specified in
                                              the HTTP request, use a headerMatch
                                              with headerName set to PORT and a regular
                                              expression that satisfies the RFC2616
                                              Host header''s port specifier. Only
                                              one of exactMatch, prefixMatch, suffixMatch,
                                              regexMatch, presentMatch or rangeMatch
                                              must be set.'
                                            type: string
                                          suffixMatch:
                                            description: The value of the header must
                                              end with the contents of suffixMatch.
                                              Only one of exactMatch, prefixMatch,
                                              suffixMatch, regexMatch, presentMatch
                                              or rangeMatch must be set.
                                            type: string
                                        required:
                                        - headerName
                                        type: object
                                      type: array
                                    ignoreCase:
                                      description: Specifies that prefixMatch and
                                        fullPathMatch matches are case sensitive.
                                        Defaults to false.
                                      type: boolean
                                    metadataFilters:
                                      description: Opaque filter criteria used by
                                        Loadbalancer to restrict routing configuration
                                        to a limited set xDS compliant clients. In
                                        their xDS requests to Loadbalancer, xDS clients
                                        present node metadata. If a match takes place,
                                        the relevant routing configuration is made
                                        available to those proxies. For each metadataFilter
                                        in this list, if its filterMatchCriteria is
                                        set to MATCH_ANY, at least one of the filterLabels
                                        must match the corresponding label provided
                                        in the metadata. If its filterMatchCriteria
                                        is set to MATCH_ALL, then all of its filterLabels
                                        must match with corresponding labels in the
                                        provided metadata. metadataFilters specified
                                        here can be overrides those specified in ForwardingRule
                                        that refers to this UrlMap. metadataFilters
                                        only applies to Loadbalancers that have their
                                        loadBalancingScheme set to INTERNAL_SELF_MANAGED.
                                      items:
                                        properties:
                                          filterLabels:
                                            description: The list of label value pairs
                                              that must match labels in the provided
                                              metadata based on filterMatchCriteria  This
                                              list must not be empty and can have
                                              at the most 64 entries.
                                            items:
                                              properties:
                                                name:
                                                  description: Name of metadata label.
                                                    The name can have a maximum length
                                                    of 1024 characters and must be
                                                    at least 1 character long.
                                                  type: string
                                                value:
                                                  description: The value of the label
                                                    must match the specified value.
                                                    value can have a maximum length
                                                    of 1024 characters.
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            maxItems: 64
                                            minItems: 1
                                            type: array
                                          filterMatchCriteria:
                                            description: 'Specifies how individual
                                              filterLabel matches within the list
                                              of filterLabels contribute towards the
                                              overall metadataFilter match. Supported
                                              values are:   - MATCH_ANY: At least
                                              one of the filterLabels must have a
                                              matching label in the provided metadata.   -
                                              MATCH_ALL: All filterLabels must have
                                              matching labels in the provided metadata.
                                              Possible values: ["MATCH_ALL", "MATCH_ANY"]'
                                            type: string
                                        required:
                                        - filterLabels
                                        - filterMatchCriteria
                                        type: object
                                      type: array
                                    prefixMatch:
                                      description: For satisfying the matchRule condition,
                                        the request's path must begin with the specified
                                        prefixMatch. prefixMatch must begin with a
                                        /. The value must be between 1 and 1024 characters.
                                        Only one of prefixMatch, fullPathMatch or
                                        regexMatch must be specified.
                                      type: string
                                    queryParameterMatches:
                                      description: Specifies a list of query parameter
                                        match criteria, all of which must match corresponding
                                        query parameters in the request.
                                      items:
                                        properties:
                                          exactMatch:
                                            description: The queryParameterMatch matches
                                              if the value of the parameter exactly
                                              matches the contents of exactMatch.
                                              Only one of presentMatch, exactMatch
                                              and regexMatch must be set.
                                            type: string
                                          name:
                                            description: The name of the query parameter
                                              to match. The query parameter must exist
                                              in the request, in the absence of which
                                              the request match fails.
                                            type: string
                                          presentMatch:
                                            description: Specifies that the queryParameterMatch
                                              matches if the request contains the
                                              query parameter, irrespective of whether
                                              the parameter has a value or not. Only
                                              one of presentMatch, exactMatch and
                                              regexMatch must be set.
                                            type: boolean
                                          regexMatch:
                                            description: The queryParameterMatch matches
                                              if the value of the parameter matches
                                              the regular expression specified by
                                              regexMatch. For the regular expression
                                              grammar, please see en.cppreference.com/w/cpp/regex/ecmascript  Only
                                              one of presentMatch, exactMatch and
                                              regexMatch must be set.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    regexMatch:
                                      description: For satisfying the matchRule condition,
                                        the path of the request must satisfy the regular
                                        expression specified in regexMatch after removing
                                        any query parameters and anchor supplied with
                                        the original URL. For regular expression grammar
                                        please see en.cppreference.com/w/cpp/regex/ecmascript  Only
                                        one of prefixMatch, fullPathMatch or regexMatch
                                        must be specified.
                                      type: string
                                  type: object
                                type: array
                              priority:
                                description: "For routeRules within a given pathMatcher,
                                  priority determines the order in which load balancer
                                  will interpret routeRules. RouteRules are evaluated
                                  in order of priority, from the lowest to highest
                                  number. The priority of a rule decreases as its
                                  number increases (1, 2, 3, N+1). The first rule
                                  that matches the request is applied. \n You cannot
                                  configure two or more routeRules with the same priority.
                                  Priority for each rule must be set to a number between
                                  0 and 2147483647 inclusive. \n Priority numbers
                                  can have gaps, which enable you to add or remove
                                  rules in the future without affecting the rest of
                                  the rules. For example, 1, 2, 3, 4, 5, 9, 12, 16
                                  is a valid series of priority numbers to which you
                                  could add rules numbered from 6 to 8, 10 to 11,
                                  and 13 to 15 in the future without any impact on
                                  existing rules."
                                format: int64
                                type: integer
                              routeAction:
                                description: In response to a matching matchRule,
                                  the load balancer performs advanced routing actions
                                  like URL rewrites, header transformations, etc.
                                  prior to forwarding the request to the selected
                                  backend. If  routeAction specifies any weightedBackendServices,
                                  service must not be set. Conversely if service is
                                  set, routeAction cannot contain any  weightedBackendServices.
                                  Only one of routeAction or urlRedirect must be set.
                                properties:
                                  corsPolicy:
                                    description: The specification for allowing client
                                      side cross-origin requests. Please see W3C Recommendation
                                      for Cross Origin Resource Sharing
                                    properties:
                                      allowCredentials:
                                        description: In response to a preflight request,
                                          setting this to true indicates that the
                                          actual request can include user credentials.
                                          This translates to the Access- Control-Allow-Credentials
                                          header. Defaults to false.
                                        type: boolean
                                      allowHeaders:
                                        description: Specifies the content for the
                                          Access-Control-Allow-Headers header.
                                        items:
                                          type: string
                                        type: array
                                      allowMethods:
                                        description: Specifies the content for the
                                          Access-Control-Allow-Methods header.
                                        items:
                                          type: string
                                        type: array
                                      allowOriginRegexes:
                                        description: Specifies the regular expression
                                          patterns that match allowed origins. For
                                          regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
                                          An origin is allowed if it matches either
                                          allow_origins or allow_origin_regex.
                                        items:
                                          type: string
                                        type: array
                                      allowOrigins:
                                        description: Specifies the list of origins
                                          that will be allowed to do CORS requests.
                                          An origin is allowed if it matches either
                                          allow_origins or allow_origin_regex.
                                        items:
                                          type: string
                                        type: array
                                      disabled:
                                        description: If true, specifies the CORS policy
                                          is disabled. which indicates that the CORS
                                          policy is in effect. Defaults to false.
                                        type: boolean
                                      exposeHeaders:
                                        description: Specifies the content for the
                                          Access-Control-Expose-Headers header.
                                        items:
                                          type: string
                                        type: array
                                      maxAge:
                                        description: Specifies how long the results
                                          of a preflight request can be cached. This
                                          translates to the content for the Access-Control-Max-Age
                                          header.
                                        format: int64
                                        type: integer
                                    type: object
                                  faultInjectionPolicy:
                                    description: The specification for fault injection
                                      introduced into traffic to test the resiliency
                                      of clients to backend service failure. As part
                                      of fault injection, when clients send requests
                                      to a backend service, delays can be introduced
                                      by Loadbalancer on a percentage of requests
                                      before sending those request to the backend
                                      service. Similarly requests from clients can
                                      be aborted by the Loadbalancer for a percentage
                                      of requests. timeout and retry_policy will be
                                      ignored by clients that are configured with
                                      a fault_injection_policy.
                                    properties:
                                      abort:
                                        description: The specification for how client
                                          requests are aborted as part of fault injection.
                                        properties:
                                          httpStatus:
                                            description: The HTTP status code used
                                              to abort the request. The value must
                                              be between 200 and 599 inclusive.
                                            format: int64
                                            type: integer
                                          percentage:
                                            description: The percentage of traffic
                                              (connections/operations/requests) which
                                              will be aborted as part of fault injection.
                                              The value must be between 0.0 and 100.0
                                              inclusive.
                                            format: double
                                            type: number
                                        type: object
                                      delay:
                                        description: The specification for how client
                                          requests are delayed as part of fault injection,
                                          before being sent to a backend service.
                                        properties:
                                          fixedDelay:
                                            description: Specifies the value of the
                                              fixed delay interval.
                                            properties:
                                              nanos:
                                                description: Span of time that's a
                                                  fraction of a second at nanosecond
                                                  resolution. Durations less than
                                                  one second are represented with
                                                  a 0 'seconds' field and a positive
                                                  'nanos' field. Must be from 0 to
                                                  999,999,999 inclusive.
                                                format: int64
                                                type: integer
                                              seconds:
                                                description: Span of time at a resolution
                                                  of a second. Must be from 0 to 315,576,000,000
                                                  inclusive.
                                                type: string
                                            required:
                                            - seconds
                                            type: object
                                          percentage:
                                            description: The percentage of traffic
                                              (connections/operations/requests) on
                                              which delay will be introduced as part
                                              of fault injection. The value must be
                                              between 0.0 and 100.0 inclusive.
                                            format: double
                                            type: number
                                        type: object
                                    type: object
                                  requestMirrorPolicy:
                                    description: Specifies the policy on how requests
                                      intended for the route's backends are shadowed
                                      to a separate mirrored backend service. Loadbalancer
                                      does not wait for responses from the shadow
                                      service. Prior to sending traffic to the shadow
                                      service, the host / authority header is suffixed
                                      with -shadow.
                                    properties:
                                      backendService:
                                        description: The BackendService resource being
                                          mirrored to.
                                        type: string
                                    required:
                                    - backendService
                                    type: object
                                  retryPolicy:
                                    description: Specifies the retry policy associated
                                      with this route.
                                    properties:
                                      numRetries:
                                        description: Specifies the allowed number
                                          retries. This number must be > 0.
                                        format: int64
                                        type: integer
                                      perTryTimeout:
                                        description: Specifies a non-zero timeout
                                          per retry attempt. If not specified, will
                                          use the timeout set in HttpRouteAction.
                                          If timeout in HttpRouteAction is not set,
                                          will use the largest timeout among all backend
                                          services associated with the route.
                                        properties:
                                          nanos:
                                            description: Span of time that's a fraction
                                              of a second at nanosecond resolution.
                                              Durations less than one second are represented
                                              with a 0 'seconds' field and a positive
                                              'nanos' field. Must be from 0 to 999,999,999
                                              inclusive.
                                            format: int64
                                            type: integer
                                          seconds:
                                            description: Span of time at a resolution
                                              of a second. Must be from 0 to 315,576,000,000
                                              inclusive.
                                            type: string
                                        required:
                                        - seconds
                                        type: object
                                      retryConditions:
                                        description: "Specfies one or more conditions
                                          when this retry rule applies. Valid values
                                          are: \n * 5xx: Loadbalancer will attempt
                                          a retry if the backend service responds
                                          with   any 5xx response code, or if the
                                          backend service does not respond at all,
                                          \  example: disconnects, reset, read timeout,
                                          connection failure, and refused   streams.
                                          * gateway-error: Similar to 5xx, but only
                                          applies to response codes   502, 503 or
                                          504. * connect-failure: Loadbalancer will
                                          retry on failures   connecting to backend
                                          services, for example due to connection
                                          timeouts. * retriable-4xx: Loadbalancer
                                          will retry for retriable 4xx response codes.
                                          \  Currently the only retriable error supported
                                          is 409. * refused-stream: Loadbalancer will
                                          retry if the backend service resets the
                                          stream with a   REFUSED_STREAM error code.
                                          This reset type indicates that it is safe
                                          to retry. * cancelled: Loadbalancer will
                                          retry if the gRPC status code in the response
                                          \  header is set to cancelled * deadline-exceeded:
                                          Loadbalancer will retry if the   gRPC status
                                          code in the response header is set to deadline-exceeded
                                          * resource-exhausted: Loadbalancer will
                                          retry if the gRPC status code in the response
                                          \  header is set to resource-exhausted *
                                          unavailable: Loadbalancer will retry if
                                          the gRPC status code in   the response header
                                          is set to unavailable"
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - numRetries
                                    type: object
                                  timeout:
                                    description: Specifies the timeout for the selected
                                      route. Timeout is computed from the time the
                                      request is has been fully processed (i.e. end-of-stream)
                                      up until the response has been completely processed.
                                      Timeout includes all retries. If not specified,
                                      the default value is 15 seconds.
                                    properties:
                                      nanos:
                                        description: Span of time that's a fraction
                                          of a second at nanosecond resolution. Durations
                                          less than one second are represented with
                                          a 0 'seconds' field and a positive 'nanos'
                                          field. Must be from 0 to 999,999,999 inclusive.
                                        format: int64
                                        type: integer
                                      seconds:
                                        description: Span of time at a resolution
                                          of a second. Must be from 0 to 315,576,000,000
                                          inclusive.
                                        type: string
                                    required:
                                    - seconds
                                    type: object
                                  urlRewrite:
                                    description: The spec to modify the URL of the
                                      request, prior to forwarding the request to
                                      the matched service
                                    properties:
                                      hostRewrite:
                                        description: Prior to forwarding the request
                                          to the selected service, the request's host
                                          header is replaced with contents of hostRewrite.
                                          The value must be between 1 and 255 characters.
                                        type: string
                                      pathPrefixRewrite:
                                        description: Prior to forwarding the request
                                          to the selected backend service, the matching
                                          portion of the request's path is replaced
                                          by pathPrefixRewrite. The value must be
                                          between 1 and 1024 characters.
                                        type: string
                                    type: object
                                  weightedBackendServices:
                                    description: A list of weighted backend services
                                      to send traffic to when a route match occurs.
                                      The weights determine the fraction of traffic
                                      that flows to their corresponding backend service.
                                      If all traffic needs to go to a single backend
                                      service, there must be one  weightedBackendService
                                      with weight set to a non 0 number. Once a backendService
                                      is identified and before forwarding the request
                                      to the backend service, advanced routing actions
                                      like Url rewrites and header transformations
                                      are applied depending on additional settings
                                      specified in this HttpRouteAction.
                                    items:
                                      properties:
                                        backendService:
                                          description: The default BackendService
                                            resource. Before forwarding the request
                                            to backendService, the loadbalancer applies
                                            any relevant headerActions specified as
                                            part of this backendServiceWeight.
                                          type: string
                                        headerAction:
                                          description: Specifies changes to request
                                            and response headers that need to take
                                            effect for the selected backendService.
                                            headerAction specified here take effect
                                            before headerAction in the enclosing HttpRouteRule,
                                            PathMatcher and UrlMap.
                                          properties:
                                            requestHeadersToAdd:
                                              description: Headers to add to a matching
                                                request prior to forwarding the request
                                                to the backendService.
                                              items:
                                                properties:
                                                  headerName:
                                                    description: The name of the header.
                                                    type: string
                                                  headerValue:
                                                    description: The value of the
                                                      header to add.
                                                    type: string
                                                  replace:
                                                    description: If false, headerValue
                                                      is appended to any values that
                                                      already exist for the header.
                                                      If true, headerValue is set
                                                      for the header, discarding any
                                                      values that were set for that
                                                      header.
                                                    type: boolean
                                                required:
                                                - headerName
                                                - headerValue
                                                - replace
                                                type: object
                                              type: array
                                            requestHeadersToRemove:
                                              description: A list of header names
                                                for headers that need to be removed
                                                from the request prior to forwarding
                                                the request to the backendService.
                                              items:
                                                type: string
                                              type: array
                                            responseHeadersToAdd:
                                              description: Headers to add the response
                                                prior to sending the response back
                                                to the client.
                                              items:
                                                properties:
                                                  headerName:
                                                    description: The name of the header.
                                                    type: string
                                                  headerValue:
                                                    description: The value of the
                                                      header to add.
                                                    type: string
                                                  replace:
                                                    description: If false, headerValue
                                                      is appended to any values that
                                                      already exist for the header.
                                                      If true, headerValue is set
                                                      for the header, discarding any
                                                      values that were set for that
                                                      header.
                                                    type: boolean
                                                required:
                                                - headerName
                                                - headerValue
                                                - replace
                                                type: object
                                              type: array
                                            responseHeadersToRemove:
                                              description: A list of header names
                                                for headers that need to be removed
                                                from the response prior to sending
                                                the response back to the client.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        weight:
                                          description: Specifies the fraction of traffic
                                            sent to backendService, computed as weight
                                            / (sum of all weightedBackendService weights
                                            in routeAction) . The selection of a backend
                                            service is determined only for new traffic.
                                            Once a user's request has been directed
                                            to a backendService, subsequent requests
                                            will be sent to the same backendService
                                            as determined by the BackendService's
                                            session affinity policy. The value must
                                            be between 0 and 1000
                                          format: int64
                                          type: integer
                                      required:
                                      - backendService
                                      - weight
                                      type: object
                                    type: array
                                type: object
                              service:
                                description: The backend service resource to which
                                  traffic is directed if this rule is matched. If
                                  routeAction is additionally specified, advanced
                                  routing actions like URL Rewrites, etc. take effect
                                  prior to sending the request to the backend. However,
                                  if service is specified, routeAction cannot contain
                                  any weightedBackendService s. Conversely, if routeAction
                                  specifies any weightedBackendServices, service must
                                  not be specified. Only one of urlRedirect, service
                                  or routeAction.weightedBackendService must be set.
                                type: string
                              urlRedirect:
                                description: When this rule is matched, the request
                                  is redirected to a URL specified by urlRedirect.
                                  If urlRedirect is specified, service or routeAction
                                  must not be set.
                                properties:
                                  hostRedirect:
                                    description: The host that will be used in the
                                      redirect response instead of the one that was
                                      supplied in the request. The value must be between
                                      1 and 255 characters.
                                    type: string
                                  httpsRedirect:
                                    description: If set to true, the URL scheme in
                                      the redirected request is set to https. If set
                                      to false, the URL scheme of the redirected request
                                      will remain the same as that of the request.
                                      This must only be set for UrlMaps used in TargetHttpProxys.
                                      Setting this true for TargetHttpsProxy is not
                                      permitted. Defaults to false.
                                    type: boolean
                                  pathRedirect:
                                    description: The path that will be used in the
                                      redirect response instead of the one that was
                                      supplied in the request. Only one of pathRedirect
                                      or prefixRedirect must be specified. The value
                                      must be between 1 and 1024 characters.
                                    type: string
                                  prefixRedirect:
                                    description: The prefix that replaces the prefixMatch
                                      specified in the HttpRouteRuleMatch, retaining
                                      the remaining portion of the URL before redirecting
                                      the request.
                                    type: string
                                  redirectResponseCode:
                                    description: "The HTTP Status code to use for
                                      this RedirectAction. Supported values are: \n
                                      * MOVED_PERMANENTLY_DEFAULT, which is the default
                                      value and corresponds to 301. \n * FOUND, which
                                      corresponds to 302. \n * SEE_OTHER which corresponds
                                      to 303. \n * TEMPORARY_REDIRECT, which corresponds
                                      to 307. In this case, the request method will
                                      be retained. \n * PERMANENT_REDIRECT, which
                                      corresponds to 308. In this case, the request
                                      method will be retained. Possible values: [\"FOUND\",
                                      \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\",
                                      \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                                    type: string
                                  stripQuery:
                                    description: If set to true, any accompanying
                                      query portion of the original URL is removed
                                      prior to redirecting the request. If set to
                                      false, the query portion of the original URL
                                      is retained. Defaults to false.
                                    type: boolean
                                type: object
                            required:
                            - priority
                            type: object
                          type: array
                      required:
                      - name
                      type: object
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  test:
                    description: The list of expected URL mapping tests. Request to
                      update this UrlMap will succeed only if all of the test cases
                      pass. You can specify a maximum of 100 tests per UrlMap.
                    items:
                      properties:
                        description:
                          description: Description of this test case.
                          type: string
                        host:
                          description: Host portion of the URL.
                          type: string
                        path:
                          description: Path portion of the URL.
                          type: string
                        service:
                          description: The backend service or backend bucket link
                            that should be matched by this test.
                          type: string
                      required:
                      - host
                      - path
                      - service
                      type: object
                    type: array
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                type: object
              mapID:
                description: The unique identifier for the resource.
                format: int64
                type: integer
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              pathMatcher:
                description: The list of named PathMatchers to use against the URL.
                items:
                  properties:
                    defaultRouteAction:
                      description: "defaultRouteAction takes effect when none of the
                        pathRules or routeRules match. The load balancer performs
                        advanced routing actions like URL rewrites, header transformations,
                        etc. prior to forwarding the request to the selected backend.
                        If defaultRouteAction specifies any weightedBackendServices,
                        defaultService must not be set. Conversely if defaultService
                        is set, defaultRouteAction cannot contain any weightedBackendServices.
                        \n Only one of defaultRouteAction or defaultUrlRedirect must
                        be set."
                      properties:
                        corsPolicy:
                          description: The specification for allowing client side
                            cross-origin requests. Please see [W3C Recommendation
                            for Cross Origin Resource Sharing](https://www.w3.org/TR/cors/)
                          properties:
                            allowCredentials:
                              description: In response to a preflight request, setting
                                this to true indicates that the actual request can
                                include user credentials. This translates to the Access-Control-Allow-Credentials
                                header.
                              type: boolean
                            allowHeaders:
                              description: Specifies the content for the Access-Control-Allow-Headers
                                header.
                              items:
                                type: string
                              type: array
                            allowMethods:
                              description: Specifies the content for the Access-Control-Allow-Methods
                                header.
                              items:
                                type: string
                              type: array
                            allowOriginRegexes:
                              description: Specifies the regular expression patterns
                                that match allowed origins. For regular expression
                                grammar please see en.cppreference.com/w/cpp/regex/ecmascript
                                An origin is allowed if it matches either an item
                                in allowOrigins or an item in allowOriginRegexes.
                              items:
                                type: string
                              type: array
                            allowOrigins:
                              description: Specifies the list of origins that will
                                be allowed to do CORS requests. An origin is allowed
                                if it matches either an item in allowOrigins or an
                                item in allowOriginRegexes.
                              items:
                                type: string
                              type: array
                            disabled:
                              description: If true, specifies the CORS policy is disabled.
                                The default value is false, which indicates that the
                                CORS policy is in effect.
                              type: boolean
                            exposeHeaders:
                              description: Specifies the content for the Access-Control-Expose-Headers
                                header.
                              items:
                                type: string
                              type: array
                            maxAge:
                              description: Specifies how long results of a preflight
                                request can be cached in seconds. This translates
                                to the Access-Control-Max-Age header.
                              format: int64
                              type: integer
                          type: object
                        faultInjectionPolicy:
                          description: "The specification for fault injection introduced
                            into traffic to test the resiliency of clients to backend
                            service failure. As part of fault injection, when clients
                            send requests to a backend service, delays can be introduced
                            by Loadbalancer on a percentage of requests before sending
                            those request to the backend service. Similarly requests
                            from clients can be aborted by the Loadbalancer for a
                            percentage of requests. \n timeout and retryPolicy will
                            be ignored by clients that are configured with a faultInjectionPolicy."
                          properties:
                            abort:
                              description: The specification for how client requests
                                are aborted as part of fault injection.
                              properties:
                                httpStatus:
                                  description: The HTTP status code used to abort
                                    the request. The value must be between 200 and
                                    599 inclusive.
                                  format: int64
                                  type: integer
                                percentage:
                                  description: The percentage of traffic (connections/operations/requests)
                                    which will be aborted as part of fault injection.
                                    The value must be between 0.0 and 100.0 inclusive.
                                  format: double
                                  type: number
                              type: object
                            delay:
                              description: The specification for how client requests
                                are delayed as part of fault injection, before being
                                sent to a backend service.
                              properties:
                                fixedDelay:
                                  description: Specifies the value of the fixed delay
                                    interval.
                                  properties:
                                    nanos:
                                      description: Span of time that's a fraction
                                        of a second at nanosecond resolution. Durations
                                        less than one second are represented with
                                        a 0 seconds field and a positive nanos field.
                                        Must be from 0 to 999,999,999 inclusive.
                                      format: int64
                                      type: integer
                                    seconds:
                                      description: 'Span of time at a resolution of
                                        a second. Must be from 0 to 315,576,000,000
                                        inclusive. Note: these bounds are computed
                                        from: 60 sec/min * 60 min/hr * 24 hr/day *
                                        365.25 days/year * 10000 years'
                                      type: string
                                  type: object
                                percentage:
                                  description: The percentage of traffic (connections/operations/requests)
                                    on which delay will be introduced as part of fault
                                    injection. The value must be between 0.0 and 100.0
                                    inclusive.
                                  format: double
                                  type: number
                              type: object
                          type: object
                        requestMirrorPolicy:
                          description: Specifies the policy on how requests intended
                            for the route's backends are shadowed to a separate mirrored
                            backend service. Loadbalancer does not wait for responses
                            from the shadow service. Prior to sending traffic to the
                            shadow service, the host / authority header is suffixed
                            with -shadow.
                          properties:
                            backendService:
                              description: The full or partial URL to the BackendService
                                resource being mirrored to.
                              type: string
                          required:
                          - backendService
                          type: object
                        retryPolicy:
                          description: Specifies the retry policy associated with
                            this route.
                          properties:
                            numRetries:
                              description: Specifies the allowed number retries. This
                                number must be > 0. If not specified, defaults to
                                1.
                              format: int64
                              type: integer
                            perTryTimeout:
                              description: "Specifies a non-zero timeout per retry
                                attempt. \n If not specified, will use the timeout
                                set in HttpRouteAction. If timeout in HttpRouteAction
                                is not set, will use the largest timeout among all
                                backend services associated with the route."
                              properties:
                                nanos:
                                  description: Span of time that's a fraction of a
                                    second at nanosecond resolution. Durations less
                                    than one second are represented with a 0 seconds
                                    field and a positive nanos field. Must be from
                                    0 to 999,999,999 inclusive.
                                  format: int64
                                  type: integer
                                seconds:
                                  description: 'Span of time at a resolution of a
                                    second. Must be from 0 to 315,576,000,000 inclusive.
                                    Note: these bounds are computed from: 60 sec/min
                                    * 60 min/hr * 24 hr/day * 365.25 days/year * 10000
                                    years'
                                  type: string
                              type: object
                            retryConditions:
                              description: "Specfies one or more conditions when this
                                retry rule applies. Valid values are: \n * 5xx: Loadbalancer
                                will attempt a retry if the backend service responds
                                with any 5xx response code,   or if the backend service
                                does not respond at all, example: disconnects, reset,
                                read timeout, * connection failure, and refused streams.
                                * gateway-error: Similar to 5xx, but only applies
                                to response codes 502, 503 or 504. * connect-failure:
                                Loadbalancer will retry on failures connecting to
                                backend services,   for example due to connection
                                timeouts. * retriable-4xx: Loadbalancer will retry
                                for retriable 4xx response codes.   Currently the
                                only retriable error supported is 409. * refused-stream:Loadbalancer
                                will retry if the backend service resets the stream
                                with a REFUSED_STREAM error code.   This reset type
                                indicates that it is safe to retry. * cancelled: Loadbalancer
                                will retry if the gRPC status code in the response
                                header is set to cancelled * deadline-exceeded: Loadbalancer
                                will retry if the gRPC status code in the response
                                header is set to deadline-exceeded * resource-exhausted:
                                Loadbalancer will retry if the gRPC status code in
                                the response header is set to resource-exhausted *
                                unavailable: Loadbalancer will retry if the gRPC status
                                code in the response header is set to unavailable"
                              items:
                                type: string
                              type: array
                          type: object
                        timeout:
                          description: "Specifies the timeout for the selected route.
                            Timeout is computed from the time the request has been
                            fully processed (i.e. end-of-stream) up until the response
                            has been completely processed. Timeout includes all retries.
                            \n If not specified, will use the largest timeout among
                            all backend services associated with the route."
                          properties:
                            nanos:
                              description: Span of time that's a fraction of a second
                                at nanosecond resolution. Durations less than one
                                second are represented with a 0 seconds field and
                                a positive nanos field. Must be from 0 to 999,999,999
                                inclusive.
                              format: int64
                              type: integer
                            seconds:
                              description: 'Span of time at a resolution of a second.
                                Must be from 0 to 315,576,000,000 inclusive. Note:
                                these bounds are computed from: 60 sec/min * 60 min/hr
                                * 24 hr/day * 365.25 days/year * 10000 years'
                              type: string
                          type: object
                        urlRewrite:
                          description: The spec to modify the URL of the request,
                            prior to forwarding the request to the matched service.
                          properties:
                            hostRewrite:
                              description: "Prior to forwarding the request to the
                                selected service, the request's host header is replaced
                                with contents of hostRewrite. \n The value must be
                                between 1 and 255 characters."
                              type: string
                            pathPrefixRewrite:
                              description: "Prior to forwarding the request to the
                                selected backend service, the matching portion of
                                the request's path is replaced by pathPrefixRewrite.
                                \n The value must be between 1 and 1024 characters."
                              type: string
                          type: object
                        weightedBackendServices:
                          description: "A list of weighted backend services to send
                            traffic to when a route match occurs. The weights determine
                            the fraction of traffic that flows to their corresponding
                            backend service. If all traffic needs to go to a single
                            backend service, there must be one weightedBackendService
                            with weight set to a non 0 number. \n Once a backendService
                            is identified and before forwarding the request to the
                            backend service, advanced routing actions like Url rewrites
                            and header transformations are applied depending on additional
                            settings specified in this HttpRouteAction."
                          items:
                            properties:
                              backendService:
                                description: The full or partial URL to the default
                                  BackendService resource. Before forwarding the request
                                  to backendService, the loadbalancer applies any
                                  relevant headerActions specified as part of this
                                  backendServiceWeight.
                                type: string
                              headerAction:
                                description: "Specifies changes to request and response
                                  headers that need to take effect for the selected
                                  backendService. \n headerAction specified here take
                                  effect before headerAction in the enclosing HttpRouteRule,
                                  PathMatcher and UrlMap."
                                properties:
                                  requestHeadersToAdd:
                                    description: Headers to add to a matching request
                                      prior to forwarding the request to the backendService.
                                    items:
                                      properties:
                                        headerName:
                                          description: The name of the header to add.
                                          type: string
                                        headerValue:
                                          description: The value of the header to
                                            add.
                                          type: string
                                        replace:
                                          description: If false, headerValue is appended
                                            to any values that already exist for the
                                            header. If true, headerValue is set for
                                            the header, discarding any values that
                                            were set for that header.
                                          type: boolean
                                      type: object
                                    type: array
                                  requestHeadersToRemove:
                                    description: A list of header names for headers
                                      that need to be removed from the request prior
                                      to forwarding the request to the backendService.
                                    items:
                                      type: string
                                    type: array
                                  responseHeadersToAdd:
                                    description: Headers to add the response prior
                                      to sending the response back to the client.
                                    items:
                                      properties:
                                        headerName:
                                          description: The name of the header to add.
                                          type: string
                                        headerValue:
                                          description: The value of the header to
                                            add.
                                          type: string
                                        replace:
                                          description: If false, headerValue is appended
                                            to any values that already exist for the
                                            header. If true, headerValue is set for
                                            the header, discarding any values that
                                            were set for that header.
                                          type: boolean
                                      type: object
                                    type: array
                                  responseHeadersToRemove:
                                    description: A list of header names for headers
                                      that need to be removed from the response prior
                                      to sending the response back to the client.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              weight:
                                description: "Specifies the fraction of traffic sent
                                  to backendService, computed as weight / (sum of
                                  all weightedBackendService weights in routeAction)
                                  . \n The selection of a backend service is determined
                                  only for new traffic. Once a user's request has
                                  been directed to a backendService, subsequent requests
                                  will be sent to the same backendService as determined
                                  by the BackendService's session affinity policy.
                                  \n The value must be between 0 and 1000"
                                format: int64
                                type: integer
                            type: object
                          type: array
                      type: object
                    defaultService:
                      description: The backend service or backend bucket to use when
                        none of the given paths match.
                      type: string
                    defaultURLRedirect:
                      description: When none of the specified hostRules match, the
                        request is redirected to a URL specified by defaultUrlRedirect.
                        If defaultUrlRedirect is specified, defaultService or defaultRouteAction
                        must not be set.
                      properties:
                        hostRedirect:
                          description: The host that will be used in the redirect
                            response instead of the one that was supplied in the request.
                            The value must be between 1 and 255 characters.
                          type: string
                        httpsRedirect:
                          description: If set to true, the URL scheme in the redirected
                            request is set to https. If set to false, the URL scheme
                            of the redirected request will remain the same as that
                            of the request. This must only be set for UrlMaps used
                            in TargetHttpProxys. Setting this true for TargetHttpsProxy
                            is not permitted. The default is set to false.
                          type: boolean
                        pathRedirect:
                          description: The path that will be used in the redirect
                            response instead of the one that was supplied in the request.
                            pathRedirect cannot be supplied together with prefixRedirect.
                            Supply one alone or neither. If neither is supplied, the
                            path of the original request will be used for the redirect.
                            The value must be between 1 and 1024 characters.
                          type: string
                        prefixRedirect:
                          description: The prefix that replaces the prefixMatch specified
                            in the HttpRouteRuleMatch, retaining the remaining portion
                            of the URL before redirecting the request. prefixRedirect
                            cannot be supplied together with pathRedirect. Supply
                            one alone or neither. If neither is supplied, the path
                            of the original request will be used for the redirect.
                            The value must be between 1 and 1024 characters.
                          type: string
                        redirectResponseCode:
                          description: "The HTTP Status code to use for this RedirectAction.
                            Supported values are: \n * MOVED_PERMANENTLY_DEFAULT,
                            which is the default value and corresponds to 301. \n
                            * FOUND, which corresponds to 302. \n * SEE_OTHER which
                            corresponds to 303. \n * TEMPORARY_REDIRECT, which corresponds
                            to 307. In this case, the request method will be retained.
                            \n * PERMANENT_REDIRECT, which corresponds to 308. In
                            this case, the request method will be retained. Possible
                            values: [\"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\",
                            \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                          type: string
                        stripQuery:
                          description: If set to true, any accompanying query portion
                            of the original URL is removed prior to redirecting the
                            request. If set to false, the query portion of the original
                            URL is retained.  This field is required to ensure an
                            empty block is not set. The normal default value is false.
                          type: boolean
                      required:
                      - stripQuery
                      type: object
                    description:
                      description: An optional description of this resource. Provide
                        this property when you create the resource.
                      type: string
                    headerAction:
                      description: Specifies changes to request and response headers
                        that need to take effect for the selected backendService.
                        HeaderAction specified here are applied after the matching
                        HttpRouteRule HeaderAction and before the HeaderAction in
                        the UrlMap
                      properties:
                        requestHeadersToAdd:
                          description: Headers to add to a matching request prior
                            to forwarding the request to the backendService.
                          items:
                            properties:
                              headerName:
                                description: The name of the header.
                                type: string
                              headerValue:
                                description: The value of the header to add.
                                type: string
                              replace:
                                description: If false, headerValue is appended to
                                  any values that already exist for the header. If
                                  true, headerValue is set for the header, discarding
                                  any values that were set for that header.
                                type: boolean
                            required:
                            - headerName
                            - headerValue
                            - replace
                            type: object
                          type: array
                        requestHeadersToRemove:
                          description: A list of header names for headers that need
                            to be removed from the request prior to forwarding the
                            request to the backendService.
                          items:
                            type: string
                          type: array
                        responseHeadersToAdd:
                          description: Headers to add the response prior to sending
                            the response back to the client.
                          items:
                            properties:
                              headerName:
                                description: The name of the header.
                                type: string
                              headerValue:
                                description: The value of the header to add.
                                type: string
                              replace:
                                description: If false, headerValue is appended to
                                  any values that already exist for the header. If
                                  true, headerValue is set for the header, discarding
                                  any values that were set for that header.
                                type: boolean
                            required:
                            - headerName
                            - headerValue
                            - replace
                            type: object
                          type: array
                        responseHeadersToRemove:
                          description: A list of header names for headers that need
                            to be removed from the response prior to sending the response
                            back to the client.
                          items:
                            type: string
                          type: array
                      type: object
                    name:
                      description: The name to which this PathMatcher is referred
                        by the HostRule.
                      type: string
                    pathRule:
                      description: 'The list of path rules. Use this list instead
                        of routeRules when routing based on simple path matching is
                        all that''s required. The order by which path rules are specified
                        does not matter. Matches are always done on the longest-path-first
                        basis. For example: a pathRule with a path /a/b/c/* will match
                        before /a/b/* irrespective of the order in which those paths
                        appear in this list. Within a given pathMatcher, only one
                        of pathRules or routeRules must be set.'
                      items:
                        properties:
                          paths:
                            description: 'The list of path patterns to match. Each
                              must start with / and the only place a * is allowed
                              is at the end following a /. The string fed to the path
                              matcher does not include any text after the first ?
                              or #, and those chars are not allowed here.'
                            items:
                              type: string
                            type: array
                          routeAction:
                            description: In response to a matching path, the load
                              balancer performs advanced routing actions like URL
                              rewrites, header transformations, etc. prior to forwarding
                              the request to the selected backend. If routeAction
                              specifies any weightedBackendServices, service must
                              not be set. Conversely if service is set, routeAction
                              cannot contain any  weightedBackendServices. Only one
                              of routeAction or urlRedirect must be set.
                            properties:
                              corsPolicy:
                                description: The specification for allowing client
                                  side cross-origin requests. Please see W3C Recommendation
                                  for Cross Origin Resource Sharing
                                properties:
                                  allowCredentials:
                                    description: In response to a preflight request,
                                      setting this to true indicates that the actual
                                      request can include user credentials. This translates
                                      to the Access- Control-Allow-Credentials header.
                                      Defaults to false.
                                    type: boolean
                                  allowHeaders:
                                    description: Specifies the content for the Access-Control-Allow-Headers
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  allowMethods:
                                    description: Specifies the content for the Access-Control-Allow-Methods
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  allowOriginRegexes:
                                    description: Specifies the regular expression
                                      patterns that match allowed origins. For regular
                                      expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
                                      An origin is allowed if it matches either allow_origins
                                      or allow_origin_regex.
                                    items:
                                      type: string
                                    type: array
                                  allowOrigins:
                                    description: Specifies the list of origins that
                                      will be allowed to do CORS requests. An origin
                                      is allowed if it matches either allow_origins
                                      or allow_origin_regex.
                                    items:
                                      type: string
                                    type: array
                                  disabled:
                                    description: If true, specifies the CORS policy
                                      is disabled.
                                    type: boolean
                                  exposeHeaders:
                                    description: Specifies the content for the Access-Control-Expose-Headers
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  maxAge:
                                    description: Specifies how long the results of
                                      a preflight request can be cached. This translates
                                      to the content for the Access-Control-Max-Age
                                      header.
                                    format: int64
                                    type: integer
                                required:
                                - disabled
                                type: object
                              faultInjectionPolicy:
                                description: The specification for fault injection
                                  introduced into traffic to test the resiliency of
                                  clients to backend service failure. As part of fault
                                  injection, when clients send requests to a backend
                                  service, delays can be introduced by Loadbalancer
                                  on a percentage of requests before sending those
                                  request to the backend service. Similarly requests
                                  from clients can be aborted by the Loadbalancer
                                  for a percentage of requests. timeout and retry_policy
                                  will be ignored by clients that are configured with
                                  a fault_injection_policy.
                                properties:
                                  abort:
                                    description: The specification for how client
                                      requests are aborted as part of fault injection.
                                    properties:
                                      httpStatus:
                                        description: The HTTP status code used to
                                          abort the request. The value must be between
                                          200 and 599 inclusive.
                                        format: int64
                                        type: integer
                                      percentage:
                                        description: The percentage of traffic (connections/operations/requests)
                                          which will be aborted as part of fault injection.
                                          The value must be between 0.0 and 100.0
                                          inclusive.
                                        format: double
                                        type: number
                                    required:
                                    - httpStatus
                                    - percentage
                                    type: object
                                  delay:
                                    description: The specification for how client
                                      requests are delayed as part of fault injection,
                                      before being sent to a backend service.
                                    properties:
                                      fixedDelay:
                                        description: Specifies the value of the fixed
                                          delay interval.
                                        properties:
                                          nanos:
                                            description: Span of time that's a fraction
                                              of a second at nanosecond resolution.
                                              Durations less than one second are represented
                                              with a 0 'seconds' field and a positive
                                              'nanos' field. Must be from 0 to 999,999,999
                                              inclusive.
                                            format: int64
                                            type: integer
                                          seconds:
                                            description: Span of time at a resolution
                                              of a second. Must be from 0 to 315,576,000,000
                                              inclusive.
                                            type: string
                                        required:
                                        - seconds
                                        type: object
                                      percentage:
                                        description: The percentage of traffic (connections/operations/requests)
                                          on which delay will be introduced as part
                                          of fault injection. The value must be between
                                          0.0 and 100.0 inclusive.
                                        format: double
                                        type: number
                                    required:
                                    - fixedDelay
                                    - percentage
                                    type: object
                                type: object
                              requestMirrorPolicy:
                                description: Specifies the policy on how requests
                                  intended for the route's backends are shadowed to
                                  a separate mirrored backend service. Loadbalancer
                                  does not wait for responses from the shadow service.
                                  Prior to sending traffic to the shadow service,
                                  the host / authority header is suffixed with -shadow.
                                properties:
                                  backendService:
                                    description: The BackendService resource being
                                      mirrored to.
                                    type: string
                                required:
                                - backendService
                                type: object
                              retryPolicy:
                                description: Specifies the retry policy associated
                                  with this route.
                                properties:
                                  numRetries:
                                    description: Specifies the allowed number retries.
                                      This number must be > 0.
                                    format: int64
                                    type: integer
                                  perTryTimeout:
                                    description: Specifies a non-zero timeout per
                                      retry attempt.
                                    properties:
                                      nanos:
                                        description: Span of time that's a fraction
                                          of a second at nanosecond resolution. Durations
                                          less than one second are represented with
                                          a 0 'seconds' field and a positive 'nanos'
                                          field. Must be from 0 to 999,999,999 inclusive.
                                        format: int64
                                        type: integer
                                      seconds:
                                        description: Span of time at a resolution
                                          of a second. Must be from 0 to 315,576,000,000
                                          inclusive.
                                        type: string
                                    required:
                                    - seconds
                                    type: object
                                  retryConditions:
                                    description: "Specifies one or more conditions
                                      when this retry rule applies. Valid values are:
                                      \n * 5xx: Loadbalancer will attempt a retry
                                      if the backend service responds with any 5xx
                                      response code, or if the backend service does
                                      not respond at all, example: disconnects, reset,
                                      read timeout, connection failure, and refused
                                      streams. * gateway-error: Similar to 5xx, but
                                      only applies to response codes 502, 503 or 504.
                                      * connect-failure: Loadbalancer will retry on
                                      failures connecting to backend services, for
                                      example due to connection timeouts. * retriable-4xx:
                                      Loadbalancer will retry for retriable 4xx response
                                      codes. Currently the only retriable error supported
                                      is 409. * refused-stream: Loadbalancer will
                                      retry if the backend service resets the stream
                                      with a REFUSED_STREAM error code. This reset
                                      type indicates that it is safe to retry. * cancelled:
                                      Loadbalancer will retry if the gRPC status code
                                      in the response header is set to cancelled *
                                      deadline-exceeded: Loadbalancer will retry if
                                      the gRPC status code in the response header
                                      is set to deadline-exceeded * resource-exhausted:
                                      Loadbalancer will retry if the gRPC status code
                                      in the response header is set to resource-exhausted
                                      * unavailable: Loadbalancer will retry if the
                                      gRPC status code in the response header is set
                                      to unavailable"
                                    items:
                                      type: string
                                    type: array
                                type: object
                              timeout:
                                description: Specifies the timeout for the selected
                                  route. Timeout is computed from the time the request
                                  is has been fully processed (i.e. end-of-stream)
                                  up until the response has been completely processed.
                                  Timeout includes all retries. If not specified,
                                  the default value is 15 seconds.
                                properties:
                                  nanos:
                                    description: Span of time that's a fraction of
                                      a second at nanosecond resolution. Durations
                                      less than one second are represented with a
                                      0 'seconds' field and a positive 'nanos' field.
                                      Must be from 0 to 999,999,999 inclusive.
                                    format: int64
                                    type: integer
                                  seconds:
                                    description: Span of time at a resolution of a
                                      second. Must be from 0 to 315,576,000,000 inclusive.
                                    type: string
                                required:
                                - seconds
                                type: object
                              urlRewrite:
                                description: The spec to modify the URL of the request,
                                  prior to forwarding the request to the matched service
                                properties:
                                  hostRewrite:
                                    description: Prior to forwarding the request to
                                      the selected service, the request's host header
                                      is replaced with contents of hostRewrite. The
                                      value must be between 1 and 255 characters.
                                    type: string
                                  pathPrefixRewrite:
                                    description: Prior to forwarding the request to
                                      the selected backend service, the matching portion
                                      of the request's path is replaced by pathPrefixRewrite.
                                      The value must be between 1 and 1024 characters.
                                    type: string
                                type: object
                              weightedBackendServices:
                                description: A list of weighted backend services to
                                  send traffic to when a route match occurs. The weights
                                  determine the fraction of traffic that flows to
                                  their corresponding backend service. If all traffic
                                  needs to go to a single backend service, there must
                                  be one  weightedBackendService with weight set to
                                  a non 0 number. Once a backendService is identified
                                  and before forwarding the request to the backend
                                  service, advanced routing actions like Url rewrites
                                  and header transformations are applied depending
                                  on additional settings specified in this HttpRouteAction.
                                items:
                                  properties:
                                    backendService:
                                      description: The default BackendService resource.
                                        Before forwarding the request to backendService,
                                        the loadbalancer applies any relevant headerActions
                                        specified as part of this backendServiceWeight.
                                      type: string
                                    headerAction:
                                      description: Specifies changes to request and
                                        response headers that need to take effect
                                        for the selected backendService. headerAction
                                        specified here take effect before headerAction
                                        in the enclosing HttpRouteRule, PathMatcher
                                        and UrlMap.
                                      properties:
                                        requestHeadersToAdd:
                                          description: Headers to add to a matching
                                            request prior to forwarding the request
                                            to the backendService.
                                          items:
                                            properties:
                                              headerName:
                                                description: The name of the header.
                                                type: string
                                              headerValue:
                                                description: The value of the header
                                                  to add.
                                                type: string
                                              replace:
                                                description: If false, headerValue
                                                  is appended to any values that already
                                                  exist for the header. If true, headerValue
                                                  is set for the header, discarding
                                                  any values that were set for that
                                                  header.
                                                type: boolean
                                            required:
                                            - headerName
                                            - headerValue
                                            - replace
                                            type: object
                                          type: array
                                        requestHeadersToRemove:
                                          description: A list of header names for
                                            headers that need to be removed from the
                                            request prior to forwarding the request
                                            to the backendService.
                                          items:
                                            type: string
                                          type: array
                                        responseHeadersToAdd:
                                          description: Headers to add the response
                                            prior to sending the response back to
                                            the client.
                                          items:
                                            properties:
                                              headerName:
                                                description: The name of the header.
                                                type: string
                                              headerValue:
                                                description: The value of the header
                                                  to add.
                                                type: string
                                              replace:
                                                description: If false, headerValue
                                                  is appended to any values that already
                                                  exist for the header. If true, headerValue
                                                  is set for the header, discarding
                                                  any values that were set for that
                                                  header.
                                                type: boolean
                                            required:
                                            - headerName
                                            - headerValue
                                            - replace
                                            type: object
                                          type: array
                                        responseHeadersToRemove:
                                          description: A list of header names for
                                            headers that need to be removed from the
                                            response prior to sending the response
                                            back to the client.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    weight:
                                      description: Specifies the fraction of traffic
                                        sent to backendService, computed as weight
                                        / (sum of all weightedBackendService weights
                                        in routeAction) . The selection of a backend
                                        service is determined only for new traffic.
                                        Once a user's request has been directed to
                                        a backendService, subsequent requests will
                                        be sent to the same backendService as determined
                                        by the BackendService's session affinity policy.
                                        The value must be between 0 and 1000
                                      format: int64
                                      type: integer
                                  required:
                                  - backendService
                                  - weight
                                  type: object
                                type: array
                            type: object
                          service:
                            description: The backend service or backend bucket to
                              use if any of the given paths match.
                            type: string
                          urlRedirect:
                            description: When a path pattern is matched, the request
                              is redirected to a URL specified by urlRedirect. If
                              urlRedirect is specified, service or routeAction must
                              not be set.
                            properties:
                              hostRedirect:
                                description: The host that will be used in the redirect
                                  response instead of the one that was supplied in
                                  the request. The value must be between 1 and 255
                                  characters.
                                type: string
                              httpsRedirect:
                                description: If set to true, the URL scheme in the
                                  redirected request is set to https. If set to false,
                                  the URL scheme of the redirected request will remain
                                  the same as that of the request. This must only
                                  be set for UrlMaps used in TargetHttpProxys. Setting
                                  this true for TargetHttpsProxy is not permitted.
                                  The default is set to false.
                                type: boolean
                              pathRedirect:
                                description: The path that will be used in the redirect
                                  response instead of the one that was supplied in
                                  the request. pathRedirect cannot be supplied together
                                  with prefixRedirect. Supply one alone or neither.
                                  If neither is supplied, the path of the original
                                  request will be used for the redirect. The value
                                  must be between 1 and 1024 characters.
                                type: string
                              prefixRedirect:
                                description: The prefix that replaces the prefixMatch
                                  specified in the HttpRouteRuleMatch, retaining the
                                  remaining portion of the URL before redirecting
                                  the request. prefixRedirect cannot be supplied together
                                  with pathRedirect. Supply one alone or neither.
                                  If neither is supplied, the path of the original
                                  request will be used for the redirect. The value
                                  must be between 1 and 1024 characters.
                                type: string
                              redirectResponseCode:
                                description: "The HTTP Status code to use for this
                                  RedirectAction. Supported values are: \n * MOVED_PERMANENTLY_DEFAULT,
                                  which is the default value and corresponds to 301.
                                  \n * FOUND, which corresponds to 302. \n * SEE_OTHER
                                  which corresponds to 303. \n * TEMPORARY_REDIRECT,
                                  which corresponds to 307. In this case, the request
                                  method will be retained. \n * PERMANENT_REDIRECT,
                                  which corresponds to 308. In this case, the request
                                  method will be retained. Possible values: [\"FOUND\",
                                  \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\",
                                  \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                                type: string
                              stripQuery:
                                description: If set to true, any accompanying query
                                  portion of the original URL is removed prior to
                                  redirecting the request. If set to false, the query
                                  portion of the original URL is retained.  This field
                                  is required to ensure an empty block is not set.
                                  The normal default value is false.
                                type: boolean
                            required:
                            - stripQuery
                            type: object
                        required:
                        - paths
                        type: object
                      type: array
                    routeRules:
                      description: 'The list of ordered HTTP route rules. Use this
                        list instead of pathRules when advanced route matching and
                        routing actions are desired. The order of specifying routeRules
                        matters: the first rule that matches will cause its specified
                        routing action to take effect. Within a given pathMatcher,
                        only one of pathRules or routeRules must be set. routeRules
                        are not supported in UrlMaps intended for External load balancers.'
                      items:
                        properties:
                          headerAction:
                            description: Specifies changes to request and response
                              headers that need to take effect for the selected backendService.
                              The headerAction specified here are applied before the
                              matching pathMatchers[].headerAction and after pathMatchers[].routeRules[].r
                              outeAction.weightedBackendService.backendServiceWeightAction[].headerAction
                            properties:
                              requestHeadersToAdd:
                                description: Headers to add to a matching request
                                  prior to forwarding the request to the backendService.
                                items:
                                  properties:
                                    headerName:
                                      description: The name of the header.
                                      type: string
                                    headerValue:
                                      description: The value of the header to add.
                                      type: string
                                    replace:
                                      description: If false, headerValue is appended
                                        to any values that already exist for the header.
                                        If true, headerValue is set for the header,
                                        discarding any values that were set for that
                                        header.
                                      type: boolean
                                  required:
                                  - headerName
                                  - headerValue
                                  - replace
                                  type: object
                                type: array
                              requestHeadersToRemove:
                                description: A list of header names for headers that
                                  need to be removed from the request prior to forwarding
                                  the request to the backendService.
                                items:
                                  type: string
                                type: array
                              responseHeadersToAdd:
                                description: Headers to add the response prior to
                                  sending the response back to the client.
                                items:
                                  properties:
                                    headerName:
                                      description: The name of the header.
                                      type: string
                                    headerValue:
                                      description: The value of the header to add.
                                      type: string
                                    replace:
                                      description: If false, headerValue is appended
                                        to any values that already exist for the header.
                                        If true, headerValue is set for the header,
                                        discarding any values that were set for that
                                        header.
                                      type: boolean
                                  required:
                                  - headerName
                                  - headerValue
                                  - replace
                                  type: object
                                type: array
                              responseHeadersToRemove:
                                description: A list of header names for headers that
                                  need to be removed from the response prior to sending
                                  the response back to the client.
                                items:
                                  type: string
                                type: array
                            type: object
                          matchRules:
                            description: The rules for determining a match.
                            items:
                              properties:
                                fullPathMatch:
                                  description: For satisfying the matchRule condition,
                                    the path of the request must exactly match the
                                    value specified in fullPathMatch after removing
                                    any query parameters and anchor that may be part
                                    of the original URL. FullPathMatch must be between
                                    1 and 1024 characters. Only one of prefixMatch,
                                    fullPathMatch or regexMatch must be specified.
                                  type: string
                                headerMatches:
                                  description: Specifies a list of header match criteria,
                                    all of which must match corresponding headers
                                    in the request.
                                  items:
                                    properties:
                                      exactMatch:
                                        description: The value should exactly match
                                          contents of exactMatch. Only one of exactMatch,
                                          prefixMatch, suffixMatch, regexMatch, presentMatch
                                          or rangeMatch must be set.
                                        type: string
                                      headerName:
                                        description: The name of the HTTP header to
                                          match. For matching against the HTTP request's
                                          authority, use a headerMatch with the header
                                          name ":authority". For matching a request's
                                          method, use the headerName ":method".
                                        type: string
                                      invertMatch:
                                        description: If set to false, the headerMatch
                                          is considered a match if the match criteria
                                          above are met. If set to true, the headerMatch
                                          is considered a match if the match criteria
                                          above are NOT met. Defaults to false.
                                        type: boolean
                                      prefixMatch:
                                        description: The value of the header must
                                          start with the contents of prefixMatch.
                                          Only one of exactMatch, prefixMatch, suffixMatch,
                                          regexMatch, presentMatch or rangeMatch must
                                          be set.
                                        type: string
                                      presentMatch:
                                        description: A header with the contents of
                                          headerName must exist. The match takes place
                                          whether or not the request's header has
                                          a value or not. Only one of exactMatch,
                                          prefixMatch, suffixMatch, regexMatch, presentMatch
                                          or rangeMatch must be set.
                                        type: boolean
                                      rangeMatch:
                                        description: The header value must be an integer
                                          and its value must be in the range specified
                                          in rangeMatch. If the header does not contain
                                          an integer, number or is empty, the match
                                          fails. For example for a range [-5, 0]   -
                                          -3 will match.  - 0 will not match.  - 0.25
                                          will not match.  - -3someString will not
                                          match.   Only one of exactMatch, prefixMatch,
                                          suffixMatch, regexMatch, presentMatch or
                                          rangeMatch must be set.
                                        properties:
                                          rangeEnd:
                                            description: The end of the range (exclusive).
                                            format: int64
                                            type: integer
                                          rangeStart:
                                            description: The start of the range (inclusive).
                                            format: int64
                                            type: integer
                                        required:
                                        - rangeEnd
                                        - rangeStart
                                        type: object
                                      regexMatch:
                                        description: 'The value of the header must
                                          match the regular expression specified in
                                          regexMatch. For regular expression grammar,
                                          please see: en.cppreference.com/w/cpp/regex/ecmascript  For
                                          matching against a port specified in the
                                          HTTP request, use a headerMatch with headerName
                                          set to PORT and a regular expression that
                                          satisfies the RFC2616 Host header''s port
                                          specifier. Only one of exactMatch, prefixMatch,
                                          suffixMatch, regexMatch, presentMatch or
                                          rangeMatch must be set.'
                                        type: string
                                      suffixMatch:
                                        description: The value of the header must
                                          end with the contents of suffixMatch. Only
                                          one of exactMatch, prefixMatch, suffixMatch,
                                          regexMatch, presentMatch or rangeMatch must
                                          be set.
                                        type: string
                                    required:
                                    - headerName
                                    type: object
                                  type: array
                                ignoreCase:
                                  description: Specifies that prefixMatch and fullPathMatch
                                    matches are case sensitive. Defaults to false.
                                  type: boolean
                                metadataFilters:
                                  description: Opaque filter criteria used by Loadbalancer
                                    to restrict routing configuration to a limited
                                    set xDS compliant clients. In their xDS requests
                                    to Loadbalancer, xDS clients present node metadata.
                                    If a match takes place, the relevant routing configuration
                                    is made available to those proxies. For each metadataFilter
                                    in this list, if its filterMatchCriteria is set
                                    to MATCH_ANY, at least one of the filterLabels
                                    must match the corresponding label provided in
                                    the metadata. If its filterMatchCriteria is set
                                    to MATCH_ALL, then all of its filterLabels must
                                    match with corresponding labels in the provided
                                    metadata. metadataFilters specified here can be
                                    overrides those specified in ForwardingRule that
                                    refers to this UrlMap. metadataFilters only applies
                                    to Loadbalancers that have their loadBalancingScheme
                                    set to INTERNAL_SELF_MANAGED.
                                  items:
                                    properties:
                                      filterLabels:
                                        description: The list of label value pairs
                                          that must match labels in the provided metadata
                                          based on filterMatchCriteria  This list
                                          must not be empty and can have at the most
                                          64 entries.
                                        items:
                                          properties:
                                            name:
                                              description: Name of metadata label.
                                                The name can have a maximum length
                                                of 1024 characters and must be at
                                                least 1 character long.
                                              type: string
                                            value:
                                              description: The value of the label
                                                must match the specified value. value
                                                can have a maximum length of 1024
                                                characters.
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        maxItems: 64
                                        minItems: 1
                                        type: array
                                      filterMatchCriteria:
                                        description: 'Specifies how individual filterLabel
                                          matches within the list of filterLabels
                                          contribute towards the overall metadataFilter
                                          match. Supported values are:   - MATCH_ANY:
                                          At least one of the filterLabels must have
                                          a matching label in the provided metadata.   -
                                          MATCH_ALL: All filterLabels must have matching
                                          labels in the provided metadata. Possible
                                          values: ["MATCH_ALL", "MATCH_ANY"]'
                                        type: string
                                    required:
                                    - filterLabels
                                    - filterMatchCriteria
                                    type: object
                                  type: array
                                prefixMatch:
                                  description: For satisfying the matchRule condition,
                                    the request's path must begin with the specified
                                    prefixMatch. prefixMatch must begin with a /.
                                    The value must be between 1 and 1024 characters.
                                    Only one of prefixMatch, fullPathMatch or regexMatch
                                    must be specified.
                                  type: string
                                queryParameterMatches:
                                  description: Specifies a list of query parameter
                                    match criteria, all of which must match corresponding
                                    query parameters in the request.
                                  items:
                                    properties:
                                      exactMatch:
                                        description: The queryParameterMatch matches
                                          if the value of the parameter exactly matches
                                          the contents of exactMatch. Only one of
                                          presentMatch, exactMatch and regexMatch
                                          must be set.
                                        type: string
                                      name:
                                        description: The name of the query parameter
                                          to match. The query parameter must exist
                                          in the request, in the absence of which
                                          the request match fails.
                                        type: string
                                      presentMatch:
                                        description: Specifies that the queryParameterMatch
                                          matches if the request contains the query
                                          parameter, irrespective of whether the parameter
                                          has a value or not. Only one of presentMatch,
                                          exactMatch and regexMatch must be set.
                                        type: boolean
                                      regexMatch:
                                        description: The queryParameterMatch matches
                                          if the value of the parameter matches the
                                          regular expression specified by regexMatch.
                                          For the regular expression grammar, please
                                          see en.cppreference.com/w/cpp/regex/ecmascript  Only
                                          one of presentMatch, exactMatch and regexMatch
                                          must be set.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                                regexMatch:
                                  description: For satisfying the matchRule condition,
                                    the path of the request must satisfy the regular
                                    expression specified in regexMatch after removing
                                    any query parameters and anchor supplied with
                                    the original URL. For regular expression grammar
                                    please see en.cppreference.com/w/cpp/regex/ecmascript  Only
                                    one of prefixMatch, fullPathMatch or regexMatch
                                    must be specified.
                                  type: string
                              type: object
                            type: array
                          priority:
                            description: "For routeRules within a given pathMatcher,
                              priority determines the order in which load balancer
                              will interpret routeRules. RouteRules are evaluated
                              in order of priority, from the lowest to highest number.
                              The priority of a rule decreases as its number increases
                              (1, 2, 3, N+1). The first rule that matches the request
                              is applied. \n You cannot configure two or more routeRules
                              with the same priority. Priority for each rule must
                              be set to a number between 0 and 2147483647 inclusive.
                              \n Priority numbers can have gaps, which enable you
                              to add or remove rules in the future without affecting
                              the rest of the rules. For example, 1, 2, 3, 4, 5, 9,
                              12, 16 is a valid series of priority numbers to which
                              you could add rules numbered from 6 to 8, 10 to 11,
                              and 13 to 15 in the future without any impact on existing
                              rules."
                            format: int64
                            type: integer
                          routeAction:
                            description: In response to a matching matchRule, the
                              load balancer performs advanced routing actions like
                              URL rewrites, header transformations, etc. prior to
                              forwarding the request to the selected backend. If  routeAction
                              specifies any weightedBackendServices, service must
                              not be set. Conversely if service is set, routeAction
                              cannot contain any  weightedBackendServices. Only one
                              of routeAction or urlRedirect must be set.
                            properties:
                              corsPolicy:
                                description: The specification for allowing client
                                  side cross-origin requests. Please see W3C Recommendation
                                  for Cross Origin Resource Sharing
                                properties:
                                  allowCredentials:
                                    description: In response to a preflight request,
                                      setting this to true indicates that the actual
                                      request can include user credentials. This translates
                                      to the Access- Control-Allow-Credentials header.
                                      Defaults to false.
                                    type: boolean
                                  allowHeaders:
                                    description: Specifies the content for the Access-Control-Allow-Headers
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  allowMethods:
                                    description: Specifies the content for the Access-Control-Allow-Methods
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  allowOriginRegexes:
                                    description: Specifies the regular expression
                                      patterns that match allowed origins. For regular
                                      expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
                                      An origin is allowed if it matches either allow_origins
                                      or allow_origin_regex.
                                    items:
                                      type: string
                                    type: array
                                  allowOrigins:
                                    description: Specifies the list of origins that
                                      will be allowed to do CORS requests. An origin
                                      is allowed if it matches either allow_origins
                                      or allow_origin_regex.
                                    items:
                                      type: string
                                    type: array
                                  disabled:
                                    description: If true, specifies the CORS policy
                                      is disabled. which indicates that the CORS policy
                                      is in effect. Defaults to false.
                                    type: boolean
                                  exposeHeaders:
                                    description: Specifies the content for the Access-Control-Expose-Headers
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  maxAge:
                                    description: Specifies how long the results of
                                      a preflight request can be cached. This translates
                                      to the content for the Access-Control-Max-Age
                                      header.
                                    format: int64
                                    type: integer
                                type: object
                              faultInjectionPolicy:
                                description: The specification for fault injection
                                  introduced into traffic to test the resiliency of
                                  clients to backend service failure. As part of fault
                                  injection, when clients send requests to a backend
                                  service, delays can be introduced by Loadbalancer
                                  on a percentage of requests before sending those
                                  request to the backend service. Similarly requests
                                  from clients can be aborted by the Loadbalancer
                                  for a percentage of requests. timeout and retry_policy
                                  will be ignored by clients that are configured with
                                  a fault_injection_policy.
                                properties:
                                  abort:
                                    description: The specification for how client
                                      requests are aborted as part of fault injection.
                                    properties:
                                      httpStatus:
                                        description: The HTTP status code used to
                                          abort the request. The value must be between
                                          200 and 599 inclusive.
                                        format: int64
                                        type: integer
                                      percentage:
                                        description: The percentage of traffic (connections/operations/requests)
                                          which will be aborted as part of fault injection.
                                          The value must be between 0.0 and 100.0
                                          inclusive.
                                        format: double
                                        type: number
                                    type: object
                                  delay:
                                    description: The specification for how client
                                      requests are delayed as part of fault injection,
                                      before being sent to a backend service.
                                    properties:
                                      fixedDelay:
                                        description: Specifies the value of the fixed
                                          delay interval.
                                        properties:
                                          nanos:
                                            description: Span of time that's a fraction
                                              of a second at nanosecond resolution.
                                              Durations less than one second are represented
                                              with a 0 'seconds' field and a positive
                                              'nanos' field. Must be from 0 to 999,999,999
                                              inclusive.
                                            format: int64
                                            type: integer
                                          seconds:
                                            description: Span of time at a resolution
                                              of a second. Must be from 0 to 315,576,000,000
                                              inclusive.
                                            type: string
                                        required:
                                        - seconds
                                        type: object
                                      percentage:
                                        description: The percentage of traffic (connections/operations/requests)
                                          on which delay will be introduced as part
                                          of fault injection. The value must be between
                                          0.0 and 100.0 inclusive.
                                        format: double
                                        type: number
                                    type: object
                                type: object
                              requestMirrorPolicy:
                                description: Specifies the policy on how requests
                                  intended for the route's backends are shadowed to
                                  a separate mirrored backend service. Loadbalancer
                                  does not wait for responses from the shadow service.
                                  Prior to sending traffic to the shadow service,
                                  the host / authority header is suffixed with -shadow.
                                properties:
                                  backendService:
                                    description: The BackendService resource being
                                      mirrored to.
                                    type: string
                                required:
                                - backendService
                                type: object
                              retryPolicy:
                                description: Specifies the retry policy associated
                                  with this route.
                                properties:
                                  numRetries:
                                    description: Specifies the allowed number retries.
                                      This number must be > 0.
                                    format: int64
                                    type: integer
                                  perTryTimeout:
                                    description: Specifies a non-zero timeout per
                                      retry attempt. If not specified, will use the
                                      timeout set in HttpRouteAction. If timeout in
                                      HttpRouteAction is not set, will use the largest
                                      timeout among all backend services associated
                                      with the route.
                                    properties:
                                      nanos:
                                        description: Span of time that's a fraction
                                          of a second at nanosecond resolution. Durations
                                          less than one second are represented with
                                          a 0 'seconds' field and a positive 'nanos'
                                          field. Must be from 0 to 999,999,999 inclusive.
                                        format: int64
                                        type: integer
                                      seconds:
                                        description: Span of time at a resolution
                                          of a second. Must be from 0 to 315,576,000,000
                                          inclusive.
                                        type: string
                                    required:
                                    - seconds
                                    type: object
                                  retryConditions:
                                    description: "Specfies one or more conditions
                                      when this retry rule applies. Valid values are:
                                      \n * 5xx: Loadbalancer will attempt a retry
                                      if the backend service responds with   any 5xx
                                      response code, or if the backend service does
                                      not respond at all,   example: disconnects,
                                      reset, read timeout, connection failure, and
                                      refused   streams. * gateway-error: Similar
                                      to 5xx, but only applies to response codes   502,
                                      503 or 504. * connect-failure: Loadbalancer
                                      will retry on failures   connecting to backend
                                      services, for example due to connection timeouts.
                                      * retriable-4xx: Loadbalancer will retry for
                                      retriable 4xx response codes.   Currently the
                                      only retriable error supported is 409. * refused-stream:
                                      Loadbalancer will retry if the backend service
                                      resets the stream with a   REFUSED_STREAM error
                                      code. This reset type indicates that it is safe
                                      to retry. * cancelled: Loadbalancer will retry
                                      if the gRPC status code in the response   header
                                      is set to cancelled * deadline-exceeded: Loadbalancer
                                      will retry if the   gRPC status code in the
                                      response header is set to deadline-exceeded
                                      * resource-exhausted: Loadbalancer will retry
                                      if the gRPC status code in the response   header
                                      is set to resource-exhausted * unavailable:
                                      Loadbalancer will retry if the gRPC status code
                                      in   the response header is set to unavailable"
                                    items:
                                      type: string
                                    type: array
                                required:
                                - numRetries
                                type: object
                              timeout:
                                description: Specifies the timeout for the selected
                                  route. Timeout is computed from the time the request
                                  is has been fully processed (i.e. end-of-stream)
                                  up until the response has been completely processed.
                                  Timeout includes all retries. If not specified,
                                  the default value is 15 seconds.
                                properties:
                                  nanos:
                                    description: Span of time that's a fraction of
                                      a second at nanosecond resolution. Durations
                                      less than one second are represented with a
                                      0 'seconds' field and a positive 'nanos' field.
                                      Must be from 0 to 999,999,999 inclusive.
                                    format: int64
                                    type: integer
                                  seconds:
                                    description: Span of time at a resolution of a
                                      second. Must be from 0 to 315,576,000,000 inclusive.
                                    type: string
                                required:
                                - seconds
                                type: object
                              urlRewrite:
                                description: The spec to modify the URL of the request,
                                  prior to forwarding the request to the matched service
                                properties:
                                  hostRewrite:
                                    description: Prior to forwarding the request to
                                      the selected service, the request's host header
                                      is replaced with contents of hostRewrite. The
                                      value must be between 1 and 255 characters.
                                    type: string
                                  pathPrefixRewrite:
                                    description: Prior to forwarding the request to
                                      the selected backend service, the matching portion
                                      of the request's path is replaced by pathPrefixRewrite.
                                      The value must be between 1 and 1024 characters.
                                    type: string
                                type: object
                              weightedBackendServices:
                                description: A list of weighted backend services to
                                  send traffic to when a route match occurs. The weights
                                  determine the fraction of traffic that flows to
                                  their corresponding backend service. If all traffic
                                  needs to go to a single backend service, there must
                                  be one  weightedBackendService with weight set to
                                  a non 0 number. Once a backendService is identified
                                  and before forwarding the request to the backend
                                  service, advanced routing actions like Url rewrites
                                  and header transformations are applied depending
                                  on additional settings specified in this HttpRouteAction.
                                items:
                                  properties:
                                    backendService:
                                      description: The default BackendService resource.
                                        Before forwarding the request to backendService,
                                        the loadbalancer applies any relevant headerActions
                                        specified as part of this backendServiceWeight.
                                      type: string
                                    headerAction:
                                      description: Specifies changes to request and
                                        response headers that need to take effect
                                        for the selected backendService. headerAction
                                        specified here take effect before headerAction
                                        in the enclosing HttpRouteRule, PathMatcher
                                        and UrlMap.
                                      properties:
                                        requestHeadersToAdd:
                                          description: Headers to add to a matching
                                            request prior to forwarding the request
                                            to the backendService.
                                          items:
                                            properties:
                                              headerName:
                                                description: The name of the header.
                                                type: string
                                              headerValue:
                                                description: The value of the header
                                                  to add.
                                                type: string
                                              replace:
                                                description: If false, headerValue
                                                  is appended to any values that already
                                                  exist for the header. If true, headerValue
                                                  is set for the header, discarding
                                                  any values that were set for that
                                                  header.
                                                type: boolean
                                            required:
                                            - headerName
                                            - headerValue
                                            - replace
                                            type: object
                                          type: array
                                        requestHeadersToRemove:
                                          description: A list of header names for
                                            headers that need to be removed from the
                                            request prior to forwarding the request
                                            to the backendService.
                                          items:
                                            type: string
                                          type: array
                                        responseHeadersToAdd:
                                          description: Headers to add the response
                                            prior to sending the response back to
                                            the client.
                                          items:
                                            properties:
                                              headerName:
                                                description: The name of the header.
                                                type: string
                                              headerValue:
                                                description: The value of the header
                                                  to add.
                                                type: string
                                              replace:
                                                description: If false, headerValue
                                                  is appended to any values that already
                                                  exist for the header. If true, headerValue
                                                  is set for the header, discarding
                                                  any values that were set for that
                                                  header.
                                                type: boolean
                                            required:
                                            - headerName
                                            - headerValue
                                            - replace
                                            type: object
                                          type: array
                                        responseHeadersToRemove:
                                          description: A list of header names for
                                            headers that need to be removed from the
                                            response prior to sending the response
                                            back to the client.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    weight:
                                      description: Specifies the fraction of traffic
                                        sent to backendService, computed as weight
                                        / (sum of all weightedBackendService weights
                                        in routeAction) . The selection of a backend
                                        service is determined only for new traffic.
                                        Once a user's request has been directed to
                                        a backendService, subsequent requests will
                                        be sent to the same backendService as determined
                                        by the BackendService's session affinity policy.
                                        The value must be between 0 and 1000
                                      format: int64
                                      type: integer
                                  required:
                                  - backendService
                                  - weight
                                  type: object
                                type: array
                            type: object
                          service:
                            description: The backend service resource to which traffic
                              is directed if this rule is matched. If routeAction
                              is additionally specified, advanced routing actions
                              like URL Rewrites, etc. take effect prior to sending
                              the request to the backend. However, if service is specified,
                              routeAction cannot contain any weightedBackendService
                              s. Conversely, if routeAction specifies any weightedBackendServices,
                              service must not be specified. Only one of urlRedirect,
                              service or routeAction.weightedBackendService must be
                              set.
                            type: string
                          urlRedirect:
                            description: When this rule is matched, the request is
                              redirected to a URL specified by urlRedirect. If urlRedirect
                              is specified, service or routeAction must not be set.
                            properties:
                              hostRedirect:
                                description: The host that will be used in the redirect
                                  response instead of the one that was supplied in
                                  the request. The value must be between 1 and 255
                                  characters.
                                type: string
                              httpsRedirect:
                                description: If set to true, the URL scheme in the
                                  redirected request is set to https. If set to false,
                                  the URL scheme of the redirected request will remain
                                  the same as that of the request. This must only
                                  be set for UrlMaps used in TargetHttpProxys. Setting
                                  this true for TargetHttpsProxy is not permitted.
                                  Defaults to false.
                                type: boolean
                              pathRedirect:
                                description: The path that will be used in the redirect
                                  response instead of the one that was supplied in
                                  the request. Only one of pathRedirect or prefixRedirect
                                  must be specified. The value must be between 1 and
                                  1024 characters.
                                type: string
                              prefixRedirect:
                                description: The prefix that replaces the prefixMatch
                                  specified in the HttpRouteRuleMatch, retaining the
                                  remaining portion of the URL before redirecting
                                  the request.
                                type: string
                              redirectResponseCode:
                                description: "The HTTP Status code to use for this
                                  RedirectAction. Supported values are: \n * MOVED_PERMANENTLY_DEFAULT,
                                  which is the default value and corresponds to 301.
                                  \n * FOUND, which corresponds to 302. \n * SEE_OTHER
                                  which corresponds to 303. \n * TEMPORARY_REDIRECT,
                                  which corresponds to 307. In this case, the request
                                  method will be retained. \n * PERMANENT_REDIRECT,
                                  which corresponds to 308. In this case, the request
                                  method will be retained. Possible values: [\"FOUND\",
                                  \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\",
                                  \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                                type: string
                              stripQuery:
                                description: If set to true, any accompanying query
                                  portion of the original URL is removed prior to
                                  redirecting the request. If set to false, the query
                                  portion of the original URL is retained. Defaults
                                  to false.
                                type: boolean
                            type: object
                        required:
                        - priority
                        type: object
                      type: array
                  required:
                  - name
                  type: object
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              test:
                description: The list of expected URL mapping tests. Request to update
                  this UrlMap will succeed only if all of the test cases pass. You
                  can specify a maximum of 100 tests per UrlMap.
                items:
                  properties:
                    description:
                      description: Description of this test case.
                      type: string
                    host:
                      description: Host portion of the URL.
                      type: string
                    path:
                      description: Path portion of the URL.
                      type: string
                    service:
                      description: The backend service or backend bucket link that
                        should be matched by this test.
                      type: string
                  required:
                  - host
                  - path
                  - service
                  type: object
                type: array
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: networkpeerings.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: NetworkPeering
    listKind: NetworkPeeringList
    plural: networkpeerings
    singular: networkpeering
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              exportCustomRoutes:
                description: Whether to export the custom routes to the peer network.
                  Defaults to false.
                type: boolean
              exportSubnetRoutesWithPublicIP:
                type: boolean
              id:
                type: string
              importCustomRoutes:
                description: Whether to export the custom routes from the peer network.
                  Defaults to false.
                type: boolean
              importSubnetRoutesWithPublicIP:
                type: boolean
              kubeformOutput:
                properties:
                  exportCustomRoutes:
                    description: Whether to export the custom routes to the peer network.
                      Defaults to false.
                    type: boolean
                  exportSubnetRoutesWithPublicIP:
                    type: boolean
                  id:
                    type: string
                  importCustomRoutes:
                    description: Whether to export the custom routes from the peer
                      network. Defaults to false.
                    type: boolean
                  importSubnetRoutesWithPublicIP:
                    type: boolean
                  name:
                    description: Name of the peering.
                    type: string
                  network:
                    description: The primary network of the peering.
                    type: string
                  peerNetwork:
                    description: The peer network in the peering. The peer network
                      may belong to a different project.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  state:
                    description: State for the peering, either ACTIVE or INACTIVE.
                      The peering is ACTIVE when there's a matching configuration
                      in the peer network.
                    type: string
                  stateDetails:
                    description: Details about the current state of the peering.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - network
                - peerNetwork
                - providerRef
                type: object
              name:
                description: Name of the peering.
                type: string
              network:
                description: The primary network of the peering.
                type: string
              peerNetwork:
                description: The peer network in the peering. The peer network may
                  belong to a different project.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              state:
                description: State for the peering, either ACTIVE or INACTIVE. The
                  peering is ACTIVE when there's a matching configuration in the peer
                  network.
                type: string
              stateDetails:
                description: Details about the current state of the peering.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - network
            - peerNetwork
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: projectmetadata.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: ProjectMetadata
    listKind: ProjectMetadataList
    plural: projectmetadata
    singular: projectmetadata
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: A series of key value pairs.
                    type: object
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - metadata
                - providerRef
                type: object
              metadata:
                additionalProperties:
                  type: string
                description: A series of key value pairs.
                type: object
              project:
                description: The ID of the project in which the resource belongs.
                  If it is not provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - metadata
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: instancegroupmanagers.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: InstanceGroupManager
    listKind: InstanceGroupManagerList
    plural: instancegroupmanagers
    singular: instancegroupmanager
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              autoHealingPolicies:
                description: The autohealing policies for this managed instance group.
                  You can specify only one value.
                properties:
                  healthCheck:
                    description: The health check resource that signals autohealing.
                    type: string
                  initialDelaySec:
                    description: The number of seconds that the managed instance group
                      waits before it applies autohealing policies to new instances
                      or recently recreated instances. Between 0 and 3600.
                    format: int64
                    type: integer
                required:
                - healthCheck
                - initialDelaySec
                type: object
              baseInstanceName:
                description: The base instance name to use for instances in this group.
                  The value must be a valid RFC1035 name. Supported characters are
                  lowercase letters, numbers, and hyphens (-). Instances are named
                  by appending a hyphen and a random four-character string to the
                  base instance name.
                type: string
              description:
                description: An optional textual description of the instance group
                  manager.
                type: string
              fingerprint:
                description: The fingerprint of the instance group manager.
                type: string
              id:
                type: string
              instanceGroup:
                description: The full URL of the instance group created by the manager.
                type: string
              kubeformOutput:
                properties:
                  autoHealingPolicies:
                    description: The autohealing policies for this managed instance
                      group. You can specify only one value.
                    properties:
                      healthCheck:
                        description: The health check resource that signals autohealing.
                        type: string
                      initialDelaySec:
                        description: The number of seconds that the managed instance
                          group waits before it applies autohealing policies to new
                          instances or recently recreated instances. Between 0 and
                          3600.
                        format: int64
                        type: integer
                    required:
                    - healthCheck
                    - initialDelaySec
                    type: object
                  baseInstanceName:
                    description: The base instance name to use for instances in this
                      group. The value must be a valid RFC1035 name. Supported characters
                      are lowercase letters, numbers, and hyphens (-). Instances are
                      named by appending a hyphen and a random four-character string
                      to the base instance name.
                    type: string
                  description:
                    description: An optional textual description of the instance group
                      manager.
                    type: string
                  fingerprint:
                    description: The fingerprint of the instance group manager.
                    type: string
                  id:
                    type: string
                  instanceGroup:
                    description: The full URL of the instance group created by the
                      manager.
                    type: string
                  name:
                    description: The name of the instance group manager. Must be 1-63
                      characters long and comply with RFC1035. Supported characters
                      include lowercase letters, numbers, and hyphens.
                    type: string
                  namedPort:
                    description: The named port configuration.
                    items:
                      properties:
                        name:
                          description: The name of the port.
                          type: string
                        port:
                          description: The port number.
                          format: int64
                          type: integer
                      required:
                      - name
                      - port
                      type: object
                    type: array
                  operation:
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    description: The URL of the created resource.
                    type: string
                  statefulDisk:
                    description: Disks created on the instances that will be preserved
                      on instance delete, update, etc.
                    items:
                      properties:
                        deleteRule:
                          description: A value that prescribes what should happen
                            to the stateful disk when the VM instance is deleted.
                            The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION.
                            NEVER - detach the disk when the VM is deleted, but do
                            not delete the disk. ON_PERMANENT_INSTANCE_DELETION will
                            delete the stateful disk when the VM is permanently deleted
                            from the instance group. The default is NEVER.
                          type: string
                        deviceName:
                          description: The device name of the disk to be attached.
                          type: string
                      required:
                      - deviceName
                      type: object
                    type: array
                  targetPools:
                    description: The full URL of all target pools to which new instances
                      in the group are added. Updating the target pools attribute
                      does not affect existing instances.
                    items:
                      type: string
                    type: array
                  targetSize:
                    description: The target number of running instances for this managed
                      instance group. This value should always be explicitly set unless
                      this resource is attached to an autoscaler, in which case it
                      should never be set. Defaults to 0.
                    format: int64
                    type: integer
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  updatePolicy:
                    description: The update policy for this managed instance group.
                    properties:
                      maxSurgeFixed:
                        description: The maximum number of instances that can be created
                          above the specified targetSize during the update process.
                          Conflicts with max_surge_percent. If neither is set, defaults
                          to 1
                        format: int64
                        type: integer
                      maxSurgePercent:
                        description: The maximum number of instances(calculated as
                          percentage) that can be created above the specified targetSize
                          during the update process. Conflicts with max_surge_fixed.
                        format: int64
                        type: integer
                      maxUnavailableFixed:
                        description: The maximum number of instances that can be unavailable
                          during the update process. Conflicts with max_unavailable_percent.
                          If neither is set, defaults to 1.
                        format: int64
                        type: integer
                      maxUnavailablePercent:
                        description: The maximum number of instances(calculated as
                          percentage) that can be unavailable during the update process.
                          Conflicts with max_unavailable_fixed.
                        format: int64
                        type: integer
                      minReadySec:
                        description: Minimum number of seconds to wait for after a
                          newly created instance becomes available. This value must
                          be from range [0, 3600].
                        format: int64
                        type: integer
                      minimalAction:
                        description: Minimal action to be taken on an instance. You
                          can specify either RESTART to restart existing instances
                          or REPLACE to delete and create new instances from the target
                          template. If you specify a RESTART, the Updater will attempt
                          to perform that action only. However, if the Updater determines
                          that the minimal action you specify is not enough to perform
                          the update, it might perform a more disruptive action.
                        type: string
                      replacementMethod:
                        description: 'The instance replacement method for managed
                          instance groups. Valid values are: "RECREATE", "SUBSTITUTE".
                          If SUBSTITUTE (default), the group replaces VM instances
                          with new instances that have randomly generated names. If
                          RECREATE, instance names are preserved.  You must also set
                          max_unavailable_fixed or max_unavailable_percent to be greater
                          than 0.'
                        type: string
                      type:
                        description: The type of update process. You can specify either
                          PROACTIVE so that the instance group manager proactively
                          executes actions in order to bring instances to their target
                          versions or OPPORTUNISTIC so that no action is proactively
                          executed but the update will be performed as part of other
                          actions (for example, resizes or recreateInstances calls).
                        type: string
                    required:
                    - minimalAction
                    - type
                    type: object
                  version:
                    description: Application versions managed by this instance group.
                      Each version deals with a specific instance template, allowing
                      canary release scenarios.
                    items:
                      properties:
                        instanceTemplate:
                          description: The full URL to an instance template from which
                            all new instances of this version will be created.
                          type: string
                        name:
                          description: Version name.
                          type: string
                        targetSize:
                          description: The number of instances calculated as a fixed
                            number or a percentage depending on the settings.
                          properties:
                            fixed:
                              description: The number of instances which are managed
                                for this version. Conflicts with percent.
                              format: int64
                              type: integer
                            percent:
                              description: The number of instances (calculated as
                                percentage) which are managed for this version. Conflicts
                                with fixed. Note that when using percent, rounding
                                will be in favor of explicitly set target_size values;
                                a managed instance group with 2 instances and 2 versions,
                                one of which has a target_size.percent of 60 will
                                create 2 instances of that version.
                              format: int64
                              type: integer
                          type: object
                      required:
                      - instanceTemplate
                      type: object
                    type: array
                  waitForInstances:
                    description: Whether to wait for all instances to be created/updated
                      before returning. Note that if this is set to true and the operation
                      does not succeed, Terraform will continue trying until it times
                      out.
                    type: boolean
                  zone:
                    description: The zone that instances in this group should be created
                      in.
                    type: string
                required:
                - baseInstanceName
                - name
                - providerRef
                - version
                type: object
              name:
                description: The name of the instance group manager. Must be 1-63
                  characters long and comply with RFC1035. Supported characters include
                  lowercase letters, numbers, and hyphens.
                type: string
              namedPort:
                description: The named port configuration.
                items:
                  properties:
                    name:
                      description: The name of the port.
                      type: string
                    port:
                      description: The port number.
                      format: int64
                      type: integer
                  required:
                  - name
                  - port
                  type: object
                type: array
              operation:
                type: string
              project:
                description: The ID of the project in which the resource belongs.
                  If it is not provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                description: The URL of the created resource.
                type: string
              statefulDisk:
                description: Disks created on the instances that will be preserved
                  on instance delete, update, etc.
                items:
                  properties:
                    deleteRule:
                      description: A value that prescribes what should happen to the
                        stateful disk when the VM instance is deleted. The available
                        options are NEVER and ON_PERMANENT_INSTANCE_DELETION. NEVER
                        - detach the disk when the VM is deleted, but do not delete
                        the disk. ON_PERMANENT_INSTANCE_DELETION will delete the stateful
                        disk when the VM is permanently deleted from the instance
                        group. The default is NEVER.
                      type: string
                    deviceName:
                      description: The device name of the disk to be attached.
                      type: string
                  required:
                  - deviceName
                  type: object
                type: array
              targetPools:
                description: The full URL of all target pools to which new instances
                  in the group are added. Updating the target pools attribute does
                  not affect existing instances.
                items:
                  type: string
                type: array
              targetSize:
                description: The target number of running instances for this managed
                  instance group. This value should always be explicitly set unless
                  this resource is attached to an autoscaler, in which case it should
                  never be set. Defaults to 0.
                format: int64
                type: integer
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              updatePolicy:
                description: The update policy for this managed instance group.
                properties:
                  maxSurgeFixed:
                    description: The maximum number of instances that can be created
                      above the specified targetSize during the update process. Conflicts
                      with max_surge_percent. If neither is set, defaults to 1
                    format: int64
                    type: integer
                  maxSurgePercent:
                    description: The maximum number of instances(calculated as percentage)
                      that can be created above the specified targetSize during the
                      update process. Conflicts with max_surge_fixed.
                    format: int64
                    type: integer
                  maxUnavailableFixed:
                    description: The maximum number of instances that can be unavailable
                      during the update process. Conflicts with max_unavailable_percent.
                      If neither is set, defaults to 1.
                    format: int64
                    type: integer
                  maxUnavailablePercent:
                    description: The maximum number of instances(calculated as percentage)
                      that can be unavailable during the update process. Conflicts
                      with max_unavailable_fixed.
                    format: int64
                    type: integer
                  minReadySec:
                    description: Minimum number of seconds to wait for after a newly
                      created instance becomes available. This value must be from
                      range [0, 3600].
                    format: int64
                    type: integer
                  minimalAction:
                    description: Minimal action to be taken on an instance. You can
                      specify either RESTART to restart existing instances or REPLACE
                      to delete and create new instances from the target template.
                      If you specify a RESTART, the Updater will attempt to perform
                      that action only. However, if the Updater determines that the
                      minimal action you specify is not enough to perform the update,
                      it might perform a more disruptive action.
                    type: string
                  replacementMethod:
                    description: 'The instance replacement method for managed instance
                      groups. Valid values are: "RECREATE", "SUBSTITUTE". If SUBSTITUTE
                      (default), the group replaces VM instances with new instances
                      that have randomly generated names. If RECREATE, instance names
                      are preserved.  You must also set max_unavailable_fixed or max_unavailable_percent
                      to be greater than 0.'
                    type: string
                  type:
                    description: The type of update process. You can specify either
                      PROACTIVE so that the instance group manager proactively executes
                      actions in order to bring instances to their target versions
                      or OPPORTUNISTIC so that no action is proactively executed but
                      the update will be performed as part of other actions (for example,
                      resizes or recreateInstances calls).
                    type: string
                required:
                - minimalAction
                - type
                type: object
              version:
                description: Application versions managed by this instance group.
                  Each version deals with a specific instance template, allowing canary
                  release scenarios.
                items:
                  properties:
                    instanceTemplate:
                      description: The full URL to an instance template from which
                        all new instances of this version will be created.
                      type: string
                    name:
                      description: Version name.
                      type: string
                    targetSize:
                      description: The number of instances calculated as a fixed number
                        or a percentage depending on the settings.
                      properties:
                        fixed:
                          description: The number of instances which are managed for
                            this version. Conflicts with percent.
                          format: int64
                          type: integer
                        percent:
                          description: The number of instances (calculated as percentage)
                            which are managed for this version. Conflicts with fixed.
                            Note that when using percent, rounding will be in favor
                            of explicitly set target_size values; a managed instance
                            group with 2 instances and 2 versions, one of which has
                            a target_size.percent of 60 will create 2 instances of
                            that version.
                          format: int64
                          type: integer
                      type: object
                  required:
                  - instanceTemplate
                  type: object
                type: array
              waitForInstances:
                description: Whether to wait for all instances to be created/updated
                  before returning. Note that if this is set to true and the operation
                  does not succeed, Terraform will continue trying until it times
                  out.
                type: boolean
              zone:
                description: The zone that instances in this group should be created
                  in.
                type: string
            required:
            - baseInstanceName
            - name
            - providerRef
            - version
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: networks.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: Network
    listKind: NetworkList
    plural: networks
    singular: network
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              autoCreateSubnetworks:
                description: "When set to 'true', the network is created in \"auto
                  subnet mode\" and it will create a subnet for each region automatically
                  across the '10.128.0.0/9' address range. \n When set to 'false',
                  the network is created in \"custom subnet mode\" so the user can
                  explicitly connect subnetwork resources."
                type: boolean
              deleteDefaultRoutesOnCreate:
                type: boolean
              description:
                description: An optional description of this resource. The resource
                  must be recreated to modify this field.
                type: string
              gatewayIpv4:
                description: The gateway address for default routing out of the network.
                  This value is selected by GCP.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  autoCreateSubnetworks:
                    description: "When set to 'true', the network is created in \"auto
                      subnet mode\" and it will create a subnet for each region automatically
                      across the '10.128.0.0/9' address range. \n When set to 'false',
                      the network is created in \"custom subnet mode\" so the user
                      can explicitly connect subnetwork resources."
                    type: boolean
                  deleteDefaultRoutesOnCreate:
                    type: boolean
                  description:
                    description: An optional description of this resource. The resource
                      must be recreated to modify this field.
                    type: string
                  gatewayIpv4:
                    description: The gateway address for default routing out of the
                      network. This value is selected by GCP.
                    type: string
                  id:
                    type: string
                  mtu:
                    description: Maximum Transmission Unit in bytes. The minimum value
                      for this field is 1460 and the maximum value is 1500 bytes.
                    format: int64
                    type: integer
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  routingMode:
                    description: 'The network-wide routing mode to use. If set to
                      ''REGIONAL'', this network''s cloud routers will only advertise
                      routes with subnetworks of this network in the same region as
                      the router. If set to ''GLOBAL'', this network''s cloud routers
                      will advertise routes with all subnetworks of this network,
                      across regions. Possible values: ["REGIONAL", "GLOBAL"]'
                    type: string
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                type: object
              mtu:
                description: Maximum Transmission Unit in bytes. The minimum value
                  for this field is 1460 and the maximum value is 1500 bytes.
                format: int64
                type: integer
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              routingMode:
                description: 'The network-wide routing mode to use. If set to ''REGIONAL'',
                  this network''s cloud routers will only advertise routes with subnetworks
                  of this network in the same region as the router. If set to ''GLOBAL'',
                  this network''s cloud routers will advertise routes with all subnetworks
                  of this network, across regions. Possible values: ["REGIONAL", "GLOBAL"]'
                type: string
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: perinstanceconfigs.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: PerInstanceConfig
    listKind: PerInstanceConfigList
    plural: perinstanceconfigs
    singular: perinstanceconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              instanceGroupManager:
                description: The instance group manager this instance config is part
                  of.
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  instanceGroupManager:
                    description: The instance group manager this instance config is
                      part of.
                    type: string
                  minimalAction:
                    type: string
                  mostDisruptiveAllowedAction:
                    type: string
                  name:
                    description: The name for this per-instance config and its corresponding
                      instance.
                    type: string
                  preservedState:
                    description: The preserved state for this instance.
                    properties:
                      disk:
                        description: Stateful disks for the instance.
                        items:
                          properties:
                            deleteRule:
                              description: 'A value that prescribes what should happen
                                to the stateful disk when the VM instance is deleted.
                                The available options are ''NEVER'' and ''ON_PERMANENT_INSTANCE_DELETION''.
                                ''NEVER'' - detach the disk when the VM is deleted,
                                but do not delete the disk. ''ON_PERMANENT_INSTANCE_DELETION''
                                will delete the stateful disk when the VM is permanently
                                deleted from the instance group. Default value: "NEVER"
                                Possible values: ["NEVER", "ON_PERMANENT_INSTANCE_DELETION"]'
                              type: string
                            deviceName:
                              description: A unique device name that is reflected
                                into the /dev/ tree of a Linux operating system running
                                within the instance.
                              type: string
                            mode:
                              description: 'The mode of the disk. Default value: "READ_WRITE"
                                Possible values: ["READ_ONLY", "READ_WRITE"]'
                              type: string
                            source:
                              description: The URI of an existing persistent disk
                                to attach under the specified device-name in the format
                                'projects/project-id/zones/zone/disks/disk-name'.
                              type: string
                          required:
                          - deviceName
                          - source
                          type: object
                        type: array
                      metadata:
                        additionalProperties:
                          type: string
                        description: Preserved metadata defined for this instance.
                          This is a list of key->value pairs.
                        type: object
                    type: object
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  removeInstanceStateOnDestroy:
                    type: boolean
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: Zone where the containing instance group manager
                      is located
                    type: string
                required:
                - instanceGroupManager
                - name
                - providerRef
                type: object
              minimalAction:
                type: string
              mostDisruptiveAllowedAction:
                type: string
              name:
                description: The name for this per-instance config and its corresponding
                  instance.
                type: string
              preservedState:
                description: The preserved state for this instance.
                properties:
                  disk:
                    description: Stateful disks for the instance.
                    items:
                      properties:
                        deleteRule:
                          description: 'A value that prescribes what should happen
                            to the stateful disk when the VM instance is deleted.
                            The available options are ''NEVER'' and ''ON_PERMANENT_INSTANCE_DELETION''.
                            ''NEVER'' - detach the disk when the VM is deleted, but
                            do not delete the disk. ''ON_PERMANENT_INSTANCE_DELETION''
                            will delete the stateful disk when the VM is permanently
                            deleted from the instance group. Default value: "NEVER"
                            Possible values: ["NEVER", "ON_PERMANENT_INSTANCE_DELETION"]'
                          type: string
                        deviceName:
                          description: A unique device name that is reflected into
                            the /dev/ tree of a Linux operating system running within
                            the instance.
                          type: string
                        mode:
                          description: 'The mode of the disk. Default value: "READ_WRITE"
                            Possible values: ["READ_ONLY", "READ_WRITE"]'
                          type: string
                        source:
                          description: The URI of an existing persistent disk to attach
                            under the specified device-name in the format 'projects/project-id/zones/zone/disks/disk-name'.
                          type: string
                      required:
                      - deviceName
                      - source
                      type: object
                    type: array
                  metadata:
                    additionalProperties:
                      type: string
                    description: Preserved metadata defined for this instance. This
                      is a list of key->value pairs.
                    type: object
                type: object
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              removeInstanceStateOnDestroy:
                type: boolean
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              zone:
                description: Zone where the containing instance group manager is located
                type: string
            required:
            - instanceGroupManager
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: regiondiskresourcepolicyattachments.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RegionDiskResourcePolicyAttachment
    listKind: RegionDiskResourcePolicyAttachmentList
    plural: regiondiskresourcepolicyattachments
    singular: regiondiskresourcepolicyattachment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              disk:
                description: The name of the regional disk in which the resource policies
                  are attached to.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  disk:
                    description: The name of the regional disk in which the resource
                      policies are attached to.
                    type: string
                  id:
                    type: string
                  name:
                    description: The resource policy to be attached to the disk for
                      scheduling snapshot creation. Do not specify the self link.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: A reference to the region where the disk resides.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - disk
                - name
                - providerRef
                type: object
              name:
                description: The resource policy to be attached to the disk for scheduling
                  snapshot creation. Do not specify the self link.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: A reference to the region where the disk resides.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - disk
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: instancegroupnamedports.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: InstanceGroupNamedPort
    listKind: InstanceGroupNamedPortList
    plural: instancegroupnamedports
    singular: instancegroupnamedport
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              group:
                description: The name of the instance group.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  group:
                    description: The name of the instance group.
                    type: string
                  id:
                    type: string
                  name:
                    description: The name for this named port. The name must be 1-63
                      characters long, and comply with RFC1035.
                    type: string
                  port:
                    description: The port number, which can be a value between 1 and
                      65535.
                    format: int64
                    type: integer
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: The zone of the instance group.
                    type: string
                required:
                - group
                - name
                - port
                - providerRef
                type: object
              name:
                description: The name for this named port. The name must be 1-63 characters
                  long, and comply with RFC1035.
                type: string
              port:
                description: The port number, which can be a value between 1 and 65535.
                format: int64
                type: integer
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              zone:
                description: The zone of the instance group.
                type: string
            required:
            - group
            - name
            - port
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: instanceiampolicies.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: InstanceIamPolicy
    listKind: InstanceIamPolicyList
    plural: instanceiampolicies
    singular: instanceiampolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              etag:
                type: string
              id:
                type: string
              instanceName:
                type: string
              kubeformOutput:
                properties:
                  etag:
                    type: string
                  id:
                    type: string
                  instanceName:
                    type: string
                  policyData:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  zone:
                    type: string
                required:
                - instanceName
                - policyData
                - providerRef
                type: object
              policyData:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              zone:
                type: string
            required:
            - instanceName
            - policyData
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: routerinterfaces.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RouterInterface
    listKind: RouterInterfaceList
    plural: routerinterfaces
    singular: routerinterface
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              interconnectAttachment:
                description: The name or resource link to the VLAN interconnect for
                  this interface. Changing this forces a new interface to be created.
                  Only one of vpn_tunnel and interconnect_attachment can be specified.
                type: string
              ipRange:
                description: IP address and range of the interface. The IP range must
                  be in the RFC3927 link-local IP space. Changing this forces a new
                  interface to be created.
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  interconnectAttachment:
                    description: The name or resource link to the VLAN interconnect
                      for this interface. Changing this forces a new interface to
                      be created. Only one of vpn_tunnel and interconnect_attachment
                      can be specified.
                    type: string
                  ipRange:
                    description: IP address and range of the interface. The IP range
                      must be in the RFC3927 link-local IP space. Changing this forces
                      a new interface to be created.
                    type: string
                  name:
                    description: A unique name for the interface, required by GCE.
                      Changing this forces a new interface to be created.
                    type: string
                  project:
                    description: The ID of the project in which this interface's router
                      belongs. If it is not provided, the provider project is used.
                      Changing this forces a new interface to be created.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: The region this interface's router sits in. If not
                      specified, the project region will be used. Changing this forces
                      a new interface to be created.
                    type: string
                  router:
                    description: The name of the router this interface will be attached
                      to. Changing this forces a new interface to be created.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  vpnTunnel:
                    description: The name or resource link to the VPN tunnel this
                      interface will be linked to. Changing this forces a new interface
                      to be created. Only one of vpn_tunnel and interconnect_attachment
                      can be specified.
                    type: string
                required:
                - name
                - providerRef
                - router
                type: object
              name:
                description: A unique name for the interface, required by GCE. Changing
                  this forces a new interface to be created.
                type: string
              project:
                description: The ID of the project in which this interface's router
                  belongs. If it is not provided, the provider project is used. Changing
                  this forces a new interface to be created.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: The region this interface's router sits in. If not specified,
                  the project region will be used. Changing this forces a new interface
                  to be created.
                type: string
              router:
                description: The name of the router this interface will be attached
                  to. Changing this forces a new interface to be created.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              vpnTunnel:
                description: The name or resource link to the VPN tunnel this interface
                  will be linked to. Changing this forces a new interface to be created.
                  Only one of vpn_tunnel and interconnect_attachment can be specified.
                type: string
            required:
            - name
            - providerRef
            - router
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: securitypolicies.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: SecurityPolicy
    listKind: SecurityPolicyList
    plural: securitypolicies
    singular: securitypolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: An optional description of this security policy. Max
                  size is 2048.
                type: string
              fingerprint:
                description: Fingerprint of this resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  description:
                    description: An optional description of this security policy.
                      Max size is 2048.
                    type: string
                  fingerprint:
                    description: Fingerprint of this resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: The name of the security policy.
                    type: string
                  project:
                    description: The project in which the resource belongs. If it
                      is not provided, the provider project is used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  rule:
                    description: The set of rules that belong to this policy. There
                      must always be a default rule (rule with priority 2147483647
                      and match "*"). If no rules are provided when creating a security
                      policy, a default rule with action "allow" will be added.
                    items:
                      properties:
                        action:
                          description: 'Action to take when match matches the request.
                            Valid values:   "allow" : allow access to target, "deny(status)"
                            : deny access to target, returns the HTTP response code
                            specified (valid values are 403, 404 and 502)'
                          type: string
                        description:
                          description: An optional description of this rule. Max size
                            is 64.
                          type: string
                        match:
                          description: A match condition that incoming traffic is
                            evaluated against. If it evaluates to true, the corresponding
                            action is enforced.
                          properties:
                            config:
                              description: The configuration options available when
                                specifying versioned_expr. This field must be specified
                                if versioned_expr is specified and cannot be specified
                                if versioned_expr is not specified.
                              properties:
                                srcIPRanges:
                                  description: Set of IP addresses or ranges (IPV4
                                    or IPV6) in CIDR notation to match against inbound
                                    traffic. There is a limit of 10 IP ranges per
                                    rule. A value of '*' matches all IPs (can be used
                                    to override the default behavior).
                                  items:
                                    type: string
                                  maxItems: 10
                                  minItems: 1
                                  type: array
                              required:
                              - srcIPRanges
                              type: object
                            expr:
                              description: User defined CEVAL expression. A CEVAL
                                expression is used to specify match criteria such
                                as origin.ip, source.region_code and contents in the
                                request header.
                              properties:
                                expression:
                                  description: Textual representation of an expression
                                    in Common Expression Language syntax. The application
                                    context of the containing message determines which
                                    well-known feature set of CEL is supported.
                                  type: string
                              required:
                              - expression
                              type: object
                            versionedExpr:
                              description: 'Predefined rule expression. If this field
                                is specified, config must also be specified. Available
                                options:   SRC_IPS_V1: Must specify the corresponding
                                src_ip_ranges field in config.'
                              type: string
                          type: object
                        preview:
                          description: When set to true, the action specified above
                            is not enforced. Stackdriver logs for requests that trigger
                            a preview action are annotated as such.
                          type: boolean
                        priority:
                          description: An unique positive integer indicating the priority
                            of evaluation for a rule. Rules are evaluated from highest
                            priority (lowest numerically) to lowest priority (highest
                            numerically) in order.
                          format: int64
                          type: integer
                      required:
                      - action
                      - match
                      - priority
                      type: object
                    type: array
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                type: object
              name:
                description: The name of the security policy.
                type: string
              project:
                description: The project in which the resource belongs. If it is not
                  provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              rule:
                description: The set of rules that belong to this policy. There must
                  always be a default rule (rule with priority 2147483647 and match
                  "*"). If no rules are provided when creating a security policy,
                  a default rule with action "allow" will be added.
                items:
                  properties:
                    action:
                      description: 'Action to take when match matches the request.
                        Valid values:   "allow" : allow access to target, "deny(status)"
                        : deny access to target, returns the HTTP response code specified
                        (valid values are 403, 404 and 502)'
                      type: string
                    description:
                      description: An optional description of this rule. Max size
                        is 64.
                      type: string
                    match:
                      description: A match condition that incoming traffic is evaluated
                        against. If it evaluates to true, the corresponding action
                        is enforced.
                      properties:
                        config:
                          description: The configuration options available when specifying
                            versioned_expr. This field must be specified if versioned_expr
                            is specified and cannot be specified if versioned_expr
                            is not specified.
                          properties:
                            srcIPRanges:
                              description: Set of IP addresses or ranges (IPV4 or
                                IPV6) in CIDR notation to match against inbound traffic.
                                There is a limit of 10 IP ranges per rule. A value
                                of '*' matches all IPs (can be used to override the
                                default behavior).
                              items:
                                type: string
                              maxItems: 10
                              minItems: 1
                              type: array
                          required:
                          - srcIPRanges
                          type: object
                        expr:
                          description: User defined CEVAL expression. A CEVAL expression
                            is used to specify match criteria such as origin.ip, source.region_code
                            and contents in the request header.
                          properties:
                            expression:
                              description: Textual representation of an expression
                                in Common Expression Language syntax. The application
                                context of the containing message determines which
                                well-known feature set of CEL is supported.
                              type: string
                          required:
                          - expression
                          type: object
                        versionedExpr:
                          description: 'Predefined rule expression. If this field
                            is specified, config must also be specified. Available
                            options:   SRC_IPS_V1: Must specify the corresponding
                            src_ip_ranges field in config.'
                          type: string
                      type: object
                    preview:
                      description: When set to true, the action specified above is
                        not enforced. Stackdriver logs for requests that trigger a
                        preview action are annotated as such.
                      type: boolean
                    priority:
                      description: An unique positive integer indicating the priority
                        of evaluation for a rule. Rules are evaluated from highest
                        priority (lowest numerically) to lowest priority (highest
                        numerically) in order.
                      format: int64
                      type: integer
                  required:
                  - action
                  - match
                  - priority
                  type: object
                type: array
              selfLink:
                description: The URI of the created resource.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: imageiambindings.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: ImageIamBinding
    listKind: ImageIamBindingList
    plural: imageiambindings
    singular: imageiambinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              image:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  image:
                    type: string
                  members:
                    items:
                      type: string
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - image
                - members
                - providerRef
                - role
                type: object
              members:
                items:
                  type: string
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - image
            - members
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: subnetworkiammembers.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: SubnetworkIamMember
    listKind: SubnetworkIamMemberList
    plural: subnetworkiammembers
    singular: subnetworkiammember
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  member:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    type: string
                  role:
                    type: string
                  subnetwork:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - member
                - providerRef
                - role
                - subnetwork
                type: object
              member:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                type: string
              role:
                type: string
              subnetwork:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - member
            - providerRef
            - role
            - subnetwork
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: projectmetadataitems.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: ProjectMetadataItem
    listKind: ProjectMetadataItemList
    plural: projectmetadataitems
    singular: projectmetadataitem
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              key:
                description: The metadata key to set.
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  key:
                    description: The metadata key to set.
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  value:
                    description: The value to set for the given metadata key.
                    type: string
                required:
                - key
                - providerRef
                - value
                type: object
              project:
                description: The ID of the project in which the resource belongs.
                  If it is not provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              value:
                description: The value to set for the given metadata key.
                type: string
            required:
            - key
            - providerRef
            - value
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: targetpools.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: TargetPool
    listKind: TargetPoolList
    plural: targetpools
    singular: targetpool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backupPool:
                description: URL to the backup target pool. Must also set failover_ratio.
                type: string
              description:
                description: Textual description field.
                type: string
              failoverRatio:
                description: Ratio (0 to 1) of failed nodes before using the backup
                  pool (which must also be set).
                format: double
                type: number
              healthChecks:
                description: List of zero or one health check name or self_link. Only
                  legacy google_compute_http_health_check is supported.
                items:
                  type: string
                type: array
              id:
                type: string
              instances:
                description: List of instances in the pool. They can be given as URLs,
                  or in the form of "zone/name". Note that the instances need not
                  exist at the time of target pool creation, so there is no need to
                  use the Terraform interpolators to create a dependency on the instances
                  from the target pool.
                items:
                  type: string
                type: array
              kubeformOutput:
                properties:
                  backupPool:
                    description: URL to the backup target pool. Must also set failover_ratio.
                    type: string
                  description:
                    description: Textual description field.
                    type: string
                  failoverRatio:
                    description: Ratio (0 to 1) of failed nodes before using the backup
                      pool (which must also be set).
                    format: double
                    type: number
                  healthChecks:
                    description: List of zero or one health check name or self_link.
                      Only legacy google_compute_http_health_check is supported.
                    items:
                      type: string
                    type: array
                  id:
                    type: string
                  instances:
                    description: List of instances in the pool. They can be given
                      as URLs, or in the form of "zone/name". Note that the instances
                      need not exist at the time of target pool creation, so there
                      is no need to use the Terraform interpolators to create a dependency
                      on the instances from the target pool.
                    items:
                      type: string
                    type: array
                  name:
                    description: A unique name for the resource, required by GCE.
                      Changing this forces a new resource to be created.
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: Where the target pool resides. Defaults to project
                      region.
                    type: string
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                  sessionAffinity:
                    description: How to distribute load. Options are "NONE" (no affinity).
                      "CLIENT_IP" (hash of the source/dest addresses / ports), and
                      "CLIENT_IP_PROTO" also includes the protocol (default "NONE").
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                type: object
              name:
                description: A unique name for the resource, required by GCE. Changing
                  this forces a new resource to be created.
                type: string
              project:
                description: The ID of the project in which the resource belongs.
                  If it is not provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: Where the target pool resides. Defaults to project region.
                type: string
              selfLink:
                description: The URI of the created resource.
                type: string
              sessionAffinity:
                description: How to distribute load. Options are "NONE" (no affinity).
                  "CLIENT_IP" (hash of the source/dest addresses / ports), and "CLIENT_IP_PROTO"
                  also includes the protocol (default "NONE").
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: resourcepolicies.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: ResourcePolicy
    listKind: ResourcePolicyList
    plural: resourcepolicies
    singular: resourcepolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              groupPlacementPolicy:
                description: Resource policy for instances used for placement configuration.
                properties:
                  availabilityDomainCount:
                    description: The number of availability domains instances will
                      be spread across. If two instances are in different availability
                      domain, they will not be put in the same low latency network
                    format: int64
                    type: integer
                  collocation:
                    description: 'Collocation specifies whether to place VMs inside
                      the same availability domain on the same low-latency network.
                      Specify ''COLLOCATED'' to enable collocation. Can only be specified
                      with ''vm_count''. If compute instances are created with a COLLOCATED
                      policy, then exactly ''vm_count'' instances must be created
                      at the same time with the resource policy attached. Possible
                      values: ["COLLOCATED"]'
                    type: string
                  vmCount:
                    description: Number of vms in this placement group.
                    format: int64
                    type: integer
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  groupPlacementPolicy:
                    description: Resource policy for instances used for placement
                      configuration.
                    properties:
                      availabilityDomainCount:
                        description: The number of availability domains instances
                          will be spread across. If two instances are in different
                          availability domain, they will not be put in the same low
                          latency network
                        format: int64
                        type: integer
                      collocation:
                        description: 'Collocation specifies whether to place VMs inside
                          the same availability domain on the same low-latency network.
                          Specify ''COLLOCATED'' to enable collocation. Can only be
                          specified with ''vm_count''. If compute instances are created
                          with a COLLOCATED policy, then exactly ''vm_count'' instances
                          must be created at the same time with the resource policy
                          attached. Possible values: ["COLLOCATED"]'
                        type: string
                      vmCount:
                        description: Number of vms in this placement group.
                        format: int64
                        type: integer
                    type: object
                  id:
                    type: string
                  name:
                    description: The name of the resource, provided by the client
                      when initially creating the resource. The resource name must
                      be 1-63 characters long, and comply with RFC1035. Specifically,
                      the name must be 1-63 characters long and match the regular
                      expression '[a-z]([-a-z0-9]*[a-z0-9])'? which means the first
                      character must be a lowercase letter, and all following characters
                      must be a dash, lowercase letter, or digit, except the last
                      character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: Region where resource policy resides.
                    type: string
                  selfLink:
                    type: string
                  snapshotSchedulePolicy:
                    description: Policy for creating snapshots of persistent disks.
                    properties:
                      retentionPolicy:
                        description: Retention policy applied to snapshots created
                          by this resource policy.
                        properties:
                          maxRetentionDays:
                            description: Maximum age of the snapshot that is allowed
                              to be kept.
                            format: int64
                            type: integer
                          onSourceDiskDelete:
                            description: 'Specifies the behavior to apply to scheduled
                              snapshots when the source disk is deleted. Default value:
                              "KEEP_AUTO_SNAPSHOTS" Possible values: ["KEEP_AUTO_SNAPSHOTS",
                              "APPLY_RETENTION_POLICY"]'
                            type: string
                        required:
                        - maxRetentionDays
                        type: object
                      schedule:
                        description: Contains one of an 'hourlySchedule', 'dailySchedule',
                          or 'weeklySchedule'.
                        properties:
                          dailySchedule:
                            description: The policy will execute every nth day at
                              the specified time.
                            properties:
                              daysInCycle:
                                description: The number of days between snapshots.
                                format: int64
                                type: integer
                              startTime:
                                description: This must be in UTC format that resolves
                                  to one of 00:00, 04:00, 08:00, 12:00, 16:00, or
                                  20:00. For example, both 13:00-5 and 08:00 are valid.
                                type: string
                            required:
                            - daysInCycle
                            - startTime
                            type: object
                          hourlySchedule:
                            description: The policy will execute every nth hour starting
                              at the specified time.
                            properties:
                              hoursInCycle:
                                description: The number of hours between snapshots.
                                format: int64
                                type: integer
                              startTime:
                                description: 'Time within the window to start the
                                  operations. It must be in an hourly format "HH:MM",
                                  where HH : [00-23] and MM : [00] GMT. eg: 21:00'
                                type: string
                            required:
                            - hoursInCycle
                            - startTime
                            type: object
                          weeklySchedule:
                            description: Allows specifying a snapshot time for each
                              day of the week.
                            properties:
                              dayOfWeeks:
                                description: May contain up to seven (one for each
                                  day of the week) snapshot times.
                                items:
                                  properties:
                                    day:
                                      description: 'The day of the week to create
                                        the snapshot. e.g. MONDAY Possible values:
                                        ["MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY",
                                        "FRIDAY", "SATURDAY", "SUNDAY"]'
                                      type: string
                                    startTime:
                                      description: 'Time within the window to start
                                        the operations. It must be in format "HH:MM",
                                        where HH : [00-23] and MM : [00-00] GMT.'
                                      type: string
                                  required:
                                  - day
                                  - startTime
                                  type: object
                                maxItems: 7
                                minItems: 1
                                type: array
                            required:
                            - dayOfWeeks
                            type: object
                        type: object
                      snapshotProperties:
                        description: Properties with which the snapshots are created,
                          such as labels.
                        properties:
                          guestFlush:
                            description: Whether to perform a 'guest aware' snapshot.
                            type: boolean
                          labels:
                            additionalProperties:
                              type: string
                            description: A set of key-value pairs.
                            type: object
                          storageLocations:
                            description: Cloud Storage bucket location to store the
                              auto snapshot (regional or multi-regional)
                            items:
                              type: string
                            type: array
                        type: object
                    required:
                    - schedule
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                type: object
              name:
                description: The name of the resource, provided by the client when
                  initially creating the resource. The resource name must be 1-63
                  characters long, and comply with RFC1035. Specifically, the name
                  must be 1-63 characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])'?
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: Region where resource policy resides.
                type: string
              selfLink:
                type: string
              snapshotSchedulePolicy:
                description: Policy for creating snapshots of persistent disks.
                properties:
                  retentionPolicy:
                    description: Retention policy applied to snapshots created by
                      this resource policy.
                    properties:
                      maxRetentionDays:
                        description: Maximum age of the snapshot that is allowed to
                          be kept.
                        format: int64
                        type: integer
                      onSourceDiskDelete:
                        description: 'Specifies the behavior to apply to scheduled
                          snapshots when the source disk is deleted. Default value:
                          "KEEP_AUTO_SNAPSHOTS" Possible values: ["KEEP_AUTO_SNAPSHOTS",
                          "APPLY_RETENTION_POLICY"]'
                        type: string
                    required:
                    - maxRetentionDays
                    type: object
                  schedule:
                    description: Contains one of an 'hourlySchedule', 'dailySchedule',
                      or 'weeklySchedule'.
                    properties:
                      dailySchedule:
                        description: The policy will execute every nth day at the
                          specified time.
                        properties:
                          daysInCycle:
                            description: The number of days between snapshots.
                            format: int64
                            type: integer
                          startTime:
                            description: This must be in UTC format that resolves
                              to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00.
                              For example, both 13:00-5 and 08:00 are valid.
                            type: string
                        required:
                        - daysInCycle
                        - startTime
                        type: object
                      hourlySchedule:
                        description: The policy will execute every nth hour starting
                          at the specified time.
                        properties:
                          hoursInCycle:
                            description: The number of hours between snapshots.
                            format: int64
                            type: integer
                          startTime:
                            description: 'Time within the window to start the operations.
                              It must be in an hourly format "HH:MM", where HH : [00-23]
                              and MM : [00] GMT. eg: 21:00'
                            type: string
                        required:
                        - hoursInCycle
                        - startTime
                        type: object
                      weeklySchedule:
                        description: Allows specifying a snapshot time for each day
                          of the week.
                        properties:
                          dayOfWeeks:
                            description: May contain up to seven (one for each day
                              of the week) snapshot times.
                            items:
                              properties:
                                day:
                                  description: 'The day of the week to create the
                                    snapshot. e.g. MONDAY Possible values: ["MONDAY",
                                    "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY",
                                    "SATURDAY", "SUNDAY"]'
                                  type: string
                                startTime:
                                  description: 'Time within the window to start the
                                    operations. It must be in format "HH:MM", where
                                    HH : [00-23] and MM : [00-00] GMT.'
                                  type: string
                              required:
                              - day
                              - startTime
                              type: object
                            maxItems: 7
                            minItems: 1
                            type: array
                        required:
                        - dayOfWeeks
                        type: object
                    type: object
                  snapshotProperties:
                    description: Properties with which the snapshots are created,
                      such as labels.
                    properties:
                      guestFlush:
                        description: Whether to perform a 'guest aware' snapshot.
                        type: boolean
                      labels:
                        additionalProperties:
                          type: string
                        description: A set of key-value pairs.
                        type: object
                      storageLocations:
                        description: Cloud Storage bucket location to store the auto
                          snapshot (regional or multi-regional)
                        items:
                          type: string
                        type: array
                    type: object
                required:
                - schedule
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: targetgrpcproxies.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: TargetGrpcProxy
    listKind: TargetGrpcProxyList
    plural: targetgrpcproxies
    singular: targetgrpcproxy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              fingerprint:
                description: Fingerprint of this resource. A hash of the contents
                  stored in this object. This field is used in optimistic locking.
                  This field will be ignored when inserting a TargetGrpcProxy. An
                  up-to-date fingerprint must be provided in order to patch/update
                  the TargetGrpcProxy; otherwise, the request will fail with error
                  412 conditionNotMet. To see the latest fingerprint, make a get()
                  request to retrieve the TargetGrpcProxy. A base64-encoded string.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  fingerprint:
                    description: Fingerprint of this resource. A hash of the contents
                      stored in this object. This field is used in optimistic locking.
                      This field will be ignored when inserting a TargetGrpcProxy.
                      An up-to-date fingerprint must be provided in order to patch/update
                      the TargetGrpcProxy; otherwise, the request will fail with error
                      412 conditionNotMet. To see the latest fingerprint, make a get()
                      request to retrieve the TargetGrpcProxy. A base64-encoded string.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  selfLinkWithID:
                    description: Server-defined URL with id for the resource.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  urlMap:
                    description: URL to the UrlMap resource that defines the mapping
                      from URL to the BackendService. The protocol field in the BackendService
                      must be set to GRPC.
                    type: string
                  validateForProxyless:
                    description: If true, indicates that the BackendServices referenced
                      by the urlMap may be accessed by gRPC applications without using
                      a sidecar proxy. This will enable configuration checks on urlMap
                      and its referenced BackendServices to not allow unsupported
                      features. A gRPC application must use "xds:///" scheme in the
                      target URI of the service it is connecting to. If false, indicates
                      that the BackendServices referenced by the urlMap will be accessed
                      by gRPC applications via a sidecar proxy. In this case, a gRPC
                      application must not use "xds:///" scheme in the target URI
                      of the service it is connecting to
                    type: boolean
                required:
                - name
                - providerRef
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              selfLinkWithID:
                description: Server-defined URL with id for the resource.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              urlMap:
                description: URL to the UrlMap resource that defines the mapping from
                  URL to the BackendService. The protocol field in the BackendService
                  must be set to GRPC.
                type: string
              validateForProxyless:
                description: If true, indicates that the BackendServices referenced
                  by the urlMap may be accessed by gRPC applications without using
                  a sidecar proxy. This will enable configuration checks on urlMap
                  and its referenced BackendServices to not allow unsupported features.
                  A gRPC application must use "xds:///" scheme in the target URI of
                  the service it is connecting to. If false, indicates that the BackendServices
                  referenced by the urlMap will be accessed by gRPC applications via
                  a sidecar proxy. In this case, a gRPC application must not use "xds:///"
                  scheme in the target URI of the service it is connecting to
                type: boolean
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: routerpeers.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RouterPeer
    listKind: RouterPeerList
    plural: routerpeers
    singular: routerpeer
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              advertiseMode:
                description: 'User-specified flag to indicate which mode to use for
                  advertisement. Valid values of this enum field are: ''DEFAULT'',
                  ''CUSTOM'' Default value: "DEFAULT" Possible values: ["DEFAULT",
                  "CUSTOM"]'
                type: string
              advertisedGroups:
                description: "User-specified list of prefix groups to advertise in
                  custom mode, which can take one of the following options: \n * 'ALL_SUBNETS':
                  Advertises all available subnets, including peer VPC subnets. *
                  'ALL_VPC_SUBNETS': Advertises the router's own VPC subnets. * 'ALL_PEER_VPC_SUBNETS':
                  Advertises peer subnets of the router's VPC network. \n Note that
                  this field can only be populated if advertiseMode is 'CUSTOM' and
                  overrides the list defined for the router (in the \"bgp\" message).
                  These groups are advertised in addition to any specified prefixes.
                  Leave this field blank to advertise no custom groups."
                items:
                  type: string
                type: array
              advertisedIPRanges:
                description: User-specified list of individual IP ranges to advertise
                  in custom mode. This field can only be populated if advertiseMode
                  is 'CUSTOM' and is advertised to all peers of the router. These
                  IP ranges will be advertised in addition to any specified groups.
                  Leave this field blank to advertise no custom IP ranges.
                items:
                  properties:
                    description:
                      description: User-specified description for the IP range.
                      type: string
                    range:
                      description: The IP range to advertise. The value must be a
                        CIDR-formatted string.
                      type: string
                  required:
                  - range
                  type: object
                type: array
              advertisedRoutePriority:
                description: The priority of routes advertised to this BGP peer. Where
                  there is more than one matching route of maximum length, the routes
                  with the lowest priority value win.
                format: int64
                type: integer
              id:
                type: string
              interface:
                description: Name of the interface the BGP peer is associated with.
                type: string
              ipAddress:
                description: IP address of the interface inside Google Cloud Platform.
                  Only IPv4 is supported.
                type: string
              kubeformOutput:
                properties:
                  advertiseMode:
                    description: 'User-specified flag to indicate which mode to use
                      for advertisement. Valid values of this enum field are: ''DEFAULT'',
                      ''CUSTOM'' Default value: "DEFAULT" Possible values: ["DEFAULT",
                      "CUSTOM"]'
                    type: string
                  advertisedGroups:
                    description: "User-specified list of prefix groups to advertise
                      in custom mode, which can take one of the following options:
                      \n * 'ALL_SUBNETS': Advertises all available subnets, including
                      peer VPC subnets. * 'ALL_VPC_SUBNETS': Advertises the router's
                      own VPC subnets. * 'ALL_PEER_VPC_SUBNETS': Advertises peer subnets
                      of the router's VPC network. \n Note that this field can only
                      be populated if advertiseMode is 'CUSTOM' and overrides the
                      list defined for the router (in the \"bgp\" message). These
                      groups are advertised in addition to any specified prefixes.
                      Leave this field blank to advertise no custom groups."
                    items:
                      type: string
                    type: array
                  advertisedIPRanges:
                    description: User-specified list of individual IP ranges to advertise
                      in custom mode. This field can only be populated if advertiseMode
                      is 'CUSTOM' and is advertised to all peers of the router. These
                      IP ranges will be advertised in addition to any specified groups.
                      Leave this field blank to advertise no custom IP ranges.
                    items:
                      properties:
                        description:
                          description: User-specified description for the IP range.
                          type: string
                        range:
                          description: The IP range to advertise. The value must be
                            a CIDR-formatted string.
                          type: string
                      required:
                      - range
                      type: object
                    type: array
                  advertisedRoutePriority:
                    description: The priority of routes advertised to this BGP peer.
                      Where there is more than one matching route of maximum length,
                      the routes with the lowest priority value win.
                    format: int64
                    type: integer
                  id:
                    type: string
                  interface:
                    description: Name of the interface the BGP peer is associated
                      with.
                    type: string
                  ipAddress:
                    description: IP address of the interface inside Google Cloud Platform.
                      Only IPv4 is supported.
                    type: string
                  managementType:
                    description: "The resource that configures and manages this BGP
                      peer. \n * 'MANAGED_BY_USER' is the default value and can be
                      managed by you or other users * 'MANAGED_BY_ATTACHMENT' is a
                      BGP peer that is configured and managed by Cloud Interconnect,
                      specifically by an InterconnectAttachment of type PARTNER. Google
                      automatically creates, updates, and deletes this type of BGP
                      peer when the PARTNER InterconnectAttachment is created, updated,
                      or deleted."
                    type: string
                  name:
                    description: Name of this BGP peer. The name must be 1-63 characters
                      long, and comply with RFC1035. Specifically, the name must be
                      1-63 characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  peerAsn:
                    description: Peer BGP Autonomous System Number (ASN). Each BGP
                      interface may use a different value.
                    format: int64
                    type: integer
                  peerIPAddress:
                    description: IP address of the BGP interface outside Google Cloud
                      Platform. Only IPv4 is supported.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: Region where the router and BgpPeer reside. If it
                      is not provided, the provider region is used.
                    type: string
                  router:
                    description: The name of the Cloud Router in which this BgpPeer
                      will be configured.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - interface
                - name
                - peerAsn
                - peerIPAddress
                - providerRef
                - router
                type: object
              managementType:
                description: "The resource that configures and manages this BGP peer.
                  \n * 'MANAGED_BY_USER' is the default value and can be managed by
                  you or other users * 'MANAGED_BY_ATTACHMENT' is a BGP peer that
                  is configured and managed by Cloud Interconnect, specifically by
                  an InterconnectAttachment of type PARTNER. Google automatically
                  creates, updates, and deletes this type of BGP peer when the PARTNER
                  InterconnectAttachment is created, updated, or deleted."
                type: string
              name:
                description: Name of this BGP peer. The name must be 1-63 characters
                  long, and comply with RFC1035. Specifically, the name must be 1-63
                  characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              peerAsn:
                description: Peer BGP Autonomous System Number (ASN). Each BGP interface
                  may use a different value.
                format: int64
                type: integer
              peerIPAddress:
                description: IP address of the BGP interface outside Google Cloud
                  Platform. Only IPv4 is supported.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: Region where the router and BgpPeer reside. If it is
                  not provided, the provider region is used.
                type: string
              router:
                description: The name of the Cloud Router in which this BgpPeer will
                  be configured.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - interface
            - name
            - peerAsn
            - peerIPAddress
            - providerRef
            - router
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: subnetworkiampolicies.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: SubnetworkIamPolicy
    listKind: SubnetworkIamPolicyList
    plural: subnetworkiampolicies
    singular: subnetworkiampolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  etag:
                    type: string
                  id:
                    type: string
                  policyData:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    type: string
                  subnetwork:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - policyData
                - providerRef
                - subnetwork
                type: object
              policyData:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                type: string
              subnetwork:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - policyData
            - providerRef
            - subnetwork
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: snapshots.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: Snapshot
    listKind: SnapshotList
    plural: snapshots
    singular: snapshot
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              diskSizeGb:
                description: Size of the snapshot, specified in GB.
                format: int64
                type: integer
              id:
                type: string
              kubeformOutput:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  diskSizeGb:
                    description: Size of the snapshot, specified in GB.
                    format: int64
                    type: integer
                  id:
                    type: string
                  labelFingerprint:
                    description: The fingerprint used for optimistic locking of this
                      resource. Used internally during updates.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to apply to this Snapshot.
                    type: object
                  licenses:
                    description: A list of public visible licenses that apply to this
                      snapshot. This can be because the original image had licenses
                      attached (such as a Windows image).  snapshotEncryptionKey nested
                      object Encrypts the snapshot using a customer-supplied encryption
                      key.
                    items:
                      type: string
                    type: array
                  name:
                    description: Name of the resource; provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  snapshotEncryptionKey:
                    description: The customer-supplied encryption key of the snapshot.
                      Required if the source snapshot is protected by a customer-supplied
                      encryption key.
                    properties:
                      kmsKeySelfLink:
                        description: The name of the encryption key that is stored
                          in Google Cloud KMS.
                        type: string
                      kmsKeyServiceAccount:
                        description: The service account used for the encryption request
                          for the given KMS key. If absent, the Compute Engine Service
                          Agent service account is used.
                        type: string
                      sha256:
                        description: The RFC 4648 base64 encoded SHA-256 hash of the
                          customer-supplied encryption key that protects this resource.
                        type: string
                    type: object
                  snapshotID:
                    description: The unique identifier for the resource.
                    format: int64
                    type: integer
                  sourceDisk:
                    description: A reference to the disk used to create this snapshot.
                    type: string
                  sourceDiskEncryptionKey:
                    description: The customer-supplied encryption key of the source
                      snapshot. Required if the source snapshot is protected by a
                      customer-supplied encryption key.
                    properties:
                      kmsKeyServiceAccount:
                        description: The service account used for the encryption request
                          for the given KMS key. If absent, the Compute Engine Service
                          Agent service account is used.
                        type: string
                    type: object
                  sourceDiskLink:
                    description: Deprecated
                    type: string
                  storageBytes:
                    description: A size of the storage used by the snapshot. As snapshots
                      share storage, this number is expected to change with snapshot
                      creation/deletion.
                    format: int64
                    type: integer
                  storageLocations:
                    description: Cloud Storage bucket storage location of the snapshot
                      (regional or multi-regional).
                    items:
                      type: string
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: A reference to the zone where the disk is hosted.
                    type: string
                required:
                - name
                - providerRef
                - sourceDisk
                type: object
              labelFingerprint:
                description: The fingerprint used for optimistic locking of this resource.
                  Used internally during updates.
                type: string
              labels:
                additionalProperties:
                  type: string
                description: Labels to apply to this Snapshot.
                type: object
              licenses:
                description: A list of public visible licenses that apply to this
                  snapshot. This can be because the original image had licenses attached
                  (such as a Windows image).  snapshotEncryptionKey nested object
                  Encrypts the snapshot using a customer-supplied encryption key.
                items:
                  type: string
                type: array
              name:
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              snapshotEncryptionKey:
                description: The customer-supplied encryption key of the snapshot.
                  Required if the source snapshot is protected by a customer-supplied
                  encryption key.
                properties:
                  kmsKeySelfLink:
                    description: The name of the encryption key that is stored in
                      Google Cloud KMS.
                    type: string
                  kmsKeyServiceAccount:
                    description: The service account used for the encryption request
                      for the given KMS key. If absent, the Compute Engine Service
                      Agent service account is used.
                    type: string
                  sha256:
                    description: The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
                      encryption key that protects this resource.
                    type: string
                type: object
              snapshotID:
                description: The unique identifier for the resource.
                format: int64
                type: integer
              sourceDisk:
                description: A reference to the disk used to create this snapshot.
                type: string
              sourceDiskEncryptionKey:
                description: The customer-supplied encryption key of the source snapshot.
                  Required if the source snapshot is protected by a customer-supplied
                  encryption key.
                properties:
                  kmsKeyServiceAccount:
                    description: The service account used for the encryption request
                      for the given KMS key. If absent, the Compute Engine Service
                      Agent service account is used.
                    type: string
                type: object
              sourceDiskLink:
                description: Deprecated
                type: string
              storageBytes:
                description: A size of the storage used by the snapshot. As snapshots
                  share storage, this number is expected to change with snapshot creation/deletion.
                format: int64
                type: integer
              storageLocations:
                description: Cloud Storage bucket storage location of the snapshot
                  (regional or multi-regional).
                items:
                  type: string
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              zone:
                description: A reference to the zone where the disk is hosted.
                type: string
            required:
            - name
            - providerRef
            - sourceDisk
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: sharedvpchostprojects.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: SharedVpcHostProject
    listKind: SharedVpcHostProjectList
    plural: sharedvpchostprojects
    singular: sharedvpchostproject
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  project:
                    description: The ID of the project that will serve as a Shared
                      VPC host project
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - project
                - providerRef
                type: object
              project:
                description: The ID of the project that will serve as a Shared VPC
                  host project
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - project
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: targethttpproxies.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: TargetHTTPProxy
    listKind: TargetHTTPProxyList
    plural: targethttpproxies
    singular: targethttpproxy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  proxyBind:
                    description: This field only applies when the forwarding rule
                      that references this target proxy has a loadBalancingScheme
                      set to INTERNAL_SELF_MANAGED.
                    type: boolean
                  proxyID:
                    description: The unique identifier for the resource.
                    format: int64
                    type: integer
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  urlMap:
                    description: A reference to the UrlMap resource that defines the
                      mapping from URL to the BackendService.
                    type: string
                required:
                - name
                - providerRef
                - urlMap
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              proxyBind:
                description: This field only applies when the forwarding rule that
                  references this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
                type: boolean
              proxyID:
                description: The unique identifier for the resource.
                format: int64
                type: integer
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              urlMap:
                description: A reference to the UrlMap resource that defines the mapping
                  from URL to the BackendService.
                type: string
            required:
            - name
            - providerRef
            - urlMap
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: routernats.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RouterNAT
    listKind: RouterNATList
    plural: routernats
    singular: routernat
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              drainNATIPS:
                description: A list of URLs of the IP resources to be drained. These
                  IPs must be valid static external IPs that have been assigned to
                  the NAT.
                items:
                  type: string
                type: array
              enableEndpointIndependentMapping:
                description: Specifies if endpoint independent mapping is enabled.
                  This is enabled by default. For more information see the [official
                  documentation](https://cloud.google.com/nat/docs/overview#specs-rfcs).
                type: boolean
              icmpIdleTimeoutSec:
                description: Timeout (in seconds) for ICMP connections. Defaults to
                  30s if not set.
                format: int64
                type: integer
              id:
                type: string
              kubeformOutput:
                properties:
                  drainNATIPS:
                    description: A list of URLs of the IP resources to be drained.
                      These IPs must be valid static external IPs that have been assigned
                      to the NAT.
                    items:
                      type: string
                    type: array
                  enableEndpointIndependentMapping:
                    description: Specifies if endpoint independent mapping is enabled.
                      This is enabled by default. For more information see the [official
                      documentation](https://cloud.google.com/nat/docs/overview#specs-rfcs).
                    type: boolean
                  icmpIdleTimeoutSec:
                    description: Timeout (in seconds) for ICMP connections. Defaults
                      to 30s if not set.
                    format: int64
                    type: integer
                  id:
                    type: string
                  logConfig:
                    description: Configuration for logging on NAT
                    properties:
                      enable:
                        description: Indicates whether or not to export logs.
                        type: boolean
                      filter:
                        description: 'Specifies the desired filtering of logs on this
                          NAT. Possible values: ["ERRORS_ONLY", "TRANSLATIONS_ONLY",
                          "ALL"]'
                        type: string
                    required:
                    - enable
                    - filter
                    type: object
                  minPortsPerVm:
                    description: Minimum number of ports allocated to a VM from this
                      NAT.
                    format: int64
                    type: integer
                  name:
                    description: Name of the NAT service. The name must be 1-63 characters
                      long and comply with RFC1035.
                    type: string
                  natIPAllocateOption:
                    description: 'How external IPs should be allocated for this NAT.
                      Valid values are ''AUTO_ONLY'' for only allowing NAT IPs allocated
                      by Google Cloud Platform, or ''MANUAL_ONLY'' for only user-allocated
                      NAT IP addresses. Possible values: ["MANUAL_ONLY", "AUTO_ONLY"]'
                    type: string
                  natIPS:
                    description: Self-links of NAT IPs. Only valid if natIpAllocateOption
                      is set to MANUAL_ONLY.
                    items:
                      type: string
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: Region where the router and NAT reside.
                    type: string
                  router:
                    description: The name of the Cloud Router in which this NAT will
                      be configured.
                    type: string
                  sourceSubnetworkIPRangesToNAT:
                    description: 'How NAT should be configured per Subnetwork. If
                      ''ALL_SUBNETWORKS_ALL_IP_RANGES'', all of the IP ranges in every
                      Subnetwork are allowed to Nat. If ''ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES'',
                      all of the primary IP ranges in every Subnetwork are allowed
                      to Nat. ''LIST_OF_SUBNETWORKS'': A list of Subnetworks are allowed
                      to Nat (specified in the field subnetwork below). Note that
                      if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES or ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES,
                      then there should not be any other RouterNat section in any
                      Router for this network in this region. Possible values: ["ALL_SUBNETWORKS_ALL_IP_RANGES",
                      "ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES", "LIST_OF_SUBNETWORKS"]'
                    type: string
                  subnetwork:
                    description: One or more subnetwork NAT configurations. Only used
                      if 'source_subnetwork_ip_ranges_to_nat' is set to 'LIST_OF_SUBNETWORKS'
                    items:
                      properties:
                        name:
                          description: Self-link of subnetwork to NAT
                          type: string
                        secondaryIPRangeNames:
                          description: List of the secondary ranges of the subnetwork
                            that are allowed to use NAT. This can be populated only
                            if 'LIST_OF_SECONDARY_IP_RANGES' is one of the values
                            in sourceIpRangesToNat
                          items:
                            type: string
                          type: array
                        sourceIPRangesToNAT:
                          description: 'List of options for which source IPs in the
                            subnetwork should have NAT enabled. Supported values include:
                            ''ALL_IP_RANGES'', ''LIST_OF_SECONDARY_IP_RANGES'', ''PRIMARY_IP_RANGE''.'
                          items:
                            type: string
                          minItems: 1
                          type: array
                      required:
                      - name
                      - sourceIPRangesToNAT
                      type: object
                    type: array
                  tcpEstablishedIdleTimeoutSec:
                    description: Timeout (in seconds) for TCP established connections.
                      Defaults to 1200s if not set.
                    format: int64
                    type: integer
                  tcpTransitoryIdleTimeoutSec:
                    description: Timeout (in seconds) for TCP transitory connections.
                      Defaults to 30s if not set.
                    format: int64
                    type: integer
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  udpIdleTimeoutSec:
                    description: Timeout (in seconds) for UDP connections. Defaults
                      to 30s if not set.
                    format: int64
                    type: integer
                required:
                - name
                - natIPAllocateOption
                - providerRef
                - router
                - sourceSubnetworkIPRangesToNAT
                type: object
              logConfig:
                description: Configuration for logging on NAT
                properties:
                  enable:
                    description: Indicates whether or not to export logs.
                    type: boolean
                  filter:
                    description: 'Specifies the desired filtering of logs on this
                      NAT. Possible values: ["ERRORS_ONLY", "TRANSLATIONS_ONLY", "ALL"]'
                    type: string
                required:
                - enable
                - filter
                type: object
              minPortsPerVm:
                description: Minimum number of ports allocated to a VM from this NAT.
                format: int64
                type: integer
              name:
                description: Name of the NAT service. The name must be 1-63 characters
                  long and comply with RFC1035.
                type: string
              natIPAllocateOption:
                description: 'How external IPs should be allocated for this NAT. Valid
                  values are ''AUTO_ONLY'' for only allowing NAT IPs allocated by
                  Google Cloud Platform, or ''MANUAL_ONLY'' for only user-allocated
                  NAT IP addresses. Possible values: ["MANUAL_ONLY", "AUTO_ONLY"]'
                type: string
              natIPS:
                description: Self-links of NAT IPs. Only valid if natIpAllocateOption
                  is set to MANUAL_ONLY.
                items:
                  type: string
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: Region where the router and NAT reside.
                type: string
              router:
                description: The name of the Cloud Router in which this NAT will be
                  configured.
                type: string
              sourceSubnetworkIPRangesToNAT:
                description: 'How NAT should be configured per Subnetwork. If ''ALL_SUBNETWORKS_ALL_IP_RANGES'',
                  all of the IP ranges in every Subnetwork are allowed to Nat. If
                  ''ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES'', all of the primary IP
                  ranges in every Subnetwork are allowed to Nat. ''LIST_OF_SUBNETWORKS'':
                  A list of Subnetworks are allowed to Nat (specified in the field
                  subnetwork below). Note that if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES
                  or ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES, then there should not
                  be any other RouterNat section in any Router for this network in
                  this region. Possible values: ["ALL_SUBNETWORKS_ALL_IP_RANGES",
                  "ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES", "LIST_OF_SUBNETWORKS"]'
                type: string
              subnetwork:
                description: One or more subnetwork NAT configurations. Only used
                  if 'source_subnetwork_ip_ranges_to_nat' is set to 'LIST_OF_SUBNETWORKS'
                items:
                  properties:
                    name:
                      description: Self-link of subnetwork to NAT
                      type: string
                    secondaryIPRangeNames:
                      description: List of the secondary ranges of the subnetwork
                        that are allowed to use NAT. This can be populated only if
                        'LIST_OF_SECONDARY_IP_RANGES' is one of the values in sourceIpRangesToNat
                      items:
                        type: string
                      type: array
                    sourceIPRangesToNAT:
                      description: 'List of options for which source IPs in the subnetwork
                        should have NAT enabled. Supported values include: ''ALL_IP_RANGES'',
                        ''LIST_OF_SECONDARY_IP_RANGES'', ''PRIMARY_IP_RANGE''.'
                      items:
                        type: string
                      minItems: 1
                      type: array
                  required:
                  - name
                  - sourceIPRangesToNAT
                  type: object
                type: array
              tcpEstablishedIdleTimeoutSec:
                description: Timeout (in seconds) for TCP established connections.
                  Defaults to 1200s if not set.
                format: int64
                type: integer
              tcpTransitoryIdleTimeoutSec:
                description: Timeout (in seconds) for TCP transitory connections.
                  Defaults to 30s if not set.
                format: int64
                type: integer
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              udpIdleTimeoutSec:
                description: Timeout (in seconds) for UDP connections. Defaults to
                  30s if not set.
                format: int64
                type: integer
            required:
            - name
            - natIPAllocateOption
            - providerRef
            - router
            - sourceSubnetworkIPRangesToNAT
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: routes.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: Route
    listKind: RouteList
    plural: routes
    singular: route
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              destRange:
                description: The destination range of outgoing packets that this route
                  applies to. Only IPv4 is supported.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  destRange:
                    description: The destination range of outgoing packets that this
                      route applies to. Only IPv4 is supported.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035.  Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  network:
                    description: The network that this route applies to.
                    type: string
                  nextHopGateway:
                    description: 'URL to a gateway that should handle matching packets.
                      Currently, you can only specify the internet gateway, using
                      a full or partial valid URL: * ''https://www.googleapis.com/compute/v1/projects/project/global/gateways/default-internet-gateway''
                      * ''projects/project/global/gateways/default-internet-gateway''
                      * ''global/gateways/default-internet-gateway'' * The string
                      ''default-internet-gateway''.'
                    type: string
                  nextHopIP:
                    description: Network IP address of an instance that should handle
                      matching packets.
                    type: string
                  nextHopIlb:
                    description: 'The URL to a forwarding rule of type loadBalancingScheme=INTERNAL
                      that should handle matching packets. You can only specify the
                      forwarding rule as a partial or full URL. For example, the following
                      are all valid URLs: https://www.googleapis.com/compute/v1/projects/project/regions/region/forwardingRules/forwardingRule
                      regions/region/forwardingRules/forwardingRule Note that this
                      can only be used when the destinationRange is a public (non-RFC
                      1918) IP CIDR range.'
                    type: string
                  nextHopInstance:
                    description: 'URL to an instance that should handle matching packets.
                      You can specify this as a full or partial URL. For example:
                      * ''https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance''
                      * ''projects/project/zones/zone/instances/instance'' * ''zones/zone/instances/instance''
                      * Just the instance name, with the zone in ''next_hop_instance_zone''.'
                    type: string
                  nextHopInstanceZone:
                    description: The zone of the instance specified in next_hop_instance.
                      Omit if next_hop_instance is specified as a URL.
                    type: string
                  nextHopNetwork:
                    description: URL to a Network that should handle matching packets.
                    type: string
                  nextHopVPNTunnel:
                    description: URL to a VpnTunnel that should handle matching packets.
                    type: string
                  priority:
                    description: "The priority of this route. Priority is used to
                      break ties in cases where there is more than one matching route
                      of equal prefix length. \n In the case of two routes with equal
                      prefix length, the one with the lowest-numbered priority value
                      wins. \n Default value is 1000. Valid range is 0 through 65535."
                    format: int64
                    type: integer
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  tags:
                    description: A list of instance tags to which this route applies.
                    items:
                      type: string
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - destRange
                - name
                - network
                - providerRef
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.  Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              network:
                description: The network that this route applies to.
                type: string
              nextHopGateway:
                description: 'URL to a gateway that should handle matching packets.
                  Currently, you can only specify the internet gateway, using a full
                  or partial valid URL: * ''https://www.googleapis.com/compute/v1/projects/project/global/gateways/default-internet-gateway''
                  * ''projects/project/global/gateways/default-internet-gateway''
                  * ''global/gateways/default-internet-gateway'' * The string ''default-internet-gateway''.'
                type: string
              nextHopIP:
                description: Network IP address of an instance that should handle
                  matching packets.
                type: string
              nextHopIlb:
                description: 'The URL to a forwarding rule of type loadBalancingScheme=INTERNAL
                  that should handle matching packets. You can only specify the forwarding
                  rule as a partial or full URL. For example, the following are all
                  valid URLs: https://www.googleapis.com/compute/v1/projects/project/regions/region/forwardingRules/forwardingRule
                  regions/region/forwardingRules/forwardingRule Note that this can
                  only be used when the destinationRange is a public (non-RFC 1918)
                  IP CIDR range.'
                type: string
              nextHopInstance:
                description: 'URL to an instance that should handle matching packets.
                  You can specify this as a full or partial URL. For example: * ''https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance''
                  * ''projects/project/zones/zone/instances/instance'' * ''zones/zone/instances/instance''
                  * Just the instance name, with the zone in ''next_hop_instance_zone''.'
                type: string
              nextHopInstanceZone:
                description: The zone of the instance specified in next_hop_instance.
                  Omit if next_hop_instance is specified as a URL.
                type: string
              nextHopNetwork:
                description: URL to a Network that should handle matching packets.
                type: string
              nextHopVPNTunnel:
                description: URL to a VpnTunnel that should handle matching packets.
                type: string
              priority:
                description: "The priority of this route. Priority is used to break
                  ties in cases where there is more than one matching route of equal
                  prefix length. \n In the case of two routes with equal prefix length,
                  the one with the lowest-numbered priority value wins. \n Default
                  value is 1000. Valid range is 0 through 65535."
                format: int64
                type: integer
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              tags:
                description: A list of instance tags to which this route applies.
                items:
                  type: string
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - destRange
            - name
            - network
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: subnetworkiambindings.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: SubnetworkIamBinding
    listKind: SubnetworkIamBindingList
    plural: subnetworkiambindings
    singular: subnetworkiambinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  members:
                    items:
                      type: string
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    type: string
                  role:
                    type: string
                  subnetwork:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - members
                - providerRef
                - role
                - subnetwork
                type: object
              members:
                items:
                  type: string
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                type: string
              role:
                type: string
              subnetwork:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - members
            - providerRef
            - role
            - subnetwork
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: reservations.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: Reservation
    listKind: ReservationList
    plural: reservations
    singular: reservation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              commitment:
                description: Full or partial URL to a parent commitment. This field
                  displays for reservations that are tied to a commitment.
                type: string
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  commitment:
                    description: Full or partial URL to a parent commitment. This
                      field displays for reservations that are tied to a commitment.
                    type: string
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  specificReservation:
                    description: Reservation for instances with specific machine shapes.
                    properties:
                      count:
                        description: The number of resources that are allocated.
                        format: int64
                        type: integer
                      inUseCount:
                        description: How many instances are in use.
                        format: int64
                        type: integer
                      instanceProperties:
                        description: The instance properties for the reservation.
                        properties:
                          guestAccelerators:
                            description: Guest accelerator type and count.
                            items:
                              properties:
                                acceleratorCount:
                                  description: The number of the guest accelerator
                                    cards exposed to this instance.
                                  format: int64
                                  type: integer
                                acceleratorType:
                                  description: "The full or partial URL of the accelerator
                                    type to attach to this instance. For example:
                                    'projects/my-project/zones/us-central1-c/acceleratorTypes/nvidia-tesla-p100'
                                    \n If you are creating an instance template, specify
                                    only the accelerator name."
                                  type: string
                              required:
                              - acceleratorCount
                              - acceleratorType
                              type: object
                            type: array
                          localSsds:
                            description: The amount of local ssd to reserve with each
                              instance. This reserves disks of type 'local-ssd'.
                            items:
                              properties:
                                diskSizeGb:
                                  description: The size of the disk in base-2 GB.
                                  format: int64
                                  type: integer
                                interface:
                                  description: 'The disk interface to use for attaching
                                    this disk. Default value: "SCSI" Possible values:
                                    ["SCSI", "NVME"]'
                                  type: string
                              required:
                              - diskSizeGb
                              type: object
                            type: array
                          machineType:
                            description: The name of the machine type to reserve.
                            type: string
                          minCPUPlatform:
                            description: The minimum CPU platform for the reservation.
                              For example, '"Intel Skylake"'. See the CPU platform
                              availability reference](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform#availablezones)
                              for information on available CPU platforms.
                            type: string
                        required:
                        - machineType
                        type: object
                    required:
                    - count
                    - instanceProperties
                    type: object
                  specificReservationRequired:
                    description: When set to true, only VMs that target this reservation
                      by name can consume this reservation. Otherwise, it can be consumed
                      by VMs with affinity for any reservation. Defaults to false.
                    type: boolean
                  status:
                    description: The status of the reservation.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: The zone where the reservation is made.
                    type: string
                required:
                - name
                - providerRef
                - specificReservation
                - zone
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              specificReservation:
                description: Reservation for instances with specific machine shapes.
                properties:
                  count:
                    description: The number of resources that are allocated.
                    format: int64
                    type: integer
                  inUseCount:
                    description: How many instances are in use.
                    format: int64
                    type: integer
                  instanceProperties:
                    description: The instance properties for the reservation.
                    properties:
                      guestAccelerators:
                        description: Guest accelerator type and count.
                        items:
                          properties:
                            acceleratorCount:
                              description: The number of the guest accelerator cards
                                exposed to this instance.
                              format: int64
                              type: integer
                            acceleratorType:
                              description: "The full or partial URL of the accelerator
                                type to attach to this instance. For example: 'projects/my-project/zones/us-central1-c/acceleratorTypes/nvidia-tesla-p100'
                                \n If you are creating an instance template, specify
                                only the accelerator name."
                              type: string
                          required:
                          - acceleratorCount
                          - acceleratorType
                          type: object
                        type: array
                      localSsds:
                        description: The amount of local ssd to reserve with each
                          instance. This reserves disks of type 'local-ssd'.
                        items:
                          properties:
                            diskSizeGb:
                              description: The size of the disk in base-2 GB.
                              format: int64
                              type: integer
                            interface:
                              description: 'The disk interface to use for attaching
                                this disk. Default value: "SCSI" Possible values:
                                ["SCSI", "NVME"]'
                              type: string
                          required:
                          - diskSizeGb
                          type: object
                        type: array
                      machineType:
                        description: The name of the machine type to reserve.
                        type: string
                      minCPUPlatform:
                        description: The minimum CPU platform for the reservation.
                          For example, '"Intel Skylake"'. See the CPU platform availability
                          reference](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform#availablezones)
                          for information on available CPU platforms.
                        type: string
                    required:
                    - machineType
                    type: object
                required:
                - count
                - instanceProperties
                type: object
              specificReservationRequired:
                description: When set to true, only VMs that target this reservation
                  by name can consume this reservation. Otherwise, it can be consumed
                  by VMs with affinity for any reservation. Defaults to false.
                type: boolean
              status:
                description: The status of the reservation.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              zone:
                description: The zone where the reservation is made.
                type: string
            required:
            - name
            - providerRef
            - specificReservation
            - zone
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: subnetworks.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: Subnetwork
    listKind: SubnetworkList
    plural: subnetworks
    singular: subnetwork
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource. This field can be set only
                  at resource creation time.
                type: string
              fingerprint:
                description: Fingerprint of this resource. This field is used internally
                  during updates of this resource. Deprecated
                type: string
              gatewayAddress:
                description: The gateway address for default routes to reach destination
                  addresses outside this subnetwork.
                type: string
              id:
                type: string
              ipCIDRRange:
                description: The range of internal addresses that are owned by this
                  subnetwork. Provide this property when you create the subnetwork.
                  For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique
                  and non-overlapping within a network. Only IPv4 is supported.
                type: string
              kubeformOutput:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource. This field can be
                      set only at resource creation time.
                    type: string
                  fingerprint:
                    description: Fingerprint of this resource. This field is used
                      internally during updates of this resource. Deprecated
                    type: string
                  gatewayAddress:
                    description: The gateway address for default routes to reach destination
                      addresses outside this subnetwork.
                    type: string
                  id:
                    type: string
                  ipCIDRRange:
                    description: The range of internal addresses that are owned by
                      this subnetwork. Provide this property when you create the subnetwork.
                      For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique
                      and non-overlapping within a network. Only IPv4 is supported.
                    type: string
                  logConfig:
                    description: Denotes the logging options for the subnetwork flow
                      logs. If logging is enabled logs will be exported to Stackdriver.
                      This field cannot be set if the 'purpose' of this subnetwork
                      is 'INTERNAL_HTTPS_LOAD_BALANCER'
                    properties:
                      aggregationInterval:
                        description: 'Can only be specified if VPC flow logging for
                          this subnetwork is enabled. Toggles the aggregation interval
                          for collecting flow logs. Increasing the interval time will
                          reduce the amount of generated flow logs for long lasting
                          connections. Default is an interval of 5 seconds per connection.
                          Default value: "INTERVAL_5_SEC" Possible values: ["INTERVAL_5_SEC",
                          "INTERVAL_30_SEC", "INTERVAL_1_MIN", "INTERVAL_5_MIN", "INTERVAL_10_MIN",
                          "INTERVAL_15_MIN"]'
                        type: string
                      filterExpr:
                        description: Export filter used to define which VPC flow logs
                          should be logged, as as CEL expression. See https://cloud.google.com/vpc/docs/flow-logs#filtering
                          for details on how to format this field. The default value
                          is 'true', which evaluates to include everything.
                        type: string
                      flowSampling:
                        description: Can only be specified if VPC flow logging for
                          this subnetwork is enabled. The value of the field must
                          be in [0, 1]. Set the sampling rate of VPC flow logs within
                          the subnetwork where 1.0 means all collected logs are reported
                          and 0.0 means no logs are reported. Default is 0.5 which
                          means half of all collected logs are reported.
                        format: double
                        type: number
                      metadata:
                        description: 'Can only be specified if VPC flow logging for
                          this subnetwork is enabled. Configures whether metadata
                          fields should be added to the reported VPC flow logs. Default
                          value: "INCLUDE_ALL_METADATA" Possible values: ["EXCLUDE_ALL_METADATA",
                          "INCLUDE_ALL_METADATA", "CUSTOM_METADATA"]'
                        type: string
                      metadataFields:
                        description: List of metadata fields that should be added
                          to reported logs. Can only be specified if VPC flow logs
                          for this subnetwork is enabled and "metadata" is set to
                          CUSTOM_METADATA.
                        items:
                          type: string
                        type: array
                    type: object
                  name:
                    description: The name of the resource, provided by the client
                      when initially creating the resource. The name must be 1-63
                      characters long, and comply with RFC1035. Specifically, the
                      name must be 1-63 characters long and match the regular expression
                      '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character
                      must be a lowercase letter, and all following characters must
                      be a dash, lowercase letter, or digit, except the last character,
                      which cannot be a dash.
                    type: string
                  network:
                    description: The network this subnet belongs to. Only networks
                      that are in the distributed mode can have subnetworks.
                    type: string
                  privateIPGoogleAccess:
                    description: When enabled, VMs in this subnetwork without external
                      IP addresses can access Google APIs and services by using Private
                      Google Access.
                    type: boolean
                  privateIpv6GoogleAccess:
                    description: The private IPv6 google access type for the VMs in
                      this subnet.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: The GCP region for this subnetwork.
                    type: string
                  secondaryIPRange:
                    description: "An array of configurations for secondary IP ranges
                      for VM instances contained in this subnetwork. The primary IP
                      of such VM must belong to the primary ipCidrRange of the subnetwork.
                      The alias IPs may belong to either primary or secondary ranges.
                      \n **Note**: This field uses [attr-as-block mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html)
                      to avoid breaking users during the 0.12 upgrade. To explicitly
                      send a list of zero objects you must use the following syntax:
                      'example=[]' For more details about this behavior, see [this
                      section](https://www.terraform.io/docs/configuration/attr-as-blocks.html#defining-a-fixed-object-collection-value)."
                    items:
                      properties:
                        ipCIDRRange:
                          description: The range of IP addresses belonging to this
                            subnetwork secondary range. Provide this property when
                            you create the subnetwork. Ranges must be unique and non-overlapping
                            with all primary and secondary IP ranges within a network.
                            Only IPv4 is supported.
                          type: string
                        rangeName:
                          description: The name associated with this subnetwork secondary
                            range, used when adding an alias IP range to a VM instance.
                            The name must be 1-63 characters long, and comply with
                            RFC1035. The name must be unique within the subnetwork.
                          type: string
                      required:
                      - ipCIDRRange
                      - rangeName
                      type: object
                    type: array
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - ipCIDRRange
                - name
                - network
                - providerRef
                type: object
              logConfig:
                description: Denotes the logging options for the subnetwork flow logs.
                  If logging is enabled logs will be exported to Stackdriver. This
                  field cannot be set if the 'purpose' of this subnetwork is 'INTERNAL_HTTPS_LOAD_BALANCER'
                properties:
                  aggregationInterval:
                    description: 'Can only be specified if VPC flow logging for this
                      subnetwork is enabled. Toggles the aggregation interval for
                      collecting flow logs. Increasing the interval time will reduce
                      the amount of generated flow logs for long lasting connections.
                      Default is an interval of 5 seconds per connection. Default
                      value: "INTERVAL_5_SEC" Possible values: ["INTERVAL_5_SEC",
                      "INTERVAL_30_SEC", "INTERVAL_1_MIN", "INTERVAL_5_MIN", "INTERVAL_10_MIN",
                      "INTERVAL_15_MIN"]'
                    type: string
                  filterExpr:
                    description: Export filter used to define which VPC flow logs
                      should be logged, as as CEL expression. See https://cloud.google.com/vpc/docs/flow-logs#filtering
                      for details on how to format this field. The default value is
                      'true', which evaluates to include everything.
                    type: string
                  flowSampling:
                    description: Can only be specified if VPC flow logging for this
                      subnetwork is enabled. The value of the field must be in [0,
                      1]. Set the sampling rate of VPC flow logs within the subnetwork
                      where 1.0 means all collected logs are reported and 0.0 means
                      no logs are reported. Default is 0.5 which means half of all
                      collected logs are reported.
                    format: double
                    type: number
                  metadata:
                    description: 'Can only be specified if VPC flow logging for this
                      subnetwork is enabled. Configures whether metadata fields should
                      be added to the reported VPC flow logs. Default value: "INCLUDE_ALL_METADATA"
                      Possible values: ["EXCLUDE_ALL_METADATA", "INCLUDE_ALL_METADATA",
                      "CUSTOM_METADATA"]'
                    type: string
                  metadataFields:
                    description: List of metadata fields that should be added to reported
                      logs. Can only be specified if VPC flow logs for this subnetwork
                      is enabled and "metadata" is set to CUSTOM_METADATA.
                    items:
                      type: string
                    type: array
                type: object
              name:
                description: The name of the resource, provided by the client when
                  initially creating the resource. The name must be 1-63 characters
                  long, and comply with RFC1035. Specifically, the name must be 1-63
                  characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              network:
                description: The network this subnet belongs to. Only networks that
                  are in the distributed mode can have subnetworks.
                type: string
              privateIPGoogleAccess:
                description: When enabled, VMs in this subnetwork without external
                  IP addresses can access Google APIs and services by using Private
                  Google Access.
                type: boolean
              privateIpv6GoogleAccess:
                description: The private IPv6 google access type for the VMs in this
                  subnet.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: The GCP region for this subnetwork.
                type: string
              secondaryIPRange:
                description: "An array of configurations for secondary IP ranges for
                  VM instances contained in this subnetwork. The primary IP of such
                  VM must belong to the primary ipCidrRange of the subnetwork. The
                  alias IPs may belong to either primary or secondary ranges. \n **Note**:
                  This field uses [attr-as-block mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html)
                  to avoid breaking users during the 0.12 upgrade. To explicitly send
                  a list of zero objects you must use the following syntax: 'example=[]'
                  For more details about this behavior, see [this section](https://www.terraform.io/docs/configuration/attr-as-blocks.html#defining-a-fixed-object-collection-value)."
                items:
                  properties:
                    ipCIDRRange:
                      description: The range of IP addresses belonging to this subnetwork
                        secondary range. Provide this property when you create the
                        subnetwork. Ranges must be unique and non-overlapping with
                        all primary and secondary IP ranges within a network. Only
                        IPv4 is supported.
                      type: string
                    rangeName:
                      description: The name associated with this subnetwork secondary
                        range, used when adding an alias IP range to a VM instance.
                        The name must be 1-63 characters long, and comply with RFC1035.
                        The name must be unique within the subnetwork.
                      type: string
                  required:
                  - ipCIDRRange
                  - rangeName
                  type: object
                type: array
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - ipCIDRRange
            - name
            - network
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: regiontargethttpproxies.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RegionTargetHTTPProxy
    listKind: RegionTargetHTTPProxyList
    plural: regiontargethttpproxies
    singular: regiontargethttpproxy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  proxyID:
                    description: The unique identifier for the resource.
                    format: int64
                    type: integer
                  region:
                    description: The Region in which the created target https proxy
                      should reside. If it is not provided, the provider region is
                      used.
                    type: string
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  urlMap:
                    description: A reference to the RegionUrlMap resource that defines
                      the mapping from URL to the BackendService.
                    type: string
                required:
                - name
                - providerRef
                - urlMap
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              proxyID:
                description: The unique identifier for the resource.
                format: int64
                type: integer
              region:
                description: The Region in which the created target https proxy should
                  reside. If it is not provided, the provider region is used.
                type: string
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              urlMap:
                description: A reference to the RegionUrlMap resource that defines
                  the mapping from URL to the BackendService.
                type: string
            required:
            - name
            - providerRef
            - urlMap
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: targetsslproxies.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: TargetSSLProxy
    listKind: TargetSSLProxyList
    plural: targetsslproxies
    singular: targetsslproxy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendService:
                description: A reference to the BackendService resource.
                type: string
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  backendService:
                    description: A reference to the BackendService resource.
                    type: string
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  proxyHeader:
                    description: 'Specifies the type of proxy header to append before
                      sending data to the backend. Default value: "NONE" Possible
                      values: ["NONE", "PROXY_V1"]'
                    type: string
                  proxyID:
                    description: The unique identifier for the resource.
                    format: int64
                    type: integer
                  selfLink:
                    type: string
                  sslCertificates:
                    description: A list of SslCertificate resources that are used
                      to authenticate connections between users and the load balancer.
                      At least one SSL certificate must be specified.
                    items:
                      type: string
                    type: array
                  sslPolicy:
                    description: A reference to the SslPolicy resource that will be
                      associated with the TargetSslProxy resource. If not set, the
                      TargetSslProxy resource will not have any SSL policy configured.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - backendService
                - name
                - providerRef
                - sslCertificates
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              proxyHeader:
                description: 'Specifies the type of proxy header to append before
                  sending data to the backend. Default value: "NONE" Possible values:
                  ["NONE", "PROXY_V1"]'
                type: string
              proxyID:
                description: The unique identifier for the resource.
                format: int64
                type: integer
              selfLink:
                type: string
              sslCertificates:
                description: A list of SslCertificate resources that are used to authenticate
                  connections between users and the load balancer. At least one SSL
                  certificate must be specified.
                items:
                  type: string
                type: array
              sslPolicy:
                description: A reference to the SslPolicy resource that will be associated
                  with the TargetSslProxy resource. If not set, the TargetSslProxy
                  resource will not have any SSL policy configured.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - backendService
            - name
            - providerRef
            - sslCertificates
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: regionsslcertificates.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RegionSSLCertificate
    listKind: RegionSSLCertificateList
    plural: regionsslcertificates
    singular: regionsslcertificate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              certificateID:
                description: The unique identifier for the resource.
                format: int64
                type: integer
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  certificateID:
                    description: The unique identifier for the resource.
                    format: int64
                    type: integer
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: "Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                      \n These are in the same namespace as the managed SSL certificates."
                    type: string
                  namePrefix:
                    description: Creates a unique name beginning with the specified
                      prefix. Conflicts with name.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: The Region in which the created regional ssl certificate
                      should reside. If it is not provided, the provider region is
                      used.
                    type: string
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - providerRef
                type: object
              name:
                description: "Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash. \n These are
                  in the same namespace as the managed SSL certificates."
                type: string
              namePrefix:
                description: Creates a unique name beginning with the specified prefix.
                  Conflicts with name.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: The Region in which the created regional ssl certificate
                  should reside. If it is not provided, the provider region is used.
                type: string
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: regionurlmaps.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RegionURLMap
    listKind: RegionURLMapList
    plural: regionurlmaps
    singular: regionurlmap
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              defaultService:
                description: The full or partial URL of the defaultService resource
                  to which traffic is directed if none of the hostRules match. If
                  defaultRouteAction is additionally specified, advanced routing actions
                  like URL Rewrites, etc. take effect prior to sending the request
                  to the backend. However, if defaultService is specified, defaultRouteAction
                  cannot contain any weightedBackendServices. Conversely, if routeAction
                  specifies any weightedBackendServices, service must not be specified.  Only
                  one of defaultService, defaultUrlRedirect or defaultRouteAction.weightedBackendService
                  must be set.
                type: string
              defaultURLRedirect:
                description: When none of the specified hostRules match, the request
                  is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect
                  is specified, defaultService or defaultRouteAction must not be set.
                properties:
                  hostRedirect:
                    description: The host that will be used in the redirect response
                      instead of the one that was supplied in the request. The value
                      must be between 1 and 255 characters.
                    type: string
                  httpsRedirect:
                    description: If set to true, the URL scheme in the redirected
                      request is set to https. If set to false, the URL scheme of
                      the redirected request will remain the same as that of the request.
                      This must only be set for UrlMaps used in TargetHttpProxys.
                      Setting this true for TargetHttpsProxy is not permitted. The
                      default is set to false.
                    type: boolean
                  pathRedirect:
                    description: The path that will be used in the redirect response
                      instead of the one that was supplied in the request. pathRedirect
                      cannot be supplied together with prefixRedirect. Supply one
                      alone or neither. If neither is supplied, the path of the original
                      request will be used for the redirect. The value must be between
                      1 and 1024 characters.
                    type: string
                  prefixRedirect:
                    description: The prefix that replaces the prefixMatch specified
                      in the HttpRouteRuleMatch, retaining the remaining portion of
                      the URL before redirecting the request. prefixRedirect cannot
                      be supplied together with pathRedirect. Supply one alone or
                      neither. If neither is supplied, the path of the original request
                      will be used for the redirect. The value must be between 1 and
                      1024 characters.
                    type: string
                  redirectResponseCode:
                    description: "The HTTP Status code to use for this RedirectAction.
                      Supported values are: \n * MOVED_PERMANENTLY_DEFAULT, which
                      is the default value and corresponds to 301. \n * FOUND, which
                      corresponds to 302. \n * SEE_OTHER which corresponds to 303.
                      \n * TEMPORARY_REDIRECT, which corresponds to 307. In this case,
                      the request method will be retained. \n * PERMANENT_REDIRECT,
                      which corresponds to 308. In this case, the request method will
                      be retained. Possible values: [\"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\",
                      \"PERMANENT_REDIRECT\", \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                    type: string
                  stripQuery:
                    description: If set to true, any accompanying query portion of
                      the original URL is removed prior to redirecting the request.
                      If set to false, the query portion of the original URL is retained.  This
                      field is required to ensure an empty block is not set. The normal
                      default value is false.
                    type: boolean
                required:
                - stripQuery
                type: object
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              fingerprint:
                description: Fingerprint of this resource. This field is used internally
                  during updates of this resource.
                type: string
              hostRule:
                description: The list of HostRules to use against the URL.
                items:
                  properties:
                    description:
                      description: An optional description of this HostRule. Provide
                        this property when you create the resource.
                      type: string
                    hosts:
                      description: The list of host patterns to match. They must be
                        valid hostnames, except * will match any string of ([a-z0-9-.]*).
                        In that case, * must be the first character and must be followed
                        in the pattern by either - or ..
                      items:
                        type: string
                      type: array
                    pathMatcher:
                      description: The name of the PathMatcher to use to match the
                        path portion of the URL if the hostRule matches the URL's
                        host portion.
                      type: string
                  required:
                  - hosts
                  - pathMatcher
                  type: object
                type: array
              id:
                type: string
              kubeformOutput:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  defaultService:
                    description: The full or partial URL of the defaultService resource
                      to which traffic is directed if none of the hostRules match.
                      If defaultRouteAction is additionally specified, advanced routing
                      actions like URL Rewrites, etc. take effect prior to sending
                      the request to the backend. However, if defaultService is specified,
                      defaultRouteAction cannot contain any weightedBackendServices.
                      Conversely, if routeAction specifies any weightedBackendServices,
                      service must not be specified.  Only one of defaultService,
                      defaultUrlRedirect or defaultRouteAction.weightedBackendService
                      must be set.
                    type: string
                  defaultURLRedirect:
                    description: When none of the specified hostRules match, the request
                      is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect
                      is specified, defaultService or defaultRouteAction must not
                      be set.
                    properties:
                      hostRedirect:
                        description: The host that will be used in the redirect response
                          instead of the one that was supplied in the request. The
                          value must be between 1 and 255 characters.
                        type: string
                      httpsRedirect:
                        description: If set to true, the URL scheme in the redirected
                          request is set to https. If set to false, the URL scheme
                          of the redirected request will remain the same as that of
                          the request. This must only be set for UrlMaps used in TargetHttpProxys.
                          Setting this true for TargetHttpsProxy is not permitted.
                          The default is set to false.
                        type: boolean
                      pathRedirect:
                        description: The path that will be used in the redirect response
                          instead of the one that was supplied in the request. pathRedirect
                          cannot be supplied together with prefixRedirect. Supply
                          one alone or neither. If neither is supplied, the path of
                          the original request will be used for the redirect. The
                          value must be between 1 and 1024 characters.
                        type: string
                      prefixRedirect:
                        description: The prefix that replaces the prefixMatch specified
                          in the HttpRouteRuleMatch, retaining the remaining portion
                          of the URL before redirecting the request. prefixRedirect
                          cannot be supplied together with pathRedirect. Supply one
                          alone or neither. If neither is supplied, the path of the
                          original request will be used for the redirect. The value
                          must be between 1 and 1024 characters.
                        type: string
                      redirectResponseCode:
                        description: "The HTTP Status code to use for this RedirectAction.
                          Supported values are: \n * MOVED_PERMANENTLY_DEFAULT, which
                          is the default value and corresponds to 301. \n * FOUND,
                          which corresponds to 302. \n * SEE_OTHER which corresponds
                          to 303. \n * TEMPORARY_REDIRECT, which corresponds to 307.
                          In this case, the request method will be retained. \n *
                          PERMANENT_REDIRECT, which corresponds to 308. In this case,
                          the request method will be retained. Possible values: [\"FOUND\",
                          \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\", \"SEE_OTHER\",
                          \"TEMPORARY_REDIRECT\"]"
                        type: string
                      stripQuery:
                        description: If set to true, any accompanying query portion
                          of the original URL is removed prior to redirecting the
                          request. If set to false, the query portion of the original
                          URL is retained.  This field is required to ensure an empty
                          block is not set. The normal default value is false.
                        type: boolean
                    required:
                    - stripQuery
                    type: object
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  fingerprint:
                    description: Fingerprint of this resource. This field is used
                      internally during updates of this resource.
                    type: string
                  hostRule:
                    description: The list of HostRules to use against the URL.
                    items:
                      properties:
                        description:
                          description: An optional description of this HostRule. Provide
                            this property when you create the resource.
                          type: string
                        hosts:
                          description: The list of host patterns to match. They must
                            be valid hostnames, except * will match any string of
                            ([a-z0-9-.]*). In that case, * must be the first character
                            and must be followed in the pattern by either - or ..
                          items:
                            type: string
                          type: array
                        pathMatcher:
                          description: The name of the PathMatcher to use to match
                            the path portion of the URL if the hostRule matches the
                            URL's host portion.
                          type: string
                      required:
                      - hosts
                      - pathMatcher
                      type: object
                    type: array
                  id:
                    type: string
                  mapID:
                    description: The unique identifier for the resource.
                    format: int64
                    type: integer
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  pathMatcher:
                    description: The list of named PathMatchers to use against the
                      URL.
                    items:
                      properties:
                        defaultService:
                          description: A reference to a RegionBackendService resource.
                            This will be used if none of the pathRules defined by
                            this PathMatcher is matched by the URL's path portion.
                          type: string
                        defaultURLRedirect:
                          description: When none of the specified hostRules match,
                            the request is redirected to a URL specified by defaultUrlRedirect.
                            If defaultUrlRedirect is specified, defaultService or
                            defaultRouteAction must not be set.
                          properties:
                            hostRedirect:
                              description: The host that will be used in the redirect
                                response instead of the one that was supplied in the
                                request. The value must be between 1 and 255 characters.
                              type: string
                            httpsRedirect:
                              description: If set to true, the URL scheme in the redirected
                                request is set to https. If set to false, the URL
                                scheme of the redirected request will remain the same
                                as that of the request. This must only be set for
                                UrlMaps used in TargetHttpProxys. Setting this true
                                for TargetHttpsProxy is not permitted. The default
                                is set to false.
                              type: boolean
                            pathRedirect:
                              description: The path that will be used in the redirect
                                response instead of the one that was supplied in the
                                request. pathRedirect cannot be supplied together
                                with prefixRedirect. Supply one alone or neither.
                                If neither is supplied, the path of the original request
                                will be used for the redirect. The value must be between
                                1 and 1024 characters.
                              type: string
                            prefixRedirect:
                              description: The prefix that replaces the prefixMatch
                                specified in the HttpRouteRuleMatch, retaining the
                                remaining portion of the URL before redirecting the
                                request. prefixRedirect cannot be supplied together
                                with pathRedirect. Supply one alone or neither. If
                                neither is supplied, the path of the original request
                                will be used for the redirect. The value must be between
                                1 and 1024 characters.
                              type: string
                            redirectResponseCode:
                              description: "The HTTP Status code to use for this RedirectAction.
                                Supported values are: \n * MOVED_PERMANENTLY_DEFAULT,
                                which is the default value and corresponds to 301.
                                \n * FOUND, which corresponds to 302. \n * SEE_OTHER
                                which corresponds to 303. \n * TEMPORARY_REDIRECT,
                                which corresponds to 307. In this case, the request
                                method will be retained. \n * PERMANENT_REDIRECT,
                                which corresponds to 308. In this case, the request
                                method will be retained. Possible values: [\"FOUND\",
                                \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\",
                                \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                              type: string
                            stripQuery:
                              description: If set to true, any accompanying query
                                portion of the original URL is removed prior to redirecting
                                the request. If set to false, the query portion of
                                the original URL is retained.  This field is required
                                to ensure an empty block is not set. The normal default
                                value is false.
                              type: boolean
                          required:
                          - stripQuery
                          type: object
                        description:
                          description: An optional description of this resource.
                          type: string
                        name:
                          description: The name to which this PathMatcher is referred
                            by the HostRule.
                          type: string
                        pathRule:
                          description: 'The list of path rules. Use this list instead
                            of routeRules when routing based on simple path matching
                            is all that''s required. The order by which path rules
                            are specified does not matter. Matches are always done
                            on the longest-path-first basis. For example: a pathRule
                            with a path /a/b/c/* will match before /a/b/* irrespective
                            of the order in which those paths appear in this list.
                            Within a given pathMatcher, only one of pathRules or routeRules
                            must be set.'
                          items:
                            properties:
                              paths:
                                description: 'The list of path patterns to match.
                                  Each must start with / and the only place a * is
                                  allowed is at the end following a /. The string
                                  fed to the path matcher does not include any text
                                  after the first ? or #, and those chars are not
                                  allowed here.'
                                items:
                                  type: string
                                type: array
                              routeAction:
                                description: In response to a matching path, the load
                                  balancer performs advanced routing actions like
                                  URL rewrites, header transformations, etc. prior
                                  to forwarding the request to the selected backend.
                                  If routeAction specifies any weightedBackendServices,
                                  service must not be set. Conversely if service is
                                  set, routeAction cannot contain any  weightedBackendServices.
                                  Only one of routeAction or urlRedirect must be set.
                                properties:
                                  corsPolicy:
                                    description: The specification for allowing client
                                      side cross-origin requests. Please see W3C Recommendation
                                      for Cross Origin Resource Sharing
                                    properties:
                                      allowCredentials:
                                        description: In response to a preflight request,
                                          setting this to true indicates that the
                                          actual request can include user credentials.
                                          This translates to the Access- Control-Allow-Credentials
                                          header. Defaults to false.
                                        type: boolean
                                      allowHeaders:
                                        description: Specifies the content for the
                                          Access-Control-Allow-Headers header.
                                        items:
                                          type: string
                                        type: array
                                      allowMethods:
                                        description: Specifies the content for the
                                          Access-Control-Allow-Methods header.
                                        items:
                                          type: string
                                        type: array
                                      allowOriginRegexes:
                                        description: Specifies the regular expression
                                          patterns that match allowed origins. For
                                          regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
                                          An origin is allowed if it matches either
                                          allow_origins or allow_origin_regex.
                                        items:
                                          type: string
                                        type: array
                                      allowOrigins:
                                        description: Specifies the list of origins
                                          that will be allowed to do CORS requests.
                                          An origin is allowed if it matches either
                                          allow_origins or allow_origin_regex.
                                        items:
                                          type: string
                                        type: array
                                      disabled:
                                        description: If true, specifies the CORS policy
                                          is disabled.
                                        type: boolean
                                      exposeHeaders:
                                        description: Specifies the content for the
                                          Access-Control-Expose-Headers header.
                                        items:
                                          type: string
                                        type: array
                                      maxAge:
                                        description: Specifies how long the results
                                          of a preflight request can be cached. This
                                          translates to the content for the Access-Control-Max-Age
                                          header.
                                        format: int64
                                        type: integer
                                    required:
                                    - disabled
                                    type: object
                                  faultInjectionPolicy:
                                    description: The specification for fault injection
                                      introduced into traffic to test the resiliency
                                      of clients to backend service failure. As part
                                      of fault injection, when clients send requests
                                      to a backend service, delays can be introduced
                                      by Loadbalancer on a percentage of requests
                                      before sending those request to the backend
                                      service. Similarly requests from clients can
                                      be aborted by the Loadbalancer for a percentage
                                      of requests. timeout and retry_policy will be
                                      ignored by clients that are configured with
                                      a fault_injection_policy.
                                    properties:
                                      abort:
                                        description: The specification for how client
                                          requests are aborted as part of fault injection.
                                        properties:
                                          httpStatus:
                                            description: The HTTP status code used
                                              to abort the request. The value must
                                              be between 200 and 599 inclusive.
                                            format: int64
                                            type: integer
                                          percentage:
                                            description: The percentage of traffic
                                              (connections/operations/requests) which
                                              will be aborted as part of fault injection.
                                              The value must be between 0.0 and 100.0
                                              inclusive.
                                            format: double
                                            type: number
                                        required:
                                        - httpStatus
                                        - percentage
                                        type: object
                                      delay:
                                        description: The specification for how client
                                          requests are delayed as part of fault injection,
                                          before being sent to a backend service.
                                        properties:
                                          fixedDelay:
                                            description: Specifies the value of the
                                              fixed delay interval.
                                            properties:
                                              nanos:
                                                description: Span of time that's a
                                                  fraction of a second at nanosecond
                                                  resolution. Durations less than
                                                  one second are represented with
                                                  a 0 'seconds' field and a positive
                                                  'nanos' field. Must be from 0 to
                                                  999,999,999 inclusive.
                                                format: int64
                                                type: integer
                                              seconds:
                                                description: Span of time at a resolution
                                                  of a second. Must be from 0 to 315,576,000,000
                                                  inclusive.
                                                type: string
                                            required:
                                            - seconds
                                            type: object
                                          percentage:
                                            description: The percentage of traffic
                                              (connections/operations/requests) on
                                              which delay will be introduced as part
                                              of fault injection. The value must be
                                              between 0.0 and 100.0 inclusive.
                                            format: double
                                            type: number
                                        required:
                                        - fixedDelay
                                        - percentage
                                        type: object
                                    type: object
                                  requestMirrorPolicy:
                                    description: Specifies the policy on how requests
                                      intended for the route's backends are shadowed
                                      to a separate mirrored backend service. Loadbalancer
                                      does not wait for responses from the shadow
                                      service. Prior to sending traffic to the shadow
                                      service, the host / authority header is suffixed
                                      with -shadow.
                                    properties:
                                      backendService:
                                        description: The RegionBackendService resource
                                          being mirrored to.
                                        type: string
                                    required:
                                    - backendService
                                    type: object
                                  retryPolicy:
                                    description: Specifies the retry policy associated
                                      with this route.
                                    properties:
                                      numRetries:
                                        description: Specifies the allowed number
                                          retries. This number must be > 0.
                                        format: int64
                                        type: integer
                                      perTryTimeout:
                                        description: Specifies a non-zero timeout
                                          per retry attempt.
                                        properties:
                                          nanos:
                                            description: Span of time that's a fraction
                                              of a second at nanosecond resolution.
                                              Durations less than one second are represented
                                              with a 0 'seconds' field and a positive
                                              'nanos' field. Must be from 0 to 999,999,999
                                              inclusive.
                                            format: int64
                                            type: integer
                                          seconds:
                                            description: Span of time at a resolution
                                              of a second. Must be from 0 to 315,576,000,000
                                              inclusive.
                                            type: string
                                        required:
                                        - seconds
                                        type: object
                                      retryConditions:
                                        description: "Specifies one or more conditions
                                          when this retry rule applies. Valid values
                                          are: \n - 5xx: Loadbalancer will attempt
                                          a retry if the backend service responds
                                          with any 5xx response code, or if the backend
                                          service does not respond at all, example:
                                          disconnects, reset, read timeout, connection
                                          failure, and refused streams. - gateway-error:
                                          Similar to 5xx, but only applies to response
                                          codes 502, 503 or 504. - connect-failure:
                                          Loadbalancer will retry on failures connecting
                                          to backend services, for example due to
                                          connection timeouts. - retriable-4xx: Loadbalancer
                                          will retry for retriable 4xx response codes.
                                          Currently the only retriable error supported
                                          is 409. - refused-stream: Loadbalancer will
                                          retry if the backend service resets the
                                          stream with a REFUSED_STREAM error code.
                                          This reset type indicates that it is safe
                                          to retry. - cancelled: Loadbalancer will
                                          retry if the gRPC status code in the response
                                          header is set to cancelled - deadline-exceeded:
                                          Loadbalancer will retry if the gRPC status
                                          code in the response header is set to deadline-exceeded
                                          - resource-exhausted: Loadbalancer will
                                          retry if the gRPC status code in the response
                                          header is set to resource-exhausted - unavailable:
                                          Loadbalancer will retry if the gRPC status
                                          code in the response header is set to unavailable"
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  timeout:
                                    description: Specifies the timeout for the selected
                                      route. Timeout is computed from the time the
                                      request is has been fully processed (i.e. end-of-stream)
                                      up until the response has been completely processed.
                                      Timeout includes all retries. If not specified,
                                      the default value is 15 seconds.
                                    properties:
                                      nanos:
                                        description: Span of time that's a fraction
                                          of a second at nanosecond resolution. Durations
                                          less than one second are represented with
                                          a 0 'seconds' field and a positive 'nanos'
                                          field. Must be from 0 to 999,999,999 inclusive.
                                        format: int64
                                        type: integer
                                      seconds:
                                        description: Span of time at a resolution
                                          of a second. Must be from 0 to 315,576,000,000
                                          inclusive.
                                        type: string
                                    required:
                                    - seconds
                                    type: object
                                  urlRewrite:
                                    description: The spec to modify the URL of the
                                      request, prior to forwarding the request to
                                      the matched service
                                    properties:
                                      hostRewrite:
                                        description: Prior to forwarding the request
                                          to the selected service, the request's host
                                          header is replaced with contents of hostRewrite.
                                          The value must be between 1 and 255 characters.
                                        type: string
                                      pathPrefixRewrite:
                                        description: Prior to forwarding the request
                                          to the selected backend service, the matching
                                          portion of the request's path is replaced
                                          by pathPrefixRewrite. The value must be
                                          between 1 and 1024 characters.
                                        type: string
                                    type: object
                                  weightedBackendServices:
                                    description: A list of weighted backend services
                                      to send traffic to when a route match occurs.
                                      The weights determine the fraction of traffic
                                      that flows to their corresponding backend service.
                                      If all traffic needs to go to a single backend
                                      service, there must be one  weightedBackendService
                                      with weight set to a non 0 number. Once a backendService
                                      is identified and before forwarding the request
                                      to the backend service, advanced routing actions
                                      like Url rewrites and header transformations
                                      are applied depending on additional settings
                                      specified in this HttpRouteAction.
                                    items:
                                      properties:
                                        backendService:
                                          description: The default RegionBackendService
                                            resource. Before forwarding the request
                                            to backendService, the loadbalancer applies
                                            any relevant headerActions specified as
                                            part of this backendServiceWeight.
                                          type: string
                                        headerAction:
                                          description: Specifies changes to request
                                            and response headers that need to take
                                            effect for the selected backendService.
                                            headerAction specified here take effect
                                            before headerAction in the enclosing HttpRouteRule,
                                            PathMatcher and UrlMap.
                                          properties:
                                            requestHeadersToAdd:
                                              description: Headers to add to a matching
                                                request prior to forwarding the request
                                                to the backendService.
                                              items:
                                                properties:
                                                  headerName:
                                                    description: The name of the header.
                                                    type: string
                                                  headerValue:
                                                    description: The value of the
                                                      header to add.
                                                    type: string
                                                  replace:
                                                    description: If false, headerValue
                                                      is appended to any values that
                                                      already exist for the header.
                                                      If true, headerValue is set
                                                      for the header, discarding any
                                                      values that were set for that
                                                      header.
                                                    type: boolean
                                                required:
                                                - headerName
                                                - headerValue
                                                - replace
                                                type: object
                                              type: array
                                            requestHeadersToRemove:
                                              description: A list of header names
                                                for headers that need to be removed
                                                from the request prior to forwarding
                                                the request to the backendService.
                                              items:
                                                type: string
                                              type: array
                                            responseHeadersToAdd:
                                              description: Headers to add the response
                                                prior to sending the response back
                                                to the client.
                                              items:
                                                properties:
                                                  headerName:
                                                    description: The name of the header.
                                                    type: string
                                                  headerValue:
                                                    description: The value of the
                                                      header to add.
                                                    type: string
                                                  replace:
                                                    description: If false, headerValue
                                                      is appended to any values that
                                                      already exist for the header.
                                                      If true, headerValue is set
                                                      for the header, discarding any
                                                      values that were set for that
                                                      header.
                                                    type: boolean
                                                required:
                                                - headerName
                                                - headerValue
                                                - replace
                                                type: object
                                              type: array
                                            responseHeadersToRemove:
                                              description: A list of header names
                                                for headers that need to be removed
                                                from the response prior to sending
                                                the response back to the client.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        weight:
                                          description: Specifies the fraction of traffic
                                            sent to backendService, computed as weight
                                            / (sum of all weightedBackendService weights
                                            in routeAction) . The selection of a backend
                                            service is determined only for new traffic.
                                            Once a user's request has been directed
                                            to a backendService, subsequent requests
                                            will be sent to the same backendService
                                            as determined by the BackendService's
                                            session affinity policy. The value must
                                            be between 0 and 1000
                                          format: int64
                                          type: integer
                                      required:
                                      - backendService
                                      - weight
                                      type: object
                                    type: array
                                type: object
                              service:
                                description: The region backend service resource to
                                  which traffic is directed if this rule is matched.
                                  If routeAction is additionally specified, advanced
                                  routing actions like URL Rewrites, etc. take effect
                                  prior to sending the request to the backend. However,
                                  if service is specified, routeAction cannot contain
                                  any weightedBackendService s. Conversely, if routeAction
                                  specifies any weightedBackendServices, service must
                                  not be specified. Only one of urlRedirect, service
                                  or routeAction.weightedBackendService must be set.
                                type: string
                              urlRedirect:
                                description: When a path pattern is matched, the request
                                  is redirected to a URL specified by urlRedirect.
                                  If urlRedirect is specified, service or routeAction
                                  must not be set.
                                properties:
                                  hostRedirect:
                                    description: The host that will be used in the
                                      redirect response instead of the one that was
                                      supplied in the request. The value must be between
                                      1 and 255 characters.
                                    type: string
                                  httpsRedirect:
                                    description: If set to true, the URL scheme in
                                      the redirected request is set to https. If set
                                      to false, the URL scheme of the redirected request
                                      will remain the same as that of the request.
                                      This must only be set for UrlMaps used in TargetHttpProxys.
                                      Setting this true for TargetHttpsProxy is not
                                      permitted. The default is set to false.
                                    type: boolean
                                  pathRedirect:
                                    description: The path that will be used in the
                                      redirect response instead of the one that was
                                      supplied in the request. pathRedirect cannot
                                      be supplied together with prefixRedirect. Supply
                                      one alone or neither. If neither is supplied,
                                      the path of the original request will be used
                                      for the redirect. The value must be between
                                      1 and 1024 characters.
                                    type: string
                                  prefixRedirect:
                                    description: The prefix that replaces the prefixMatch
                                      specified in the HttpRouteRuleMatch, retaining
                                      the remaining portion of the URL before redirecting
                                      the request. prefixRedirect cannot be supplied
                                      together with pathRedirect. Supply one alone
                                      or neither. If neither is supplied, the path
                                      of the original request will be used for the
                                      redirect. The value must be between 1 and 1024
                                      characters.
                                    type: string
                                  redirectResponseCode:
                                    description: "The HTTP Status code to use for
                                      this RedirectAction. Supported values are: \n
                                      * MOVED_PERMANENTLY_DEFAULT, which is the default
                                      value and corresponds to 301. \n * FOUND, which
                                      corresponds to 302. \n * SEE_OTHER which corresponds
                                      to 303. \n * TEMPORARY_REDIRECT, which corresponds
                                      to 307. In this case, the request method will
                                      be retained. \n * PERMANENT_REDIRECT, which
                                      corresponds to 308. In this case, the request
                                      method will be retained. Possible values: [\"FOUND\",
                                      \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\",
                                      \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                                    type: string
                                  stripQuery:
                                    description: If set to true, any accompanying
                                      query portion of the original URL is removed
                                      prior to redirecting the request. If set to
                                      false, the query portion of the original URL
                                      is retained.  This field is required to ensure
                                      an empty block is not set. The normal default
                                      value is false.
                                    type: boolean
                                required:
                                - stripQuery
                                type: object
                            required:
                            - paths
                            type: object
                          type: array
                        routeRules:
                          description: 'The list of ordered HTTP route rules. Use
                            this list instead of pathRules when advanced route matching
                            and routing actions are desired. The order of specifying
                            routeRules matters: the first rule that matches will cause
                            its specified routing action to take effect. Within a
                            given pathMatcher, only one of pathRules or routeRules
                            must be set. routeRules are not supported in UrlMaps intended
                            for External load balancers.'
                          items:
                            properties:
                              headerAction:
                                description: Specifies changes to request and response
                                  headers that need to take effect for the selected
                                  backendService. The headerAction specified here
                                  are applied before the matching pathMatchers[].headerAction
                                  and after pathMatchers[].routeRules[].r outeAction.weightedBackendService.backendServiceWeightAction[].headerAction
                                properties:
                                  requestHeadersToAdd:
                                    description: Headers to add to a matching request
                                      prior to forwarding the request to the backendService.
                                    items:
                                      properties:
                                        headerName:
                                          description: The name of the header.
                                          type: string
                                        headerValue:
                                          description: The value of the header to
                                            add.
                                          type: string
                                        replace:
                                          description: If false, headerValue is appended
                                            to any values that already exist for the
                                            header. If true, headerValue is set for
                                            the header, discarding any values that
                                            were set for that header.
                                          type: boolean
                                      required:
                                      - headerName
                                      - headerValue
                                      - replace
                                      type: object
                                    type: array
                                  requestHeadersToRemove:
                                    description: A list of header names for headers
                                      that need to be removed from the request prior
                                      to forwarding the request to the backendService.
                                    items:
                                      type: string
                                    type: array
                                  responseHeadersToAdd:
                                    description: Headers to add the response prior
                                      to sending the response back to the client.
                                    items:
                                      properties:
                                        headerName:
                                          description: The name of the header.
                                          type: string
                                        headerValue:
                                          description: The value of the header to
                                            add.
                                          type: string
                                        replace:
                                          description: If false, headerValue is appended
                                            to any values that already exist for the
                                            header. If true, headerValue is set for
                                            the header, discarding any values that
                                            were set for that header.
                                          type: boolean
                                      required:
                                      - headerName
                                      - headerValue
                                      - replace
                                      type: object
                                    type: array
                                  responseHeadersToRemove:
                                    description: A list of header names for headers
                                      that need to be removed from the response prior
                                      to sending the response back to the client.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              matchRules:
                                description: The rules for determining a match.
                                items:
                                  properties:
                                    fullPathMatch:
                                      description: For satisfying the matchRule condition,
                                        the path of the request must exactly match
                                        the value specified in fullPathMatch after
                                        removing any query parameters and anchor that
                                        may be part of the original URL. FullPathMatch
                                        must be between 1 and 1024 characters. Only
                                        one of prefixMatch, fullPathMatch or regexMatch
                                        must be specified.
                                      type: string
                                    headerMatches:
                                      description: Specifies a list of header match
                                        criteria, all of which must match corresponding
                                        headers in the request.
                                      items:
                                        properties:
                                          exactMatch:
                                            description: The value should exactly
                                              match contents of exactMatch. Only one
                                              of exactMatch, prefixMatch, suffixMatch,
                                              regexMatch, presentMatch or rangeMatch
                                              must be set.
                                            type: string
                                          headerName:
                                            description: The name of the HTTP header
                                              to match. For matching against the HTTP
                                              request's authority, use a headerMatch
                                              with the header name ":authority". For
                                              matching a request's method, use the
                                              headerName ":method".
                                            type: string
                                          invertMatch:
                                            description: If set to false, the headerMatch
                                              is considered a match if the match criteria
                                              above are met. If set to true, the headerMatch
                                              is considered a match if the match criteria
                                              above are NOT met. Defaults to false.
                                            type: boolean
                                          prefixMatch:
                                            description: The value of the header must
                                              start with the contents of prefixMatch.
                                              Only one of exactMatch, prefixMatch,
                                              suffixMatch, regexMatch, presentMatch
                                              or rangeMatch must be set.
                                            type: string
                                          presentMatch:
                                            description: A header with the contents
                                              of headerName must exist. The match
                                              takes place whether or not the request's
                                              header has a value or not. Only one
                                              of exactMatch, prefixMatch, suffixMatch,
                                              regexMatch, presentMatch or rangeMatch
                                              must be set.
                                            type: boolean
                                          rangeMatch:
                                            description: "The header value must be
                                              an integer and its value must be in
                                              the range specified in rangeMatch. If
                                              the header does not contain an integer,
                                              number or is empty, the match fails.
                                              For example for a range [-5, 0] \n *
                                              -3 will match * 0 will not match * 0.25
                                              will not match * -3someString will not
                                              match. \n Only one of exactMatch, prefixMatch,
                                              suffixMatch, regexMatch, presentMatch
                                              or rangeMatch must be set."
                                            properties:
                                              rangeEnd:
                                                description: The end of the range
                                                  (exclusive).
                                                format: int64
                                                type: integer
                                              rangeStart:
                                                description: The start of the range
                                                  (inclusive).
                                                format: int64
                                                type: integer
                                            required:
                                            - rangeEnd
                                            - rangeStart
                                            type: object
                                          regexMatch:
                                            description: 'The value of the header
                                              must match the regular expression specified
                                              in regexMatch. For regular expression
                                              grammar, please see: en.cppreference.com/w/cpp/regex/ecmascript  For
                                              matching against a port specified in
                                              the HTTP request, use a headerMatch
                                              with headerName set to PORT and a regular
                                              expression that satisfies the RFC2616
                                              Host header''s port specifier. Only
                                              one of exactMatch, prefixMatch, suffixMatch,
                                              regexMatch, presentMatch or rangeMatch
                                              must be set.'
                                            type: string
                                          suffixMatch:
                                            description: The value of the header must
                                              end with the contents of suffixMatch.
                                              Only one of exactMatch, prefixMatch,
                                              suffixMatch, regexMatch, presentMatch
                                              or rangeMatch must be set.
                                            type: string
                                        required:
                                        - headerName
                                        type: object
                                      type: array
                                    ignoreCase:
                                      description: Specifies that prefixMatch and
                                        fullPathMatch matches are case sensitive.
                                        Defaults to false.
                                      type: boolean
                                    metadataFilters:
                                      description: Opaque filter criteria used by
                                        Loadbalancer to restrict routing configuration
                                        to a limited set xDS compliant clients. In
                                        their xDS requests to Loadbalancer, xDS clients
                                        present node metadata. If a match takes place,
                                        the relevant routing configuration is made
                                        available to those proxies. For each metadataFilter
                                        in this list, if its filterMatchCriteria is
                                        set to MATCH_ANY, at least one of the filterLabels
                                        must match the corresponding label provided
                                        in the metadata. If its filterMatchCriteria
                                        is set to MATCH_ALL, then all of its filterLabels
                                        must match with corresponding labels in the
                                        provided metadata. metadataFilters specified
                                        here can be overrides those specified in ForwardingRule
                                        that refers to this UrlMap. metadataFilters
                                        only applies to Loadbalancers that have their
                                        loadBalancingScheme set to INTERNAL_SELF_MANAGED.
                                      items:
                                        properties:
                                          filterLabels:
                                            description: The list of label value pairs
                                              that must match labels in the provided
                                              metadata based on filterMatchCriteria  This
                                              list must not be empty and can have
                                              at the most 64 entries.
                                            items:
                                              properties:
                                                name:
                                                  description: Name of metadata label.
                                                    The name can have a maximum length
                                                    of 1024 characters and must be
                                                    at least 1 character long.
                                                  type: string
                                                value:
                                                  description: The value of the label
                                                    must match the specified value.
                                                    value can have a maximum length
                                                    of 1024 characters.
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            maxItems: 64
                                            minItems: 1
                                            type: array
                                          filterMatchCriteria:
                                            description: "Specifies how individual
                                              filterLabel matches within the list
                                              of filterLabels contribute towards the
                                              overall metadataFilter match. Supported
                                              values are: \n * MATCH_ANY: At least
                                              one of the filterLabels must have a
                                              matching label in the provided metadata.
                                              * MATCH_ALL: All filterLabels must have
                                              matching labels in the provided metadata.
                                              Possible values: [\"MATCH_ALL\", \"MATCH_ANY\"]"
                                            type: string
                                        required:
                                        - filterLabels
                                        - filterMatchCriteria
                                        type: object
                                      type: array
                                    prefixMatch:
                                      description: For satisfying the matchRule condition,
                                        the request's path must begin with the specified
                                        prefixMatch. prefixMatch must begin with a
                                        /. The value must be between 1 and 1024 characters.
                                        Only one of prefixMatch, fullPathMatch or
                                        regexMatch must be specified.
                                      type: string
                                    queryParameterMatches:
                                      description: Specifies a list of query parameter
                                        match criteria, all of which must match corresponding
                                        query parameters in the request.
                                      items:
                                        properties:
                                          exactMatch:
                                            description: The queryParameterMatch matches
                                              if the value of the parameter exactly
                                              matches the contents of exactMatch.
                                              Only one of presentMatch, exactMatch
                                              and regexMatch must be set.
                                            type: string
                                          name:
                                            description: The name of the query parameter
                                              to match. The query parameter must exist
                                              in the request, in the absence of which
                                              the request match fails.
                                            type: string
                                          presentMatch:
                                            description: Specifies that the queryParameterMatch
                                              matches if the request contains the
                                              query parameter, irrespective of whether
                                              the parameter has a value or not. Only
                                              one of presentMatch, exactMatch and
                                              regexMatch must be set.
                                            type: boolean
                                          regexMatch:
                                            description: The queryParameterMatch matches
                                              if the value of the parameter matches
                                              the regular expression specified by
                                              regexMatch. For the regular expression
                                              grammar, please see en.cppreference.com/w/cpp/regex/ecmascript  Only
                                              one of presentMatch, exactMatch and
                                              regexMatch must be set.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    regexMatch:
                                      description: For satisfying the matchRule condition,
                                        the path of the request must satisfy the regular
                                        expression specified in regexMatch after removing
                                        any query parameters and anchor supplied with
                                        the original URL. For regular expression grammar
                                        please see en.cppreference.com/w/cpp/regex/ecmascript  Only
                                        one of prefixMatch, fullPathMatch or regexMatch
                                        must be specified.
                                      type: string
                                  type: object
                                type: array
                              priority:
                                description: "For routeRules within a given pathMatcher,
                                  priority determines the order in which load balancer
                                  will interpret routeRules. RouteRules are evaluated
                                  in order of priority, from the lowest to highest
                                  number. The priority of a rule decreases as its
                                  number increases (1, 2, 3, N+1). The first rule
                                  that matches the request is applied. \n You cannot
                                  configure two or more routeRules with the same priority.
                                  Priority for each rule must be set to a number between
                                  0 and 2147483647 inclusive. \n Priority numbers
                                  can have gaps, which enable you to add or remove
                                  rules in the future without affecting the rest of
                                  the rules. For example, 1, 2, 3, 4, 5, 9, 12, 16
                                  is a valid series of priority numbers to which you
                                  could add rules numbered from 6 to 8, 10 to 11,
                                  and 13 to 15 in the future without any impact on
                                  existing rules."
                                format: int64
                                type: integer
                              routeAction:
                                description: In response to a matching matchRule,
                                  the load balancer performs advanced routing actions
                                  like URL rewrites, header transformations, etc.
                                  prior to forwarding the request to the selected
                                  backend. If  routeAction specifies any weightedBackendServices,
                                  service must not be set. Conversely if service is
                                  set, routeAction cannot contain any  weightedBackendServices.
                                  Only one of routeAction or urlRedirect must be set.
                                properties:
                                  corsPolicy:
                                    description: The specification for allowing client
                                      side cross-origin requests. Please see W3C Recommendation
                                      for Cross Origin Resource Sharing
                                    properties:
                                      allowCredentials:
                                        description: In response to a preflight request,
                                          setting this to true indicates that the
                                          actual request can include user credentials.
                                          This translates to the Access- Control-Allow-Credentials
                                          header. Defaults to false.
                                        type: boolean
                                      allowHeaders:
                                        description: Specifies the content for the
                                          Access-Control-Allow-Headers header.
                                        items:
                                          type: string
                                        type: array
                                      allowMethods:
                                        description: Specifies the content for the
                                          Access-Control-Allow-Methods header.
                                        items:
                                          type: string
                                        type: array
                                      allowOriginRegexes:
                                        description: Specifies the regular expression
                                          patterns that match allowed origins. For
                                          regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
                                          An origin is allowed if it matches either
                                          allow_origins or allow_origin_regex.
                                        items:
                                          type: string
                                        type: array
                                      allowOrigins:
                                        description: Specifies the list of origins
                                          that will be allowed to do CORS requests.
                                          An origin is allowed if it matches either
                                          allow_origins or allow_origin_regex.
                                        items:
                                          type: string
                                        type: array
                                      disabled:
                                        description: If true, specifies the CORS policy
                                          is disabled. which indicates that the CORS
                                          policy is in effect. Defaults to false.
                                        type: boolean
                                      exposeHeaders:
                                        description: Specifies the content for the
                                          Access-Control-Expose-Headers header.
                                        items:
                                          type: string
                                        type: array
                                      maxAge:
                                        description: Specifies how long the results
                                          of a preflight request can be cached. This
                                          translates to the content for the Access-Control-Max-Age
                                          header.
                                        format: int64
                                        type: integer
                                    type: object
                                  faultInjectionPolicy:
                                    description: The specification for fault injection
                                      introduced into traffic to test the resiliency
                                      of clients to backend service failure. As part
                                      of fault injection, when clients send requests
                                      to a backend service, delays can be introduced
                                      by Loadbalancer on a percentage of requests
                                      before sending those request to the backend
                                      service. Similarly requests from clients can
                                      be aborted by the Loadbalancer for a percentage
                                      of requests. timeout and retry_policy will be
                                      ignored by clients that are configured with
                                      a fault_injection_policy.
                                    properties:
                                      abort:
                                        description: The specification for how client
                                          requests are aborted as part of fault injection.
                                        properties:
                                          httpStatus:
                                            description: The HTTP status code used
                                              to abort the request. The value must
                                              be between 200 and 599 inclusive.
                                            format: int64
                                            type: integer
                                          percentage:
                                            description: The percentage of traffic
                                              (connections/operations/requests) which
                                              will be aborted as part of fault injection.
                                              The value must be between 0.0 and 100.0
                                              inclusive.
                                            format: double
                                            type: number
                                        type: object
                                      delay:
                                        description: The specification for how client
                                          requests are delayed as part of fault injection,
                                          before being sent to a backend service.
                                        properties:
                                          fixedDelay:
                                            description: Specifies the value of the
                                              fixed delay interval.
                                            properties:
                                              nanos:
                                                description: Span of time that's a
                                                  fraction of a second at nanosecond
                                                  resolution. Durations less than
                                                  one second are represented with
                                                  a 0 'seconds' field and a positive
                                                  'nanos' field. Must be from 0 to
                                                  999,999,999 inclusive.
                                                format: int64
                                                type: integer
                                              seconds:
                                                description: Span of time at a resolution
                                                  of a second. Must be from 0 to 315,576,000,000
                                                  inclusive.
                                                type: string
                                            required:
                                            - seconds
                                            type: object
                                          percentage:
                                            description: The percentage of traffic
                                              (connections/operations/requests) on
                                              which delay will be introduced as part
                                              of fault injection. The value must be
                                              between 0.0 and 100.0 inclusive.
                                            format: double
                                            type: number
                                        type: object
                                    type: object
                                  requestMirrorPolicy:
                                    description: Specifies the policy on how requests
                                      intended for the route's backends are shadowed
                                      to a separate mirrored backend service. Loadbalancer
                                      does not wait for responses from the shadow
                                      service. Prior to sending traffic to the shadow
                                      service, the host / authority header is suffixed
                                      with -shadow.
                                    properties:
                                      backendService:
                                        description: The RegionBackendService resource
                                          being mirrored to.
                                        type: string
                                    required:
                                    - backendService
                                    type: object
                                  retryPolicy:
                                    description: Specifies the retry policy associated
                                      with this route.
                                    properties:
                                      numRetries:
                                        description: Specifies the allowed number
                                          retries. This number must be > 0.
                                        format: int64
                                        type: integer
                                      perTryTimeout:
                                        description: Specifies a non-zero timeout
                                          per retry attempt.
                                        properties:
                                          nanos:
                                            description: Span of time that's a fraction
                                              of a second at nanosecond resolution.
                                              Durations less than one second are represented
                                              with a 0 'seconds' field and a positive
                                              'nanos' field. Must be from 0 to 999,999,999
                                              inclusive.
                                            format: int64
                                            type: integer
                                          seconds:
                                            description: Span of time at a resolution
                                              of a second. Must be from 0 to 315,576,000,000
                                              inclusive.
                                            type: string
                                        required:
                                        - seconds
                                        type: object
                                      retryConditions:
                                        description: "Specifies one or more conditions
                                          when this retry rule applies. Valid values
                                          are: \n * 5xx: Loadbalancer will attempt
                                          a retry if the backend service responds
                                          with   any 5xx response code, or if the
                                          backend service does not respond at all,
                                          \  example: disconnects, reset, read timeout,
                                          connection failure, and refused   streams.
                                          * gateway-error: Similar to 5xx, but only
                                          applies to response codes   502, 503 or
                                          504. * connect-failure: Loadbalancer will
                                          retry on failures   connecting to backend
                                          services, for example due to connection
                                          timeouts. * retriable-4xx: Loadbalancer
                                          will retry for retriable 4xx response codes.
                                          \  Currently the only retriable error supported
                                          is 409. * refused-stream: Loadbalancer will
                                          retry if the backend service resets the
                                          stream with a   REFUSED_STREAM error code.
                                          This reset type indicates that it is safe
                                          to retry. * cancelled: Loadbalancer will
                                          retry if the gRPC status code in the response
                                          \  header is set to cancelled * deadline-exceeded:
                                          Loadbalancer will retry if the   gRPC status
                                          code in the response header is set to deadline-exceeded
                                          * resource-exhausted: Loadbalancer will
                                          retry if the gRPC status code in the response
                                          \  header is set to resource-exhausted *
                                          unavailable: Loadbalancer will retry if
                                          the gRPC status code in   the response header
                                          is set to unavailable"
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - numRetries
                                    type: object
                                  timeout:
                                    description: Specifies the timeout for the selected
                                      route. Timeout is computed from the time the
                                      request is has been fully processed (i.e. end-of-stream)
                                      up until the response has been completely processed.
                                      Timeout includes all retries. If not specified,
                                      the default value is 15 seconds.
                                    properties:
                                      nanos:
                                        description: Span of time that's a fraction
                                          of a second at nanosecond resolution. Durations
                                          less than one second are represented with
                                          a 0 'seconds' field and a positive 'nanos'
                                          field. Must be from 0 to 999,999,999 inclusive.
                                        format: int64
                                        type: integer
                                      seconds:
                                        description: Span of time at a resolution
                                          of a second. Must be from 0 to 315,576,000,000
                                          inclusive.
                                        type: string
                                    required:
                                    - seconds
                                    type: object
                                  urlRewrite:
                                    description: The spec to modify the URL of the
                                      request, prior to forwarding the request to
                                      the matched service
                                    properties:
                                      hostRewrite:
                                        description: Prior to forwarding the request
                                          to the selected service, the request's host
                                          header is replaced with contents of hostRewrite.
                                          The value must be between 1 and 255 characters.
                                        type: string
                                      pathPrefixRewrite:
                                        description: Prior to forwarding the request
                                          to the selected backend service, the matching
                                          portion of the request's path is replaced
                                          by pathPrefixRewrite. The value must be
                                          between 1 and 1024 characters.
                                        type: string
                                    type: object
                                  weightedBackendServices:
                                    description: A list of weighted backend services
                                      to send traffic to when a route match occurs.
                                      The weights determine the fraction of traffic
                                      that flows to their corresponding backend service.
                                      If all traffic needs to go to a single backend
                                      service, there must be one  weightedBackendService
                                      with weight set to a non 0 number. Once a backendService
                                      is identified and before forwarding the request
                                      to the backend service, advanced routing actions
                                      like Url rewrites and header transformations
                                      are applied depending on additional settings
                                      specified in this HttpRouteAction.
                                    items:
                                      properties:
                                        backendService:
                                          description: The default RegionBackendService
                                            resource. Before forwarding the request
                                            to backendService, the loadbalancer applies
                                            any relevant headerActions specified as
                                            part of this backendServiceWeight.
                                          type: string
                                        headerAction:
                                          description: Specifies changes to request
                                            and response headers that need to take
                                            effect for the selected backendService.
                                            headerAction specified here take effect
                                            before headerAction in the enclosing HttpRouteRule,
                                            PathMatcher and UrlMap.
                                          properties:
                                            requestHeadersToAdd:
                                              description: Headers to add to a matching
                                                request prior to forwarding the request
                                                to the backendService.
                                              items:
                                                properties:
                                                  headerName:
                                                    description: The name of the header.
                                                    type: string
                                                  headerValue:
                                                    description: The value of the
                                                      header to add.
                                                    type: string
                                                  replace:
                                                    description: If false, headerValue
                                                      is appended to any values that
                                                      already exist for the header.
                                                      If true, headerValue is set
                                                      for the header, discarding any
                                                      values that were set for that
                                                      header.
                                                    type: boolean
                                                required:
                                                - headerName
                                                - headerValue
                                                - replace
                                                type: object
                                              type: array
                                            requestHeadersToRemove:
                                              description: A list of header names
                                                for headers that need to be removed
                                                from the request prior to forwarding
                                                the request to the backendService.
                                              items:
                                                type: string
                                              type: array
                                            responseHeadersToAdd:
                                              description: Headers to add the response
                                                prior to sending the response back
                                                to the client.
                                              items:
                                                properties:
                                                  headerName:
                                                    description: The name of the header.
                                                    type: string
                                                  headerValue:
                                                    description: The value of the
                                                      header to add.
                                                    type: string
                                                  replace:
                                                    description: If false, headerValue
                                                      is appended to any values that
                                                      already exist for the header.
                                                      If true, headerValue is set
                                                      for the header, discarding any
                                                      values that were set for that
                                                      header.
                                                    type: boolean
                                                required:
                                                - headerName
                                                - headerValue
                                                - replace
                                                type: object
                                              type: array
                                            responseHeadersToRemove:
                                              description: A list of header names
                                                for headers that need to be removed
                                                from the response prior to sending
                                                the response back to the client.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        weight:
                                          description: Specifies the fraction of traffic
                                            sent to backendService, computed as weight
                                            / (sum of all weightedBackendService weights
                                            in routeAction) . The selection of a backend
                                            service is determined only for new traffic.
                                            Once a user's request has been directed
                                            to a backendService, subsequent requests
                                            will be sent to the same backendService
                                            as determined by the BackendService's
                                            session affinity policy. The value must
                                            be between 0 and 1000
                                          format: int64
                                          type: integer
                                      required:
                                      - backendService
                                      - weight
                                      type: object
                                    type: array
                                type: object
                              service:
                                description: The region backend service resource to
                                  which traffic is directed if this rule is matched.
                                  If routeAction is additionally specified, advanced
                                  routing actions like URL Rewrites, etc. take effect
                                  prior to sending the request to the backend. However,
                                  if service is specified, routeAction cannot contain
                                  any weightedBackendService s. Conversely, if routeAction
                                  specifies any weightedBackendServices, service must
                                  not be specified. Only one of urlRedirect, service
                                  or routeAction.weightedBackendService must be set.
                                type: string
                              urlRedirect:
                                description: When this rule is matched, the request
                                  is redirected to a URL specified by urlRedirect.
                                  If urlRedirect is specified, service or routeAction
                                  must not be set.
                                properties:
                                  hostRedirect:
                                    description: The host that will be used in the
                                      redirect response instead of the one that was
                                      supplied in the request. The value must be between
                                      1 and 255 characters.
                                    type: string
                                  httpsRedirect:
                                    description: If set to true, the URL scheme in
                                      the redirected request is set to https. If set
                                      to false, the URL scheme of the redirected request
                                      will remain the same as that of the request.
                                      This must only be set for UrlMaps used in TargetHttpProxys.
                                      Setting this true for TargetHttpsProxy is not
                                      permitted. The default is set to false.
                                    type: boolean
                                  pathRedirect:
                                    description: The path that will be used in the
                                      redirect response instead of the one that was
                                      supplied in the request. pathRedirect cannot
                                      be supplied together with prefixRedirect. Supply
                                      one alone or neither. If neither is supplied,
                                      the path of the original request will be used
                                      for the redirect. The value must be between
                                      1 and 1024 characters.
                                    type: string
                                  prefixRedirect:
                                    description: The prefix that replaces the prefixMatch
                                      specified in the HttpRouteRuleMatch, retaining
                                      the remaining portion of the URL before redirecting
                                      the request. prefixRedirect cannot be supplied
                                      together with pathRedirect. Supply one alone
                                      or neither. If neither is supplied, the path
                                      of the original request will be used for the
                                      redirect. The value must be between 1 and 1024
                                      characters.
                                    type: string
                                  redirectResponseCode:
                                    description: "The HTTP Status code to use for
                                      this RedirectAction. Supported values are: \n
                                      * MOVED_PERMANENTLY_DEFAULT, which is the default
                                      value and corresponds to 301. \n * FOUND, which
                                      corresponds to 302. \n * SEE_OTHER which corresponds
                                      to 303. \n * TEMPORARY_REDIRECT, which corresponds
                                      to 307. In this case, the request method will
                                      be retained. \n * PERMANENT_REDIRECT, which
                                      corresponds to 308. In this case, the request
                                      method will be retained. Possible values: [\"FOUND\",
                                      \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\",
                                      \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                                    type: string
                                  stripQuery:
                                    description: If set to true, any accompanying
                                      query portion of the original URL is removed
                                      prior to redirecting the request. If set to
                                      false, the query portion of the original URL
                                      is retained. The default value is false.
                                    type: boolean
                                type: object
                            required:
                            - priority
                            type: object
                          type: array
                      required:
                      - name
                      type: object
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: The Region in which the url map should reside. If
                      it is not provided, the provider region is used.
                    type: string
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  test:
                    description: The list of expected URL mappings. Requests to update
                      this UrlMap will succeed only if all of the test cases pass.
                    items:
                      properties:
                        description:
                          description: Description of this test case.
                          type: string
                        host:
                          description: Host portion of the URL.
                          type: string
                        path:
                          description: Path portion of the URL.
                          type: string
                        service:
                          description: A reference to expected RegionBackendService
                            resource the given URL should be mapped to.
                          type: string
                      required:
                      - host
                      - path
                      - service
                      type: object
                    type: array
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - providerRef
                type: object
              mapID:
                description: The unique identifier for the resource.
                format: int64
                type: integer
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              pathMatcher:
                description: The list of named PathMatchers to use against the URL.
                items:
                  properties:
                    defaultService:
                      description: A reference to a RegionBackendService resource.
                        This will be used if none of the pathRules defined by this
                        PathMatcher is matched by the URL's path portion.
                      type: string
                    defaultURLRedirect:
                      description: When none of the specified hostRules match, the
                        request is redirected to a URL specified by defaultUrlRedirect.
                        If defaultUrlRedirect is specified, defaultService or defaultRouteAction
                        must not be set.
                      properties:
                        hostRedirect:
                          description: The host that will be used in the redirect
                            response instead of the one that was supplied in the request.
                            The value must be between 1 and 255 characters.
                          type: string
                        httpsRedirect:
                          description: If set to true, the URL scheme in the redirected
                            request is set to https. If set to false, the URL scheme
                            of the redirected request will remain the same as that
                            of the request. This must only be set for UrlMaps used
                            in TargetHttpProxys. Setting this true for TargetHttpsProxy
                            is not permitted. The default is set to false.
                          type: boolean
                        pathRedirect:
                          description: The path that will be used in the redirect
                            response instead of the one that was supplied in the request.
                            pathRedirect cannot be supplied together with prefixRedirect.
                            Supply one alone or neither. If neither is supplied, the
                            path of the original request will be used for the redirect.
                            The value must be between 1 and 1024 characters.
                          type: string
                        prefixRedirect:
                          description: The prefix that replaces the prefixMatch specified
                            in the HttpRouteRuleMatch, retaining the remaining portion
                            of the URL before redirecting the request. prefixRedirect
                            cannot be supplied together with pathRedirect. Supply
                            one alone or neither. If neither is supplied, the path
                            of the original request will be used for the redirect.
                            The value must be between 1 and 1024 characters.
                          type: string
                        redirectResponseCode:
                          description: "The HTTP Status code to use for this RedirectAction.
                            Supported values are: \n * MOVED_PERMANENTLY_DEFAULT,
                            which is the default value and corresponds to 301. \n
                            * FOUND, which corresponds to 302. \n * SEE_OTHER which
                            corresponds to 303. \n * TEMPORARY_REDIRECT, which corresponds
                            to 307. In this case, the request method will be retained.
                            \n * PERMANENT_REDIRECT, which corresponds to 308. In
                            this case, the request method will be retained. Possible
                            values: [\"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\",
                            \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                          type: string
                        stripQuery:
                          description: If set to true, any accompanying query portion
                            of the original URL is removed prior to redirecting the
                            request. If set to false, the query portion of the original
                            URL is retained.  This field is required to ensure an
                            empty block is not set. The normal default value is false.
                          type: boolean
                      required:
                      - stripQuery
                      type: object
                    description:
                      description: An optional description of this resource.
                      type: string
                    name:
                      description: The name to which this PathMatcher is referred
                        by the HostRule.
                      type: string
                    pathRule:
                      description: 'The list of path rules. Use this list instead
                        of routeRules when routing based on simple path matching is
                        all that''s required. The order by which path rules are specified
                        does not matter. Matches are always done on the longest-path-first
                        basis. For example: a pathRule with a path /a/b/c/* will match
                        before /a/b/* irrespective of the order in which those paths
                        appear in this list. Within a given pathMatcher, only one
                        of pathRules or routeRules must be set.'
                      items:
                        properties:
                          paths:
                            description: 'The list of path patterns to match. Each
                              must start with / and the only place a * is allowed
                              is at the end following a /. The string fed to the path
                              matcher does not include any text after the first ?
                              or #, and those chars are not allowed here.'
                            items:
                              type: string
                            type: array
                          routeAction:
                            description: In response to a matching path, the load
                              balancer performs advanced routing actions like URL
                              rewrites, header transformations, etc. prior to forwarding
                              the request to the selected backend. If routeAction
                              specifies any weightedBackendServices, service must
                              not be set. Conversely if service is set, routeAction
                              cannot contain any  weightedBackendServices. Only one
                              of routeAction or urlRedirect must be set.
                            properties:
                              corsPolicy:
                                description: The specification for allowing client
                                  side cross-origin requests. Please see W3C Recommendation
                                  for Cross Origin Resource Sharing
                                properties:
                                  allowCredentials:
                                    description: In response to a preflight request,
                                      setting this to true indicates that the actual
                                      request can include user credentials. This translates
                                      to the Access- Control-Allow-Credentials header.
                                      Defaults to false.
                                    type: boolean
                                  allowHeaders:
                                    description: Specifies the content for the Access-Control-Allow-Headers
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  allowMethods:
                                    description: Specifies the content for the Access-Control-Allow-Methods
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  allowOriginRegexes:
                                    description: Specifies the regular expression
                                      patterns that match allowed origins. For regular
                                      expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
                                      An origin is allowed if it matches either allow_origins
                                      or allow_origin_regex.
                                    items:
                                      type: string
                                    type: array
                                  allowOrigins:
                                    description: Specifies the list of origins that
                                      will be allowed to do CORS requests. An origin
                                      is allowed if it matches either allow_origins
                                      or allow_origin_regex.
                                    items:
                                      type: string
                                    type: array
                                  disabled:
                                    description: If true, specifies the CORS policy
                                      is disabled.
                                    type: boolean
                                  exposeHeaders:
                                    description: Specifies the content for the Access-Control-Expose-Headers
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  maxAge:
                                    description: Specifies how long the results of
                                      a preflight request can be cached. This translates
                                      to the content for the Access-Control-Max-Age
                                      header.
                                    format: int64
                                    type: integer
                                required:
                                - disabled
                                type: object
                              faultInjectionPolicy:
                                description: The specification for fault injection
                                  introduced into traffic to test the resiliency of
                                  clients to backend service failure. As part of fault
                                  injection, when clients send requests to a backend
                                  service, delays can be introduced by Loadbalancer
                                  on a percentage of requests before sending those
                                  request to the backend service. Similarly requests
                                  from clients can be aborted by the Loadbalancer
                                  for a percentage of requests. timeout and retry_policy
                                  will be ignored by clients that are configured with
                                  a fault_injection_policy.
                                properties:
                                  abort:
                                    description: The specification for how client
                                      requests are aborted as part of fault injection.
                                    properties:
                                      httpStatus:
                                        description: The HTTP status code used to
                                          abort the request. The value must be between
                                          200 and 599 inclusive.
                                        format: int64
                                        type: integer
                                      percentage:
                                        description: The percentage of traffic (connections/operations/requests)
                                          which will be aborted as part of fault injection.
                                          The value must be between 0.0 and 100.0
                                          inclusive.
                                        format: double
                                        type: number
                                    required:
                                    - httpStatus
                                    - percentage
                                    type: object
                                  delay:
                                    description: The specification for how client
                                      requests are delayed as part of fault injection,
                                      before being sent to a backend service.
                                    properties:
                                      fixedDelay:
                                        description: Specifies the value of the fixed
                                          delay interval.
                                        properties:
                                          nanos:
                                            description: Span of time that's a fraction
                                              of a second at nanosecond resolution.
                                              Durations less than one second are represented
                                              with a 0 'seconds' field and a positive
                                              'nanos' field. Must be from 0 to 999,999,999
                                              inclusive.
                                            format: int64
                                            type: integer
                                          seconds:
                                            description: Span of time at a resolution
                                              of a second. Must be from 0 to 315,576,000,000
                                              inclusive.
                                            type: string
                                        required:
                                        - seconds
                                        type: object
                                      percentage:
                                        description: The percentage of traffic (connections/operations/requests)
                                          on which delay will be introduced as part
                                          of fault injection. The value must be between
                                          0.0 and 100.0 inclusive.
                                        format: double
                                        type: number
                                    required:
                                    - fixedDelay
                                    - percentage
                                    type: object
                                type: object
                              requestMirrorPolicy:
                                description: Specifies the policy on how requests
                                  intended for the route's backends are shadowed to
                                  a separate mirrored backend service. Loadbalancer
                                  does not wait for responses from the shadow service.
                                  Prior to sending traffic to the shadow service,
                                  the host / authority header is suffixed with -shadow.
                                properties:
                                  backendService:
                                    description: The RegionBackendService resource
                                      being mirrored to.
                                    type: string
                                required:
                                - backendService
                                type: object
                              retryPolicy:
                                description: Specifies the retry policy associated
                                  with this route.
                                properties:
                                  numRetries:
                                    description: Specifies the allowed number retries.
                                      This number must be > 0.
                                    format: int64
                                    type: integer
                                  perTryTimeout:
                                    description: Specifies a non-zero timeout per
                                      retry attempt.
                                    properties:
                                      nanos:
                                        description: Span of time that's a fraction
                                          of a second at nanosecond resolution. Durations
                                          less than one second are represented with
                                          a 0 'seconds' field and a positive 'nanos'
                                          field. Must be from 0 to 999,999,999 inclusive.
                                        format: int64
                                        type: integer
                                      seconds:
                                        description: Span of time at a resolution
                                          of a second. Must be from 0 to 315,576,000,000
                                          inclusive.
                                        type: string
                                    required:
                                    - seconds
                                    type: object
                                  retryConditions:
                                    description: "Specifies one or more conditions
                                      when this retry rule applies. Valid values are:
                                      \n - 5xx: Loadbalancer will attempt a retry
                                      if the backend service responds with any 5xx
                                      response code, or if the backend service does
                                      not respond at all, example: disconnects, reset,
                                      read timeout, connection failure, and refused
                                      streams. - gateway-error: Similar to 5xx, but
                                      only applies to response codes 502, 503 or 504.
                                      - connect-failure: Loadbalancer will retry on
                                      failures connecting to backend services, for
                                      example due to connection timeouts. - retriable-4xx:
                                      Loadbalancer will retry for retriable 4xx response
                                      codes. Currently the only retriable error supported
                                      is 409. - refused-stream: Loadbalancer will
                                      retry if the backend service resets the stream
                                      with a REFUSED_STREAM error code. This reset
                                      type indicates that it is safe to retry. - cancelled:
                                      Loadbalancer will retry if the gRPC status code
                                      in the response header is set to cancelled -
                                      deadline-exceeded: Loadbalancer will retry if
                                      the gRPC status code in the response header
                                      is set to deadline-exceeded - resource-exhausted:
                                      Loadbalancer will retry if the gRPC status code
                                      in the response header is set to resource-exhausted
                                      - unavailable: Loadbalancer will retry if the
                                      gRPC status code in the response header is set
                                      to unavailable"
                                    items:
                                      type: string
                                    type: array
                                type: object
                              timeout:
                                description: Specifies the timeout for the selected
                                  route. Timeout is computed from the time the request
                                  is has been fully processed (i.e. end-of-stream)
                                  up until the response has been completely processed.
                                  Timeout includes all retries. If not specified,
                                  the default value is 15 seconds.
                                properties:
                                  nanos:
                                    description: Span of time that's a fraction of
                                      a second at nanosecond resolution. Durations
                                      less than one second are represented with a
                                      0 'seconds' field and a positive 'nanos' field.
                                      Must be from 0 to 999,999,999 inclusive.
                                    format: int64
                                    type: integer
                                  seconds:
                                    description: Span of time at a resolution of a
                                      second. Must be from 0 to 315,576,000,000 inclusive.
                                    type: string
                                required:
                                - seconds
                                type: object
                              urlRewrite:
                                description: The spec to modify the URL of the request,
                                  prior to forwarding the request to the matched service
                                properties:
                                  hostRewrite:
                                    description: Prior to forwarding the request to
                                      the selected service, the request's host header
                                      is replaced with contents of hostRewrite. The
                                      value must be between 1 and 255 characters.
                                    type: string
                                  pathPrefixRewrite:
                                    description: Prior to forwarding the request to
                                      the selected backend service, the matching portion
                                      of the request's path is replaced by pathPrefixRewrite.
                                      The value must be between 1 and 1024 characters.
                                    type: string
                                type: object
                              weightedBackendServices:
                                description: A list of weighted backend services to
                                  send traffic to when a route match occurs. The weights
                                  determine the fraction of traffic that flows to
                                  their corresponding backend service. If all traffic
                                  needs to go to a single backend service, there must
                                  be one  weightedBackendService with weight set to
                                  a non 0 number. Once a backendService is identified
                                  and before forwarding the request to the backend
                                  service, advanced routing actions like Url rewrites
                                  and header transformations are applied depending
                                  on additional settings specified in this HttpRouteAction.
                                items:
                                  properties:
                                    backendService:
                                      description: The default RegionBackendService
                                        resource. Before forwarding the request to
                                        backendService, the loadbalancer applies any
                                        relevant headerActions specified as part of
                                        this backendServiceWeight.
                                      type: string
                                    headerAction:
                                      description: Specifies changes to request and
                                        response headers that need to take effect
                                        for the selected backendService. headerAction
                                        specified here take effect before headerAction
                                        in the enclosing HttpRouteRule, PathMatcher
                                        and UrlMap.
                                      properties:
                                        requestHeadersToAdd:
                                          description: Headers to add to a matching
                                            request prior to forwarding the request
                                            to the backendService.
                                          items:
                                            properties:
                                              headerName:
                                                description: The name of the header.
                                                type: string
                                              headerValue:
                                                description: The value of the header
                                                  to add.
                                                type: string
                                              replace:
                                                description: If false, headerValue
                                                  is appended to any values that already
                                                  exist for the header. If true, headerValue
                                                  is set for the header, discarding
                                                  any values that were set for that
                                                  header.
                                                type: boolean
                                            required:
                                            - headerName
                                            - headerValue
                                            - replace
                                            type: object
                                          type: array
                                        requestHeadersToRemove:
                                          description: A list of header names for
                                            headers that need to be removed from the
                                            request prior to forwarding the request
                                            to the backendService.
                                          items:
                                            type: string
                                          type: array
                                        responseHeadersToAdd:
                                          description: Headers to add the response
                                            prior to sending the response back to
                                            the client.
                                          items:
                                            properties:
                                              headerName:
                                                description: The name of the header.
                                                type: string
                                              headerValue:
                                                description: The value of the header
                                                  to add.
                                                type: string
                                              replace:
                                                description: If false, headerValue
                                                  is appended to any values that already
                                                  exist for the header. If true, headerValue
                                                  is set for the header, discarding
                                                  any values that were set for that
                                                  header.
                                                type: boolean
                                            required:
                                            - headerName
                                            - headerValue
                                            - replace
                                            type: object
                                          type: array
                                        responseHeadersToRemove:
                                          description: A list of header names for
                                            headers that need to be removed from the
                                            response prior to sending the response
                                            back to the client.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    weight:
                                      description: Specifies the fraction of traffic
                                        sent to backendService, computed as weight
                                        / (sum of all weightedBackendService weights
                                        in routeAction) . The selection of a backend
                                        service is determined only for new traffic.
                                        Once a user's request has been directed to
                                        a backendService, subsequent requests will
                                        be sent to the same backendService as determined
                                        by the BackendService's session affinity policy.
                                        The value must be between 0 and 1000
                                      format: int64
                                      type: integer
                                  required:
                                  - backendService
                                  - weight
                                  type: object
                                type: array
                            type: object
                          service:
                            description: The region backend service resource to which
                              traffic is directed if this rule is matched. If routeAction
                              is additionally specified, advanced routing actions
                              like URL Rewrites, etc. take effect prior to sending
                              the request to the backend. However, if service is specified,
                              routeAction cannot contain any weightedBackendService
                              s. Conversely, if routeAction specifies any weightedBackendServices,
                              service must not be specified. Only one of urlRedirect,
                              service or routeAction.weightedBackendService must be
                              set.
                            type: string
                          urlRedirect:
                            description: When a path pattern is matched, the request
                              is redirected to a URL specified by urlRedirect. If
                              urlRedirect is specified, service or routeAction must
                              not be set.
                            properties:
                              hostRedirect:
                                description: The host that will be used in the redirect
                                  response instead of the one that was supplied in
                                  the request. The value must be between 1 and 255
                                  characters.
                                type: string
                              httpsRedirect:
                                description: If set to true, the URL scheme in the
                                  redirected request is set to https. If set to false,
                                  the URL scheme of the redirected request will remain
                                  the same as that of the request. This must only
                                  be set for UrlMaps used in TargetHttpProxys. Setting
                                  this true for TargetHttpsProxy is not permitted.
                                  The default is set to false.
                                type: boolean
                              pathRedirect:
                                description: The path that will be used in the redirect
                                  response instead of the one that was supplied in
                                  the request. pathRedirect cannot be supplied together
                                  with prefixRedirect. Supply one alone or neither.
                                  If neither is supplied, the path of the original
                                  request will be used for the redirect. The value
                                  must be between 1 and 1024 characters.
                                type: string
                              prefixRedirect:
                                description: The prefix that replaces the prefixMatch
                                  specified in the HttpRouteRuleMatch, retaining the
                                  remaining portion of the URL before redirecting
                                  the request. prefixRedirect cannot be supplied together
                                  with pathRedirect. Supply one alone or neither.
                                  If neither is supplied, the path of the original
                                  request will be used for the redirect. The value
                                  must be between 1 and 1024 characters.
                                type: string
                              redirectResponseCode:
                                description: "The HTTP Status code to use for this
                                  RedirectAction. Supported values are: \n * MOVED_PERMANENTLY_DEFAULT,
                                  which is the default value and corresponds to 301.
                                  \n * FOUND, which corresponds to 302. \n * SEE_OTHER
                                  which corresponds to 303. \n * TEMPORARY_REDIRECT,
                                  which corresponds to 307. In this case, the request
                                  method will be retained. \n * PERMANENT_REDIRECT,
                                  which corresponds to 308. In this case, the request
                                  method will be retained. Possible values: [\"FOUND\",
                                  \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\",
                                  \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                                type: string
                              stripQuery:
                                description: If set to true, any accompanying query
                                  portion of the original URL is removed prior to
                                  redirecting the request. If set to false, the query
                                  portion of the original URL is retained.  This field
                                  is required to ensure an empty block is not set.
                                  The normal default value is false.
                                type: boolean
                            required:
                            - stripQuery
                            type: object
                        required:
                        - paths
                        type: object
                      type: array
                    routeRules:
                      description: 'The list of ordered HTTP route rules. Use this
                        list instead of pathRules when advanced route matching and
                        routing actions are desired. The order of specifying routeRules
                        matters: the first rule that matches will cause its specified
                        routing action to take effect. Within a given pathMatcher,
                        only one of pathRules or routeRules must be set. routeRules
                        are not supported in UrlMaps intended for External load balancers.'
                      items:
                        properties:
                          headerAction:
                            description: Specifies changes to request and response
                              headers that need to take effect for the selected backendService.
                              The headerAction specified here are applied before the
                              matching pathMatchers[].headerAction and after pathMatchers[].routeRules[].r
                              outeAction.weightedBackendService.backendServiceWeightAction[].headerAction
                            properties:
                              requestHeadersToAdd:
                                description: Headers to add to a matching request
                                  prior to forwarding the request to the backendService.
                                items:
                                  properties:
                                    headerName:
                                      description: The name of the header.
                                      type: string
                                    headerValue:
                                      description: The value of the header to add.
                                      type: string
                                    replace:
                                      description: If false, headerValue is appended
                                        to any values that already exist for the header.
                                        If true, headerValue is set for the header,
                                        discarding any values that were set for that
                                        header.
                                      type: boolean
                                  required:
                                  - headerName
                                  - headerValue
                                  - replace
                                  type: object
                                type: array
                              requestHeadersToRemove:
                                description: A list of header names for headers that
                                  need to be removed from the request prior to forwarding
                                  the request to the backendService.
                                items:
                                  type: string
                                type: array
                              responseHeadersToAdd:
                                description: Headers to add the response prior to
                                  sending the response back to the client.
                                items:
                                  properties:
                                    headerName:
                                      description: The name of the header.
                                      type: string
                                    headerValue:
                                      description: The value of the header to add.
                                      type: string
                                    replace:
                                      description: If false, headerValue is appended
                                        to any values that already exist for the header.
                                        If true, headerValue is set for the header,
                                        discarding any values that were set for that
                                        header.
                                      type: boolean
                                  required:
                                  - headerName
                                  - headerValue
                                  - replace
                                  type: object
                                type: array
                              responseHeadersToRemove:
                                description: A list of header names for headers that
                                  need to be removed from the response prior to sending
                                  the response back to the client.
                                items:
                                  type: string
                                type: array
                            type: object
                          matchRules:
                            description: The rules for determining a match.
                            items:
                              properties:
                                fullPathMatch:
                                  description: For satisfying the matchRule condition,
                                    the path of the request must exactly match the
                                    value specified in fullPathMatch after removing
                                    any query parameters and anchor that may be part
                                    of the original URL. FullPathMatch must be between
                                    1 and 1024 characters. Only one of prefixMatch,
                                    fullPathMatch or regexMatch must be specified.
                                  type: string
                                headerMatches:
                                  description: Specifies a list of header match criteria,
                                    all of which must match corresponding headers
                                    in the request.
                                  items:
                                    properties:
                                      exactMatch:
                                        description: The value should exactly match
                                          contents of exactMatch. Only one of exactMatch,
                                          prefixMatch, suffixMatch, regexMatch, presentMatch
                                          or rangeMatch must be set.
                                        type: string
                                      headerName:
                                        description: The name of the HTTP header to
                                          match. For matching against the HTTP request's
                                          authority, use a headerMatch with the header
                                          name ":authority". For matching a request's
                                          method, use the headerName ":method".
                                        type: string
                                      invertMatch:
                                        description: If set to false, the headerMatch
                                          is considered a match if the match criteria
                                          above are met. If set to true, the headerMatch
                                          is considered a match if the match criteria
                                          above are NOT met. Defaults to false.
                                        type: boolean
                                      prefixMatch:
                                        description: The value of the header must
                                          start with the contents of prefixMatch.
                                          Only one of exactMatch, prefixMatch, suffixMatch,
                                          regexMatch, presentMatch or rangeMatch must
                                          be set.
                                        type: string
                                      presentMatch:
                                        description: A header with the contents of
                                          headerName must exist. The match takes place
                                          whether or not the request's header has
                                          a value or not. Only one of exactMatch,
                                          prefixMatch, suffixMatch, regexMatch, presentMatch
                                          or rangeMatch must be set.
                                        type: boolean
                                      rangeMatch:
                                        description: "The header value must be an
                                          integer and its value must be in the range
                                          specified in rangeMatch. If the header does
                                          not contain an integer, number or is empty,
                                          the match fails. For example for a range
                                          [-5, 0] \n * -3 will match * 0 will not
                                          match * 0.25 will not match * -3someString
                                          will not match. \n Only one of exactMatch,
                                          prefixMatch, suffixMatch, regexMatch, presentMatch
                                          or rangeMatch must be set."
                                        properties:
                                          rangeEnd:
                                            description: The end of the range (exclusive).
                                            format: int64
                                            type: integer
                                          rangeStart:
                                            description: The start of the range (inclusive).
                                            format: int64
                                            type: integer
                                        required:
                                        - rangeEnd
                                        - rangeStart
                                        type: object
                                      regexMatch:
                                        description: 'The value of the header must
                                          match the regular expression specified in
                                          regexMatch. For regular expression grammar,
                                          please see: en.cppreference.com/w/cpp/regex/ecmascript  For
                                          matching against a port specified in the
                                          HTTP request, use a headerMatch with headerName
                                          set to PORT and a regular expression that
                                          satisfies the RFC2616 Host header''s port
                                          specifier. Only one of exactMatch, prefixMatch,
                                          suffixMatch, regexMatch, presentMatch or
                                          rangeMatch must be set.'
                                        type: string
                                      suffixMatch:
                                        description: The value of the header must
                                          end with the contents of suffixMatch. Only
                                          one of exactMatch, prefixMatch, suffixMatch,
                                          regexMatch, presentMatch or rangeMatch must
                                          be set.
                                        type: string
                                    required:
                                    - headerName
                                    type: object
                                  type: array
                                ignoreCase:
                                  description: Specifies that prefixMatch and fullPathMatch
                                    matches are case sensitive. Defaults to false.
                                  type: boolean
                                metadataFilters:
                                  description: Opaque filter criteria used by Loadbalancer
                                    to restrict routing configuration to a limited
                                    set xDS compliant clients. In their xDS requests
                                    to Loadbalancer, xDS clients present node metadata.
                                    If a match takes place, the relevant routing configuration
                                    is made available to those proxies. For each metadataFilter
                                    in this list, if its filterMatchCriteria is set
                                    to MATCH_ANY, at least one of the filterLabels
                                    must match the corresponding label provided in
                                    the metadata. If its filterMatchCriteria is set
                                    to MATCH_ALL, then all of its filterLabels must
                                    match with corresponding labels in the provided
                                    metadata. metadataFilters specified here can be
                                    overrides those specified in ForwardingRule that
                                    refers to this UrlMap. metadataFilters only applies
                                    to Loadbalancers that have their loadBalancingScheme
                                    set to INTERNAL_SELF_MANAGED.
                                  items:
                                    properties:
                                      filterLabels:
                                        description: The list of label value pairs
                                          that must match labels in the provided metadata
                                          based on filterMatchCriteria  This list
                                          must not be empty and can have at the most
                                          64 entries.
                                        items:
                                          properties:
                                            name:
                                              description: Name of metadata label.
                                                The name can have a maximum length
                                                of 1024 characters and must be at
                                                least 1 character long.
                                              type: string
                                            value:
                                              description: The value of the label
                                                must match the specified value. value
                                                can have a maximum length of 1024
                                                characters.
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        maxItems: 64
                                        minItems: 1
                                        type: array
                                      filterMatchCriteria:
                                        description: "Specifies how individual filterLabel
                                          matches within the list of filterLabels
                                          contribute towards the overall metadataFilter
                                          match. Supported values are: \n * MATCH_ANY:
                                          At least one of the filterLabels must have
                                          a matching label in the provided metadata.
                                          * MATCH_ALL: All filterLabels must have
                                          matching labels in the provided metadata.
                                          Possible values: [\"MATCH_ALL\", \"MATCH_ANY\"]"
                                        type: string
                                    required:
                                    - filterLabels
                                    - filterMatchCriteria
                                    type: object
                                  type: array
                                prefixMatch:
                                  description: For satisfying the matchRule condition,
                                    the request's path must begin with the specified
                                    prefixMatch. prefixMatch must begin with a /.
                                    The value must be between 1 and 1024 characters.
                                    Only one of prefixMatch, fullPathMatch or regexMatch
                                    must be specified.
                                  type: string
                                queryParameterMatches:
                                  description: Specifies a list of query parameter
                                    match criteria, all of which must match corresponding
                                    query parameters in the request.
                                  items:
                                    properties:
                                      exactMatch:
                                        description: The queryParameterMatch matches
                                          if the value of the parameter exactly matches
                                          the contents of exactMatch. Only one of
                                          presentMatch, exactMatch and regexMatch
                                          must be set.
                                        type: string
                                      name:
                                        description: The name of the query parameter
                                          to match. The query parameter must exist
                                          in the request, in the absence of which
                                          the request match fails.
                                        type: string
                                      presentMatch:
                                        description: Specifies that the queryParameterMatch
                                          matches if the request contains the query
                                          parameter, irrespective of whether the parameter
                                          has a value or not. Only one of presentMatch,
                                          exactMatch and regexMatch must be set.
                                        type: boolean
                                      regexMatch:
                                        description: The queryParameterMatch matches
                                          if the value of the parameter matches the
                                          regular expression specified by regexMatch.
                                          For the regular expression grammar, please
                                          see en.cppreference.com/w/cpp/regex/ecmascript  Only
                                          one of presentMatch, exactMatch and regexMatch
                                          must be set.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                                regexMatch:
                                  description: For satisfying the matchRule condition,
                                    the path of the request must satisfy the regular
                                    expression specified in regexMatch after removing
                                    any query parameters and anchor supplied with
                                    the original URL. For regular expression grammar
                                    please see en.cppreference.com/w/cpp/regex/ecmascript  Only
                                    one of prefixMatch, fullPathMatch or regexMatch
                                    must be specified.
                                  type: string
                              type: object
                            type: array
                          priority:
                            description: "For routeRules within a given pathMatcher,
                              priority determines the order in which load balancer
                              will interpret routeRules. RouteRules are evaluated
                              in order of priority, from the lowest to highest number.
                              The priority of a rule decreases as its number increases
                              (1, 2, 3, N+1). The first rule that matches the request
                              is applied. \n You cannot configure two or more routeRules
                              with the same priority. Priority for each rule must
                              be set to a number between 0 and 2147483647 inclusive.
                              \n Priority numbers can have gaps, which enable you
                              to add or remove rules in the future without affecting
                              the rest of the rules. For example, 1, 2, 3, 4, 5, 9,
                              12, 16 is a valid series of priority numbers to which
                              you could add rules numbered from 6 to 8, 10 to 11,
                              and 13 to 15 in the future without any impact on existing
                              rules."
                            format: int64
                            type: integer
                          routeAction:
                            description: In response to a matching matchRule, the
                              load balancer performs advanced routing actions like
                              URL rewrites, header transformations, etc. prior to
                              forwarding the request to the selected backend. If  routeAction
                              specifies any weightedBackendServices, service must
                              not be set. Conversely if service is set, routeAction
                              cannot contain any  weightedBackendServices. Only one
                              of routeAction or urlRedirect must be set.
                            properties:
                              corsPolicy:
                                description: The specification for allowing client
                                  side cross-origin requests. Please see W3C Recommendation
                                  for Cross Origin Resource Sharing
                                properties:
                                  allowCredentials:
                                    description: In response to a preflight request,
                                      setting this to true indicates that the actual
                                      request can include user credentials. This translates
                                      to the Access- Control-Allow-Credentials header.
                                      Defaults to false.
                                    type: boolean
                                  allowHeaders:
                                    description: Specifies the content for the Access-Control-Allow-Headers
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  allowMethods:
                                    description: Specifies the content for the Access-Control-Allow-Methods
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  allowOriginRegexes:
                                    description: Specifies the regular expression
                                      patterns that match allowed origins. For regular
                                      expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
                                      An origin is allowed if it matches either allow_origins
                                      or allow_origin_regex.
                                    items:
                                      type: string
                                    type: array
                                  allowOrigins:
                                    description: Specifies the list of origins that
                                      will be allowed to do CORS requests. An origin
                                      is allowed if it matches either allow_origins
                                      or allow_origin_regex.
                                    items:
                                      type: string
                                    type: array
                                  disabled:
                                    description: If true, specifies the CORS policy
                                      is disabled. which indicates that the CORS policy
                                      is in effect. Defaults to false.
                                    type: boolean
                                  exposeHeaders:
                                    description: Specifies the content for the Access-Control-Expose-Headers
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  maxAge:
                                    description: Specifies how long the results of
                                      a preflight request can be cached. This translates
                                      to the content for the Access-Control-Max-Age
                                      header.
                                    format: int64
                                    type: integer
                                type: object
                              faultInjectionPolicy:
                                description: The specification for fault injection
                                  introduced into traffic to test the resiliency of
                                  clients to backend service failure. As part of fault
                                  injection, when clients send requests to a backend
                                  service, delays can be introduced by Loadbalancer
                                  on a percentage of requests before sending those
                                  request to the backend service. Similarly requests
                                  from clients can be aborted by the Loadbalancer
                                  for a percentage of requests. timeout and retry_policy
                                  will be ignored by clients that are configured with
                                  a fault_injection_policy.
                                properties:
                                  abort:
                                    description: The specification for how client
                                      requests are aborted as part of fault injection.
                                    properties:
                                      httpStatus:
                                        description: The HTTP status code used to
                                          abort the request. The value must be between
                                          200 and 599 inclusive.
                                        format: int64
                                        type: integer
                                      percentage:
                                        description: The percentage of traffic (connections/operations/requests)
                                          which will be aborted as part of fault injection.
                                          The value must be between 0.0 and 100.0
                                          inclusive.
                                        format: double
                                        type: number
                                    type: object
                                  delay:
                                    description: The specification for how client
                                      requests are delayed as part of fault injection,
                                      before being sent to a backend service.
                                    properties:
                                      fixedDelay:
                                        description: Specifies the value of the fixed
                                          delay interval.
                                        properties:
                                          nanos:
                                            description: Span of time that's a fraction
                                              of a second at nanosecond resolution.
                                              Durations less than one second are represented
                                              with a 0 'seconds' field and a positive
                                              'nanos' field. Must be from 0 to 999,999,999
                                              inclusive.
                                            format: int64
                                            type: integer
                                          seconds:
                                            description: Span of time at a resolution
                                              of a second. Must be from 0 to 315,576,000,000
                                              inclusive.
                                            type: string
                                        required:
                                        - seconds
                                        type: object
                                      percentage:
                                        description: The percentage of traffic (connections/operations/requests)
                                          on which delay will be introduced as part
                                          of fault injection. The value must be between
                                          0.0 and 100.0 inclusive.
                                        format: double
                                        type: number
                                    type: object
                                type: object
                              requestMirrorPolicy:
                                description: Specifies the policy on how requests
                                  intended for the route's backends are shadowed to
                                  a separate mirrored backend service. Loadbalancer
                                  does not wait for responses from the shadow service.
                                  Prior to sending traffic to the shadow service,
                                  the host / authority header is suffixed with -shadow.
                                properties:
                                  backendService:
                                    description: The RegionBackendService resource
                                      being mirrored to.
                                    type: string
                                required:
                                - backendService
                                type: object
                              retryPolicy:
                                description: Specifies the retry policy associated
                                  with this route.
                                properties:
                                  numRetries:
                                    description: Specifies the allowed number retries.
                                      This number must be > 0.
                                    format: int64
                                    type: integer
                                  perTryTimeout:
                                    description: Specifies a non-zero timeout per
                                      retry attempt.
                                    properties:
                                      nanos:
                                        description: Span of time that's a fraction
                                          of a second at nanosecond resolution. Durations
                                          less than one second are represented with
                                          a 0 'seconds' field and a positive 'nanos'
                                          field. Must be from 0 to 999,999,999 inclusive.
                                        format: int64
                                        type: integer
                                      seconds:
                                        description: Span of time at a resolution
                                          of a second. Must be from 0 to 315,576,000,000
                                          inclusive.
                                        type: string
                                    required:
                                    - seconds
                                    type: object
                                  retryConditions:
                                    description: "Specifies one or more conditions
                                      when this retry rule applies. Valid values are:
                                      \n * 5xx: Loadbalancer will attempt a retry
                                      if the backend service responds with   any 5xx
                                      response code, or if the backend service does
                                      not respond at all,   example: disconnects,
                                      reset, read timeout, connection failure, and
                                      refused   streams. * gateway-error: Similar
                                      to 5xx, but only applies to response codes   502,
                                      503 or 504. * connect-failure: Loadbalancer
                                      will retry on failures   connecting to backend
                                      services, for example due to connection timeouts.
                                      * retriable-4xx: Loadbalancer will retry for
                                      retriable 4xx response codes.   Currently the
                                      only retriable error supported is 409. * refused-stream:
                                      Loadbalancer will retry if the backend service
                                      resets the stream with a   REFUSED_STREAM error
                                      code. This reset type indicates that it is safe
                                      to retry. * cancelled: Loadbalancer will retry
                                      if the gRPC status code in the response   header
                                      is set to cancelled * deadline-exceeded: Loadbalancer
                                      will retry if the   gRPC status code in the
                                      response header is set to deadline-exceeded
                                      * resource-exhausted: Loadbalancer will retry
                                      if the gRPC status code in the response   header
                                      is set to resource-exhausted * unavailable:
                                      Loadbalancer will retry if the gRPC status code
                                      in   the response header is set to unavailable"
                                    items:
                                      type: string
                                    type: array
                                required:
                                - numRetries
                                type: object
                              timeout:
                                description: Specifies the timeout for the selected
                                  route. Timeout is computed from the time the request
                                  is has been fully processed (i.e. end-of-stream)
                                  up until the response has been completely processed.
                                  Timeout includes all retries. If not specified,
                                  the default value is 15 seconds.
                                properties:
                                  nanos:
                                    description: Span of time that's a fraction of
                                      a second at nanosecond resolution. Durations
                                      less than one second are represented with a
                                      0 'seconds' field and a positive 'nanos' field.
                                      Must be from 0 to 999,999,999 inclusive.
                                    format: int64
                                    type: integer
                                  seconds:
                                    description: Span of time at a resolution of a
                                      second. Must be from 0 to 315,576,000,000 inclusive.
                                    type: string
                                required:
                                - seconds
                                type: object
                              urlRewrite:
                                description: The spec to modify the URL of the request,
                                  prior to forwarding the request to the matched service
                                properties:
                                  hostRewrite:
                                    description: Prior to forwarding the request to
                                      the selected service, the request's host header
                                      is replaced with contents of hostRewrite. The
                                      value must be between 1 and 255 characters.
                                    type: string
                                  pathPrefixRewrite:
                                    description: Prior to forwarding the request to
                                      the selected backend service, the matching portion
                                      of the request's path is replaced by pathPrefixRewrite.
                                      The value must be between 1 and 1024 characters.
                                    type: string
                                type: object
                              weightedBackendServices:
                                description: A list of weighted backend services to
                                  send traffic to when a route match occurs. The weights
                                  determine the fraction of traffic that flows to
                                  their corresponding backend service. If all traffic
                                  needs to go to a single backend service, there must
                                  be one  weightedBackendService with weight set to
                                  a non 0 number. Once a backendService is identified
                                  and before forwarding the request to the backend
                                  service, advanced routing actions like Url rewrites
                                  and header transformations are applied depending
                                  on additional settings specified in this HttpRouteAction.
                                items:
                                  properties:
                                    backendService:
                                      description: The default RegionBackendService
                                        resource. Before forwarding the request to
                                        backendService, the loadbalancer applies any
                                        relevant headerActions specified as part of
                                        this backendServiceWeight.
                                      type: string
                                    headerAction:
                                      description: Specifies changes to request and
                                        response headers that need to take effect
                                        for the selected backendService. headerAction
                                        specified here take effect before headerAction
                                        in the enclosing HttpRouteRule, PathMatcher
                                        and UrlMap.
                                      properties:
                                        requestHeadersToAdd:
                                          description: Headers to add to a matching
                                            request prior to forwarding the request
                                            to the backendService.
                                          items:
                                            properties:
                                              headerName:
                                                description: The name of the header.
                                                type: string
                                              headerValue:
                                                description: The value of the header
                                                  to add.
                                                type: string
                                              replace:
                                                description: If false, headerValue
                                                  is appended to any values that already
                                                  exist for the header. If true, headerValue
                                                  is set for the header, discarding
                                                  any values that were set for that
                                                  header.
                                                type: boolean
                                            required:
                                            - headerName
                                            - headerValue
                                            - replace
                                            type: object
                                          type: array
                                        requestHeadersToRemove:
                                          description: A list of header names for
                                            headers that need to be removed from the
                                            request prior to forwarding the request
                                            to the backendService.
                                          items:
                                            type: string
                                          type: array
                                        responseHeadersToAdd:
                                          description: Headers to add the response
                                            prior to sending the response back to
                                            the client.
                                          items:
                                            properties:
                                              headerName:
                                                description: The name of the header.
                                                type: string
                                              headerValue:
                                                description: The value of the header
                                                  to add.
                                                type: string
                                              replace:
                                                description: If false, headerValue
                                                  is appended to any values that already
                                                  exist for the header. If true, headerValue
                                                  is set for the header, discarding
                                                  any values that were set for that
                                                  header.
                                                type: boolean
                                            required:
                                            - headerName
                                            - headerValue
                                            - replace
                                            type: object
                                          type: array
                                        responseHeadersToRemove:
                                          description: A list of header names for
                                            headers that need to be removed from the
                                            response prior to sending the response
                                            back to the client.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    weight:
                                      description: Specifies the fraction of traffic
                                        sent to backendService, computed as weight
                                        / (sum of all weightedBackendService weights
                                        in routeAction) . The selection of a backend
                                        service is determined only for new traffic.
                                        Once a user's request has been directed to
                                        a backendService, subsequent requests will
                                        be sent to the same backendService as determined
                                        by the BackendService's session affinity policy.
                                        The value must be between 0 and 1000
                                      format: int64
                                      type: integer
                                  required:
                                  - backendService
                                  - weight
                                  type: object
                                type: array
                            type: object
                          service:
                            description: The region backend service resource to which
                              traffic is directed if this rule is matched. If routeAction
                              is additionally specified, advanced routing actions
                              like URL Rewrites, etc. take effect prior to sending
                              the request to the backend. However, if service is specified,
                              routeAction cannot contain any weightedBackendService
                              s. Conversely, if routeAction specifies any weightedBackendServices,
                              service must not be specified. Only one of urlRedirect,
                              service or routeAction.weightedBackendService must be
                              set.
                            type: string
                          urlRedirect:
                            description: When this rule is matched, the request is
                              redirected to a URL specified by urlRedirect. If urlRedirect
                              is specified, service or routeAction must not be set.
                            properties:
                              hostRedirect:
                                description: The host that will be used in the redirect
                                  response instead of the one that was supplied in
                                  the request. The value must be between 1 and 255
                                  characters.
                                type: string
                              httpsRedirect:
                                description: If set to true, the URL scheme in the
                                  redirected request is set to https. If set to false,
                                  the URL scheme of the redirected request will remain
                                  the same as that of the request. This must only
                                  be set for UrlMaps used in TargetHttpProxys. Setting
                                  this true for TargetHttpsProxy is not permitted.
                                  The default is set to false.
                                type: boolean
                              pathRedirect:
                                description: The path that will be used in the redirect
                                  response instead of the one that was supplied in
                                  the request. pathRedirect cannot be supplied together
                                  with prefixRedirect. Supply one alone or neither.
                                  If neither is supplied, the path of the original
                                  request will be used for the redirect. The value
                                  must be between 1 and 1024 characters.
                                type: string
                              prefixRedirect:
                                description: The prefix that replaces the prefixMatch
                                  specified in the HttpRouteRuleMatch, retaining the
                                  remaining portion of the URL before redirecting
                                  the request. prefixRedirect cannot be supplied together
                                  with pathRedirect. Supply one alone or neither.
                                  If neither is supplied, the path of the original
                                  request will be used for the redirect. The value
                                  must be between 1 and 1024 characters.
                                type: string
                              redirectResponseCode:
                                description: "The HTTP Status code to use for this
                                  RedirectAction. Supported values are: \n * MOVED_PERMANENTLY_DEFAULT,
                                  which is the default value and corresponds to 301.
                                  \n * FOUND, which corresponds to 302. \n * SEE_OTHER
                                  which corresponds to 303. \n * TEMPORARY_REDIRECT,
                                  which corresponds to 307. In this case, the request
                                  method will be retained. \n * PERMANENT_REDIRECT,
                                  which corresponds to 308. In this case, the request
                                  method will be retained. Possible values: [\"FOUND\",
                                  \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\",
                                  \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                                type: string
                              stripQuery:
                                description: If set to true, any accompanying query
                                  portion of the original URL is removed prior to
                                  redirecting the request. If set to false, the query
                                  portion of the original URL is retained. The default
                                  value is false.
                                type: boolean
                            type: object
                        required:
                        - priority
                        type: object
                      type: array
                  required:
                  - name
                  type: object
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: The Region in which the url map should reside. If it
                  is not provided, the provider region is used.
                type: string
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              test:
                description: The list of expected URL mappings. Requests to update
                  this UrlMap will succeed only if all of the test cases pass.
                items:
                  properties:
                    description:
                      description: Description of this test case.
                      type: string
                    host:
                      description: Host portion of the URL.
                      type: string
                    path:
                      description: Path portion of the URL.
                      type: string
                    service:
                      description: A reference to expected RegionBackendService resource
                        the given URL should be mapped to.
                      type: string
                  required:
                  - host
                  - path
                  - service
                  type: object
                type: array
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: targettcpproxies.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: TargetTcpProxy
    listKind: TargetTcpProxyList
    plural: targettcpproxies
    singular: targettcpproxy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendService:
                description: A reference to the BackendService resource.
                type: string
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  backendService:
                    description: A reference to the BackendService resource.
                    type: string
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  proxyBind:
                    description: This field only applies when the forwarding rule
                      that references this target proxy has a loadBalancingScheme
                      set to INTERNAL_SELF_MANAGED.
                    type: boolean
                  proxyHeader:
                    description: 'Specifies the type of proxy header to append before
                      sending data to the backend. Default value: "NONE" Possible
                      values: ["NONE", "PROXY_V1"]'
                    type: string
                  proxyID:
                    description: The unique identifier for the resource.
                    format: int64
                    type: integer
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - backendService
                - name
                - providerRef
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              proxyBind:
                description: This field only applies when the forwarding rule that
                  references this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
                type: boolean
              proxyHeader:
                description: 'Specifies the type of proxy header to append before
                  sending data to the backend. Default value: "NONE" Possible values:
                  ["NONE", "PROXY_V1"]'
                type: string
              proxyID:
                description: The unique identifier for the resource.
                format: int64
                type: integer
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - backendService
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: vpntunnels.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: VpnTunnel
    listKind: VpnTunnelList
    plural: vpntunnels
    singular: vpntunnel
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              detailedStatus:
                description: Detailed status message for the VPN tunnel.
                type: string
              id:
                type: string
              ikeVersion:
                description: IKE protocol version to use when establishing the VPN
                  tunnel with peer VPN gateway. Acceptable IKE versions are 1 or 2.
                  Default version is 2.
                format: int64
                type: integer
              kubeformOutput:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  detailedStatus:
                    description: Detailed status message for the VPN tunnel.
                    type: string
                  id:
                    type: string
                  ikeVersion:
                    description: IKE protocol version to use when establishing the
                      VPN tunnel with peer VPN gateway. Acceptable IKE versions are
                      1 or 2. Default version is 2.
                    format: int64
                    type: integer
                  localTrafficSelector:
                    description: Local traffic selector to use when establishing the
                      VPN tunnel with peer VPN gateway. The value should be a CIDR
                      formatted string, for example '192.168.0.0/16'. The ranges should
                      be disjoint. Only IPv4 is supported.
                    items:
                      type: string
                    type: array
                  name:
                    description: Name of the resource. The name must be 1-63 characters
                      long, and comply with RFC1035. Specifically, the name must be
                      1-63 characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  peerExternalGateway:
                    description: URL of the peer side external VPN gateway to which
                      this VPN tunnel is connected.
                    type: string
                  peerExternalGatewayInterface:
                    description: The interface ID of the external VPN gateway to which
                      this VPN tunnel is connected.
                    format: int64
                    type: integer
                  peerGcpGateway:
                    description: URL of the peer side HA GCP VPN gateway to which
                      this VPN tunnel is connected. If provided, the VPN tunnel will
                      automatically use the same vpn_gateway_interface ID in the peer
                      GCP VPN gateway. This field must reference a 'google_compute_ha_vpn_gateway'
                      resource.
                    type: string
                  peerIP:
                    description: IP address of the peer VPN gateway. Only IPv4 is
                      supported.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: The region where the tunnel is located. If unset,
                      is set to the region of 'target_vpn_gateway'.
                    type: string
                  remoteTrafficSelector:
                    description: Remote traffic selector to use when establishing
                      the VPN tunnel with peer VPN gateway. The value should be a
                      CIDR formatted string, for example '192.168.0.0/16'. The ranges
                      should be disjoint. Only IPv4 is supported.
                    items:
                      type: string
                    type: array
                  router:
                    description: URL of router resource to be used for dynamic routing.
                    type: string
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  sharedSecretHash:
                    description: Hash of the shared secret.
                    type: string
                  targetVPNGateway:
                    description: URL of the Target VPN gateway with which this VPN
                      tunnel is associated.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  tunnelID:
                    description: The unique identifier for the resource. This identifier
                      is defined by the server.
                    type: string
                  vpnGateway:
                    description: URL of the VPN gateway with which this VPN tunnel
                      is associated. This must be used if a High Availability VPN
                      gateway resource is created. This field must reference a 'google_compute_ha_vpn_gateway'
                      resource.
                    type: string
                  vpnGatewayInterface:
                    description: The interface ID of the VPN gateway with which this
                      VPN tunnel is associated.
                    format: int64
                    type: integer
                required:
                - name
                - providerRef
                type: object
              localTrafficSelector:
                description: Local traffic selector to use when establishing the VPN
                  tunnel with peer VPN gateway. The value should be a CIDR formatted
                  string, for example '192.168.0.0/16'. The ranges should be disjoint.
                  Only IPv4 is supported.
                items:
                  type: string
                type: array
              name:
                description: Name of the resource. The name must be 1-63 characters
                  long, and comply with RFC1035. Specifically, the name must be 1-63
                  characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              peerExternalGateway:
                description: URL of the peer side external VPN gateway to which this
                  VPN tunnel is connected.
                type: string
              peerExternalGatewayInterface:
                description: The interface ID of the external VPN gateway to which
                  this VPN tunnel is connected.
                format: int64
                type: integer
              peerGcpGateway:
                description: URL of the peer side HA GCP VPN gateway to which this
                  VPN tunnel is connected. If provided, the VPN tunnel will automatically
                  use the same vpn_gateway_interface ID in the peer GCP VPN gateway.
                  This field must reference a 'google_compute_ha_vpn_gateway' resource.
                type: string
              peerIP:
                description: IP address of the peer VPN gateway. Only IPv4 is supported.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: The region where the tunnel is located. If unset, is
                  set to the region of 'target_vpn_gateway'.
                type: string
              remoteTrafficSelector:
                description: Remote traffic selector to use when establishing the
                  VPN tunnel with peer VPN gateway. The value should be a CIDR formatted
                  string, for example '192.168.0.0/16'. The ranges should be disjoint.
                  Only IPv4 is supported.
                items:
                  type: string
                type: array
              router:
                description: URL of router resource to be used for dynamic routing.
                type: string
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              sharedSecretHash:
                description: Hash of the shared secret.
                type: string
              targetVPNGateway:
                description: URL of the Target VPN gateway with which this VPN tunnel
                  is associated.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              tunnelID:
                description: The unique identifier for the resource. This identifier
                  is defined by the server.
                type: string
              vpnGateway:
                description: URL of the VPN gateway with which this VPN tunnel is
                  associated. This must be used if a High Availability VPN gateway
                  resource is created. This field must reference a 'google_compute_ha_vpn_gateway'
                  resource.
                type: string
              vpnGatewayInterface:
                description: The interface ID of the VPN gateway with which this VPN
                  tunnel is associated.
                format: int64
                type: integer
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: vpngateways.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: VpnGateway
    listKind: VpnGatewayList
    plural: vpngateways
    singular: vpngateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              gatewayID:
                description: The unique identifier for the resource.
                format: int64
                type: integer
              id:
                type: string
              kubeformOutput:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  gatewayID:
                    description: The unique identifier for the resource.
                    format: int64
                    type: integer
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035.  Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  network:
                    description: The network this VPN gateway is accepting traffic
                      for.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: The region this gateway should sit in.
                    type: string
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - network
                - providerRef
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.  Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              network:
                description: The network this VPN gateway is accepting traffic for.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: The region this gateway should sit in.
                type: string
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - name
            - network
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: regiontargethttpsproxies.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RegionTargetHTTPSProxy
    listKind: RegionTargetHTTPSProxyList
    plural: regiontargethttpsproxies
    singular: regiontargethttpsproxy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  proxyID:
                    description: The unique identifier for the resource.
                    format: int64
                    type: integer
                  region:
                    description: The Region in which the created target https proxy
                      should reside. If it is not provided, the provider region is
                      used.
                    type: string
                  selfLink:
                    type: string
                  sslCertificates:
                    description: A list of RegionSslCertificate resources that are
                      used to authenticate connections between users and the load
                      balancer. Currently, exactly one SSL certificate must be specified.
                    items:
                      type: string
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  urlMap:
                    description: A reference to the RegionUrlMap resource that defines
                      the mapping from URL to the RegionBackendService.
                    type: string
                required:
                - name
                - providerRef
                - sslCertificates
                - urlMap
                type: object
              name:
                description: Name of the resource. Provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035. Specifically, the name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              proxyID:
                description: The unique identifier for the resource.
                format: int64
                type: integer
              region:
                description: The Region in which the created target https proxy should
                  reside. If it is not provided, the provider region is used.
                type: string
              selfLink:
                type: string
              sslCertificates:
                description: A list of RegionSslCertificate resources that are used
                  to authenticate connections between users and the load balancer.
                  Currently, exactly one SSL certificate must be specified.
                items:
                  type: string
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              urlMap:
                description: A reference to the RegionUrlMap resource that defines
                  the mapping from URL to the RegionBackendService.
                type: string
            required:
            - name
            - providerRef
            - sslCertificates
            - urlMap
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: regionautoscalers.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RegionAutoscaler
    listKind: RegionAutoscalerList
    plural: regionautoscalers
    singular: regionautoscaler
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              autoscalingPolicy:
                description: "The configuration parameters for the autoscaling algorithm.
                  You can define one or more of the policies for an autoscaler: cpuUtilization,
                  customMetricUtilizations, and loadBalancingUtilization. \n If none
                  of these are specified, the default will be to autoscale based on
                  cpuUtilization to 0.6 or 60%."
                properties:
                  cooldownPeriod:
                    description: "The number of seconds that the autoscaler should
                      wait before it starts collecting information from a new instance.
                      This prevents the autoscaler from collecting information when
                      the instance is initializing, during which the collected usage
                      would not be reliable. The default time autoscaler waits is
                      60 seconds. \n Virtual machine initialization times might vary
                      because of numerous factors. We recommend that you test how
                      long an instance may take to initialize. To do this, create
                      an instance and time the startup process."
                    format: int64
                    type: integer
                  cpuUtilization:
                    description: Defines the CPU utilization policy that allows the
                      autoscaler to scale based on the average CPU utilization of
                      a managed instance group.
                    properties:
                      target:
                        description: "The target CPU utilization that the autoscaler
                          should maintain. Must be a float value in the range (0,
                          1]. If not specified, the default is 0.6. \n If the CPU
                          level is below the target utilization, the autoscaler scales
                          down the number of instances until it reaches the minimum
                          number of instances you specified or until the average CPU
                          of your instances reaches the target utilization. \n If
                          the average CPU is above the target utilization, the autoscaler
                          scales up until it reaches the maximum number of instances
                          you specified or until the average utilization reaches the
                          target utilization."
                        format: double
                        type: number
                    required:
                    - target
                    type: object
                  loadBalancingUtilization:
                    description: Configuration parameters of autoscaling based on
                      a load balancer.
                    properties:
                      target:
                        description: Fraction of backend capacity utilization (set
                          in HTTP(s) load balancing configuration) that autoscaler
                          should maintain. Must be a positive float value. If not
                          defined, the default is 0.8.
                        format: double
                        type: number
                    required:
                    - target
                    type: object
                  maxReplicas:
                    description: The maximum number of instances that the autoscaler
                      can scale up to. This is required when creating or updating
                      an autoscaler. The maximum number of replicas should not be
                      lower than minimal number of replicas.
                    format: int64
                    type: integer
                  metric:
                    description: Configuration parameters of autoscaling based on
                      a custom metric.
                    items:
                      properties:
                        name:
                          description: "The identifier (type) of the Stackdriver Monitoring
                            metric. The metric cannot have negative values. \n The
                            metric must have a value type of INT64 or DOUBLE."
                          type: string
                        target:
                          description: "The target value of the metric that autoscaler
                            should maintain. This must be a positive value. A utilization
                            metric scales number of virtual machines handling requests
                            to increase or decrease proportionally to the metric.
                            \n For example, a good metric to use as a utilizationTarget
                            is www.googleapis.com/compute/instance/network/received_bytes_count.
                            The autoscaler will work to keep this value constant for
                            each of the instances."
                          format: double
                          type: number
                        type:
                          description: 'Defines how target utilization value is expressed
                            for a Stackdriver Monitoring metric. Possible values:
                            ["GAUGE", "DELTA_PER_SECOND", "DELTA_PER_MINUTE"]'
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  minReplicas:
                    description: The minimum number of replicas that the autoscaler
                      can scale down to. This cannot be less than 0. If not provided,
                      autoscaler will choose a default value depending on maximum
                      number of instances allowed.
                    format: int64
                    type: integer
                  mode:
                    description: 'Defines operating mode for this policy. Default
                      value: "ON" Possible values: ["OFF", "ONLY_UP", "ON"]'
                    type: string
                  scaleInControl:
                    description: Defines scale in controls to reduce the risk of response
                      latency and outages due to abrupt scale-in events
                    properties:
                      maxScaledInReplicas:
                        description: A nested object resource
                        properties:
                          fixed:
                            description: Specifies a fixed number of VM instances.
                              This must be a positive integer.
                            format: int64
                            type: integer
                          percent:
                            description: Specifies a percentage of instances between
                              0 to 100%, inclusive. For example, specify 80 for 80%.
                            format: int64
                            type: integer
                        type: object
                      timeWindowSec:
                        description: How long back autoscaling should look when computing
                          recommendations to include directives regarding slower scale
                          down, as described above.
                        format: int64
                        type: integer
                    type: object
                required:
                - maxReplicas
                - minReplicas
                type: object
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              description:
                description: An optional description of this resource.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  autoscalingPolicy:
                    description: "The configuration parameters for the autoscaling
                      algorithm. You can define one or more of the policies for an
                      autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization.
                      \n If none of these are specified, the default will be to autoscale
                      based on cpuUtilization to 0.6 or 60%."
                    properties:
                      cooldownPeriod:
                        description: "The number of seconds that the autoscaler should
                          wait before it starts collecting information from a new
                          instance. This prevents the autoscaler from collecting information
                          when the instance is initializing, during which the collected
                          usage would not be reliable. The default time autoscaler
                          waits is 60 seconds. \n Virtual machine initialization times
                          might vary because of numerous factors. We recommend that
                          you test how long an instance may take to initialize. To
                          do this, create an instance and time the startup process."
                        format: int64
                        type: integer
                      cpuUtilization:
                        description: Defines the CPU utilization policy that allows
                          the autoscaler to scale based on the average CPU utilization
                          of a managed instance group.
                        properties:
                          target:
                            description: "The target CPU utilization that the autoscaler
                              should maintain. Must be a float value in the range
                              (0, 1]. If not specified, the default is 0.6. \n If
                              the CPU level is below the target utilization, the autoscaler
                              scales down the number of instances until it reaches
                              the minimum number of instances you specified or until
                              the average CPU of your instances reaches the target
                              utilization. \n If the average CPU is above the target
                              utilization, the autoscaler scales up until it reaches
                              the maximum number of instances you specified or until
                              the average utilization reaches the target utilization."
                            format: double
                            type: number
                        required:
                        - target
                        type: object
                      loadBalancingUtilization:
                        description: Configuration parameters of autoscaling based
                          on a load balancer.
                        properties:
                          target:
                            description: Fraction of backend capacity utilization
                              (set in HTTP(s) load balancing configuration) that autoscaler
                              should maintain. Must be a positive float value. If
                              not defined, the default is 0.8.
                            format: double
                            type: number
                        required:
                        - target
                        type: object
                      maxReplicas:
                        description: The maximum number of instances that the autoscaler
                          can scale up to. This is required when creating or updating
                          an autoscaler. The maximum number of replicas should not
                          be lower than minimal number of replicas.
                        format: int64
                        type: integer
                      metric:
                        description: Configuration parameters of autoscaling based
                          on a custom metric.
                        items:
                          properties:
                            name:
                              description: "The identifier (type) of the Stackdriver
                                Monitoring metric. The metric cannot have negative
                                values. \n The metric must have a value type of INT64
                                or DOUBLE."
                              type: string
                            target:
                              description: "The target value of the metric that autoscaler
                                should maintain. This must be a positive value. A
                                utilization metric scales number of virtual machines
                                handling requests to increase or decrease proportionally
                                to the metric. \n For example, a good metric to use
                                as a utilizationTarget is www.googleapis.com/compute/instance/network/received_bytes_count.
                                The autoscaler will work to keep this value constant
                                for each of the instances."
                              format: double
                              type: number
                            type:
                              description: 'Defines how target utilization value is
                                expressed for a Stackdriver Monitoring metric. Possible
                                values: ["GAUGE", "DELTA_PER_SECOND", "DELTA_PER_MINUTE"]'
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      minReplicas:
                        description: The minimum number of replicas that the autoscaler
                          can scale down to. This cannot be less than 0. If not provided,
                          autoscaler will choose a default value depending on maximum
                          number of instances allowed.
                        format: int64
                        type: integer
                      mode:
                        description: 'Defines operating mode for this policy. Default
                          value: "ON" Possible values: ["OFF", "ONLY_UP", "ON"]'
                        type: string
                      scaleInControl:
                        description: Defines scale in controls to reduce the risk
                          of response latency and outages due to abrupt scale-in events
                        properties:
                          maxScaledInReplicas:
                            description: A nested object resource
                            properties:
                              fixed:
                                description: Specifies a fixed number of VM instances.
                                  This must be a positive integer.
                                format: int64
                                type: integer
                              percent:
                                description: Specifies a percentage of instances between
                                  0 to 100%, inclusive. For example, specify 80 for
                                  80%.
                                format: int64
                                type: integer
                            type: object
                          timeWindowSec:
                            description: How long back autoscaling should look when
                              computing recommendations to include directives regarding
                              slower scale down, as described above.
                            format: int64
                            type: integer
                        type: object
                    required:
                    - maxReplicas
                    - minReplicas
                    type: object
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description of this resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource. The name must be 1-63 characters
                      long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: URL of the region where the instance group resides.
                    type: string
                  selfLink:
                    type: string
                  target:
                    description: URL of the managed instance group that this autoscaler
                      will scale.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - autoscalingPolicy
                - name
                - providerRef
                - target
                type: object
              name:
                description: Name of the resource. The name must be 1-63 characters
                  long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                  which means the first character must be a lowercase letter, and
                  all following characters must be a dash, lowercase letter, or digit,
                  except the last character, which cannot be a dash.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: URL of the region where the instance group resides.
                type: string
              selfLink:
                type: string
              target:
                description: URL of the managed instance group that this autoscaler
                  will scale.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - autoscalingPolicy
            - name
            - providerRef
            - target
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
