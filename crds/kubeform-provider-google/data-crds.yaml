apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: catalogentrygroupiambindings.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: CatalogEntryGroupIamBinding
    listKind: CatalogEntryGroupIamBindingList
    plural: catalogentrygroupiambindings
    singular: catalogentrygroupiambinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              entryGroup:
                type: string
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  entryGroup:
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  members:
                    items:
                      type: string
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    type: string
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - entryGroup
                - members
                - providerRef
                - role
                type: object
              members:
                items:
                  type: string
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                type: string
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - entryGroup
            - members
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: catalogentries.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: CatalogEntry
    listKind: CatalogEntryList
    plural: catalogentries
    singular: catalogentry
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bigqueryDateShardedSpec:
                description: 'Specification for a group of BigQuery tables with name
                  pattern [prefix]YYYYMMDD. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding.'
                items:
                  properties:
                    dataset:
                      description: The Data Catalog resource name of the dataset entry
                        the current table belongs to, for example, projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}
                      type: string
                    shardCount:
                      description: Total number of shards.
                      format: int64
                      type: integer
                    tablePrefix:
                      description: The table name prefix of the shards. The name of
                        any given shard is [tablePrefix]YYYYMMDD, for example, for
                        shard MyTable20180101, the tablePrefix is MyTable.
                      type: string
                  type: object
                type: array
              bigqueryTableSpec:
                description: Specification that applies to a BigQuery table. This
                  is only valid on entries of type TABLE.
                items:
                  properties:
                    tableSourceType:
                      description: The table source type.
                      type: string
                    tableSpec:
                      description: Spec of a BigQuery table. This field should only
                        be populated if tableSourceType is BIGQUERY_TABLE.
                      items:
                        properties:
                          groupedEntry:
                            description: If the table is a dated shard, i.e., with
                              name pattern [prefix]YYYYMMDD, groupedEntry is the Data
                              Catalog resource name of the date sharded grouped entry,
                              for example, projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}.
                              Otherwise, groupedEntry is empty.
                            type: string
                        type: object
                      type: array
                    viewSpec:
                      description: Table view specification. This field should only
                        be populated if tableSourceType is BIGQUERY_VIEW.
                      items:
                        properties:
                          viewQuery:
                            description: The query that defines the table view.
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              description:
                description: Entry description, which can consist of several sentences
                  or paragraphs that describe entry contents.
                type: string
              displayName:
                description: Display information such as title and description. A
                  short name to identify the entry, for example, "Analytics Data -
                  Jan 2011".
                type: string
              entryGroup:
                description: The name of the entry group this entry is in.
                type: string
              entryID:
                description: The id of the entry to create.
                type: string
              gcsFilesetSpec:
                description: Specification that applies to a Cloud Storage fileset.
                  This is only valid on entries of type FILESET.
                properties:
                  filePatterns:
                    description: "Patterns to identify a set of files in Google Cloud
                      Storage. See [Cloud Storage documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames)
                      for more information. Note that bucket wildcards are currently
                      not supported. Examples of valid filePatterns: \n * gs://bucket_name/dir/*:
                      matches all files within bucket_name/dir directory. * gs://bucket_name/dir/**:
                      matches all files in bucket_name/dir spanning all subdirectories.
                      * gs://bucket_name/file*: matches files prefixed by file in
                      bucket_name * gs://bucket_name/??.txt: matches files with two
                      characters followed by .txt in bucket_name * gs://bucket_name/[aeiou].txt:
                      matches files that contain a single vowel character followed
                      by .txt in bucket_name * gs://bucket_name/[a-m].txt: matches
                      files that contain a, b, ... or m followed by .txt in bucket_name
                      * gs://bucket_name/a/*/b: matches all files in bucket_name that
                      match a/*/b pattern, such as a/c/b, a/d/b * gs://another_bucket/a.txt:
                      matches gs://another_bucket/a.txt"
                    items:
                      type: string
                    type: array
                  sampleGcsFileSpecs:
                    description: Sample files contained in this fileset, not all files
                      contained in this fileset are represented here.
                    items:
                      properties:
                        filePath:
                          description: The full file path
                          type: string
                        sizeBytes:
                          description: The size of the file, in bytes.
                          format: int64
                          type: integer
                      type: object
                    type: array
                required:
                - filePatterns
                type: object
              id:
                type: string
              integratedSystem:
                description: This field indicates the entry's source system that Data
                  Catalog integrates with, such as BigQuery or Pub/Sub.
                type: string
              kubeformOutput:
                properties:
                  bigqueryDateShardedSpec:
                    description: 'Specification for a group of BigQuery tables with
                      name pattern [prefix]YYYYMMDD. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding.'
                    items:
                      properties:
                        dataset:
                          description: The Data Catalog resource name of the dataset
                            entry the current table belongs to, for example, projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}
                          type: string
                        shardCount:
                          description: Total number of shards.
                          format: int64
                          type: integer
                        tablePrefix:
                          description: The table name prefix of the shards. The name
                            of any given shard is [tablePrefix]YYYYMMDD, for example,
                            for shard MyTable20180101, the tablePrefix is MyTable.
                          type: string
                      type: object
                    type: array
                  bigqueryTableSpec:
                    description: Specification that applies to a BigQuery table. This
                      is only valid on entries of type TABLE.
                    items:
                      properties:
                        tableSourceType:
                          description: The table source type.
                          type: string
                        tableSpec:
                          description: Spec of a BigQuery table. This field should
                            only be populated if tableSourceType is BIGQUERY_TABLE.
                          items:
                            properties:
                              groupedEntry:
                                description: If the table is a dated shard, i.e.,
                                  with name pattern [prefix]YYYYMMDD, groupedEntry
                                  is the Data Catalog resource name of the date sharded
                                  grouped entry, for example, projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}.
                                  Otherwise, groupedEntry is empty.
                                type: string
                            type: object
                          type: array
                        viewSpec:
                          description: Table view specification. This field should
                            only be populated if tableSourceType is BIGQUERY_VIEW.
                          items:
                            properties:
                              viewQuery:
                                description: The query that defines the table view.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: Entry description, which can consist of several sentences
                      or paragraphs that describe entry contents.
                    type: string
                  displayName:
                    description: Display information such as title and description.
                      A short name to identify the entry, for example, "Analytics
                      Data - Jan 2011".
                    type: string
                  entryGroup:
                    description: The name of the entry group this entry is in.
                    type: string
                  entryID:
                    description: The id of the entry to create.
                    type: string
                  gcsFilesetSpec:
                    description: Specification that applies to a Cloud Storage fileset.
                      This is only valid on entries of type FILESET.
                    properties:
                      filePatterns:
                        description: "Patterns to identify a set of files in Google
                          Cloud Storage. See [Cloud Storage documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames)
                          for more information. Note that bucket wildcards are currently
                          not supported. Examples of valid filePatterns: \n * gs://bucket_name/dir/*:
                          matches all files within bucket_name/dir directory. * gs://bucket_name/dir/**:
                          matches all files in bucket_name/dir spanning all subdirectories.
                          * gs://bucket_name/file*: matches files prefixed by file
                          in bucket_name * gs://bucket_name/??.txt: matches files
                          with two characters followed by .txt in bucket_name * gs://bucket_name/[aeiou].txt:
                          matches files that contain a single vowel character followed
                          by .txt in bucket_name * gs://bucket_name/[a-m].txt: matches
                          files that contain a, b, ... or m followed by .txt in bucket_name
                          * gs://bucket_name/a/*/b: matches all files in bucket_name
                          that match a/*/b pattern, such as a/c/b, a/d/b * gs://another_bucket/a.txt:
                          matches gs://another_bucket/a.txt"
                        items:
                          type: string
                        type: array
                      sampleGcsFileSpecs:
                        description: Sample files contained in this fileset, not all
                          files contained in this fileset are represented here.
                        items:
                          properties:
                            filePath:
                              description: The full file path
                              type: string
                            sizeBytes:
                              description: The size of the file, in bytes.
                              format: int64
                              type: integer
                          type: object
                        type: array
                    required:
                    - filePatterns
                    type: object
                  id:
                    type: string
                  integratedSystem:
                    description: This field indicates the entry's source system that
                      Data Catalog integrates with, such as BigQuery or Pub/Sub.
                    type: string
                  linkedResource:
                    description: 'The resource this metadata entry refers to. For
                      Google Cloud Platform resources, linkedResource is the full
                      name of the resource. For example, the linkedResource for a
                      table resource from BigQuery is: //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId
                      Output only when Entry is of type in the EntryType enum. For
                      entries with userSpecifiedType, this field is optional and defaults
                      to an empty string.'
                    type: string
                  name:
                    description: 'The Data Catalog resource name of the entry in URL
                      format. Example: projects/{project_id}/locations/{location}/entryGroups/{entryGroupId}/entries/{entryId}.
                      Note that this Entry and its child resources may not actually
                      be stored in the location in this name.'
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  schema:
                    description: Schema of the entry (e.g. BigQuery, GoogleSQL, Avro
                      schema), as a json string. An entry might not have any schema
                      attached to it. See https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries#schema
                      for what fields this schema can contain.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    description: 'The type of the entry. Only used for Entries with
                      types in the EntryType enum. Currently, only FILESET enum value
                      is allowed. All other entries created through Data Catalog must
                      use userSpecifiedType. Possible values: ["FILESET"]'
                    type: string
                  userSpecifiedSystem:
                    description: This field indicates the entry's source system that
                      Data Catalog does not integrate with. userSpecifiedSystem strings
                      must begin with a letter or underscore and can only contain
                      letters, numbers, and underscores; are case insensitive; must
                      be at least 1 character and at most 64 characters long.
                    type: string
                  userSpecifiedType:
                    description: Entry type if it does not fit any of the input-allowed
                      values listed in EntryType enum above. When creating an entry,
                      users should check the enum values first, if nothing matches
                      the entry to be created, then provide a custom value, for example
                      "my_special_type". userSpecifiedType strings must begin with
                      a letter or underscore and can only contain letters, numbers,
                      and underscores; are case insensitive; must be at least 1 character
                      and at most 64 characters long.
                    type: string
                required:
                - entryGroup
                - entryID
                - providerRef
                type: object
              linkedResource:
                description: 'The resource this metadata entry refers to. For Google
                  Cloud Platform resources, linkedResource is the full name of the
                  resource. For example, the linkedResource for a table resource from
                  BigQuery is: //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId
                  Output only when Entry is of type in the EntryType enum. For entries
                  with userSpecifiedType, this field is optional and defaults to an
                  empty string.'
                type: string
              name:
                description: 'The Data Catalog resource name of the entry in URL format.
                  Example: projects/{project_id}/locations/{location}/entryGroups/{entryGroupId}/entries/{entryId}.
                  Note that this Entry and its child resources may not actually be
                  stored in the location in this name.'
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              schema:
                description: Schema of the entry (e.g. BigQuery, GoogleSQL, Avro schema),
                  as a json string. An entry might not have any schema attached to
                  it. See https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries#schema
                  for what fields this schema can contain.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              type:
                description: 'The type of the entry. Only used for Entries with types
                  in the EntryType enum. Currently, only FILESET enum value is allowed.
                  All other entries created through Data Catalog must use userSpecifiedType.
                  Possible values: ["FILESET"]'
                type: string
              userSpecifiedSystem:
                description: This field indicates the entry's source system that Data
                  Catalog does not integrate with. userSpecifiedSystem strings must
                  begin with a letter or underscore and can only contain letters,
                  numbers, and underscores; are case insensitive; must be at least
                  1 character and at most 64 characters long.
                type: string
              userSpecifiedType:
                description: Entry type if it does not fit any of the input-allowed
                  values listed in EntryType enum above. When creating an entry, users
                  should check the enum values first, if nothing matches the entry
                  to be created, then provide a custom value, for example "my_special_type".
                  userSpecifiedType strings must begin with a letter or underscore
                  and can only contain letters, numbers, and underscores; are case
                  insensitive; must be at least 1 character and at most 64 characters
                  long.
                type: string
            required:
            - entryGroup
            - entryID
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: catalogentrygroups.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: CatalogEntryGroup
    listKind: CatalogEntryGroupList
    plural: catalogentrygroups
    singular: catalogentrygroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: Entry group description, which can consist of several
                  sentences or paragraphs that describe entry group contents.
                type: string
              displayName:
                description: A short name to identify the entry group, for example,
                  "analytics data - jan 2011".
                type: string
              entryGroupID:
                description: The id of the entry group to create. The id must begin
                  with a letter or underscore, contain only English letters, numbers
                  and underscores, and be at most 64 characters.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  description:
                    description: Entry group description, which can consist of several
                      sentences or paragraphs that describe entry group contents.
                    type: string
                  displayName:
                    description: A short name to identify the entry group, for example,
                      "analytics data - jan 2011".
                    type: string
                  entryGroupID:
                    description: The id of the entry group to create. The id must
                      begin with a letter or underscore, contain only English letters,
                      numbers and underscores, and be at most 64 characters.
                    type: string
                  id:
                    type: string
                  name:
                    description: 'The resource name of the entry group in URL format.
                      Example: projects/{project}/locations/{location}/entryGroups/{entryGroupId}'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: EntryGroup location region.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - entryGroupID
                - providerRef
                type: object
              name:
                description: 'The resource name of the entry group in URL format.
                  Example: projects/{project}/locations/{location}/entryGroups/{entryGroupId}'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: EntryGroup location region.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - entryGroupID
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: losspreventionjobtriggers.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: LossPreventionJobTrigger
    listKind: LossPreventionJobTriggerList
    plural: losspreventionjobtriggers
    singular: losspreventionjobtrigger
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: A description of the job trigger.
                type: string
              displayName:
                description: User set display name of the job trigger.
                type: string
              id:
                type: string
              inspectJob:
                description: Controls what and how to inspect for findings.
                properties:
                  actions:
                    description: A task to execute on the completion of a job.
                    items:
                      properties:
                        saveFindings:
                          description: Schedule for triggered jobs
                          properties:
                            outputConfig:
                              description: Information on where to store output
                              properties:
                                outputSchema:
                                  description: "Schema used for writing the findings
                                    for Inspect jobs. This field is only used for
                                    Inspect and must be unspecified for Risk jobs.
                                    Columns are derived from the Finding object. If
                                    appending to an existing table, any columns from
                                    the predefined schema that are missing will be
                                    added. No columns in the existing table will be
                                    deleted. \n If unspecified, then all available
                                    columns will be used for a new table or an (existing)
                                    table with no schema, and no changes will be made
                                    to an existing table that has a schema. Only for
                                    use with external storage. Possible values: [\"BASIC_COLUMNS\",
                                    \"GCS_COLUMNS\", \"DATASTORE_COLUMNS\", \"BIG_QUERY_COLUMNS\",
                                    \"ALL_COLUMNS\"]"
                                  type: string
                                table:
                                  description: Information on the location of the
                                    target BigQuery Table.
                                  properties:
                                    datasetID:
                                      description: Dataset ID of the table.
                                      type: string
                                    projectID:
                                      description: The Google Cloud Platform project
                                        ID of the project containing the table.
                                      type: string
                                    tableID:
                                      description: 'Name of the table. If is not set
                                        a new one will be generated for you with the
                                        following format: ''dlp_googleapis_yyyy_mm_dd_[dlp_job_id]''.
                                        Pacific timezone will be used for generating
                                        the date details.'
                                      type: string
                                  required:
                                  - datasetID
                                  - projectID
                                  type: object
                              required:
                              - table
                              type: object
                          required:
                          - outputConfig
                          type: object
                      required:
                      - saveFindings
                      type: object
                    type: array
                  inspectTemplateName:
                    description: The name of the template to run when this job is
                      triggered.
                    type: string
                  storageConfig:
                    description: Information on where to inspect
                    properties:
                      bigQueryOptions:
                        description: Options defining BigQuery table and row identifiers.
                        properties:
                          tableReference:
                            description: Set of files to scan.
                            properties:
                              datasetID:
                                description: The dataset ID of the table.
                                type: string
                              projectID:
                                description: The Google Cloud Platform project ID
                                  of the project containing the table.
                                type: string
                              tableID:
                                description: The name of the table.
                                type: string
                            required:
                            - datasetID
                            - projectID
                            - tableID
                            type: object
                        required:
                        - tableReference
                        type: object
                      cloudStorageOptions:
                        description: Options defining a file or a set of files within
                          a Google Cloud Storage bucket.
                        properties:
                          bytesLimitPerFile:
                            description: Max number of bytes to scan from a file.
                              If a scanned file's size is bigger than this value then
                              the rest of the bytes are omitted.
                            format: int64
                            type: integer
                          bytesLimitPerFilePercent:
                            description: Max percentage of bytes to scan from a file.
                              The rest are omitted. The number of bytes scanned is
                              rounded down. Must be between 0 and 100, inclusively.
                              Both 0 and 100 means no limit.
                            format: int64
                            type: integer
                          fileSet:
                            description: Set of files to scan.
                            properties:
                              regexFileSet:
                                description: The regex-filtered set of files to scan.
                                properties:
                                  bucketName:
                                    description: The name of a Cloud Storage bucket.
                                    type: string
                                  excludeRegex:
                                    description: A list of regular expressions matching
                                      file paths to exclude. All files in the bucket
                                      that match at least one of these regular expressions
                                      will be excluded from the scan.
                                    items:
                                      type: string
                                    type: array
                                  includeRegex:
                                    description: A list of regular expressions matching
                                      file paths to include. All files in the bucket
                                      that match at least one of these regular expressions
                                      will be included in the set of files, except
                                      for those that also match an item in excludeRegex.
                                      Leaving this field empty will match all files
                                      by default (this is equivalent to including
                                      .* in the list)
                                    items:
                                      type: string
                                    type: array
                                required:
                                - bucketName
                                type: object
                              url:
                                description: "The Cloud Storage url of the file(s)
                                  to scan, in the format 'gs://<bucket>/<path>'. Trailing
                                  wildcard in the path is allowed. \n If the url ends
                                  in a trailing slash, the bucket or directory represented
                                  by the url will be scanned non-recursively (content
                                  in sub-directories will not be scanned). This means
                                  that 'gs://mybucket/' is equivalent to 'gs://mybucket/*',
                                  and 'gs://mybucket/directory/' is equivalent to
                                  'gs://mybucket/directory/*'."
                                type: string
                            type: object
                          fileTypes:
                            description: 'List of file type groups to include in the
                              scan. If empty, all files are scanned and available
                              data format processors are applied. In addition, the
                              binary content of the selected files is always scanned
                              as well. Images are scanned only as binary if the specified
                              region does not support image inspection and no fileTypes
                              were specified. Possible values: ["BINARY_FILE", "TEXT_FILE",
                              "IMAGE", "WORD", "PDF", "AVRO", "CSV", "TSV"]'
                            items:
                              type: string
                            type: array
                          filesLimitPercent:
                            description: Limits the number of files to scan to this
                              percentage of the input FileSet. Number of files scanned
                              is rounded down. Must be between 0 and 100, inclusively.
                              Both 0 and 100 means no limit.
                            format: int64
                            type: integer
                          sampleMethod:
                            description: 'How to sample bytes if not all bytes are
                              scanned. Meaningful only when used in conjunction with
                              bytesLimitPerFile. If not specified, scanning would
                              start from the top. Possible values: ["TOP", "RANDOM_START"]'
                            type: string
                        required:
                        - fileSet
                        type: object
                      datastoreOptions:
                        description: Options defining a data set within Google Cloud
                          Datastore.
                        properties:
                          kind:
                            description: A representation of a Datastore kind.
                            properties:
                              name:
                                description: The name of the Datastore kind.
                                type: string
                            required:
                            - name
                            type: object
                          partitionID:
                            description: Datastore partition ID. A partition ID identifies
                              a grouping of entities. The grouping is always by project
                              and namespace, however the namespace ID may be empty.
                            properties:
                              namespaceID:
                                description: If not empty, the ID of the namespace
                                  to which the entities belong.
                                type: string
                              projectID:
                                description: The ID of the project to which the entities
                                  belong.
                                type: string
                            required:
                            - projectID
                            type: object
                        required:
                        - kind
                        - partitionID
                        type: object
                      timespanConfig:
                        description: Information on where to inspect
                        properties:
                          enableAutoPopulationOfTimespanConfig:
                            description: When the job is started by a JobTrigger we
                              will automatically figure out a valid startTime to avoid
                              scanning files that have not been modified since the
                              last time the JobTrigger executed. This will be based
                              on the time of the execution of the last run of the
                              JobTrigger.
                            type: boolean
                          endTime:
                            description: Exclude files or rows newer than this value.
                              If set to zero, no upper time limit is applied.
                            type: string
                          startTime:
                            description: Exclude files or rows older than this value.
                            type: string
                          timestampField:
                            description: Information on where to inspect
                            properties:
                              name:
                                description: "Specification of the field containing
                                  the timestamp of scanned items. Used for data sources
                                  like Datastore and BigQuery. \n For BigQuery: Required
                                  to filter out rows based on the given start and
                                  end times. If not specified and the table was modified
                                  between the given start and end times, the entire
                                  table will be scanned. The valid data types of the
                                  timestamp field are: INTEGER, DATE, TIMESTAMP, or
                                  DATETIME BigQuery column. \n For Datastore. Valid
                                  data types of the timestamp field are: TIMESTAMP.
                                  Datastore entity will be scanned if the timestamp
                                  property does not exist or its value is empty or
                                  invalid."
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - timestampField
                        type: object
                    type: object
                required:
                - actions
                - inspectTemplateName
                - storageConfig
                type: object
              kubeformOutput:
                properties:
                  description:
                    description: A description of the job trigger.
                    type: string
                  displayName:
                    description: User set display name of the job trigger.
                    type: string
                  id:
                    type: string
                  inspectJob:
                    description: Controls what and how to inspect for findings.
                    properties:
                      actions:
                        description: A task to execute on the completion of a job.
                        items:
                          properties:
                            saveFindings:
                              description: Schedule for triggered jobs
                              properties:
                                outputConfig:
                                  description: Information on where to store output
                                  properties:
                                    outputSchema:
                                      description: "Schema used for writing the findings
                                        for Inspect jobs. This field is only used
                                        for Inspect and must be unspecified for Risk
                                        jobs. Columns are derived from the Finding
                                        object. If appending to an existing table,
                                        any columns from the predefined schema that
                                        are missing will be added. No columns in the
                                        existing table will be deleted. \n If unspecified,
                                        then all available columns will be used for
                                        a new table or an (existing) table with no
                                        schema, and no changes will be made to an
                                        existing table that has a schema. Only for
                                        use with external storage. Possible values:
                                        [\"BASIC_COLUMNS\", \"GCS_COLUMNS\", \"DATASTORE_COLUMNS\",
                                        \"BIG_QUERY_COLUMNS\", \"ALL_COLUMNS\"]"
                                      type: string
                                    table:
                                      description: Information on the location of
                                        the target BigQuery Table.
                                      properties:
                                        datasetID:
                                          description: Dataset ID of the table.
                                          type: string
                                        projectID:
                                          description: The Google Cloud Platform project
                                            ID of the project containing the table.
                                          type: string
                                        tableID:
                                          description: 'Name of the table. If is not
                                            set a new one will be generated for you
                                            with the following format: ''dlp_googleapis_yyyy_mm_dd_[dlp_job_id]''.
                                            Pacific timezone will be used for generating
                                            the date details.'
                                          type: string
                                      required:
                                      - datasetID
                                      - projectID
                                      type: object
                                  required:
                                  - table
                                  type: object
                              required:
                              - outputConfig
                              type: object
                          required:
                          - saveFindings
                          type: object
                        type: array
                      inspectTemplateName:
                        description: The name of the template to run when this job
                          is triggered.
                        type: string
                      storageConfig:
                        description: Information on where to inspect
                        properties:
                          bigQueryOptions:
                            description: Options defining BigQuery table and row identifiers.
                            properties:
                              tableReference:
                                description: Set of files to scan.
                                properties:
                                  datasetID:
                                    description: The dataset ID of the table.
                                    type: string
                                  projectID:
                                    description: The Google Cloud Platform project
                                      ID of the project containing the table.
                                    type: string
                                  tableID:
                                    description: The name of the table.
                                    type: string
                                required:
                                - datasetID
                                - projectID
                                - tableID
                                type: object
                            required:
                            - tableReference
                            type: object
                          cloudStorageOptions:
                            description: Options defining a file or a set of files
                              within a Google Cloud Storage bucket.
                            properties:
                              bytesLimitPerFile:
                                description: Max number of bytes to scan from a file.
                                  If a scanned file's size is bigger than this value
                                  then the rest of the bytes are omitted.
                                format: int64
                                type: integer
                              bytesLimitPerFilePercent:
                                description: Max percentage of bytes to scan from
                                  a file. The rest are omitted. The number of bytes
                                  scanned is rounded down. Must be between 0 and 100,
                                  inclusively. Both 0 and 100 means no limit.
                                format: int64
                                type: integer
                              fileSet:
                                description: Set of files to scan.
                                properties:
                                  regexFileSet:
                                    description: The regex-filtered set of files to
                                      scan.
                                    properties:
                                      bucketName:
                                        description: The name of a Cloud Storage bucket.
                                        type: string
                                      excludeRegex:
                                        description: A list of regular expressions
                                          matching file paths to exclude. All files
                                          in the bucket that match at least one of
                                          these regular expressions will be excluded
                                          from the scan.
                                        items:
                                          type: string
                                        type: array
                                      includeRegex:
                                        description: A list of regular expressions
                                          matching file paths to include. All files
                                          in the bucket that match at least one of
                                          these regular expressions will be included
                                          in the set of files, except for those that
                                          also match an item in excludeRegex. Leaving
                                          this field empty will match all files by
                                          default (this is equivalent to including
                                          .* in the list)
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - bucketName
                                    type: object
                                  url:
                                    description: "The Cloud Storage url of the file(s)
                                      to scan, in the format 'gs://<bucket>/<path>'.
                                      Trailing wildcard in the path is allowed. \n
                                      If the url ends in a trailing slash, the bucket
                                      or directory represented by the url will be
                                      scanned non-recursively (content in sub-directories
                                      will not be scanned). This means that 'gs://mybucket/'
                                      is equivalent to 'gs://mybucket/*', and 'gs://mybucket/directory/'
                                      is equivalent to 'gs://mybucket/directory/*'."
                                    type: string
                                type: object
                              fileTypes:
                                description: 'List of file type groups to include
                                  in the scan. If empty, all files are scanned and
                                  available data format processors are applied. In
                                  addition, the binary content of the selected files
                                  is always scanned as well. Images are scanned only
                                  as binary if the specified region does not support
                                  image inspection and no fileTypes were specified.
                                  Possible values: ["BINARY_FILE", "TEXT_FILE", "IMAGE",
                                  "WORD", "PDF", "AVRO", "CSV", "TSV"]'
                                items:
                                  type: string
                                type: array
                              filesLimitPercent:
                                description: Limits the number of files to scan to
                                  this percentage of the input FileSet. Number of
                                  files scanned is rounded down. Must be between 0
                                  and 100, inclusively. Both 0 and 100 means no limit.
                                format: int64
                                type: integer
                              sampleMethod:
                                description: 'How to sample bytes if not all bytes
                                  are scanned. Meaningful only when used in conjunction
                                  with bytesLimitPerFile. If not specified, scanning
                                  would start from the top. Possible values: ["TOP",
                                  "RANDOM_START"]'
                                type: string
                            required:
                            - fileSet
                            type: object
                          datastoreOptions:
                            description: Options defining a data set within Google
                              Cloud Datastore.
                            properties:
                              kind:
                                description: A representation of a Datastore kind.
                                properties:
                                  name:
                                    description: The name of the Datastore kind.
                                    type: string
                                required:
                                - name
                                type: object
                              partitionID:
                                description: Datastore partition ID. A partition ID
                                  identifies a grouping of entities. The grouping
                                  is always by project and namespace, however the
                                  namespace ID may be empty.
                                properties:
                                  namespaceID:
                                    description: If not empty, the ID of the namespace
                                      to which the entities belong.
                                    type: string
                                  projectID:
                                    description: The ID of the project to which the
                                      entities belong.
                                    type: string
                                required:
                                - projectID
                                type: object
                            required:
                            - kind
                            - partitionID
                            type: object
                          timespanConfig:
                            description: Information on where to inspect
                            properties:
                              enableAutoPopulationOfTimespanConfig:
                                description: When the job is started by a JobTrigger
                                  we will automatically figure out a valid startTime
                                  to avoid scanning files that have not been modified
                                  since the last time the JobTrigger executed. This
                                  will be based on the time of the execution of the
                                  last run of the JobTrigger.
                                type: boolean
                              endTime:
                                description: Exclude files or rows newer than this
                                  value. If set to zero, no upper time limit is applied.
                                type: string
                              startTime:
                                description: Exclude files or rows older than this
                                  value.
                                type: string
                              timestampField:
                                description: Information on where to inspect
                                properties:
                                  name:
                                    description: "Specification of the field containing
                                      the timestamp of scanned items. Used for data
                                      sources like Datastore and BigQuery. \n For
                                      BigQuery: Required to filter out rows based
                                      on the given start and end times. If not specified
                                      and the table was modified between the given
                                      start and end times, the entire table will be
                                      scanned. The valid data types of the timestamp
                                      field are: INTEGER, DATE, TIMESTAMP, or DATETIME
                                      BigQuery column. \n For Datastore. Valid data
                                      types of the timestamp field are: TIMESTAMP.
                                      Datastore entity will be scanned if the timestamp
                                      property does not exist or its value is empty
                                      or invalid."
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - timestampField
                            type: object
                        type: object
                    required:
                    - actions
                    - inspectTemplateName
                    - storageConfig
                    type: object
                  lastRunTime:
                    description: The timestamp of the last time this trigger executed.
                    type: string
                  name:
                    description: The resource name of the job trigger. Set by the
                      server.
                    type: string
                  parent:
                    description: The parent of the trigger, either in the format 'projects/{{project}}'
                      or 'projects/{{project}}/locations/{{location}}'
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  status:
                    description: 'Whether the trigger is currently active. Default
                      value: "HEALTHY" Possible values: ["PAUSED", "HEALTHY", "CANCELLED"]'
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  triggers:
                    description: What event needs to occur for a new job to be started.
                    items:
                      properties:
                        schedule:
                          description: Schedule for triggered jobs
                          properties:
                            recurrencePeriodDuration:
                              description: "With this option a job is started a regular
                                periodic basis. For example: every day (86400 seconds).
                                \n A scheduled start time will be skipped if the previous
                                execution has not ended when its scheduled time occurs.
                                \n This value must be set to a time duration greater
                                than or equal to 1 day and can be no longer than 60
                                days. \n A duration in seconds with up to nine fractional
                                digits, terminated by 's'. Example: \"3.5s\"."
                              type: string
                          type: object
                      type: object
                    type: array
                required:
                - parent
                - providerRef
                - triggers
                type: object
              lastRunTime:
                description: The timestamp of the last time this trigger executed.
                type: string
              name:
                description: The resource name of the job trigger. Set by the server.
                type: string
              parent:
                description: The parent of the trigger, either in the format 'projects/{{project}}'
                  or 'projects/{{project}}/locations/{{location}}'
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              status:
                description: 'Whether the trigger is currently active. Default value:
                  "HEALTHY" Possible values: ["PAUSED", "HEALTHY", "CANCELLED"]'
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              triggers:
                description: What event needs to occur for a new job to be started.
                items:
                  properties:
                    schedule:
                      description: Schedule for triggered jobs
                      properties:
                        recurrencePeriodDuration:
                          description: "With this option a job is started a regular
                            periodic basis. For example: every day (86400 seconds).
                            \n A scheduled start time will be skipped if the previous
                            execution has not ended when its scheduled time occurs.
                            \n This value must be set to a time duration greater than
                            or equal to 1 day and can be no longer than 60 days. \n
                            A duration in seconds with up to nine fractional digits,
                            terminated by 's'. Example: \"3.5s\"."
                          type: string
                      type: object
                  type: object
                type: array
            required:
            - parent
            - providerRef
            - triggers
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: catalogentrygroupiampolicies.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: CatalogEntryGroupIamPolicy
    listKind: CatalogEntryGroupIamPolicyList
    plural: catalogentrygroupiampolicies
    singular: catalogentrygroupiampolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              entryGroup:
                type: string
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  entryGroup:
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  policyData:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - entryGroup
                - policyData
                - providerRef
                type: object
              policyData:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - entryGroup
            - policyData
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: catalogtagtemplateiambindings.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: CatalogTagTemplateIamBinding
    listKind: CatalogTagTemplateIamBindingList
    plural: catalogtagtemplateiambindings
    singular: catalogtagtemplateiambinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  members:
                    items:
                      type: string
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    type: string
                  role:
                    type: string
                  tagTemplate:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - members
                - providerRef
                - role
                - tagTemplate
                type: object
              members:
                items:
                  type: string
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                type: string
              role:
                type: string
              tagTemplate:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - members
            - providerRef
            - role
            - tagTemplate
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: catalogtagtemplateiampolicies.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: CatalogTagTemplateIamPolicy
    listKind: CatalogTagTemplateIamPolicyList
    plural: catalogtagtemplateiampolicies
    singular: catalogtagtemplateiampolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  etag:
                    type: string
                  id:
                    type: string
                  policyData:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    type: string
                  tagTemplate:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - policyData
                - providerRef
                - tagTemplate
                type: object
              policyData:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                type: string
              tagTemplate:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - policyData
            - providerRef
            - tagTemplate
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: catalogtagtemplates.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: CatalogTagTemplate
    listKind: CatalogTagTemplateList
    plural: catalogtagtemplates
    singular: catalogtagtemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              displayName:
                description: The display name for this template.
                type: string
              fields:
                description: Set of tag template field IDs and the settings for the
                  field. This set is an exhaustive list of the allowed fields. This
                  set must contain at least one field and at most 500 fields.
                items:
                  properties:
                    description:
                      description: A description for this field.
                      type: string
                    displayName:
                      description: The display name for this field.
                      type: string
                    fieldID:
                      type: string
                    isRequired:
                      description: Whether this is a required field. Defaults to false.
                      type: boolean
                    name:
                      description: 'The resource name of the tag template field in
                        URL format. Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}/fields/{field}'
                      type: string
                    order:
                      description: The order of this field with respect to other fields
                        in this tag template. A higher value indicates a more important
                        field. The value can be negative. Multiple fields can have
                        the same order, and field orders within a tag do not have
                        to be sequential.
                      format: int64
                      type: integer
                    type:
                      description: The type of value this tag field can contain.
                      properties:
                        enumType:
                          description: Represents an enum type.  Exactly one of 'primitive_type'
                            or 'enum_type' must be set
                          properties:
                            allowedValues:
                              description: The set of allowed values for this enum.
                                The display names of the values must be case-insensitively
                                unique within this set. Currently, enum values can
                                only be added to the list of allowed values. Deletion
                                and renaming of enum values are not supported. Can
                                have up to 500 allowed values.
                              items:
                                properties:
                                  displayName:
                                    description: The display name of the enum value.
                                    type: string
                                required:
                                - displayName
                                type: object
                              type: array
                          required:
                          - allowedValues
                          type: object
                        primitiveType:
                          description: 'Represents primitive types - string, bool
                            etc.  Exactly one of ''primitive_type'' or ''enum_type''
                            must be set Possible values: ["DOUBLE", "STRING", "BOOL",
                            "TIMESTAMP"]'
                          type: string
                      type: object
                  required:
                  - fieldID
                  - type
                  type: object
                type: array
              forceDelete:
                description: This confirms the deletion of any possible tags using
                  this template. Must be set to true in order to delete the tag template.
                type: boolean
              id:
                type: string
              kubeformOutput:
                properties:
                  displayName:
                    description: The display name for this template.
                    type: string
                  fields:
                    description: Set of tag template field IDs and the settings for
                      the field. This set is an exhaustive list of the allowed fields.
                      This set must contain at least one field and at most 500 fields.
                    items:
                      properties:
                        description:
                          description: A description for this field.
                          type: string
                        displayName:
                          description: The display name for this field.
                          type: string
                        fieldID:
                          type: string
                        isRequired:
                          description: Whether this is a required field. Defaults
                            to false.
                          type: boolean
                        name:
                          description: 'The resource name of the tag template field
                            in URL format. Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}/fields/{field}'
                          type: string
                        order:
                          description: The order of this field with respect to other
                            fields in this tag template. A higher value indicates
                            a more important field. The value can be negative. Multiple
                            fields can have the same order, and field orders within
                            a tag do not have to be sequential.
                          format: int64
                          type: integer
                        type:
                          description: The type of value this tag field can contain.
                          properties:
                            enumType:
                              description: Represents an enum type.  Exactly one of
                                'primitive_type' or 'enum_type' must be set
                              properties:
                                allowedValues:
                                  description: The set of allowed values for this
                                    enum. The display names of the values must be
                                    case-insensitively unique within this set. Currently,
                                    enum values can only be added to the list of allowed
                                    values. Deletion and renaming of enum values are
                                    not supported. Can have up to 500 allowed values.
                                  items:
                                    properties:
                                      displayName:
                                        description: The display name of the enum
                                          value.
                                        type: string
                                    required:
                                    - displayName
                                    type: object
                                  type: array
                              required:
                              - allowedValues
                              type: object
                            primitiveType:
                              description: 'Represents primitive types - string, bool
                                etc.  Exactly one of ''primitive_type'' or ''enum_type''
                                must be set Possible values: ["DOUBLE", "STRING",
                                "BOOL", "TIMESTAMP"]'
                              type: string
                          type: object
                      required:
                      - fieldID
                      - type
                      type: object
                    type: array
                  forceDelete:
                    description: This confirms the deletion of any possible tags using
                      this template. Must be set to true in order to delete the tag
                      template.
                    type: boolean
                  id:
                    type: string
                  name:
                    description: 'The resource name of the tag template in URL format.
                      Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: Template location region.
                    type: string
                  tagTemplateID:
                    description: The id of the tag template to create.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - fields
                - providerRef
                - tagTemplateID
                type: object
              name:
                description: 'The resource name of the tag template in URL format.
                  Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: Template location region.
                type: string
              tagTemplateID:
                description: The id of the tag template to create.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - fields
            - providerRef
            - tagTemplateID
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: catalogtagtemplateiammembers.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: CatalogTagTemplateIamMember
    listKind: CatalogTagTemplateIamMemberList
    plural: catalogtagtemplateiammembers
    singular: catalogtagtemplateiammember
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  member:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    type: string
                  role:
                    type: string
                  tagTemplate:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - member
                - providerRef
                - role
                - tagTemplate
                type: object
              member:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                type: string
              role:
                type: string
              tagTemplate:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - member
            - providerRef
            - role
            - tagTemplate
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: losspreventionstoredinfotypes.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: LossPreventionStoredInfoType
    listKind: LossPreventionStoredInfoTypeList
    plural: losspreventionstoredinfotypes
    singular: losspreventionstoredinfotype
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: A description of the info type.
                type: string
              dictionary:
                description: Dictionary which defines the rule.
                properties:
                  cloudStoragePath:
                    description: Newline-delimited file of words in Cloud Storage.
                      Only a single file is accepted.
                    properties:
                      path:
                        description: 'A url representing a file or path (no wildcards)
                          in Cloud Storage. Example: ''gs://[BUCKET_NAME]/dictionary.txt'''
                        type: string
                    required:
                    - path
                    type: object
                  wordList:
                    description: List of words or phrases to search for.
                    properties:
                      words:
                        description: Words or phrases defining the dictionary. The
                          dictionary must contain at least one phrase and every phrase
                          must contain at least 2 characters that are letters or digits.
                        items:
                          type: string
                        type: array
                    required:
                    - words
                    type: object
                type: object
              displayName:
                description: User set display name of the info type.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  description:
                    description: A description of the info type.
                    type: string
                  dictionary:
                    description: Dictionary which defines the rule.
                    properties:
                      cloudStoragePath:
                        description: Newline-delimited file of words in Cloud Storage.
                          Only a single file is accepted.
                        properties:
                          path:
                            description: 'A url representing a file or path (no wildcards)
                              in Cloud Storage. Example: ''gs://[BUCKET_NAME]/dictionary.txt'''
                            type: string
                        required:
                        - path
                        type: object
                      wordList:
                        description: List of words or phrases to search for.
                        properties:
                          words:
                            description: Words or phrases defining the dictionary.
                              The dictionary must contain at least one phrase and
                              every phrase must contain at least 2 characters that
                              are letters or digits.
                            items:
                              type: string
                            type: array
                        required:
                        - words
                        type: object
                    type: object
                  displayName:
                    description: User set display name of the info type.
                    type: string
                  id:
                    type: string
                  largeCustomDictionary:
                    description: Dictionary which defines the rule.
                    properties:
                      bigQueryField:
                        description: Field in a BigQuery table where each cell represents
                          a dictionary phrase.
                        properties:
                          field:
                            description: Designated field in the BigQuery table.
                            properties:
                              name:
                                description: Name describing the field.
                                type: string
                            required:
                            - name
                            type: object
                          table:
                            description: Field in a BigQuery table where each cell
                              represents a dictionary phrase.
                            properties:
                              datasetID:
                                description: The dataset ID of the table.
                                type: string
                              projectID:
                                description: The Google Cloud Platform project ID
                                  of the project containing the table.
                                type: string
                              tableID:
                                description: The name of the table.
                                type: string
                            required:
                            - datasetID
                            - projectID
                            - tableID
                            type: object
                        required:
                        - field
                        - table
                        type: object
                      cloudStorageFileSet:
                        description: Set of files containing newline-delimited lists
                          of dictionary phrases.
                        properties:
                          url:
                            description: The url, in the format 'gs://<bucket>/<path>'.
                              Trailing wildcard in the path is allowed.
                            type: string
                        required:
                        - url
                        type: object
                      outputPath:
                        description: Location to store dictionary artifacts in Google
                          Cloud Storage. These files will only be accessible by project
                          owners and the DLP API. If any of these artifacts are modified,
                          the dictionary is considered invalid and can no longer be
                          used.
                        properties:
                          path:
                            description: 'A url representing a file or path (no wildcards)
                              in Cloud Storage. Example: ''gs://[BUCKET_NAME]/dictionary.txt'''
                            type: string
                        required:
                        - path
                        type: object
                    required:
                    - outputPath
                    type: object
                  name:
                    description: The resource name of the info type. Set by the server.
                    type: string
                  parent:
                    description: "The parent of the info type in any of the following
                      formats: \n * 'projects/{{project}}' * 'projects/{{project}}/locations/{{location}}'
                      * 'organizations/{{organization_id}}' * 'organizations/{{organization_id}}/locations/{{location}}'"
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  regex:
                    description: Regular expression which defines the rule.
                    properties:
                      groupIndexes:
                        description: The index of the submatch to extract as findings.
                          When not specified, the entire match is returned. No more
                          than 3 may be included.
                        items:
                          format: int64
                          type: integer
                        type: array
                      pattern:
                        description: Pattern defining the regular expression. Its
                          syntax (https://github.com/google/re2/wiki/Syntax) can be
                          found under the google/re2 repository on GitHub.
                        type: string
                    required:
                    - pattern
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - parent
                - providerRef
                type: object
              largeCustomDictionary:
                description: Dictionary which defines the rule.
                properties:
                  bigQueryField:
                    description: Field in a BigQuery table where each cell represents
                      a dictionary phrase.
                    properties:
                      field:
                        description: Designated field in the BigQuery table.
                        properties:
                          name:
                            description: Name describing the field.
                            type: string
                        required:
                        - name
                        type: object
                      table:
                        description: Field in a BigQuery table where each cell represents
                          a dictionary phrase.
                        properties:
                          datasetID:
                            description: The dataset ID of the table.
                            type: string
                          projectID:
                            description: The Google Cloud Platform project ID of the
                              project containing the table.
                            type: string
                          tableID:
                            description: The name of the table.
                            type: string
                        required:
                        - datasetID
                        - projectID
                        - tableID
                        type: object
                    required:
                    - field
                    - table
                    type: object
                  cloudStorageFileSet:
                    description: Set of files containing newline-delimited lists of
                      dictionary phrases.
                    properties:
                      url:
                        description: The url, in the format 'gs://<bucket>/<path>'.
                          Trailing wildcard in the path is allowed.
                        type: string
                    required:
                    - url
                    type: object
                  outputPath:
                    description: Location to store dictionary artifacts in Google
                      Cloud Storage. These files will only be accessible by project
                      owners and the DLP API. If any of these artifacts are modified,
                      the dictionary is considered invalid and can no longer be used.
                    properties:
                      path:
                        description: 'A url representing a file or path (no wildcards)
                          in Cloud Storage. Example: ''gs://[BUCKET_NAME]/dictionary.txt'''
                        type: string
                    required:
                    - path
                    type: object
                required:
                - outputPath
                type: object
              name:
                description: The resource name of the info type. Set by the server.
                type: string
              parent:
                description: "The parent of the info type in any of the following
                  formats: \n * 'projects/{{project}}' * 'projects/{{project}}/locations/{{location}}'
                  * 'organizations/{{organization_id}}' * 'organizations/{{organization_id}}/locations/{{location}}'"
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              regex:
                description: Regular expression which defines the rule.
                properties:
                  groupIndexes:
                    description: The index of the submatch to extract as findings.
                      When not specified, the entire match is returned. No more than
                      3 may be included.
                    items:
                      format: int64
                      type: integer
                    type: array
                  pattern:
                    description: Pattern defining the regular expression. Its syntax
                      (https://github.com/google/re2/wiki/Syntax) can be found under
                      the google/re2 repository on GitHub.
                    type: string
                required:
                - pattern
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - parent
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: catalogtags.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: CatalogTag
    listKind: CatalogTagList
    plural: catalogtags
    singular: catalogtag
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              column:
                description: "Resources like Entry can have schemas associated with
                  them. This scope allows users to attach tags to an individual column
                  based on that schema. \n For attaching a tag to a nested column,
                  use '.' to separate the column names. Example: 'outer_column.inner_column'"
                type: string
              fields:
                description: This maps the ID of a tag field to the value of and additional
                  information about that field. Valid field IDs are defined by the
                  tag's template. A tag must have at least 1 field and at most 500
                  fields.
                items:
                  properties:
                    boolValue:
                      description: Holds the value for a tag field with boolean type.
                      type: boolean
                    displayName:
                      description: The display name of this field
                      type: string
                    doubleValue:
                      description: Holds the value for a tag field with double type.
                      format: double
                      type: number
                    enumValue:
                      description: The display name of the enum value.
                      type: string
                    fieldName:
                      type: string
                    order:
                      description: The order of this field with respect to other fields
                        in this tag. For example, a higher value can indicate a more
                        important field. The value can be negative. Multiple fields
                        can have the same order, and field orders within a tag do
                        not have to be sequential.
                      format: int64
                      type: integer
                    stringValue:
                      description: Holds the value for a tag field with string type.
                      type: string
                    timestampValue:
                      description: Holds the value for a tag field with timestamp
                        type.
                      type: string
                  required:
                  - fieldName
                  type: object
                type: array
              id:
                type: string
              kubeformOutput:
                properties:
                  column:
                    description: "Resources like Entry can have schemas associated
                      with them. This scope allows users to attach tags to an individual
                      column based on that schema. \n For attaching a tag to a nested
                      column, use '.' to separate the column names. Example: 'outer_column.inner_column'"
                    type: string
                  fields:
                    description: This maps the ID of a tag field to the value of and
                      additional information about that field. Valid field IDs are
                      defined by the tag's template. A tag must have at least 1 field
                      and at most 500 fields.
                    items:
                      properties:
                        boolValue:
                          description: Holds the value for a tag field with boolean
                            type.
                          type: boolean
                        displayName:
                          description: The display name of this field
                          type: string
                        doubleValue:
                          description: Holds the value for a tag field with double
                            type.
                          format: double
                          type: number
                        enumValue:
                          description: The display name of the enum value.
                          type: string
                        fieldName:
                          type: string
                        order:
                          description: The order of this field with respect to other
                            fields in this tag. For example, a higher value can indicate
                            a more important field. The value can be negative. Multiple
                            fields can have the same order, and field orders within
                            a tag do not have to be sequential.
                          format: int64
                          type: integer
                        stringValue:
                          description: Holds the value for a tag field with string
                            type.
                          type: string
                        timestampValue:
                          description: Holds the value for a tag field with timestamp
                            type.
                          type: string
                      required:
                      - fieldName
                      type: object
                    type: array
                  id:
                    type: string
                  name:
                    description: 'The resource name of the tag in URL format. Example:
                      projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}/tags/{tag_id}
                      or projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/tags/{tag_id}
                      where tag_id is a system-generated identifier. Note that this
                      Tag may not actually be stored in the location in this name.'
                    type: string
                  parent:
                    description: The name of the parent this tag is attached to. This
                      can be the name of an entry or an entry group. If an entry group,
                      the tag will be attached to all entries in that group.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  template:
                    description: 'The resource name of the tag template that this
                      tag uses. Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}
                      This field cannot be modified after creation.'
                    type: string
                  templateDisplayname:
                    description: The display name of the tag template.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - fields
                - providerRef
                - template
                type: object
              name:
                description: 'The resource name of the tag in URL format. Example:
                  projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}/tags/{tag_id}
                  or projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/tags/{tag_id}
                  where tag_id is a system-generated identifier. Note that this Tag
                  may not actually be stored in the location in this name.'
                type: string
              parent:
                description: The name of the parent this tag is attached to. This
                  can be the name of an entry or an entry group. If an entry group,
                  the tag will be attached to all entries in that group.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              template:
                description: 'The resource name of the tag template that this tag
                  uses. Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}
                  This field cannot be modified after creation.'
                type: string
              templateDisplayname:
                description: The display name of the tag template.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - fields
            - providerRef
            - template
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: losspreventioninspecttemplates.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: LossPreventionInspectTemplate
    listKind: LossPreventionInspectTemplateList
    plural: losspreventioninspecttemplates
    singular: losspreventioninspecttemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: A description of the inspect template.
                type: string
              displayName:
                description: User set display name of the inspect template.
                type: string
              id:
                type: string
              inspectConfig:
                description: The core content of the template.
                properties:
                  contentOptions:
                    description: 'List of options defining data content to scan. If
                      empty, text, images, and other content will be included. Possible
                      values: ["CONTENT_TEXT", "CONTENT_IMAGE"]'
                    items:
                      type: string
                    type: array
                  customInfoTypes:
                    description: Custom info types to be used. See https://cloud.google.com/dlp/docs/creating-custom-infotypes
                      to learn more.
                    items:
                      properties:
                        dictionary:
                          description: Dictionary which defines the rule.
                          properties:
                            cloudStoragePath:
                              description: Newline-delimited file of words in Cloud
                                Storage. Only a single file is accepted.
                              properties:
                                path:
                                  description: 'A url representing a file or path
                                    (no wildcards) in Cloud Storage. Example: ''gs://[BUCKET_NAME]/dictionary.txt'''
                                  type: string
                              required:
                              - path
                              type: object
                            wordList:
                              description: List of words or phrases to search for.
                              properties:
                                words:
                                  description: Words or phrases defining the dictionary.
                                    The dictionary must contain at least one phrase
                                    and every phrase must contain at least 2 characters
                                    that are letters or digits.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - words
                              type: object
                          type: object
                        exclusionType:
                          description: 'If set to EXCLUSION_TYPE_EXCLUDE this infoType
                            will not cause a finding to be returned. It still can
                            be used for rules matching. Possible values: ["EXCLUSION_TYPE_EXCLUDE"]'
                          type: string
                        infoType:
                          description: CustomInfoType can either be a new infoType,
                            or an extension of built-in infoType, when the name matches
                            one of existing infoTypes and that infoType is specified
                            in 'info_types' field. Specifying the latter adds findings
                            to the one detected by the system. If built-in info type
                            is not specified in 'info_types' list then the name is
                            treated as a custom info type.
                          properties:
                            name:
                              description: Name of the information type. Either a
                                name of your choosing when creating a CustomInfoType,
                                or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                when specifying a built-in type.
                              type: string
                          required:
                          - name
                          type: object
                        likelihood:
                          description: 'Likelihood to return for this CustomInfoType.
                            This base value can be altered by a detection rule if
                            the finding meets the criteria specified by the rule.
                            Default value: "VERY_LIKELY" Possible values: ["VERY_UNLIKELY",
                            "UNLIKELY", "POSSIBLE", "LIKELY", "VERY_LIKELY"]'
                          type: string
                        regex:
                          description: Regular expression which defines the rule.
                          properties:
                            groupIndexes:
                              description: The index of the submatch to extract as
                                findings. When not specified, the entire match is
                                returned. No more than 3 may be included.
                              items:
                                format: int64
                                type: integer
                              type: array
                            pattern:
                              description: Pattern defining the regular expression.
                                Its syntax (https://github.com/google/re2/wiki/Syntax)
                                can be found under the google/re2 repository on GitHub.
                              type: string
                          required:
                          - pattern
                          type: object
                        storedType:
                          description: A reference to a StoredInfoType to use with
                            scanning.
                          properties:
                            name:
                              description: Resource name of the requested StoredInfoType,
                                for example 'organizations/433245324/storedInfoTypes/432452342'
                                or 'projects/project-id/storedInfoTypes/432452342'.
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - infoType
                      type: object
                    type: array
                  excludeInfoTypes:
                    description: When true, excludes type information of the findings.
                    type: boolean
                  includeQuote:
                    description: When true, a contextual quote from the data that
                      triggered a finding is included in the response.
                    type: boolean
                  infoTypes:
                    description: "Restricts what infoTypes to look for. The values
                      must correspond to InfoType values returned by infoTypes.list
                      or listed at https://cloud.google.com/dlp/docs/infotypes-reference.
                      \n When no InfoTypes or CustomInfoTypes are specified in a request,
                      the system may automatically choose what detectors to run. By
                      default this may be all types, but may change over time as detectors
                      are updated."
                    items:
                      properties:
                        name:
                          description: Name of the information type. Either a name
                            of your choosing when creating a CustomInfoType, or one
                            of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                            when specifying a built-in type.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  limits:
                    description: Configuration to control the number of findings returned.
                    properties:
                      maxFindingsPerInfoType:
                        description: Configuration of findings limit given for specified
                          infoTypes.
                        items:
                          properties:
                            infoType:
                              description: Type of information the findings limit
                                applies to. Only one limit per infoType should be
                                provided. If InfoTypeLimit does not have an infoType,
                                the DLP API applies the limit against all infoTypes
                                that are found but not specified in another InfoTypeLimit.
                              properties:
                                name:
                                  description: Name of the information type. Either
                                    a name of your choosing when creating a CustomInfoType,
                                    or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                    when specifying a built-in type.
                                  type: string
                              required:
                              - name
                              type: object
                            maxFindings:
                              description: Max findings limit for the given infoType.
                              format: int64
                              type: integer
                          required:
                          - infoType
                          - maxFindings
                          type: object
                        type: array
                      maxFindingsPerItem:
                        description: Max number of findings that will be returned
                          for each item scanned. The maximum returned is 2000.
                        format: int64
                        type: integer
                      maxFindingsPerRequest:
                        description: Max number of findings that will be returned
                          per request/job. The maximum returned is 2000.
                        format: int64
                        type: integer
                    required:
                    - maxFindingsPerItem
                    - maxFindingsPerRequest
                    type: object
                  minLikelihood:
                    description: 'Only returns findings equal or above this threshold.
                      See https://cloud.google.com/dlp/docs/likelihood for more info
                      Default value: "POSSIBLE" Possible values: ["VERY_UNLIKELY",
                      "UNLIKELY", "POSSIBLE", "LIKELY", "VERY_LIKELY"]'
                    type: string
                  ruleSet:
                    description: Set of rules to apply to the findings for this InspectConfig.
                      Exclusion rules, contained in the set are executed in the end,
                      other rules are executed in the order they are specified for
                      each info type.
                    items:
                      properties:
                        infoTypes:
                          description: List of infoTypes this rule set is applied
                            to.
                          items:
                            properties:
                              name:
                                description: Name of the information type. Either
                                  a name of your choosing when creating a CustomInfoType,
                                  or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                  when specifying a built-in type.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                        rules:
                          description: Set of rules to be applied to infoTypes. The
                            rules are applied in order.
                          items:
                            properties:
                              exclusionRule:
                                description: The rule that specifies conditions when
                                  findings of infoTypes specified in InspectionRuleSet
                                  are removed from results.
                                properties:
                                  dictionary:
                                    description: Dictionary which defines the rule.
                                    properties:
                                      cloudStoragePath:
                                        description: Newline-delimited file of words
                                          in Cloud Storage. Only a single file is
                                          accepted.
                                        properties:
                                          path:
                                            description: 'A url representing a file
                                              or path (no wildcards) in Cloud Storage.
                                              Example: ''gs://[BUCKET_NAME]/dictionary.txt'''
                                            type: string
                                        required:
                                        - path
                                        type: object
                                      wordList:
                                        description: List of words or phrases to search
                                          for.
                                        properties:
                                          words:
                                            description: Words or phrases defining
                                              the dictionary. The dictionary must
                                              contain at least one phrase and every
                                              phrase must contain at least 2 characters
                                              that are letters or digits.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - words
                                        type: object
                                    type: object
                                  excludeInfoTypes:
                                    description: Set of infoTypes for which findings
                                      would affect this rule.
                                    properties:
                                      infoTypes:
                                        description: If a finding is matched by any
                                          of the infoType detectors listed here, the
                                          finding will be excluded from the scan results.
                                        items:
                                          properties:
                                            name:
                                              description: Name of the information
                                                type. Either a name of your choosing
                                                when creating a CustomInfoType, or
                                                one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                                when specifying a built-in type.
                                              type: string
                                          required:
                                          - name
                                          type: object
                                        type: array
                                    required:
                                    - infoTypes
                                    type: object
                                  matchingType:
                                    description: 'How the rule is applied. See the
                                      documentation for more information: https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#MatchingType
                                      Possible values: ["MATCHING_TYPE_FULL_MATCH",
                                      "MATCHING_TYPE_PARTIAL_MATCH", "MATCHING_TYPE_INVERSE_MATCH"]'
                                    type: string
                                  regex:
                                    description: Regular expression which defines
                                      the rule.
                                    properties:
                                      groupIndexes:
                                        description: The index of the submatch to
                                          extract as findings. When not specified,
                                          the entire match is returned. No more than
                                          3 may be included.
                                        items:
                                          format: int64
                                          type: integer
                                        type: array
                                      pattern:
                                        description: Pattern defining the regular
                                          expression. Its syntax (https://github.com/google/re2/wiki/Syntax)
                                          can be found under the google/re2 repository
                                          on GitHub.
                                        type: string
                                    required:
                                    - pattern
                                    type: object
                                required:
                                - matchingType
                                type: object
                              hotwordRule:
                                description: Hotword-based detection rule.
                                properties:
                                  hotwordRegex:
                                    description: Regular expression pattern defining
                                      what qualifies as a hotword.
                                    properties:
                                      groupIndexes:
                                        description: The index of the submatch to
                                          extract as findings. When not specified,
                                          the entire match is returned. No more than
                                          3 may be included.
                                        items:
                                          format: int64
                                          type: integer
                                        type: array
                                      pattern:
                                        description: Pattern defining the regular
                                          expression. Its syntax (https://github.com/google/re2/wiki/Syntax)
                                          can be found under the google/re2 repository
                                          on GitHub.
                                        type: string
                                    required:
                                    - pattern
                                    type: object
                                  likelihoodAdjustment:
                                    description: Likelihood adjustment to apply to
                                      all matching findings.
                                    properties:
                                      fixedLikelihood:
                                        description: 'Set the likelihood of a finding
                                          to a fixed value. Either this or relative_likelihood
                                          can be set. Possible values: ["VERY_UNLIKELY",
                                          "UNLIKELY", "POSSIBLE", "LIKELY", "VERY_LIKELY"]'
                                        type: string
                                      relativeLikelihood:
                                        description: Increase or decrease the likelihood
                                          by the specified number of levels. For example,
                                          if a finding would be POSSIBLE without the
                                          detection rule and relativeLikelihood is
                                          1, then it is upgraded to LIKELY, while
                                          a value of -1 would downgrade it to UNLIKELY.
                                          Likelihood may never drop below VERY_UNLIKELY
                                          or exceed VERY_LIKELY, so applying an adjustment
                                          of 1 followed by an adjustment of -1 when
                                          base likelihood is VERY_LIKELY will result
                                          in a final likelihood of LIKELY. Either
                                          this or fixed_likelihood can be set.
                                        format: int64
                                        type: integer
                                    type: object
                                  proximity:
                                    description: Proximity of the finding within which
                                      the entire hotword must reside. The total length
                                      of the window cannot exceed 1000 characters.
                                      Note that the finding itself will be included
                                      in the window, so that hotwords may be used
                                      to match substrings of the finding itself. For
                                      example, the certainty of a phone number regex
                                      '(\\d{3}) \\d{3}-\\d{4}' could be adjusted upwards
                                      if the area code is known to be the local area
                                      code of a company office using the hotword regex
                                      '(xxx)', where 'xxx' is the area code in question.
                                    properties:
                                      windowAfter:
                                        description: Number of characters after the
                                          finding to consider. Either this or window_before
                                          must be specified
                                        format: int64
                                        type: integer
                                      windowBefore:
                                        description: Number of characters before the
                                          finding to consider. Either this or window_after
                                          must be specified
                                        format: int64
                                        type: integer
                                    type: object
                                required:
                                - hotwordRegex
                                - likelihoodAdjustment
                                - proximity
                                type: object
                            type: object
                          type: array
                      required:
                      - infoTypes
                      - rules
                      type: object
                    type: array
                type: object
              kubeformOutput:
                properties:
                  description:
                    description: A description of the inspect template.
                    type: string
                  displayName:
                    description: User set display name of the inspect template.
                    type: string
                  id:
                    type: string
                  inspectConfig:
                    description: The core content of the template.
                    properties:
                      contentOptions:
                        description: 'List of options defining data content to scan.
                          If empty, text, images, and other content will be included.
                          Possible values: ["CONTENT_TEXT", "CONTENT_IMAGE"]'
                        items:
                          type: string
                        type: array
                      customInfoTypes:
                        description: Custom info types to be used. See https://cloud.google.com/dlp/docs/creating-custom-infotypes
                          to learn more.
                        items:
                          properties:
                            dictionary:
                              description: Dictionary which defines the rule.
                              properties:
                                cloudStoragePath:
                                  description: Newline-delimited file of words in
                                    Cloud Storage. Only a single file is accepted.
                                  properties:
                                    path:
                                      description: 'A url representing a file or path
                                        (no wildcards) in Cloud Storage. Example:
                                        ''gs://[BUCKET_NAME]/dictionary.txt'''
                                      type: string
                                  required:
                                  - path
                                  type: object
                                wordList:
                                  description: List of words or phrases to search
                                    for.
                                  properties:
                                    words:
                                      description: Words or phrases defining the dictionary.
                                        The dictionary must contain at least one phrase
                                        and every phrase must contain at least 2 characters
                                        that are letters or digits.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - words
                                  type: object
                              type: object
                            exclusionType:
                              description: 'If set to EXCLUSION_TYPE_EXCLUDE this
                                infoType will not cause a finding to be returned.
                                It still can be used for rules matching. Possible
                                values: ["EXCLUSION_TYPE_EXCLUDE"]'
                              type: string
                            infoType:
                              description: CustomInfoType can either be a new infoType,
                                or an extension of built-in infoType, when the name
                                matches one of existing infoTypes and that infoType
                                is specified in 'info_types' field. Specifying the
                                latter adds findings to the one detected by the system.
                                If built-in info type is not specified in 'info_types'
                                list then the name is treated as a custom info type.
                              properties:
                                name:
                                  description: Name of the information type. Either
                                    a name of your choosing when creating a CustomInfoType,
                                    or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                    when specifying a built-in type.
                                  type: string
                              required:
                              - name
                              type: object
                            likelihood:
                              description: 'Likelihood to return for this CustomInfoType.
                                This base value can be altered by a detection rule
                                if the finding meets the criteria specified by the
                                rule. Default value: "VERY_LIKELY" Possible values:
                                ["VERY_UNLIKELY", "UNLIKELY", "POSSIBLE", "LIKELY",
                                "VERY_LIKELY"]'
                              type: string
                            regex:
                              description: Regular expression which defines the rule.
                              properties:
                                groupIndexes:
                                  description: The index of the submatch to extract
                                    as findings. When not specified, the entire match
                                    is returned. No more than 3 may be included.
                                  items:
                                    format: int64
                                    type: integer
                                  type: array
                                pattern:
                                  description: Pattern defining the regular expression.
                                    Its syntax (https://github.com/google/re2/wiki/Syntax)
                                    can be found under the google/re2 repository on
                                    GitHub.
                                  type: string
                              required:
                              - pattern
                              type: object
                            storedType:
                              description: A reference to a StoredInfoType to use
                                with scanning.
                              properties:
                                name:
                                  description: Resource name of the requested StoredInfoType,
                                    for example 'organizations/433245324/storedInfoTypes/432452342'
                                    or 'projects/project-id/storedInfoTypes/432452342'.
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - infoType
                          type: object
                        type: array
                      excludeInfoTypes:
                        description: When true, excludes type information of the findings.
                        type: boolean
                      includeQuote:
                        description: When true, a contextual quote from the data that
                          triggered a finding is included in the response.
                        type: boolean
                      infoTypes:
                        description: "Restricts what infoTypes to look for. The values
                          must correspond to InfoType values returned by infoTypes.list
                          or listed at https://cloud.google.com/dlp/docs/infotypes-reference.
                          \n When no InfoTypes or CustomInfoTypes are specified in
                          a request, the system may automatically choose what detectors
                          to run. By default this may be all types, but may change
                          over time as detectors are updated."
                        items:
                          properties:
                            name:
                              description: Name of the information type. Either a
                                name of your choosing when creating a CustomInfoType,
                                or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                when specifying a built-in type.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      limits:
                        description: Configuration to control the number of findings
                          returned.
                        properties:
                          maxFindingsPerInfoType:
                            description: Configuration of findings limit given for
                              specified infoTypes.
                            items:
                              properties:
                                infoType:
                                  description: Type of information the findings limit
                                    applies to. Only one limit per infoType should
                                    be provided. If InfoTypeLimit does not have an
                                    infoType, the DLP API applies the limit against
                                    all infoTypes that are found but not specified
                                    in another InfoTypeLimit.
                                  properties:
                                    name:
                                      description: Name of the information type. Either
                                        a name of your choosing when creating a CustomInfoType,
                                        or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                        when specifying a built-in type.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                maxFindings:
                                  description: Max findings limit for the given infoType.
                                  format: int64
                                  type: integer
                              required:
                              - infoType
                              - maxFindings
                              type: object
                            type: array
                          maxFindingsPerItem:
                            description: Max number of findings that will be returned
                              for each item scanned. The maximum returned is 2000.
                            format: int64
                            type: integer
                          maxFindingsPerRequest:
                            description: Max number of findings that will be returned
                              per request/job. The maximum returned is 2000.
                            format: int64
                            type: integer
                        required:
                        - maxFindingsPerItem
                        - maxFindingsPerRequest
                        type: object
                      minLikelihood:
                        description: 'Only returns findings equal or above this threshold.
                          See https://cloud.google.com/dlp/docs/likelihood for more
                          info Default value: "POSSIBLE" Possible values: ["VERY_UNLIKELY",
                          "UNLIKELY", "POSSIBLE", "LIKELY", "VERY_LIKELY"]'
                        type: string
                      ruleSet:
                        description: Set of rules to apply to the findings for this
                          InspectConfig. Exclusion rules, contained in the set are
                          executed in the end, other rules are executed in the order
                          they are specified for each info type.
                        items:
                          properties:
                            infoTypes:
                              description: List of infoTypes this rule set is applied
                                to.
                              items:
                                properties:
                                  name:
                                    description: Name of the information type. Either
                                      a name of your choosing when creating a CustomInfoType,
                                      or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                      when specifying a built-in type.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                            rules:
                              description: Set of rules to be applied to infoTypes.
                                The rules are applied in order.
                              items:
                                properties:
                                  exclusionRule:
                                    description: The rule that specifies conditions
                                      when findings of infoTypes specified in InspectionRuleSet
                                      are removed from results.
                                    properties:
                                      dictionary:
                                        description: Dictionary which defines the
                                          rule.
                                        properties:
                                          cloudStoragePath:
                                            description: Newline-delimited file of
                                              words in Cloud Storage. Only a single
                                              file is accepted.
                                            properties:
                                              path:
                                                description: 'A url representing a
                                                  file or path (no wildcards) in Cloud
                                                  Storage. Example: ''gs://[BUCKET_NAME]/dictionary.txt'''
                                                type: string
                                            required:
                                            - path
                                            type: object
                                          wordList:
                                            description: List of words or phrases
                                              to search for.
                                            properties:
                                              words:
                                                description: Words or phrases defining
                                                  the dictionary. The dictionary must
                                                  contain at least one phrase and
                                                  every phrase must contain at least
                                                  2 characters that are letters or
                                                  digits.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - words
                                            type: object
                                        type: object
                                      excludeInfoTypes:
                                        description: Set of infoTypes for which findings
                                          would affect this rule.
                                        properties:
                                          infoTypes:
                                            description: If a finding is matched by
                                              any of the infoType detectors listed
                                              here, the finding will be excluded from
                                              the scan results.
                                            items:
                                              properties:
                                                name:
                                                  description: Name of the information
                                                    type. Either a name of your choosing
                                                    when creating a CustomInfoType,
                                                    or one of the names listed at
                                                    https://cloud.google.com/dlp/docs/infotypes-reference
                                                    when specifying a built-in type.
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            type: array
                                        required:
                                        - infoTypes
                                        type: object
                                      matchingType:
                                        description: 'How the rule is applied. See
                                          the documentation for more information:
                                          https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#MatchingType
                                          Possible values: ["MATCHING_TYPE_FULL_MATCH",
                                          "MATCHING_TYPE_PARTIAL_MATCH", "MATCHING_TYPE_INVERSE_MATCH"]'
                                        type: string
                                      regex:
                                        description: Regular expression which defines
                                          the rule.
                                        properties:
                                          groupIndexes:
                                            description: The index of the submatch
                                              to extract as findings. When not specified,
                                              the entire match is returned. No more
                                              than 3 may be included.
                                            items:
                                              format: int64
                                              type: integer
                                            type: array
                                          pattern:
                                            description: Pattern defining the regular
                                              expression. Its syntax (https://github.com/google/re2/wiki/Syntax)
                                              can be found under the google/re2 repository
                                              on GitHub.
                                            type: string
                                        required:
                                        - pattern
                                        type: object
                                    required:
                                    - matchingType
                                    type: object
                                  hotwordRule:
                                    description: Hotword-based detection rule.
                                    properties:
                                      hotwordRegex:
                                        description: Regular expression pattern defining
                                          what qualifies as a hotword.
                                        properties:
                                          groupIndexes:
                                            description: The index of the submatch
                                              to extract as findings. When not specified,
                                              the entire match is returned. No more
                                              than 3 may be included.
                                            items:
                                              format: int64
                                              type: integer
                                            type: array
                                          pattern:
                                            description: Pattern defining the regular
                                              expression. Its syntax (https://github.com/google/re2/wiki/Syntax)
                                              can be found under the google/re2 repository
                                              on GitHub.
                                            type: string
                                        required:
                                        - pattern
                                        type: object
                                      likelihoodAdjustment:
                                        description: Likelihood adjustment to apply
                                          to all matching findings.
                                        properties:
                                          fixedLikelihood:
                                            description: 'Set the likelihood of a
                                              finding to a fixed value. Either this
                                              or relative_likelihood can be set. Possible
                                              values: ["VERY_UNLIKELY", "UNLIKELY",
                                              "POSSIBLE", "LIKELY", "VERY_LIKELY"]'
                                            type: string
                                          relativeLikelihood:
                                            description: Increase or decrease the
                                              likelihood by the specified number of
                                              levels. For example, if a finding would
                                              be POSSIBLE without the detection rule
                                              and relativeLikelihood is 1, then it
                                              is upgraded to LIKELY, while a value
                                              of -1 would downgrade it to UNLIKELY.
                                              Likelihood may never drop below VERY_UNLIKELY
                                              or exceed VERY_LIKELY, so applying an
                                              adjustment of 1 followed by an adjustment
                                              of -1 when base likelihood is VERY_LIKELY
                                              will result in a final likelihood of
                                              LIKELY. Either this or fixed_likelihood
                                              can be set.
                                            format: int64
                                            type: integer
                                        type: object
                                      proximity:
                                        description: Proximity of the finding within
                                          which the entire hotword must reside. The
                                          total length of the window cannot exceed
                                          1000 characters. Note that the finding itself
                                          will be included in the window, so that
                                          hotwords may be used to match substrings
                                          of the finding itself. For example, the
                                          certainty of a phone number regex '(\\d{3})
                                          \\d{3}-\\d{4}' could be adjusted upwards
                                          if the area code is known to be the local
                                          area code of a company office using the
                                          hotword regex '(xxx)', where 'xxx' is the
                                          area code in question.
                                        properties:
                                          windowAfter:
                                            description: Number of characters after
                                              the finding to consider. Either this
                                              or window_before must be specified
                                            format: int64
                                            type: integer
                                          windowBefore:
                                            description: Number of characters before
                                              the finding to consider. Either this
                                              or window_after must be specified
                                            format: int64
                                            type: integer
                                        type: object
                                    required:
                                    - hotwordRegex
                                    - likelihoodAdjustment
                                    - proximity
                                    type: object
                                type: object
                              type: array
                          required:
                          - infoTypes
                          - rules
                          type: object
                        type: array
                    type: object
                  name:
                    description: The resource name of the inspect template. Set by
                      the server.
                    type: string
                  parent:
                    description: "The parent of the inspect template in any of the
                      following formats: \n * 'projects/{{project}}' * 'projects/{{project}}/locations/{{location}}'
                      * 'organizations/{{organization_id}}' * 'organizations/{{organization_id}}/locations/{{location}}'"
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - parent
                - providerRef
                type: object
              name:
                description: The resource name of the inspect template. Set by the
                  server.
                type: string
              parent:
                description: "The parent of the inspect template in any of the following
                  formats: \n * 'projects/{{project}}' * 'projects/{{project}}/locations/{{location}}'
                  * 'organizations/{{organization_id}}' * 'organizations/{{organization_id}}/locations/{{location}}'"
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - parent
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: catalogentrygroupiammembers.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: CatalogEntryGroupIamMember
    listKind: CatalogEntryGroupIamMemberList
    plural: catalogentrygroupiammembers
    singular: catalogentrygroupiammember
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              entryGroup:
                type: string
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  entryGroup:
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  member:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    type: string
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - entryGroup
                - member
                - providerRef
                - role
                type: object
              member:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                type: string
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - entryGroup
            - member
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: losspreventiondeidentifytemplates.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: LossPreventionDeidentifyTemplate
    listKind: LossPreventionDeidentifyTemplateList
    plural: losspreventiondeidentifytemplates
    singular: losspreventiondeidentifytemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              deidentifyConfig:
                description: Configuration of the deidentify template
                properties:
                  infoTypeTransformations:
                    description: Specifies free-text based transformations to be applied
                      to the dataset.
                    properties:
                      transformations:
                        description: Transformation for each infoType. Cannot specify
                          more than one for a given infoType.
                        items:
                          properties:
                            infoTypes:
                              description: InfoTypes to apply the transformation to.
                                Leaving this empty will apply the transformation to
                                apply to all findings that correspond to infoTypes
                                that were requested in InspectConfig.
                              items:
                                properties:
                                  name:
                                    description: Name of the information type.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                            primitiveTransformation:
                              description: Primitive transformation to apply to the
                                infoType.
                              properties:
                                characterMaskConfig:
                                  description: Partially mask a string by replacing
                                    a given number of characters with a fixed character.
                                    Masking can start from the beginning or end of
                                    the string.
                                  properties:
                                    charactersToIgnore:
                                      description: Characters to skip when doing de-identification
                                        of a value. These will be left alone and skipped.
                                      items:
                                        properties:
                                          characterToSkip:
                                            description: Characters to not transform
                                              when masking.
                                            type: string
                                          commonCharactersToIgnore:
                                            description: 'Common characters to not
                                              transform when masking. Useful to avoid
                                              removing punctuation. Possible values:
                                              ["NUMERIC", "ALPHA_UPPER_CASE", "ALPHA_LOWER_CASE",
                                              "PUNCTUATION", "WHITESPACE"]'
                                            type: string
                                        type: object
                                      type: array
                                    maskingCharacter:
                                      description: Character to use to mask the sensitive
                                        values—for example, * for an alphabetic string
                                        such as a name, or 0 for a numeric string
                                        such as ZIP code or credit card number. This
                                        string must have a length of 1. If not supplied,
                                        this value defaults to * for strings, and
                                        0 for digits.
                                      type: string
                                    numberToMask:
                                      description: Number of characters to mask. If
                                        not set, all matching chars will be masked.
                                        Skipped characters do not count towards this
                                        tally.
                                      format: int64
                                      type: integer
                                    reverseOrder:
                                      description: Mask characters in reverse order.
                                        For example, if masking_character is 0, number_to_mask
                                        is 14, and reverse_order is 'false', then
                                        the input string '1234-5678-9012-3456' is
                                        masked as '00000000000000-3456'.
                                      type: boolean
                                  type: object
                                replaceConfig:
                                  description: Replace each input value with a given
                                    value.
                                  properties:
                                    newValue:
                                      description: Replace each input value with a
                                        given value.
                                      properties:
                                        booleanValue:
                                          description: A boolean value.
                                          type: boolean
                                        dateValue:
                                          description: Represents a whole or partial
                                            calendar date.
                                          properties:
                                            day:
                                              description: Day of month. Must be from
                                                1 to 31 and valid for the year and
                                                month, or 0 if specifying a year by
                                                itself or a year and month where the
                                                day is not significant.
                                              format: int64
                                              type: integer
                                            month:
                                              description: Month of year. Must be
                                                from 1 to 12, or 0 if specifying a
                                                year without a month and day.
                                              format: int64
                                              type: integer
                                            year:
                                              description: Year of date. Must be from
                                                1 to 9999, or 0 if specifying a date
                                                without a year.
                                              format: int64
                                              type: integer
                                          type: object
                                        dayOfWeekValue:
                                          description: 'Represents a day of the week.
                                            Possible values: ["MONDAY", "TUESDAY",
                                            "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY",
                                            "SUNDAY"]'
                                          type: string
                                        floatValue:
                                          description: A float value.
                                          format: double
                                          type: number
                                        integerValue:
                                          description: An integer value.
                                          format: int64
                                          type: integer
                                        stringValue:
                                          description: A string value.
                                          type: string
                                        timeValue:
                                          description: Represents a time of day.
                                          properties:
                                            hours:
                                              description: Hours of day in 24 hour
                                                format. Should be from 0 to 23.
                                              format: int64
                                              type: integer
                                            minutes:
                                              description: Minutes of hour of day.
                                                Must be from 0 to 59.
                                              format: int64
                                              type: integer
                                            nanos:
                                              description: Fractions of seconds in
                                                nanoseconds. Must be from 0 to 999,999,999.
                                              format: int64
                                              type: integer
                                            seconds:
                                              description: Seconds of minutes of the
                                                time. Must normally be from 0 to 59.
                                              format: int64
                                              type: integer
                                          type: object
                                        timestampValue:
                                          description: 'A timestamp in RFC3339 UTC
                                            "Zulu" format, with nanosecond resolution
                                            and up to nine fractional digits. Examples:
                                            "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".'
                                          type: string
                                      type: object
                                  required:
                                  - newValue
                                  type: object
                              type: object
                          required:
                          - primitiveTransformation
                          type: object
                        type: array
                    required:
                    - transformations
                    type: object
                required:
                - infoTypeTransformations
                type: object
              description:
                description: A description of the template.
                type: string
              displayName:
                description: User set display name of the template.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  deidentifyConfig:
                    description: Configuration of the deidentify template
                    properties:
                      infoTypeTransformations:
                        description: Specifies free-text based transformations to
                          be applied to the dataset.
                        properties:
                          transformations:
                            description: Transformation for each infoType. Cannot
                              specify more than one for a given infoType.
                            items:
                              properties:
                                infoTypes:
                                  description: InfoTypes to apply the transformation
                                    to. Leaving this empty will apply the transformation
                                    to apply to all findings that correspond to infoTypes
                                    that were requested in InspectConfig.
                                  items:
                                    properties:
                                      name:
                                        description: Name of the information type.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                                primitiveTransformation:
                                  description: Primitive transformation to apply to
                                    the infoType.
                                  properties:
                                    characterMaskConfig:
                                      description: Partially mask a string by replacing
                                        a given number of characters with a fixed
                                        character. Masking can start from the beginning
                                        or end of the string.
                                      properties:
                                        charactersToIgnore:
                                          description: Characters to skip when doing
                                            de-identification of a value. These will
                                            be left alone and skipped.
                                          items:
                                            properties:
                                              characterToSkip:
                                                description: Characters to not transform
                                                  when masking.
                                                type: string
                                              commonCharactersToIgnore:
                                                description: 'Common characters to
                                                  not transform when masking. Useful
                                                  to avoid removing punctuation. Possible
                                                  values: ["NUMERIC", "ALPHA_UPPER_CASE",
                                                  "ALPHA_LOWER_CASE", "PUNCTUATION",
                                                  "WHITESPACE"]'
                                                type: string
                                            type: object
                                          type: array
                                        maskingCharacter:
                                          description: Character to use to mask the
                                            sensitive values—for example, * for an
                                            alphabetic string such as a name, or 0
                                            for a numeric string such as ZIP code
                                            or credit card number. This string must
                                            have a length of 1. If not supplied, this
                                            value defaults to * for strings, and 0
                                            for digits.
                                          type: string
                                        numberToMask:
                                          description: Number of characters to mask.
                                            If not set, all matching chars will be
                                            masked. Skipped characters do not count
                                            towards this tally.
                                          format: int64
                                          type: integer
                                        reverseOrder:
                                          description: Mask characters in reverse
                                            order. For example, if masking_character
                                            is 0, number_to_mask is 14, and reverse_order
                                            is 'false', then the input string '1234-5678-9012-3456'
                                            is masked as '00000000000000-3456'.
                                          type: boolean
                                      type: object
                                    replaceConfig:
                                      description: Replace each input value with a
                                        given value.
                                      properties:
                                        newValue:
                                          description: Replace each input value with
                                            a given value.
                                          properties:
                                            booleanValue:
                                              description: A boolean value.
                                              type: boolean
                                            dateValue:
                                              description: Represents a whole or partial
                                                calendar date.
                                              properties:
                                                day:
                                                  description: Day of month. Must
                                                    be from 1 to 31 and valid for
                                                    the year and month, or 0 if specifying
                                                    a year by itself or a year and
                                                    month where the day is not significant.
                                                  format: int64
                                                  type: integer
                                                month:
                                                  description: Month of year. Must
                                                    be from 1 to 12, or 0 if specifying
                                                    a year without a month and day.
                                                  format: int64
                                                  type: integer
                                                year:
                                                  description: Year of date. Must
                                                    be from 1 to 9999, or 0 if specifying
                                                    a date without a year.
                                                  format: int64
                                                  type: integer
                                              type: object
                                            dayOfWeekValue:
                                              description: 'Represents a day of the
                                                week. Possible values: ["MONDAY",
                                                "TUESDAY", "WEDNESDAY", "THURSDAY",
                                                "FRIDAY", "SATURDAY", "SUNDAY"]'
                                              type: string
                                            floatValue:
                                              description: A float value.
                                              format: double
                                              type: number
                                            integerValue:
                                              description: An integer value.
                                              format: int64
                                              type: integer
                                            stringValue:
                                              description: A string value.
                                              type: string
                                            timeValue:
                                              description: Represents a time of day.
                                              properties:
                                                hours:
                                                  description: Hours of day in 24
                                                    hour format. Should be from 0
                                                    to 23.
                                                  format: int64
                                                  type: integer
                                                minutes:
                                                  description: Minutes of hour of
                                                    day. Must be from 0 to 59.
                                                  format: int64
                                                  type: integer
                                                nanos:
                                                  description: Fractions of seconds
                                                    in nanoseconds. Must be from 0
                                                    to 999,999,999.
                                                  format: int64
                                                  type: integer
                                                seconds:
                                                  description: Seconds of minutes
                                                    of the time. Must normally be
                                                    from 0 to 59.
                                                  format: int64
                                                  type: integer
                                              type: object
                                            timestampValue:
                                              description: 'A timestamp in RFC3339
                                                UTC "Zulu" format, with nanosecond
                                                resolution and up to nine fractional
                                                digits. Examples: "2014-10-02T15:01:23Z"
                                                and "2014-10-02T15:01:23.045123456Z".'
                                              type: string
                                          type: object
                                      required:
                                      - newValue
                                      type: object
                                  type: object
                              required:
                              - primitiveTransformation
                              type: object
                            type: array
                        required:
                        - transformations
                        type: object
                    required:
                    - infoTypeTransformations
                    type: object
                  description:
                    description: A description of the template.
                    type: string
                  displayName:
                    description: User set display name of the template.
                    type: string
                  id:
                    type: string
                  name:
                    description: The resource name of the template. Set by the server.
                    type: string
                  parent:
                    description: "The parent of the template in any of the following
                      formats: \n * 'projects/{{project}}' * 'projects/{{project}}/locations/{{location}}'
                      * 'organizations/{{organization_id}}' * 'organizations/{{organization_id}}/locations/{{location}}'"
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - deidentifyConfig
                - parent
                - providerRef
                type: object
              name:
                description: The resource name of the template. Set by the server.
                type: string
              parent:
                description: "The parent of the template in any of the following formats:
                  \n * 'projects/{{project}}' * 'projects/{{project}}/locations/{{location}}'
                  * 'organizations/{{organization_id}}' * 'organizations/{{organization_id}}/locations/{{location}}'"
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - deidentifyConfig
            - parent
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
