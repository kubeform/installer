apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: agents.dialogflow.google.kubeform.com
spec:
  group: dialogflow.google.kubeform.com
  names:
    kind: Agent
    listKind: AgentList
    plural: agents
    singular: agent
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              apiVersion:
                description: 'API version displayed in Dialogflow console. If not
                  specified, V2 API is assumed. Clients are free to query different
                  service endpoints for different API versions. However, bots connectors
                  and webhook calls will follow the specified API version. * API_VERSION_V1:
                  Legacy V1 API. * API_VERSION_V2: V2 API. * API_VERSION_V2_BETA_1:
                  V2beta1 API. Possible values: ["API_VERSION_V1", "API_VERSION_V2",
                  "API_VERSION_V2_BETA_1"]'
                type: string
              avatarURI:
                description: The URI of the agent's avatar, which are used throughout
                  the Dialogflow console. When an image URL is entered into this field,
                  the Dialogflow will save the image in the backend. The address of
                  the backend image returned from the API will be shown in the [avatarUriBackend]
                  field.
                type: string
              avatarURIBackend:
                description: The URI of the agent's avatar as returned from the API.
                  Output only. To provide an image URL for the agent avatar, the [avatarUri]
                  field can be used.
                type: string
              classificationThreshold:
                description: To filter out false positive results and still get variety
                  in matched natural language inputs for your agent, you can tune
                  the machine learning classification threshold. If the returned score
                  value is less than the threshold value, then a fallback intent will
                  be triggered or, if there are no fallback intents defined, no intent
                  will be triggered. The score values range from 0.0 (completely uncertain)
                  to 1.0 (completely certain). If set to 0.0, the default of 0.3 is
                  used.
                format: double
                type: number
              defaultLanguageCode:
                description: The default language of the agent as a language tag.
                  [See Language Support](https://cloud.google.com/dialogflow/docs/reference/language)
                  for a list of the currently supported language codes. This field
                  cannot be updated after creation.
                type: string
              description:
                description: The description of this agent. The maximum length is
                  500 characters. If exceeded, the request is rejected.
                type: string
              displayName:
                description: The name of this agent.
                type: string
              enableLogging:
                description: Determines whether this agent should log conversation
                  queries.
                type: boolean
              id:
                type: string
              kubeformOutput:
                properties:
                  apiVersion:
                    description: 'API version displayed in Dialogflow console. If
                      not specified, V2 API is assumed. Clients are free to query
                      different service endpoints for different API versions. However,
                      bots connectors and webhook calls will follow the specified
                      API version. * API_VERSION_V1: Legacy V1 API. * API_VERSION_V2:
                      V2 API. * API_VERSION_V2_BETA_1: V2beta1 API. Possible values:
                      ["API_VERSION_V1", "API_VERSION_V2", "API_VERSION_V2_BETA_1"]'
                    type: string
                  avatarURI:
                    description: The URI of the agent's avatar, which are used throughout
                      the Dialogflow console. When an image URL is entered into this
                      field, the Dialogflow will save the image in the backend. The
                      address of the backend image returned from the API will be shown
                      in the [avatarUriBackend] field.
                    type: string
                  avatarURIBackend:
                    description: The URI of the agent's avatar as returned from the
                      API. Output only. To provide an image URL for the agent avatar,
                      the [avatarUri] field can be used.
                    type: string
                  classificationThreshold:
                    description: To filter out false positive results and still get
                      variety in matched natural language inputs for your agent, you
                      can tune the machine learning classification threshold. If the
                      returned score value is less than the threshold value, then
                      a fallback intent will be triggered or, if there are no fallback
                      intents defined, no intent will be triggered. The score values
                      range from 0.0 (completely uncertain) to 1.0 (completely certain).
                      If set to 0.0, the default of 0.3 is used.
                    format: double
                    type: number
                  defaultLanguageCode:
                    description: The default language of the agent as a language tag.
                      [See Language Support](https://cloud.google.com/dialogflow/docs/reference/language)
                      for a list of the currently supported language codes. This field
                      cannot be updated after creation.
                    type: string
                  description:
                    description: The description of this agent. The maximum length
                      is 500 characters. If exceeded, the request is rejected.
                    type: string
                  displayName:
                    description: The name of this agent.
                    type: string
                  enableLogging:
                    description: Determines whether this agent should log conversation
                      queries.
                    type: boolean
                  id:
                    type: string
                  matchMode:
                    description: 'Determines how intents are detected from user queries.
                      * MATCH_MODE_HYBRID: Best for agents with a small number of
                      examples in intents and/or wide use of templates syntax and
                      composite entities. * MATCH_MODE_ML_ONLY: Can be used for agents
                      with a large number of examples in intents, especially the ones
                      using @sys.any or very large developer entities. Possible values:
                      ["MATCH_MODE_HYBRID", "MATCH_MODE_ML_ONLY"]'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  supportedLanguageCodes:
                    description: The list of all languages supported by this agent
                      (except for the defaultLanguageCode).
                    items:
                      type: string
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  tier:
                    description: 'The agent tier. If not specified, TIER_STANDARD
                      is assumed. * TIER_STANDARD: Standard tier. * TIER_ENTERPRISE:
                      Enterprise tier (Essentials). * TIER_ENTERPRISE_PLUS: Enterprise
                      tier (Plus). NOTE: Due to consistency issues, the provider will
                      not read this field from the API. Drift is possible between
                      the Terraform state and Dialogflow if the agent tier is changed
                      outside of Terraform. Possible values: ["TIER_STANDARD", "TIER_ENTERPRISE",
                      "TIER_ENTERPRISE_PLUS"]'
                    type: string
                  timeZone:
                    description: The time zone of this agent from the [time zone database](https://www.iana.org/time-zones),
                      e.g., America/New_York, Europe/Paris.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - defaultLanguageCode
                - displayName
                - providerRef
                - timeZone
                type: object
              matchMode:
                description: 'Determines how intents are detected from user queries.
                  * MATCH_MODE_HYBRID: Best for agents with a small number of examples
                  in intents and/or wide use of templates syntax and composite entities.
                  * MATCH_MODE_ML_ONLY: Can be used for agents with a large number
                  of examples in intents, especially the ones using @sys.any or very
                  large developer entities. Possible values: ["MATCH_MODE_HYBRID",
                  "MATCH_MODE_ML_ONLY"]'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              supportedLanguageCodes:
                description: The list of all languages supported by this agent (except
                  for the defaultLanguageCode).
                items:
                  type: string
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              tier:
                description: 'The agent tier. If not specified, TIER_STANDARD is assumed.
                  * TIER_STANDARD: Standard tier. * TIER_ENTERPRISE: Enterprise tier
                  (Essentials). * TIER_ENTERPRISE_PLUS: Enterprise tier (Plus). NOTE:
                  Due to consistency issues, the provider will not read this field
                  from the API. Drift is possible between the Terraform state and
                  Dialogflow if the agent tier is changed outside of Terraform. Possible
                  values: ["TIER_STANDARD", "TIER_ENTERPRISE", "TIER_ENTERPRISE_PLUS"]'
                type: string
              timeZone:
                description: The time zone of this agent from the [time zone database](https://www.iana.org/time-zones),
                  e.g., America/New_York, Europe/Paris.
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - defaultLanguageCode
            - displayName
            - providerRef
            - timeZone
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: entitytypes.dialogflow.google.kubeform.com
spec:
  group: dialogflow.google.kubeform.com
  names:
    kind: EntityType
    listKind: EntityTypeList
    plural: entitytypes
    singular: entitytype
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              displayName:
                description: The name of this entity type to be displayed on the console.
                type: string
              enableFuzzyExtraction:
                description: Enables fuzzy entity extraction during classification.
                type: boolean
              entities:
                description: The collection of entity entries associated with the
                  entity type.
                items:
                  properties:
                    synonyms:
                      description: 'A collection of value synonyms. For example, if
                        the entity type is vegetable, and value is scallions, a synonym
                        could be green onions. For KIND_LIST entity types: * This
                        collection must contain exactly one synonym equal to value.'
                      items:
                        type: string
                      type: array
                    value:
                      description: 'The primary value associated with this entity
                        entry. For example, if the entity type is vegetable, the value
                        could be scallions. For KIND_MAP entity types: * A reference
                        value to be used in place of synonyms. For KIND_LIST entity
                        types: * A string that can contain references to other entity
                        types (with or without aliases).'
                      type: string
                  required:
                  - synonyms
                  - value
                  type: object
                type: array
              id:
                type: string
              kind:
                description: 'Indicates the kind of entity type. * KIND_MAP: Map entity
                  types allow mapping of a group of synonyms to a reference value.
                  * KIND_LIST: List entity types contain a set of entries that do
                  not map to reference values. However, list entity types can contain
                  references to other entity types (with or without aliases). * KIND_REGEXP:
                  Regexp entity types allow to specify regular expressions in entries
                  values. Possible values: ["KIND_MAP", "KIND_LIST", "KIND_REGEXP"]'
                type: string
              kubeformOutput:
                properties:
                  displayName:
                    description: The name of this entity type to be displayed on the
                      console.
                    type: string
                  enableFuzzyExtraction:
                    description: Enables fuzzy entity extraction during classification.
                    type: boolean
                  entities:
                    description: The collection of entity entries associated with
                      the entity type.
                    items:
                      properties:
                        synonyms:
                          description: 'A collection of value synonyms. For example,
                            if the entity type is vegetable, and value is scallions,
                            a synonym could be green onions. For KIND_LIST entity
                            types: * This collection must contain exactly one synonym
                            equal to value.'
                          items:
                            type: string
                          type: array
                        value:
                          description: 'The primary value associated with this entity
                            entry. For example, if the entity type is vegetable, the
                            value could be scallions. For KIND_MAP entity types: *
                            A reference value to be used in place of synonyms. For
                            KIND_LIST entity types: * A string that can contain references
                            to other entity types (with or without aliases).'
                          type: string
                      required:
                      - synonyms
                      - value
                      type: object
                    type: array
                  id:
                    type: string
                  kind:
                    description: 'Indicates the kind of entity type. * KIND_MAP: Map
                      entity types allow mapping of a group of synonyms to a reference
                      value. * KIND_LIST: List entity types contain a set of entries
                      that do not map to reference values. However, list entity types
                      can contain references to other entity types (with or without
                      aliases). * KIND_REGEXP: Regexp entity types allow to specify
                      regular expressions in entries values. Possible values: ["KIND_MAP",
                      "KIND_LIST", "KIND_REGEXP"]'
                    type: string
                  name:
                    description: 'The unique identifier of the entity type. Format:
                      projects/<Project ID>/agent/entityTypes/<Entity type ID>.'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - displayName
                - kind
                - providerRef
                type: object
              name:
                description: 'The unique identifier of the entity type. Format: projects/<Project
                  ID>/agent/entityTypes/<Entity type ID>.'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - displayName
            - kind
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: intents.dialogflow.google.kubeform.com
spec:
  group: dialogflow.google.kubeform.com
  names:
    kind: Intent
    listKind: IntentList
    plural: intents
    singular: intent
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              action:
                description: 'The name of the action associated with the intent. Note:
                  The action name must not contain whitespaces.'
                type: string
              defaultResponsePlatforms:
                description: 'The list of platforms for which the first responses
                  will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default
                  platform). Possible values: ["FACEBOOK", "SLACK", "TELEGRAM", "KIK",
                  "SKYPE", "LINE", "VIBER", "ACTIONS_ON_GOOGLE", "GOOGLE_HANGOUTS"]'
                items:
                  type: string
                type: array
              displayName:
                description: The name of this intent to be displayed on the console.
                type: string
              events:
                description: The collection of event names that trigger the intent.
                  If the collection of input contexts is not empty, all of the contexts
                  must be present in the active user session for an event to trigger
                  this intent. See the [events reference](https://cloud.google.com/dialogflow/docs/events-overview)
                  for more details.
                items:
                  type: string
                type: array
              followupIntentInfo:
                description: Information about all followup intents that have this
                  intent as a direct or indirect parent. We populate this field only
                  in the output.
                items:
                  properties:
                    followupIntentName:
                      description: 'The unique identifier of the followup intent.
                        Format: projects/<Project ID>/agent/intents/<Intent ID>.'
                      type: string
                    parentFollowupIntentName:
                      description: 'The unique identifier of the followup intent''s
                        parent. Format: projects/<Project ID>/agent/intents/<Intent
                        ID>.'
                      type: string
                  type: object
                type: array
              id:
                type: string
              inputContextNames:
                description: 'The list of context names required for this intent to
                  be triggered. Format: projects/<Project ID>/agent/sessions/-/contexts/<Context
                  ID>.'
                items:
                  type: string
                type: array
              isFallback:
                description: Indicates whether this is a fallback intent.
                type: boolean
              kubeformOutput:
                properties:
                  action:
                    description: 'The name of the action associated with the intent.
                      Note: The action name must not contain whitespaces.'
                    type: string
                  defaultResponsePlatforms:
                    description: 'The list of platforms for which the first responses
                      will be copied from the messages in PLATFORM_UNSPECIFIED (i.e.
                      default platform). Possible values: ["FACEBOOK", "SLACK", "TELEGRAM",
                      "KIK", "SKYPE", "LINE", "VIBER", "ACTIONS_ON_GOOGLE", "GOOGLE_HANGOUTS"]'
                    items:
                      type: string
                    type: array
                  displayName:
                    description: The name of this intent to be displayed on the console.
                    type: string
                  events:
                    description: The collection of event names that trigger the intent.
                      If the collection of input contexts is not empty, all of the
                      contexts must be present in the active user session for an event
                      to trigger this intent. See the [events reference](https://cloud.google.com/dialogflow/docs/events-overview)
                      for more details.
                    items:
                      type: string
                    type: array
                  followupIntentInfo:
                    description: Information about all followup intents that have
                      this intent as a direct or indirect parent. We populate this
                      field only in the output.
                    items:
                      properties:
                        followupIntentName:
                          description: 'The unique identifier of the followup intent.
                            Format: projects/<Project ID>/agent/intents/<Intent ID>.'
                          type: string
                        parentFollowupIntentName:
                          description: 'The unique identifier of the followup intent''s
                            parent. Format: projects/<Project ID>/agent/intents/<Intent
                            ID>.'
                          type: string
                      type: object
                    type: array
                  id:
                    type: string
                  inputContextNames:
                    description: 'The list of context names required for this intent
                      to be triggered. Format: projects/<Project ID>/agent/sessions/-/contexts/<Context
                      ID>.'
                    items:
                      type: string
                    type: array
                  isFallback:
                    description: Indicates whether this is a fallback intent.
                    type: boolean
                  mlDisabled:
                    description: 'Indicates whether Machine Learning is disabled for
                      the intent. Note: If mlDisabled setting is set to true, then
                      this intent is not taken into account during inference in ML
                      ONLY match mode. Also, auto-markup in the UI is turned off.'
                    type: boolean
                  name:
                    description: 'The unique identifier of this intent. Format: projects/<Project
                      ID>/agent/intents/<Intent ID>.'
                    type: string
                  parentFollowupIntentName:
                    description: 'The unique identifier of the parent intent in the
                      chain of followup intents. Format: projects/<Project ID>/agent/intents/<Intent
                      ID>.'
                    type: string
                  priority:
                    description: The priority of this intent. Higher numbers represent
                      higher priorities.   - If the supplied value is unspecified
                      or 0, the service translates the value to 500,000, which corresponds   to
                      the Normal priority in the console.   - If the supplied value
                      is negative, the intent is ignored in runtime detect intent
                      requests.
                    format: int64
                    type: integer
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  resetContexts:
                    description: Indicates whether to delete all contexts in the current
                      session when this intent is matched.
                    type: boolean
                  rootFollowupIntentName:
                    description: 'The unique identifier of the root intent in the
                      chain of followup intents. It identifies the correct followup
                      intents chain for this intent. Format: projects/<Project ID>/agent/intents/<Intent
                      ID>.'
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  webhookState:
                    description: 'Indicates whether webhooks are enabled for the intent.
                      * WEBHOOK_STATE_ENABLED: Webhook is enabled in the agent and
                      in the intent. * WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING: Webhook
                      is enabled in the agent and in the intent. Also, each slot filling
                      prompt is forwarded to the webhook. Possible values: ["WEBHOOK_STATE_ENABLED",
                      "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"]'
                    type: string
                required:
                - displayName
                - providerRef
                type: object
              mlDisabled:
                description: 'Indicates whether Machine Learning is disabled for the
                  intent. Note: If mlDisabled setting is set to true, then this intent
                  is not taken into account during inference in ML ONLY match mode.
                  Also, auto-markup in the UI is turned off.'
                type: boolean
              name:
                description: 'The unique identifier of this intent. Format: projects/<Project
                  ID>/agent/intents/<Intent ID>.'
                type: string
              parentFollowupIntentName:
                description: 'The unique identifier of the parent intent in the chain
                  of followup intents. Format: projects/<Project ID>/agent/intents/<Intent
                  ID>.'
                type: string
              priority:
                description: The priority of this intent. Higher numbers represent
                  higher priorities.   - If the supplied value is unspecified or 0,
                  the service translates the value to 500,000, which corresponds   to
                  the Normal priority in the console.   - If the supplied value is
                  negative, the intent is ignored in runtime detect intent requests.
                format: int64
                type: integer
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resetContexts:
                description: Indicates whether to delete all contexts in the current
                  session when this intent is matched.
                type: boolean
              rootFollowupIntentName:
                description: 'The unique identifier of the root intent in the chain
                  of followup intents. It identifies the correct followup intents
                  chain for this intent. Format: projects/<Project ID>/agent/intents/<Intent
                  ID>.'
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              webhookState:
                description: 'Indicates whether webhooks are enabled for the intent.
                  * WEBHOOK_STATE_ENABLED: Webhook is enabled in the agent and in
                  the intent. * WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING: Webhook is
                  enabled in the agent and in the intent. Also, each slot filling
                  prompt is forwarded to the webhook. Possible values: ["WEBHOOK_STATE_ENABLED",
                  "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"]'
                type: string
            required:
            - displayName
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
