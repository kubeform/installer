apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: customservices.monitoring.google.kubeform.com
spec:
  group: monitoring.google.kubeform.com
  names:
    kind: CustomService
    listKind: CustomServiceList
    plural: customservices
    singular: customservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              displayName:
                description: Name used for UI elements listing this Service.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  displayName:
                    description: Name used for UI elements listing this Service.
                    type: string
                  id:
                    type: string
                  name:
                    description: 'The full resource name for this service. The syntax
                      is: projects/[PROJECT_ID]/services/[SERVICE_ID].'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  serviceID:
                    description: An optional service ID to use. If not given, the
                      server will generate a service ID.
                    type: string
                  telemetry:
                    description: Configuration for how to query telemetry on a Service.
                    properties:
                      resourceName:
                        description: The full name of the resource that defines this
                          service. Formatted as described in https://cloud.google.com/apis/design/resource_names.
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - providerRef
                type: object
              name:
                description: 'The full resource name for this service. The syntax
                  is: projects/[PROJECT_ID]/services/[SERVICE_ID].'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              serviceID:
                description: An optional service ID to use. If not given, the server
                  will generate a service ID.
                type: string
              telemetry:
                description: Configuration for how to query telemetry on a Service.
                properties:
                  resourceName:
                    description: The full name of the resource that defines this service.
                      Formatted as described in https://cloud.google.com/apis/design/resource_names.
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: dashboards.monitoring.google.kubeform.com
spec:
  group: monitoring.google.kubeform.com
  names:
    kind: Dashboard
    listKind: DashboardList
    plural: dashboards
    singular: dashboard
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              dashboardJSON:
                description: The JSON representation of a dashboard, following the
                  format at https://cloud.google.com/monitoring/api/ref_v3/rest/v1/projects.dashboards.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  dashboardJSON:
                    description: The JSON representation of a dashboard, following
                      the format at https://cloud.google.com/monitoring/api/ref_v3/rest/v1/projects.dashboards.
                    type: string
                  id:
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - dashboardJSON
                - providerRef
                type: object
              project:
                description: The ID of the project in which the resource belongs.
                  If it is not provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - dashboardJSON
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: alertpolicies.monitoring.google.kubeform.com
spec:
  group: monitoring.google.kubeform.com
  names:
    kind: AlertPolicy
    listKind: AlertPolicyList
    plural: alertpolicies
    singular: alertpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              combiner:
                description: 'How to combine the results of multiple conditions to
                  determine if an incident should be opened. Possible values: ["AND",
                  "OR", "AND_WITH_MATCHING_RESOURCE"]'
                type: string
              conditions:
                description: A list of conditions for the policy. The conditions are
                  combined by AND or OR according to the combiner field. If the combined
                  conditions evaluate to true, then an incident is created. A policy
                  can have from one to six conditions.
                items:
                  properties:
                    conditionAbsent:
                      description: A condition that checks that a time series continues
                        to receive new data points.
                      properties:
                        aggregations:
                          description: Specifies the alignment of data points in individual
                            time series as well as how to combine the retrieved time
                            series together (such as when aggregating multiple streams
                            on each resource to a single stream for each resource
                            or when aggregating streams across all members of a group
                            of resources). Multiple aggregations are applied in the
                            order specified.
                          items:
                            properties:
                              alignmentPeriod:
                                description: The alignment period for per-time series
                                  alignment. If present, alignmentPeriod must be at
                                  least 60 seconds. After per-time series alignment,
                                  each time series will contain data points only on
                                  the period boundaries. If perSeriesAligner is not
                                  specified or equals ALIGN_NONE, then this field
                                  is ignored. If perSeriesAligner is specified and
                                  does not equal ALIGN_NONE, then this field must
                                  be defined; otherwise an error is returned.
                                type: string
                              crossSeriesReducer:
                                description: 'The approach to be used to combine time
                                  series. Not all reducer functions may be applied
                                  to all time series, depending on the metric type
                                  and the value type of the original time series.
                                  Reduction may change the metric type of value type
                                  of the time series.Time series data must be aligned
                                  in order to perform cross- time series reduction.
                                  If crossSeriesReducer is specified, then perSeriesAligner
                                  must be specified and not equal ALIGN_NONE and alignmentPeriod
                                  must be specified; otherwise, an error is returned.
                                  Possible values: ["REDUCE_NONE", "REDUCE_MEAN",
                                  "REDUCE_MIN", "REDUCE_MAX", "REDUCE_SUM", "REDUCE_STDDEV",
                                  "REDUCE_COUNT", "REDUCE_COUNT_TRUE", "REDUCE_COUNT_FALSE",
                                  "REDUCE_FRACTION_TRUE", "REDUCE_PERCENTILE_99",
                                  "REDUCE_PERCENTILE_95", "REDUCE_PERCENTILE_50",
                                  "REDUCE_PERCENTILE_05"]'
                                type: string
                              groupByFields:
                                description: The set of fields to preserve when crossSeriesReducer
                                  is specified. The groupByFields determine how the
                                  time series are partitioned into subsets prior to
                                  applying the aggregation function. Each subset contains
                                  time series that have the same value for each of
                                  the grouping fields. Each individual time series
                                  is a member of exactly one subset. The crossSeriesReducer
                                  is applied to each subset of time series. It is
                                  not possible to reduce across different resource
                                  types, so this field implicitly contains resource.type.
                                  Fields not specified in groupByFields are aggregated
                                  away. If groupByFields is not specified and all
                                  the time series have the same resource type, then
                                  the time series are aggregated into a single output
                                  time series. If crossSeriesReducer is not defined,
                                  this field is ignored.
                                items:
                                  type: string
                                type: array
                              perSeriesAligner:
                                description: 'The approach to be used to align individual
                                  time series. Not all alignment functions may be
                                  applied to all time series, depending on the metric
                                  type and value type of the original time series.
                                  Alignment may change the metric type or the value
                                  type of the time series.Time series data must be
                                  aligned in order to perform cross- time series reduction.
                                  If crossSeriesReducer is specified, then perSeriesAligner
                                  must be specified and not equal ALIGN_NONE and alignmentPeriod
                                  must be specified; otherwise, an error is returned.
                                  Possible values: ["ALIGN_NONE", "ALIGN_DELTA", "ALIGN_RATE",
                                  "ALIGN_INTERPOLATE", "ALIGN_NEXT_OLDER", "ALIGN_MIN",
                                  "ALIGN_MAX", "ALIGN_MEAN", "ALIGN_COUNT", "ALIGN_SUM",
                                  "ALIGN_STDDEV", "ALIGN_COUNT_TRUE", "ALIGN_COUNT_FALSE",
                                  "ALIGN_FRACTION_TRUE", "ALIGN_PERCENTILE_99", "ALIGN_PERCENTILE_95",
                                  "ALIGN_PERCENTILE_50", "ALIGN_PERCENTILE_05", "ALIGN_PERCENT_CHANGE"]'
                                type: string
                            type: object
                          type: array
                        duration:
                          description: The amount of time that a time series must
                            fail to report new data to be considered failing. Currently,
                            only values that are a multiple of a minute--e.g. 60s,
                            120s, or 300s --are supported.
                          type: string
                        filter:
                          description: A filter that identifies which time series
                            should be compared with the threshold.The filter is similar
                            to the one that is specified in the MetricService.ListTimeSeries
                            request (that call is useful to verify the time series
                            that will be retrieved / processed) and must specify the
                            metric type and optionally may contain restrictions on
                            resource type, resource labels, and metric labels. This
                            field may not exceed 2048 Unicode characters in length.
                          type: string
                        trigger:
                          description: The number/percent of time series for which
                            the comparison must hold in order for the condition to
                            trigger. If unspecified, then the condition will trigger
                            if the comparison is true for any of the time series that
                            have been identified by filter and aggregations.
                          properties:
                            count:
                              description: The absolute number of time series that
                                must fail the predicate for the condition to be triggered.
                              format: int64
                              type: integer
                            percent:
                              description: The percentage of time series that must
                                fail the predicate for the condition to be triggered.
                              format: double
                              type: number
                          type: object
                      required:
                      - duration
                      type: object
                    conditionMonitoringQueryLanguage:
                      description: A Monitoring Query Language query that outputs
                        a boolean stream
                      properties:
                        duration:
                          description: The amount of time that a time series must
                            violate the threshold to be considered failing. Currently,
                            only values that are a multiple of a minute--e.g., 0,
                            60, 120, or 300 seconds--are supported. If an invalid
                            value is given, an error will be returned. When choosing
                            a duration, it is useful to keep in mind the frequency
                            of the underlying time series data (which may also be
                            affected by any alignments specified in the aggregations
                            field); a good duration is long enough so that a single
                            outlier does not generate spurious alerts, but short enough
                            that unhealthy states are detected and alerted on quickly.
                          type: string
                        query:
                          description: Monitoring Query Language query that outputs
                            a boolean stream.
                          type: string
                        trigger:
                          description: The number/percent of time series for which
                            the comparison must hold in order for the condition to
                            trigger. If unspecified, then the condition will trigger
                            if the comparison is true for any of the time series that
                            have been identified by filter and aggregations, or by
                            the ratio, if denominator_filter and denominator_aggregations
                            are specified.
                          properties:
                            count:
                              description: The absolute number of time series that
                                must fail the predicate for the condition to be triggered.
                              format: int64
                              type: integer
                            percent:
                              description: The percentage of time series that must
                                fail the predicate for the condition to be triggered.
                              format: double
                              type: number
                          type: object
                      required:
                      - duration
                      - query
                      type: object
                    conditionThreshold:
                      description: A condition that compares a time series against
                        a threshold.
                      properties:
                        aggregations:
                          description: Specifies the alignment of data points in individual
                            time series as well as how to combine the retrieved time
                            series together (such as when aggregating multiple streams
                            on each resource to a single stream for each resource
                            or when aggregating streams across all members of a group
                            of resources). Multiple aggregations are applied in the
                            order specified.This field is similar to the one in the
                            MetricService.ListTimeSeries request. It is advisable
                            to use the ListTimeSeries method when debugging this field.
                          items:
                            properties:
                              alignmentPeriod:
                                description: The alignment period for per-time series
                                  alignment. If present, alignmentPeriod must be at
                                  least 60 seconds. After per-time series alignment,
                                  each time series will contain data points only on
                                  the period boundaries. If perSeriesAligner is not
                                  specified or equals ALIGN_NONE, then this field
                                  is ignored. If perSeriesAligner is specified and
                                  does not equal ALIGN_NONE, then this field must
                                  be defined; otherwise an error is returned.
                                type: string
                              crossSeriesReducer:
                                description: 'The approach to be used to combine time
                                  series. Not all reducer functions may be applied
                                  to all time series, depending on the metric type
                                  and the value type of the original time series.
                                  Reduction may change the metric type of value type
                                  of the time series.Time series data must be aligned
                                  in order to perform cross- time series reduction.
                                  If crossSeriesReducer is specified, then perSeriesAligner
                                  must be specified and not equal ALIGN_NONE and alignmentPeriod
                                  must be specified; otherwise, an error is returned.
                                  Possible values: ["REDUCE_NONE", "REDUCE_MEAN",
                                  "REDUCE_MIN", "REDUCE_MAX", "REDUCE_SUM", "REDUCE_STDDEV",
                                  "REDUCE_COUNT", "REDUCE_COUNT_TRUE", "REDUCE_COUNT_FALSE",
                                  "REDUCE_FRACTION_TRUE", "REDUCE_PERCENTILE_99",
                                  "REDUCE_PERCENTILE_95", "REDUCE_PERCENTILE_50",
                                  "REDUCE_PERCENTILE_05"]'
                                type: string
                              groupByFields:
                                description: The set of fields to preserve when crossSeriesReducer
                                  is specified. The groupByFields determine how the
                                  time series are partitioned into subsets prior to
                                  applying the aggregation function. Each subset contains
                                  time series that have the same value for each of
                                  the grouping fields. Each individual time series
                                  is a member of exactly one subset. The crossSeriesReducer
                                  is applied to each subset of time series. It is
                                  not possible to reduce across different resource
                                  types, so this field implicitly contains resource.type.
                                  Fields not specified in groupByFields are aggregated
                                  away. If groupByFields is not specified and all
                                  the time series have the same resource type, then
                                  the time series are aggregated into a single output
                                  time series. If crossSeriesReducer is not defined,
                                  this field is ignored.
                                items:
                                  type: string
                                type: array
                              perSeriesAligner:
                                description: 'The approach to be used to align individual
                                  time series. Not all alignment functions may be
                                  applied to all time series, depending on the metric
                                  type and value type of the original time series.
                                  Alignment may change the metric type or the value
                                  type of the time series.Time series data must be
                                  aligned in order to perform cross- time series reduction.
                                  If crossSeriesReducer is specified, then perSeriesAligner
                                  must be specified and not equal ALIGN_NONE and alignmentPeriod
                                  must be specified; otherwise, an error is returned.
                                  Possible values: ["ALIGN_NONE", "ALIGN_DELTA", "ALIGN_RATE",
                                  "ALIGN_INTERPOLATE", "ALIGN_NEXT_OLDER", "ALIGN_MIN",
                                  "ALIGN_MAX", "ALIGN_MEAN", "ALIGN_COUNT", "ALIGN_SUM",
                                  "ALIGN_STDDEV", "ALIGN_COUNT_TRUE", "ALIGN_COUNT_FALSE",
                                  "ALIGN_FRACTION_TRUE", "ALIGN_PERCENTILE_99", "ALIGN_PERCENTILE_95",
                                  "ALIGN_PERCENTILE_50", "ALIGN_PERCENTILE_05", "ALIGN_PERCENT_CHANGE"]'
                                type: string
                            type: object
                          type: array
                        comparison:
                          description: 'The comparison to apply between the time series
                            (indicated by filter and aggregation) and the threshold
                            (indicated by threshold_value). The comparison is applied
                            on each time series, with the time series on the left-hand
                            side and the threshold on the right-hand side. Only COMPARISON_LT
                            and COMPARISON_GT are supported currently. Possible values:
                            ["COMPARISON_GT", "COMPARISON_GE", "COMPARISON_LT", "COMPARISON_LE",
                            "COMPARISON_EQ", "COMPARISON_NE"]'
                          type: string
                        denominatorAggregations:
                          description: Specifies the alignment of data points in individual
                            time series selected by denominatorFilter as well as how
                            to combine the retrieved time series together (such as
                            when aggregating multiple streams on each resource to
                            a single stream for each resource or when aggregating
                            streams across all members of a group of resources).When
                            computing ratios, the aggregations and denominator_aggregations
                            fields must use the same alignment period and produce
                            time series that have the same periodicity and labels.This
                            field is similar to the one in the MetricService.ListTimeSeries
                            request. It is advisable to use the ListTimeSeries method
                            when debugging this field.
                          items:
                            properties:
                              alignmentPeriod:
                                description: The alignment period for per-time series
                                  alignment. If present, alignmentPeriod must be at
                                  least 60 seconds. After per-time series alignment,
                                  each time series will contain data points only on
                                  the period boundaries. If perSeriesAligner is not
                                  specified or equals ALIGN_NONE, then this field
                                  is ignored. If perSeriesAligner is specified and
                                  does not equal ALIGN_NONE, then this field must
                                  be defined; otherwise an error is returned.
                                type: string
                              crossSeriesReducer:
                                description: 'The approach to be used to combine time
                                  series. Not all reducer functions may be applied
                                  to all time series, depending on the metric type
                                  and the value type of the original time series.
                                  Reduction may change the metric type of value type
                                  of the time series.Time series data must be aligned
                                  in order to perform cross- time series reduction.
                                  If crossSeriesReducer is specified, then perSeriesAligner
                                  must be specified and not equal ALIGN_NONE and alignmentPeriod
                                  must be specified; otherwise, an error is returned.
                                  Possible values: ["REDUCE_NONE", "REDUCE_MEAN",
                                  "REDUCE_MIN", "REDUCE_MAX", "REDUCE_SUM", "REDUCE_STDDEV",
                                  "REDUCE_COUNT", "REDUCE_COUNT_TRUE", "REDUCE_COUNT_FALSE",
                                  "REDUCE_FRACTION_TRUE", "REDUCE_PERCENTILE_99",
                                  "REDUCE_PERCENTILE_95", "REDUCE_PERCENTILE_50",
                                  "REDUCE_PERCENTILE_05"]'
                                type: string
                              groupByFields:
                                description: The set of fields to preserve when crossSeriesReducer
                                  is specified. The groupByFields determine how the
                                  time series are partitioned into subsets prior to
                                  applying the aggregation function. Each subset contains
                                  time series that have the same value for each of
                                  the grouping fields. Each individual time series
                                  is a member of exactly one subset. The crossSeriesReducer
                                  is applied to each subset of time series. It is
                                  not possible to reduce across different resource
                                  types, so this field implicitly contains resource.type.
                                  Fields not specified in groupByFields are aggregated
                                  away. If groupByFields is not specified and all
                                  the time series have the same resource type, then
                                  the time series are aggregated into a single output
                                  time series. If crossSeriesReducer is not defined,
                                  this field is ignored.
                                items:
                                  type: string
                                type: array
                              perSeriesAligner:
                                description: 'The approach to be used to align individual
                                  time series. Not all alignment functions may be
                                  applied to all time series, depending on the metric
                                  type and value type of the original time series.
                                  Alignment may change the metric type or the value
                                  type of the time series.Time series data must be
                                  aligned in order to perform cross- time series reduction.
                                  If crossSeriesReducer is specified, then perSeriesAligner
                                  must be specified and not equal ALIGN_NONE and alignmentPeriod
                                  must be specified; otherwise, an error is returned.
                                  Possible values: ["ALIGN_NONE", "ALIGN_DELTA", "ALIGN_RATE",
                                  "ALIGN_INTERPOLATE", "ALIGN_NEXT_OLDER", "ALIGN_MIN",
                                  "ALIGN_MAX", "ALIGN_MEAN", "ALIGN_COUNT", "ALIGN_SUM",
                                  "ALIGN_STDDEV", "ALIGN_COUNT_TRUE", "ALIGN_COUNT_FALSE",
                                  "ALIGN_FRACTION_TRUE", "ALIGN_PERCENTILE_99", "ALIGN_PERCENTILE_95",
                                  "ALIGN_PERCENTILE_50", "ALIGN_PERCENTILE_05", "ALIGN_PERCENT_CHANGE"]'
                                type: string
                            type: object
                          type: array
                        denominatorFilter:
                          description: A filter that identifies a time series that
                            should be used as the denominator of a ratio that will
                            be compared with the threshold. If a denominator_filter
                            is specified, the time series specified by the filter
                            field will be used as the numerator.The filter is similar
                            to the one that is specified in the MetricService.ListTimeSeries
                            request (that call is useful to verify the time series
                            that will be retrieved / processed) and must specify the
                            metric type and optionally may contain restrictions on
                            resource type, resource labels, and metric labels. This
                            field may not exceed 2048 Unicode characters in length.
                          type: string
                        duration:
                          description: The amount of time that a time series must
                            violate the threshold to be considered failing. Currently,
                            only values that are a multiple of a minute--e.g., 0,
                            60, 120, or 300 seconds--are supported. If an invalid
                            value is given, an error will be returned. When choosing
                            a duration, it is useful to keep in mind the frequency
                            of the underlying time series data (which may also be
                            affected by any alignments specified in the aggregations
                            field); a good duration is long enough so that a single
                            outlier does not generate spurious alerts, but short enough
                            that unhealthy states are detected and alerted on quickly.
                          type: string
                        filter:
                          description: A filter that identifies which time series
                            should be compared with the threshold.The filter is similar
                            to the one that is specified in the MetricService.ListTimeSeries
                            request (that call is useful to verify the time series
                            that will be retrieved / processed) and must specify the
                            metric type and optionally may contain restrictions on
                            resource type, resource labels, and metric labels. This
                            field may not exceed 2048 Unicode characters in length.
                          type: string
                        thresholdValue:
                          description: A value against which to compare the time series.
                          format: double
                          type: number
                        trigger:
                          description: The number/percent of time series for which
                            the comparison must hold in order for the condition to
                            trigger. If unspecified, then the condition will trigger
                            if the comparison is true for any of the time series that
                            have been identified by filter and aggregations, or by
                            the ratio, if denominator_filter and denominator_aggregations
                            are specified.
                          properties:
                            count:
                              description: The absolute number of time series that
                                must fail the predicate for the condition to be triggered.
                              format: int64
                              type: integer
                            percent:
                              description: The percentage of time series that must
                                fail the predicate for the condition to be triggered.
                              format: double
                              type: number
                          type: object
                      required:
                      - comparison
                      - duration
                      type: object
                    displayName:
                      description: A short name or phrase used to identify the condition
                        in dashboards, notifications, and incidents. To avoid confusion,
                        don't use the same display name for multiple conditions in
                        the same policy.
                      type: string
                    name:
                      description: 'The unique resource name for this condition. Its
                        syntax is: projects/[PROJECT_ID]/alertPolicies/[POLICY_ID]/conditions/[CONDITION_ID]
                        [CONDITION_ID] is assigned by Stackdriver Monitoring when
                        the condition is created as part of a new or updated alerting
                        policy.'
                      type: string
                  required:
                  - displayName
                  type: object
                type: array
              creationRecord:
                description: A read-only record of the creation of the alerting policy.
                  If provided in a call to create or update, this field will be ignored.
                items:
                  properties:
                    mutateTime:
                      description: When the change occurred.
                      type: string
                    mutatedBy:
                      description: The email address of the user making the change.
                      type: string
                  type: object
                type: array
              displayName:
                description: A short name or phrase used to identify the policy in
                  dashboards, notifications, and incidents. To avoid confusion, don't
                  use the same display name for multiple policies in the same project.
                  The name is limited to 512 Unicode characters.
                type: string
              documentation:
                description: Documentation that is included with notifications and
                  incidents related to this policy. Best practice is for the documentation
                  to include information to help responders understand, mitigate,
                  escalate, and correct the underlying problems detected by the alerting
                  policy. Notification channels that have limited capacity might not
                  show this documentation.
                properties:
                  content:
                    description: The text of the documentation, interpreted according
                      to mimeType. The content may not exceed 8,192 Unicode characters
                      and may not exceed more than 10,240 bytes when encoded in UTF-8
                      format, whichever is smaller.
                    type: string
                  mimeType:
                    description: The format of the content field. Presently, only
                      the value "text/markdown" is supported.
                    type: string
                type: object
              enabled:
                description: Whether or not the policy is enabled. The default is
                  true.
                type: boolean
              id:
                type: string
              kubeformOutput:
                properties:
                  combiner:
                    description: 'How to combine the results of multiple conditions
                      to determine if an incident should be opened. Possible values:
                      ["AND", "OR", "AND_WITH_MATCHING_RESOURCE"]'
                    type: string
                  conditions:
                    description: A list of conditions for the policy. The conditions
                      are combined by AND or OR according to the combiner field. If
                      the combined conditions evaluate to true, then an incident is
                      created. A policy can have from one to six conditions.
                    items:
                      properties:
                        conditionAbsent:
                          description: A condition that checks that a time series
                            continues to receive new data points.
                          properties:
                            aggregations:
                              description: Specifies the alignment of data points
                                in individual time series as well as how to combine
                                the retrieved time series together (such as when aggregating
                                multiple streams on each resource to a single stream
                                for each resource or when aggregating streams across
                                all members of a group of resources). Multiple aggregations
                                are applied in the order specified.
                              items:
                                properties:
                                  alignmentPeriod:
                                    description: The alignment period for per-time
                                      series alignment. If present, alignmentPeriod
                                      must be at least 60 seconds. After per-time
                                      series alignment, each time series will contain
                                      data points only on the period boundaries. If
                                      perSeriesAligner is not specified or equals
                                      ALIGN_NONE, then this field is ignored. If perSeriesAligner
                                      is specified and does not equal ALIGN_NONE,
                                      then this field must be defined; otherwise an
                                      error is returned.
                                    type: string
                                  crossSeriesReducer:
                                    description: 'The approach to be used to combine
                                      time series. Not all reducer functions may be
                                      applied to all time series, depending on the
                                      metric type and the value type of the original
                                      time series. Reduction may change the metric
                                      type of value type of the time series.Time series
                                      data must be aligned in order to perform cross-
                                      time series reduction. If crossSeriesReducer
                                      is specified, then perSeriesAligner must be
                                      specified and not equal ALIGN_NONE and alignmentPeriod
                                      must be specified; otherwise, an error is returned.
                                      Possible values: ["REDUCE_NONE", "REDUCE_MEAN",
                                      "REDUCE_MIN", "REDUCE_MAX", "REDUCE_SUM", "REDUCE_STDDEV",
                                      "REDUCE_COUNT", "REDUCE_COUNT_TRUE", "REDUCE_COUNT_FALSE",
                                      "REDUCE_FRACTION_TRUE", "REDUCE_PERCENTILE_99",
                                      "REDUCE_PERCENTILE_95", "REDUCE_PERCENTILE_50",
                                      "REDUCE_PERCENTILE_05"]'
                                    type: string
                                  groupByFields:
                                    description: The set of fields to preserve when
                                      crossSeriesReducer is specified. The groupByFields
                                      determine how the time series are partitioned
                                      into subsets prior to applying the aggregation
                                      function. Each subset contains time series that
                                      have the same value for each of the grouping
                                      fields. Each individual time series is a member
                                      of exactly one subset. The crossSeriesReducer
                                      is applied to each subset of time series. It
                                      is not possible to reduce across different resource
                                      types, so this field implicitly contains resource.type.
                                      Fields not specified in groupByFields are aggregated
                                      away. If groupByFields is not specified and
                                      all the time series have the same resource type,
                                      then the time series are aggregated into a single
                                      output time series. If crossSeriesReducer is
                                      not defined, this field is ignored.
                                    items:
                                      type: string
                                    type: array
                                  perSeriesAligner:
                                    description: 'The approach to be used to align
                                      individual time series. Not all alignment functions
                                      may be applied to all time series, depending
                                      on the metric type and value type of the original
                                      time series. Alignment may change the metric
                                      type or the value type of the time series.Time
                                      series data must be aligned in order to perform
                                      cross- time series reduction. If crossSeriesReducer
                                      is specified, then perSeriesAligner must be
                                      specified and not equal ALIGN_NONE and alignmentPeriod
                                      must be specified; otherwise, an error is returned.
                                      Possible values: ["ALIGN_NONE", "ALIGN_DELTA",
                                      "ALIGN_RATE", "ALIGN_INTERPOLATE", "ALIGN_NEXT_OLDER",
                                      "ALIGN_MIN", "ALIGN_MAX", "ALIGN_MEAN", "ALIGN_COUNT",
                                      "ALIGN_SUM", "ALIGN_STDDEV", "ALIGN_COUNT_TRUE",
                                      "ALIGN_COUNT_FALSE", "ALIGN_FRACTION_TRUE",
                                      "ALIGN_PERCENTILE_99", "ALIGN_PERCENTILE_95",
                                      "ALIGN_PERCENTILE_50", "ALIGN_PERCENTILE_05",
                                      "ALIGN_PERCENT_CHANGE"]'
                                    type: string
                                type: object
                              type: array
                            duration:
                              description: The amount of time that a time series must
                                fail to report new data to be considered failing.
                                Currently, only values that are a multiple of a minute--e.g.
                                60s, 120s, or 300s --are supported.
                              type: string
                            filter:
                              description: A filter that identifies which time series
                                should be compared with the threshold.The filter is
                                similar to the one that is specified in the MetricService.ListTimeSeries
                                request (that call is useful to verify the time series
                                that will be retrieved / processed) and must specify
                                the metric type and optionally may contain restrictions
                                on resource type, resource labels, and metric labels.
                                This field may not exceed 2048 Unicode characters
                                in length.
                              type: string
                            trigger:
                              description: The number/percent of time series for which
                                the comparison must hold in order for the condition
                                to trigger. If unspecified, then the condition will
                                trigger if the comparison is true for any of the time
                                series that have been identified by filter and aggregations.
                              properties:
                                count:
                                  description: The absolute number of time series
                                    that must fail the predicate for the condition
                                    to be triggered.
                                  format: int64
                                  type: integer
                                percent:
                                  description: The percentage of time series that
                                    must fail the predicate for the condition to be
                                    triggered.
                                  format: double
                                  type: number
                              type: object
                          required:
                          - duration
                          type: object
                        conditionMonitoringQueryLanguage:
                          description: A Monitoring Query Language query that outputs
                            a boolean stream
                          properties:
                            duration:
                              description: The amount of time that a time series must
                                violate the threshold to be considered failing. Currently,
                                only values that are a multiple of a minute--e.g.,
                                0, 60, 120, or 300 seconds--are supported. If an invalid
                                value is given, an error will be returned. When choosing
                                a duration, it is useful to keep in mind the frequency
                                of the underlying time series data (which may also
                                be affected by any alignments specified in the aggregations
                                field); a good duration is long enough so that a single
                                outlier does not generate spurious alerts, but short
                                enough that unhealthy states are detected and alerted
                                on quickly.
                              type: string
                            query:
                              description: Monitoring Query Language query that outputs
                                a boolean stream.
                              type: string
                            trigger:
                              description: The number/percent of time series for which
                                the comparison must hold in order for the condition
                                to trigger. If unspecified, then the condition will
                                trigger if the comparison is true for any of the time
                                series that have been identified by filter and aggregations,
                                or by the ratio, if denominator_filter and denominator_aggregations
                                are specified.
                              properties:
                                count:
                                  description: The absolute number of time series
                                    that must fail the predicate for the condition
                                    to be triggered.
                                  format: int64
                                  type: integer
                                percent:
                                  description: The percentage of time series that
                                    must fail the predicate for the condition to be
                                    triggered.
                                  format: double
                                  type: number
                              type: object
                          required:
                          - duration
                          - query
                          type: object
                        conditionThreshold:
                          description: A condition that compares a time series against
                            a threshold.
                          properties:
                            aggregations:
                              description: Specifies the alignment of data points
                                in individual time series as well as how to combine
                                the retrieved time series together (such as when aggregating
                                multiple streams on each resource to a single stream
                                for each resource or when aggregating streams across
                                all members of a group of resources). Multiple aggregations
                                are applied in the order specified.This field is similar
                                to the one in the MetricService.ListTimeSeries request.
                                It is advisable to use the ListTimeSeries method when
                                debugging this field.
                              items:
                                properties:
                                  alignmentPeriod:
                                    description: The alignment period for per-time
                                      series alignment. If present, alignmentPeriod
                                      must be at least 60 seconds. After per-time
                                      series alignment, each time series will contain
                                      data points only on the period boundaries. If
                                      perSeriesAligner is not specified or equals
                                      ALIGN_NONE, then this field is ignored. If perSeriesAligner
                                      is specified and does not equal ALIGN_NONE,
                                      then this field must be defined; otherwise an
                                      error is returned.
                                    type: string
                                  crossSeriesReducer:
                                    description: 'The approach to be used to combine
                                      time series. Not all reducer functions may be
                                      applied to all time series, depending on the
                                      metric type and the value type of the original
                                      time series. Reduction may change the metric
                                      type of value type of the time series.Time series
                                      data must be aligned in order to perform cross-
                                      time series reduction. If crossSeriesReducer
                                      is specified, then perSeriesAligner must be
                                      specified and not equal ALIGN_NONE and alignmentPeriod
                                      must be specified; otherwise, an error is returned.
                                      Possible values: ["REDUCE_NONE", "REDUCE_MEAN",
                                      "REDUCE_MIN", "REDUCE_MAX", "REDUCE_SUM", "REDUCE_STDDEV",
                                      "REDUCE_COUNT", "REDUCE_COUNT_TRUE", "REDUCE_COUNT_FALSE",
                                      "REDUCE_FRACTION_TRUE", "REDUCE_PERCENTILE_99",
                                      "REDUCE_PERCENTILE_95", "REDUCE_PERCENTILE_50",
                                      "REDUCE_PERCENTILE_05"]'
                                    type: string
                                  groupByFields:
                                    description: The set of fields to preserve when
                                      crossSeriesReducer is specified. The groupByFields
                                      determine how the time series are partitioned
                                      into subsets prior to applying the aggregation
                                      function. Each subset contains time series that
                                      have the same value for each of the grouping
                                      fields. Each individual time series is a member
                                      of exactly one subset. The crossSeriesReducer
                                      is applied to each subset of time series. It
                                      is not possible to reduce across different resource
                                      types, so this field implicitly contains resource.type.
                                      Fields not specified in groupByFields are aggregated
                                      away. If groupByFields is not specified and
                                      all the time series have the same resource type,
                                      then the time series are aggregated into a single
                                      output time series. If crossSeriesReducer is
                                      not defined, this field is ignored.
                                    items:
                                      type: string
                                    type: array
                                  perSeriesAligner:
                                    description: 'The approach to be used to align
                                      individual time series. Not all alignment functions
                                      may be applied to all time series, depending
                                      on the metric type and value type of the original
                                      time series. Alignment may change the metric
                                      type or the value type of the time series.Time
                                      series data must be aligned in order to perform
                                      cross- time series reduction. If crossSeriesReducer
                                      is specified, then perSeriesAligner must be
                                      specified and not equal ALIGN_NONE and alignmentPeriod
                                      must be specified; otherwise, an error is returned.
                                      Possible values: ["ALIGN_NONE", "ALIGN_DELTA",
                                      "ALIGN_RATE", "ALIGN_INTERPOLATE", "ALIGN_NEXT_OLDER",
                                      "ALIGN_MIN", "ALIGN_MAX", "ALIGN_MEAN", "ALIGN_COUNT",
                                      "ALIGN_SUM", "ALIGN_STDDEV", "ALIGN_COUNT_TRUE",
                                      "ALIGN_COUNT_FALSE", "ALIGN_FRACTION_TRUE",
                                      "ALIGN_PERCENTILE_99", "ALIGN_PERCENTILE_95",
                                      "ALIGN_PERCENTILE_50", "ALIGN_PERCENTILE_05",
                                      "ALIGN_PERCENT_CHANGE"]'
                                    type: string
                                type: object
                              type: array
                            comparison:
                              description: 'The comparison to apply between the time
                                series (indicated by filter and aggregation) and the
                                threshold (indicated by threshold_value). The comparison
                                is applied on each time series, with the time series
                                on the left-hand side and the threshold on the right-hand
                                side. Only COMPARISON_LT and COMPARISON_GT are supported
                                currently. Possible values: ["COMPARISON_GT", "COMPARISON_GE",
                                "COMPARISON_LT", "COMPARISON_LE", "COMPARISON_EQ",
                                "COMPARISON_NE"]'
                              type: string
                            denominatorAggregations:
                              description: Specifies the alignment of data points
                                in individual time series selected by denominatorFilter
                                as well as how to combine the retrieved time series
                                together (such as when aggregating multiple streams
                                on each resource to a single stream for each resource
                                or when aggregating streams across all members of
                                a group of resources).When computing ratios, the aggregations
                                and denominator_aggregations fields must use the same
                                alignment period and produce time series that have
                                the same periodicity and labels.This field is similar
                                to the one in the MetricService.ListTimeSeries request.
                                It is advisable to use the ListTimeSeries method when
                                debugging this field.
                              items:
                                properties:
                                  alignmentPeriod:
                                    description: The alignment period for per-time
                                      series alignment. If present, alignmentPeriod
                                      must be at least 60 seconds. After per-time
                                      series alignment, each time series will contain
                                      data points only on the period boundaries. If
                                      perSeriesAligner is not specified or equals
                                      ALIGN_NONE, then this field is ignored. If perSeriesAligner
                                      is specified and does not equal ALIGN_NONE,
                                      then this field must be defined; otherwise an
                                      error is returned.
                                    type: string
                                  crossSeriesReducer:
                                    description: 'The approach to be used to combine
                                      time series. Not all reducer functions may be
                                      applied to all time series, depending on the
                                      metric type and the value type of the original
                                      time series. Reduction may change the metric
                                      type of value type of the time series.Time series
                                      data must be aligned in order to perform cross-
                                      time series reduction. If crossSeriesReducer
                                      is specified, then perSeriesAligner must be
                                      specified and not equal ALIGN_NONE and alignmentPeriod
                                      must be specified; otherwise, an error is returned.
                                      Possible values: ["REDUCE_NONE", "REDUCE_MEAN",
                                      "REDUCE_MIN", "REDUCE_MAX", "REDUCE_SUM", "REDUCE_STDDEV",
                                      "REDUCE_COUNT", "REDUCE_COUNT_TRUE", "REDUCE_COUNT_FALSE",
                                      "REDUCE_FRACTION_TRUE", "REDUCE_PERCENTILE_99",
                                      "REDUCE_PERCENTILE_95", "REDUCE_PERCENTILE_50",
                                      "REDUCE_PERCENTILE_05"]'
                                    type: string
                                  groupByFields:
                                    description: The set of fields to preserve when
                                      crossSeriesReducer is specified. The groupByFields
                                      determine how the time series are partitioned
                                      into subsets prior to applying the aggregation
                                      function. Each subset contains time series that
                                      have the same value for each of the grouping
                                      fields. Each individual time series is a member
                                      of exactly one subset. The crossSeriesReducer
                                      is applied to each subset of time series. It
                                      is not possible to reduce across different resource
                                      types, so this field implicitly contains resource.type.
                                      Fields not specified in groupByFields are aggregated
                                      away. If groupByFields is not specified and
                                      all the time series have the same resource type,
                                      then the time series are aggregated into a single
                                      output time series. If crossSeriesReducer is
                                      not defined, this field is ignored.
                                    items:
                                      type: string
                                    type: array
                                  perSeriesAligner:
                                    description: 'The approach to be used to align
                                      individual time series. Not all alignment functions
                                      may be applied to all time series, depending
                                      on the metric type and value type of the original
                                      time series. Alignment may change the metric
                                      type or the value type of the time series.Time
                                      series data must be aligned in order to perform
                                      cross- time series reduction. If crossSeriesReducer
                                      is specified, then perSeriesAligner must be
                                      specified and not equal ALIGN_NONE and alignmentPeriod
                                      must be specified; otherwise, an error is returned.
                                      Possible values: ["ALIGN_NONE", "ALIGN_DELTA",
                                      "ALIGN_RATE", "ALIGN_INTERPOLATE", "ALIGN_NEXT_OLDER",
                                      "ALIGN_MIN", "ALIGN_MAX", "ALIGN_MEAN", "ALIGN_COUNT",
                                      "ALIGN_SUM", "ALIGN_STDDEV", "ALIGN_COUNT_TRUE",
                                      "ALIGN_COUNT_FALSE", "ALIGN_FRACTION_TRUE",
                                      "ALIGN_PERCENTILE_99", "ALIGN_PERCENTILE_95",
                                      "ALIGN_PERCENTILE_50", "ALIGN_PERCENTILE_05",
                                      "ALIGN_PERCENT_CHANGE"]'
                                    type: string
                                type: object
                              type: array
                            denominatorFilter:
                              description: A filter that identifies a time series
                                that should be used as the denominator of a ratio
                                that will be compared with the threshold. If a denominator_filter
                                is specified, the time series specified by the filter
                                field will be used as the numerator.The filter is
                                similar to the one that is specified in the MetricService.ListTimeSeries
                                request (that call is useful to verify the time series
                                that will be retrieved / processed) and must specify
                                the metric type and optionally may contain restrictions
                                on resource type, resource labels, and metric labels.
                                This field may not exceed 2048 Unicode characters
                                in length.
                              type: string
                            duration:
                              description: The amount of time that a time series must
                                violate the threshold to be considered failing. Currently,
                                only values that are a multiple of a minute--e.g.,
                                0, 60, 120, or 300 seconds--are supported. If an invalid
                                value is given, an error will be returned. When choosing
                                a duration, it is useful to keep in mind the frequency
                                of the underlying time series data (which may also
                                be affected by any alignments specified in the aggregations
                                field); a good duration is long enough so that a single
                                outlier does not generate spurious alerts, but short
                                enough that unhealthy states are detected and alerted
                                on quickly.
                              type: string
                            filter:
                              description: A filter that identifies which time series
                                should be compared with the threshold.The filter is
                                similar to the one that is specified in the MetricService.ListTimeSeries
                                request (that call is useful to verify the time series
                                that will be retrieved / processed) and must specify
                                the metric type and optionally may contain restrictions
                                on resource type, resource labels, and metric labels.
                                This field may not exceed 2048 Unicode characters
                                in length.
                              type: string
                            thresholdValue:
                              description: A value against which to compare the time
                                series.
                              format: double
                              type: number
                            trigger:
                              description: The number/percent of time series for which
                                the comparison must hold in order for the condition
                                to trigger. If unspecified, then the condition will
                                trigger if the comparison is true for any of the time
                                series that have been identified by filter and aggregations,
                                or by the ratio, if denominator_filter and denominator_aggregations
                                are specified.
                              properties:
                                count:
                                  description: The absolute number of time series
                                    that must fail the predicate for the condition
                                    to be triggered.
                                  format: int64
                                  type: integer
                                percent:
                                  description: The percentage of time series that
                                    must fail the predicate for the condition to be
                                    triggered.
                                  format: double
                                  type: number
                              type: object
                          required:
                          - comparison
                          - duration
                          type: object
                        displayName:
                          description: A short name or phrase used to identify the
                            condition in dashboards, notifications, and incidents.
                            To avoid confusion, don't use the same display name for
                            multiple conditions in the same policy.
                          type: string
                        name:
                          description: 'The unique resource name for this condition.
                            Its syntax is: projects/[PROJECT_ID]/alertPolicies/[POLICY_ID]/conditions/[CONDITION_ID]
                            [CONDITION_ID] is assigned by Stackdriver Monitoring when
                            the condition is created as part of a new or updated alerting
                            policy.'
                          type: string
                      required:
                      - displayName
                      type: object
                    type: array
                  creationRecord:
                    description: A read-only record of the creation of the alerting
                      policy. If provided in a call to create or update, this field
                      will be ignored.
                    items:
                      properties:
                        mutateTime:
                          description: When the change occurred.
                          type: string
                        mutatedBy:
                          description: The email address of the user making the change.
                          type: string
                      type: object
                    type: array
                  displayName:
                    description: A short name or phrase used to identify the policy
                      in dashboards, notifications, and incidents. To avoid confusion,
                      don't use the same display name for multiple policies in the
                      same project. The name is limited to 512 Unicode characters.
                    type: string
                  documentation:
                    description: Documentation that is included with notifications
                      and incidents related to this policy. Best practice is for the
                      documentation to include information to help responders understand,
                      mitigate, escalate, and correct the underlying problems detected
                      by the alerting policy. Notification channels that have limited
                      capacity might not show this documentation.
                    properties:
                      content:
                        description: The text of the documentation, interpreted according
                          to mimeType. The content may not exceed 8,192 Unicode characters
                          and may not exceed more than 10,240 bytes when encoded in
                          UTF-8 format, whichever is smaller.
                        type: string
                      mimeType:
                        description: The format of the content field. Presently, only
                          the value "text/markdown" is supported.
                        type: string
                    type: object
                  enabled:
                    description: Whether or not the policy is enabled. The default
                      is true.
                    type: boolean
                  id:
                    type: string
                  name:
                    description: 'The unique resource name for this policy. Its syntax
                      is: projects/[PROJECT_ID]/alertPolicies/[ALERT_POLICY_ID]'
                    type: string
                  notificationChannels:
                    description: Identifies the notification channels to which notifications
                      should be sent when incidents are opened or closed or when new
                      violations occur on an already opened incident. Each element
                      of this array corresponds to the name field in each of the NotificationChannel
                      objects that are returned from the notificationChannels.list
                      method. The syntax of the entries in this field is 'projects/[PROJECT_ID]/notificationChannels/[CHANNEL_ID]'
                    items:
                      type: string
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  userLabels:
                    additionalProperties:
                      type: string
                    description: This field is intended to be used for organizing
                      and identifying the AlertPolicy objects.The field can contain
                      up to 64 entries. Each key and value is limited to 63 Unicode
                      characters or 128 bytes, whichever is smaller. Labels and values
                      can contain only lowercase letters, numerals, underscores, and
                      dashes. Keys must begin with a letter.
                    type: object
                required:
                - combiner
                - conditions
                - displayName
                - providerRef
                type: object
              name:
                description: 'The unique resource name for this policy. Its syntax
                  is: projects/[PROJECT_ID]/alertPolicies/[ALERT_POLICY_ID]'
                type: string
              notificationChannels:
                description: Identifies the notification channels to which notifications
                  should be sent when incidents are opened or closed or when new violations
                  occur on an already opened incident. Each element of this array
                  corresponds to the name field in each of the NotificationChannel
                  objects that are returned from the notificationChannels.list method.
                  The syntax of the entries in this field is 'projects/[PROJECT_ID]/notificationChannels/[CHANNEL_ID]'
                items:
                  type: string
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              userLabels:
                additionalProperties:
                  type: string
                description: This field is intended to be used for organizing and
                  identifying the AlertPolicy objects.The field can contain up to
                  64 entries. Each key and value is limited to 63 Unicode characters
                  or 128 bytes, whichever is smaller. Labels and values can contain
                  only lowercase letters, numerals, underscores, and dashes. Keys
                  must begin with a letter.
                type: object
            required:
            - combiner
            - conditions
            - displayName
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: metricdescriptors.monitoring.google.kubeform.com
spec:
  group: monitoring.google.kubeform.com
  names:
    kind: MetricDescriptor
    listKind: MetricDescriptorList
    plural: metricdescriptors
    singular: metricdescriptor
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: A detailed description of the metric, which can be used
                  in documentation.
                type: string
              displayName:
                description: A concise name for the metric, which can be displayed
                  in user interfaces. Use sentence case without an ending period,
                  for example "Request count".
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  description:
                    description: A detailed description of the metric, which can be
                      used in documentation.
                    type: string
                  displayName:
                    description: A concise name for the metric, which can be displayed
                      in user interfaces. Use sentence case without an ending period,
                      for example "Request count".
                    type: string
                  id:
                    type: string
                  labels:
                    description: The set of labels that can be used to describe a
                      specific instance of this metric type. In order to delete a
                      label, the entire resource must be deleted, then created with
                      the desired labels.
                    items:
                      properties:
                        description:
                          description: A human-readable description for the label.
                          type: string
                        key:
                          description: The key for this label. The key must not exceed
                            100 characters. The first character of the key must be
                            an upper- or lower-case letter, the remaining characters
                            must be letters, digits or underscores, and the key must
                            match the regular expression [a-zA-Z][a-zA-Z0-9_]*
                          type: string
                        valueType:
                          description: 'The type of data that can be assigned to the
                            label. Default value: "STRING" Possible values: ["STRING",
                            "BOOL", "INT64"]'
                          type: string
                      required:
                      - key
                      type: object
                    type: array
                  launchStage:
                    description: 'The launch stage of the metric definition. Possible
                      values: ["LAUNCH_STAGE_UNSPECIFIED", "UNIMPLEMENTED", "PRELAUNCH",
                      "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]'
                    type: string
                  metadata:
                    description: Metadata which can be used to guide usage of the
                      metric.
                    properties:
                      ingestDelay:
                        description: The delay of data points caused by ingestion.
                          Data points older than this age are guaranteed to be ingested
                          and available to be read, excluding data loss due to errors.
                          In '[duration format](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf?&_ga=2.264881487.1507873253.1593446723-935052455.1591817775#google.protobuf.Duration)'.
                        type: string
                      samplePeriod:
                        description: The sampling period of metric data points. For
                          metrics which are written periodically, consecutive data
                          points are stored at this time interval, excluding data
                          loss due to errors. Metrics with a higher granularity have
                          a smaller sampling period. In '[duration format](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf?&_ga=2.264881487.1507873253.1593446723-935052455.1591817775#google.protobuf.Duration)'.
                        type: string
                    type: object
                  metricKind:
                    description: 'Whether the metric records instantaneous values,
                      changes to a value, etc. Some combinations of metricKind and
                      valueType might not be supported. Possible values: ["METRIC_KIND_UNSPECIFIED",
                      "GAUGE", "DELTA", "CUMULATIVE"]'
                    type: string
                  monitoredResourceTypes:
                    description: If present, then a time series, which is identified
                      partially by a metric type and a MonitoredResourceDescriptor,
                      that is associated with this metric type can only be associated
                      with one of the monitored resource types listed here. This field
                      allows time series to be associated with the intersection of
                      this metric type and the monitored resource types in this list.
                    items:
                      type: string
                    type: array
                  name:
                    description: The resource name of the metric descriptor.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    description: The metric type, including its DNS name prefix. The
                      type is not URL-encoded. All service defined metrics must be
                      prefixed with the service name, in the format of {service name}/{relative
                      metric name}, such as cloudsql.googleapis.com/database/cpu/utilization.
                      The relative metric name must have only upper and lower-case
                      letters, digits, '/' and underscores '_' are allowed. Additionally,
                      the maximum number of characters allowed for the relative_metric_name
                      is 100. All user-defined metric types have the DNS name custom.googleapis.com,
                      external.googleapis.com, or logging.googleapis.com/user/.
                    type: string
                  unit:
                    description: "The units in which the metric value is reported.
                      It is only applicable if the valueType is INT64, DOUBLE, or
                      DISTRIBUTION. The unit defines the representation of the stored
                      metric values. \n Different systems may scale the values to
                      be more easily displayed (so a value of 0.02KBy might be displayed
                      as 20By, and a value of 3523KBy might be displayed as 3.5MBy).
                      However, if the unit is KBy, then the value of the metric is
                      always in thousands of bytes, no matter how it may be displayed.
                      \n If you want a custom metric to record the exact number of
                      CPU-seconds used by a job, you can create an INT64 CUMULATIVE
                      metric whose unit is s{CPU} (or equivalently 1s{CPU} or just
                      s). If the job uses 12,005 CPU-seconds, then the value is written
                      as 12005. \n Alternatively, if you want a custom metric to record
                      data in a more granular way, you can create a DOUBLE CUMULATIVE
                      metric whose unit is ks{CPU}, and then write the value 12.005
                      (which is 12005/1000), or use Kis{CPU} and write 11.723 (which
                      is 12005/1024). The supported units are a subset of The Unified
                      Code for Units of Measure standard. More info can be found in
                      the API documentation (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors)."
                    type: string
                  valueType:
                    description: 'Whether the measurement is an integer, a floating-point
                      number, etc. Some combinations of metricKind and valueType might
                      not be supported. Possible values: ["BOOL", "INT64", "DOUBLE",
                      "STRING", "DISTRIBUTION"]'
                    type: string
                required:
                - description
                - displayName
                - metricKind
                - providerRef
                - type
                - valueType
                type: object
              labels:
                description: The set of labels that can be used to describe a specific
                  instance of this metric type. In order to delete a label, the entire
                  resource must be deleted, then created with the desired labels.
                items:
                  properties:
                    description:
                      description: A human-readable description for the label.
                      type: string
                    key:
                      description: The key for this label. The key must not exceed
                        100 characters. The first character of the key must be an
                        upper- or lower-case letter, the remaining characters must
                        be letters, digits or underscores, and the key must match
                        the regular expression [a-zA-Z][a-zA-Z0-9_]*
                      type: string
                    valueType:
                      description: 'The type of data that can be assigned to the label.
                        Default value: "STRING" Possible values: ["STRING", "BOOL",
                        "INT64"]'
                      type: string
                  required:
                  - key
                  type: object
                type: array
              launchStage:
                description: 'The launch stage of the metric definition. Possible
                  values: ["LAUNCH_STAGE_UNSPECIFIED", "UNIMPLEMENTED", "PRELAUNCH",
                  "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]'
                type: string
              metadata:
                description: Metadata which can be used to guide usage of the metric.
                properties:
                  ingestDelay:
                    description: The delay of data points caused by ingestion. Data
                      points older than this age are guaranteed to be ingested and
                      available to be read, excluding data loss due to errors. In
                      '[duration format](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf?&_ga=2.264881487.1507873253.1593446723-935052455.1591817775#google.protobuf.Duration)'.
                    type: string
                  samplePeriod:
                    description: The sampling period of metric data points. For metrics
                      which are written periodically, consecutive data points are
                      stored at this time interval, excluding data loss due to errors.
                      Metrics with a higher granularity have a smaller sampling period.
                      In '[duration format](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf?&_ga=2.264881487.1507873253.1593446723-935052455.1591817775#google.protobuf.Duration)'.
                    type: string
                type: object
              metricKind:
                description: 'Whether the metric records instantaneous values, changes
                  to a value, etc. Some combinations of metricKind and valueType might
                  not be supported. Possible values: ["METRIC_KIND_UNSPECIFIED", "GAUGE",
                  "DELTA", "CUMULATIVE"]'
                type: string
              monitoredResourceTypes:
                description: If present, then a time series, which is identified partially
                  by a metric type and a MonitoredResourceDescriptor, that is associated
                  with this metric type can only be associated with one of the monitored
                  resource types listed here. This field allows time series to be
                  associated with the intersection of this metric type and the monitored
                  resource types in this list.
                items:
                  type: string
                type: array
              name:
                description: The resource name of the metric descriptor.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              type:
                description: The metric type, including its DNS name prefix. The type
                  is not URL-encoded. All service defined metrics must be prefixed
                  with the service name, in the format of {service name}/{relative
                  metric name}, such as cloudsql.googleapis.com/database/cpu/utilization.
                  The relative metric name must have only upper and lower-case letters,
                  digits, '/' and underscores '_' are allowed. Additionally, the maximum
                  number of characters allowed for the relative_metric_name is 100.
                  All user-defined metric types have the DNS name custom.googleapis.com,
                  external.googleapis.com, or logging.googleapis.com/user/.
                type: string
              unit:
                description: "The units in which the metric value is reported. It
                  is only applicable if the valueType is INT64, DOUBLE, or DISTRIBUTION.
                  The unit defines the representation of the stored metric values.
                  \n Different systems may scale the values to be more easily displayed
                  (so a value of 0.02KBy might be displayed as 20By, and a value of
                  3523KBy might be displayed as 3.5MBy). However, if the unit is KBy,
                  then the value of the metric is always in thousands of bytes, no
                  matter how it may be displayed. \n If you want a custom metric to
                  record the exact number of CPU-seconds used by a job, you can create
                  an INT64 CUMULATIVE metric whose unit is s{CPU} (or equivalently
                  1s{CPU} or just s). If the job uses 12,005 CPU-seconds, then the
                  value is written as 12005. \n Alternatively, if you want a custom
                  metric to record data in a more granular way, you can create a DOUBLE
                  CUMULATIVE metric whose unit is ks{CPU}, and then write the value
                  12.005 (which is 12005/1000), or use Kis{CPU} and write 11.723 (which
                  is 12005/1024). The supported units are a subset of The Unified
                  Code for Units of Measure standard. More info can be found in the
                  API documentation (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors)."
                type: string
              valueType:
                description: 'Whether the measurement is an integer, a floating-point
                  number, etc. Some combinations of metricKind and valueType might
                  not be supported. Possible values: ["BOOL", "INT64", "DOUBLE", "STRING",
                  "DISTRIBUTION"]'
                type: string
            required:
            - description
            - displayName
            - metricKind
            - providerRef
            - type
            - valueType
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: groups.monitoring.google.kubeform.com
spec:
  group: monitoring.google.kubeform.com
  names:
    kind: Group
    listKind: GroupList
    plural: groups
    singular: group
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              displayName:
                description: A user-assigned name for this group, used only for display
                  purposes.
                type: string
              filter:
                description: The filter used to determine which monitored resources
                  belong to this group.
                type: string
              id:
                type: string
              isCluster:
                description: If true, the members of this group are considered to
                  be a cluster. The system can perform additional analysis on groups
                  that are clusters.
                type: boolean
              kubeformOutput:
                properties:
                  displayName:
                    description: A user-assigned name for this group, used only for
                      display purposes.
                    type: string
                  filter:
                    description: The filter used to determine which monitored resources
                      belong to this group.
                    type: string
                  id:
                    type: string
                  isCluster:
                    description: If true, the members of this group are considered
                      to be a cluster. The system can perform additional analysis
                      on groups that are clusters.
                    type: boolean
                  name:
                    description: A unique identifier for this group. The format is
                      "projects/{project_id_or_number}/groups/{group_id}".
                    type: string
                  parentName:
                    description: The name of the group's parent, if it has one. The
                      format is "projects/{project_id_or_number}/groups/{group_id}".
                      For groups with no parent, parentName is the empty string, "".
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - displayName
                - filter
                - providerRef
                type: object
              name:
                description: A unique identifier for this group. The format is "projects/{project_id_or_number}/groups/{group_id}".
                type: string
              parentName:
                description: The name of the group's parent, if it has one. The format
                  is "projects/{project_id_or_number}/groups/{group_id}". For groups
                  with no parent, parentName is the empty string, "".
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - displayName
            - filter
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: sloes.monitoring.google.kubeform.com
spec:
  group: monitoring.google.kubeform.com
  names:
    kind: Slo
    listKind: SloList
    plural: sloes
    singular: slo
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              basicSli:
                description: "Basic Service-Level Indicator (SLI) on a well-known
                  service type. Performance will be computed on the basis of pre-defined
                  metrics. \n SLIs are used to measure and calculate the quality of
                  the Service's performance with respect to a single aspect of service
                  quality. \n Exactly one of the following must be set: 'basic_sli',
                  'request_based_sli', 'windows_based_sli'"
                properties:
                  availability:
                    description: Availability based SLI, dervied from count of requests
                      made to this service that return successfully.
                    properties:
                      enabled:
                        description: Whether an availability SLI is enabled or not.
                          Must be set to true. Defaults to 'true'.
                        type: boolean
                    type: object
                  latency:
                    description: Parameters for a latency threshold SLI.
                    properties:
                      threshold:
                        description: A duration string, e.g. 10s. Good service is
                          defined to be the count of requests made to this service
                          that return in no more than threshold.
                        type: string
                    required:
                    - threshold
                    type: object
                  location:
                    description: An optional set of locations to which this SLI is
                      relevant. Telemetry from other locations will not be used to
                      calculate performance for this SLI. If omitted, this SLI applies
                      to all locations in which the Service has activity. For service
                      types that don't support breaking down by location, setting
                      this field will result in an error.
                    items:
                      type: string
                    type: array
                  method:
                    description: An optional set of RPCs to which this SLI is relevant.
                      Telemetry from other methods will not be used to calculate performance
                      for this SLI. If omitted, this SLI applies to all the Service's
                      methods. For service types that don't support breaking down
                      by method, setting this field will result in an error.
                    items:
                      type: string
                    type: array
                  version:
                    description: The set of API versions to which this SLI is relevant.
                      Telemetry from other API versions will not be used to calculate
                      performance for this SLI. If omitted, this SLI applies to all
                      API versions. For service types that don't support breaking
                      down by version, setting this field will result in an error.
                    items:
                      type: string
                    type: array
                type: object
              calendarPeriod:
                description: 'A calendar period, semantically "since the start of
                  the current <calendarPeriod>". Possible values: ["DAY", "WEEK",
                  "FORTNIGHT", "MONTH"]'
                type: string
              displayName:
                description: Name used for UI elements listing this SLO.
                type: string
              goal:
                description: The fraction of service that must be good in order for
                  this objective to be met. 0 < goal <= 0.999
                format: double
                type: number
              id:
                type: string
              kubeformOutput:
                properties:
                  basicSli:
                    description: "Basic Service-Level Indicator (SLI) on a well-known
                      service type. Performance will be computed on the basis of pre-defined
                      metrics. \n SLIs are used to measure and calculate the quality
                      of the Service's performance with respect to a single aspect
                      of service quality. \n Exactly one of the following must be
                      set: 'basic_sli', 'request_based_sli', 'windows_based_sli'"
                    properties:
                      availability:
                        description: Availability based SLI, dervied from count of
                          requests made to this service that return successfully.
                        properties:
                          enabled:
                            description: Whether an availability SLI is enabled or
                              not. Must be set to true. Defaults to 'true'.
                            type: boolean
                        type: object
                      latency:
                        description: Parameters for a latency threshold SLI.
                        properties:
                          threshold:
                            description: A duration string, e.g. 10s. Good service
                              is defined to be the count of requests made to this
                              service that return in no more than threshold.
                            type: string
                        required:
                        - threshold
                        type: object
                      location:
                        description: An optional set of locations to which this SLI
                          is relevant. Telemetry from other locations will not be
                          used to calculate performance for this SLI. If omitted,
                          this SLI applies to all locations in which the Service has
                          activity. For service types that don't support breaking
                          down by location, setting this field will result in an error.
                        items:
                          type: string
                        type: array
                      method:
                        description: An optional set of RPCs to which this SLI is
                          relevant. Telemetry from other methods will not be used
                          to calculate performance for this SLI. If omitted, this
                          SLI applies to all the Service's methods. For service types
                          that don't support breaking down by method, setting this
                          field will result in an error.
                        items:
                          type: string
                        type: array
                      version:
                        description: The set of API versions to which this SLI is
                          relevant. Telemetry from other API versions will not be
                          used to calculate performance for this SLI. If omitted,
                          this SLI applies to all API versions. For service types
                          that don't support breaking down by version, setting this
                          field will result in an error.
                        items:
                          type: string
                        type: array
                    type: object
                  calendarPeriod:
                    description: 'A calendar period, semantically "since the start
                      of the current <calendarPeriod>". Possible values: ["DAY", "WEEK",
                      "FORTNIGHT", "MONTH"]'
                    type: string
                  displayName:
                    description: Name used for UI elements listing this SLO.
                    type: string
                  goal:
                    description: The fraction of service that must be good in order
                      for this objective to be met. 0 < goal <= 0.999
                    format: double
                    type: number
                  id:
                    type: string
                  name:
                    description: 'The full resource name for this service. The syntax
                      is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  requestBasedSli:
                    description: "A request-based SLI defines a SLI for which atomic
                      units of service are counted directly. \n A SLI describes a
                      good service. It is used to measure and calculate the quality
                      of the Service's performance with respect to a single aspect
                      of service quality. Exactly one of the following must be set:
                      'basic_sli', 'request_based_sli', 'windows_based_sli'"
                    properties:
                      distributionCut:
                        description: "Used when good_service is defined by a count
                          of values aggregated in a Distribution that fall into a
                          good range. The total_service is the total count of all
                          values aggregated in the Distribution. Defines a distribution
                          TimeSeries filter and thresholds used for measuring good
                          service and total service. \n Exactly one of 'distribution_cut'
                          or 'good_total_ratio' can be set."
                        properties:
                          distributionFilter:
                            description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                              aggregating values to quantify the good service provided.
                              \n Must have ValueType = DISTRIBUTION and MetricKind
                              = DELTA or MetricKind = CUMULATIVE."
                            type: string
                          range:
                            description: Range of numerical values. The computed good_service
                              will be the count of values x in the Distribution such
                              that range.min <= x < range.max. inclusive of min and
                              exclusive of max. Open ranges can be defined by setting
                              just one of min or max.
                            properties:
                              max:
                                description: max value for the range (inclusive).
                                  If not given, will be set to "infinity", defining
                                  an open range ">= range.min"
                                format: double
                                type: number
                              min:
                                description: Min value for the range (inclusive).
                                  If not given, will be set to "-infinity", defining
                                  an open range "< range.max"
                                format: double
                                type: number
                            type: object
                        required:
                        - distributionFilter
                        - range
                        type: object
                      goodTotalRatio:
                        description: "A means to compute a ratio of 'good_service'
                          to 'total_service'. Defines computing this ratio with two
                          TimeSeries [monitoring filters](https://cloud.google.com/monitoring/api/v3/filters)
                          Must specify exactly two of good, bad, and total service
                          filters. The relationship good_service + bad_service = total_service
                          will be assumed. \n Exactly one of 'distribution_cut' or
                          'good_total_ratio' can be set."
                        properties:
                          badServiceFilter:
                            description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                              quantifying bad service provided, either demanded service
                              that was not provided or demanded service that was of
                              inadequate quality. \n Must have ValueType = DOUBLE
                              or ValueType = INT64 and must have MetricKind = DELTA
                              or MetricKind = CUMULATIVE. \n Exactly two of 'good_service_filter','bad_service_filter','total_service_filter'
                              must be set (good + bad = total is assumed)."
                            type: string
                          goodServiceFilter:
                            description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                              quantifying good service provided. Must have ValueType
                              = DOUBLE or ValueType = INT64 and must have MetricKind
                              = DELTA or MetricKind = CUMULATIVE. \n Exactly two of
                              'good_service_filter','bad_service_filter','total_service_filter'
                              must be set (good + bad = total is assumed)."
                            type: string
                          totalServiceFilter:
                            description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                              quantifying total demanded service. \n Must have ValueType
                              = DOUBLE or ValueType = INT64 and must have MetricKind
                              = DELTA or MetricKind = CUMULATIVE. \n Exactly two of
                              'good_service_filter','bad_service_filter','total_service_filter'
                              must be set (good + bad = total is assumed)."
                            type: string
                        type: object
                    type: object
                  rollingPeriodDays:
                    description: A rolling time period, semantically "in the past
                      X days". Must be between 1 to 30 days, inclusive.
                    format: int64
                    type: integer
                  service:
                    description: ID of the service to which this SLO belongs.
                    type: string
                  sloID:
                    description: The id to use for this ServiceLevelObjective. If
                      omitted, an id will be generated instead.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  windowsBasedSli:
                    description: "A windows-based SLI defines the criteria for time
                      windows. good_service is defined based off the count of these
                      time windows for which the provided service was of good quality.
                      \n A SLI describes a good service. It is used to measure and
                      calculate the quality of the Service's performance with respect
                      to a single aspect of service quality. \n Exactly one of the
                      following must be set: 'basic_sli', 'request_based_sli', 'windows_based_sli'"
                    properties:
                      goodBadMetricFilter:
                        description: A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                          with ValueType = BOOL. The window is good if any true values
                          appear in the window. One of 'good_bad_metric_filter', 'good_total_ratio_threshold',
                          'metric_mean_in_range', 'metric_sum_in_range' must be set
                          for 'windows_based_sli'.
                        type: string
                      goodTotalRatioThreshold:
                        description: Criterion that describes a window as good if
                          its performance is high enough. One of 'good_bad_metric_filter',
                          'good_total_ratio_threshold', 'metric_mean_in_range', 'metric_sum_in_range'
                          must be set for 'windows_based_sli'.
                        properties:
                          basicSliPerformance:
                            description: Basic SLI to evaluate to judge window quality.
                            properties:
                              availability:
                                description: Availability based SLI, dervied from
                                  count of requests made to this service that return
                                  successfully.
                                properties:
                                  enabled:
                                    description: Whether an availability SLI is enabled
                                      or not. Must be set to 'true. Defaults to 'true'.
                                    type: boolean
                                type: object
                              latency:
                                description: Parameters for a latency threshold SLI.
                                properties:
                                  threshold:
                                    description: A duration string, e.g. 10s. Good
                                      service is defined to be the count of requests
                                      made to this service that return in no more
                                      than threshold.
                                    type: string
                                required:
                                - threshold
                                type: object
                              location:
                                description: An optional set of locations to which
                                  this SLI is relevant. Telemetry from other locations
                                  will not be used to calculate performance for this
                                  SLI. If omitted, this SLI applies to all locations
                                  in which the Service has activity. For service types
                                  that don't support breaking down by location, setting
                                  this field will result in an error.
                                items:
                                  type: string
                                type: array
                              method:
                                description: An optional set of RPCs to which this
                                  SLI is relevant. Telemetry from other methods will
                                  not be used to calculate performance for this SLI.
                                  If omitted, this SLI applies to all the Service's
                                  methods. For service types that don't support breaking
                                  down by method, setting this field will result in
                                  an error.
                                items:
                                  type: string
                                type: array
                              version:
                                description: The set of API versions to which this
                                  SLI is relevant. Telemetry from other API versions
                                  will not be used to calculate performance for this
                                  SLI. If omitted, this SLI applies to all API versions.
                                  For service types that don't support breaking down
                                  by version, setting this field will result in an
                                  error.
                                items:
                                  type: string
                                type: array
                            type: object
                          performance:
                            description: Request-based SLI to evaluate to judge window
                              quality.
                            properties:
                              distributionCut:
                                description: Used when good_service is defined by
                                  a count of values aggregated in a Distribution that
                                  fall into a good range. The total_service is the
                                  total count of all values aggregated in the Distribution.
                                  Defines a distribution TimeSeries filter and thresholds
                                  used for measuring good service and total service.
                                properties:
                                  distributionFilter:
                                    description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                                      aggregating values to quantify the good service
                                      provided. \n Must have ValueType = DISTRIBUTION
                                      and MetricKind = DELTA or MetricKind = CUMULATIVE."
                                    type: string
                                  range:
                                    description: Range of numerical values. The computed
                                      good_service will be the count of values x in
                                      the Distribution such that range.min <= x <
                                      range.max. inclusive of min and exclusive of
                                      max. Open ranges can be defined by setting just
                                      one of min or max.
                                    properties:
                                      max:
                                        description: max value for the range (inclusive).
                                          If not given, will be set to "infinity",
                                          defining an open range ">= range.min"
                                        format: double
                                        type: number
                                      min:
                                        description: Min value for the range (inclusive).
                                          If not given, will be set to "-infinity",
                                          defining an open range "< range.max"
                                        format: double
                                        type: number
                                    type: object
                                required:
                                - distributionFilter
                                - range
                                type: object
                              goodTotalRatio:
                                description: A means to compute a ratio of 'good_service'
                                  to 'total_service'. Defines computing this ratio
                                  with two TimeSeries [monitoring filters](https://cloud.google.com/monitoring/api/v3/filters)
                                  Must specify exactly two of good, bad, and total
                                  service filters. The relationship good_service +
                                  bad_service = total_service will be assumed.
                                properties:
                                  badServiceFilter:
                                    description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                                      quantifying bad service provided, either demanded
                                      service that was not provided or demanded service
                                      that was of inadequate quality. Exactly two
                                      of good, bad, or total service filter must be
                                      defined (where good + bad = total is assumed)
                                      \n Must have ValueType = DOUBLE or ValueType
                                      = INT64 and must have MetricKind = DELTA or
                                      MetricKind = CUMULATIVE."
                                    type: string
                                  goodServiceFilter:
                                    description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                                      quantifying good service provided. Exactly two
                                      of good, bad, or total service filter must be
                                      defined (where good + bad = total is assumed)
                                      \n Must have ValueType = DOUBLE or ValueType
                                      = INT64 and must have MetricKind = DELTA or
                                      MetricKind = CUMULATIVE."
                                    type: string
                                  totalServiceFilter:
                                    description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                                      quantifying total demanded service. Exactly
                                      two of good, bad, or total service filter must
                                      be defined (where good + bad = total is assumed)
                                      \n Must have ValueType = DOUBLE or ValueType
                                      = INT64 and must have MetricKind = DELTA or
                                      MetricKind = CUMULATIVE."
                                    type: string
                                type: object
                            type: object
                          threshold:
                            description: If window performance >= threshold, the window
                              is counted as good.
                            format: double
                            type: number
                        type: object
                      metricMeanInRange:
                        description: "Criterion that describes a window as good if
                          the metric's value is in a good range, *averaged* across
                          returned streams. One of 'good_bad_metric_filter', \n 'good_total_ratio_threshold',
                          'metric_mean_in_range', 'metric_sum_in_range' must be set
                          for 'windows_based_sli'. Average value X of 'time_series'
                          should satisfy 'range.min <= X < range.max' for a good window."
                        properties:
                          range:
                            description: Range of numerical values. The computed good_service
                              will be the count of values x in the Distribution such
                              that range.min <= x < range.max. inclusive of min and
                              exclusive of max. Open ranges can be defined by setting
                              just one of min or max. Mean value 'X' of 'time_series'
                              values should satisfy 'range.min <= X < range.max' for
                              a good service.
                            properties:
                              max:
                                description: max value for the range (inclusive).
                                  If not given, will be set to "infinity", defining
                                  an open range ">= range.min"
                                format: double
                                type: number
                              min:
                                description: Min value for the range (inclusive).
                                  If not given, will be set to "-infinity", defining
                                  an open range "< range.max"
                                format: double
                                type: number
                            type: object
                          timeSeries:
                            description: A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                              specifying the TimeSeries to use for evaluating window
                              The provided TimeSeries must have ValueType = INT64
                              or ValueType = DOUBLE and MetricKind = GAUGE. Mean value
                              'X' should satisfy 'range.min <= X < range.max' under
                              good service.
                            type: string
                        required:
                        - range
                        - timeSeries
                        type: object
                      metricSumInRange:
                        description: "Criterion that describes a window as good if
                          the metric's value is in a good range, *summed* across returned
                          streams. Summed value 'X' of 'time_series' should satisfy
                          'range.min <= X < range.max' for a good window. \n One of
                          'good_bad_metric_filter', 'good_total_ratio_threshold',
                          'metric_mean_in_range', 'metric_sum_in_range' must be set
                          for 'windows_based_sli'."
                        properties:
                          range:
                            description: Range of numerical values. The computed good_service
                              will be the count of values x in the Distribution such
                              that range.min <= x < range.max. inclusive of min and
                              exclusive of max. Open ranges can be defined by setting
                              just one of min or max. Summed value 'X' should satisfy
                              'range.min <= X < range.max' for a good window.
                            properties:
                              max:
                                description: max value for the range (inclusive).
                                  If not given, will be set to "infinity", defining
                                  an open range ">= range.min"
                                format: double
                                type: number
                              min:
                                description: Min value for the range (inclusive).
                                  If not given, will be set to "-infinity", defining
                                  an open range "< range.max"
                                format: double
                                type: number
                            type: object
                          timeSeries:
                            description: "A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                              specifying the TimeSeries to use for evaluating window
                              quality. The provided TimeSeries must have ValueType
                              = INT64 or ValueType = DOUBLE and MetricKind = GAUGE.
                              \n Summed value 'X' should satisfy 'range.min <= X <
                              range.max' for a good window."
                            type: string
                        required:
                        - range
                        - timeSeries
                        type: object
                      windowPeriod:
                        description: Duration over which window quality is evaluated,
                          given as a duration string "{X}s" representing X seconds.
                          Must be an integer fraction of a day and at least 60s.
                        type: string
                    type: object
                required:
                - goal
                - providerRef
                - service
                type: object
              name:
                description: 'The full resource name for this service. The syntax
                  is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              requestBasedSli:
                description: "A request-based SLI defines a SLI for which atomic units
                  of service are counted directly. \n A SLI describes a good service.
                  It is used to measure and calculate the quality of the Service's
                  performance with respect to a single aspect of service quality.
                  Exactly one of the following must be set: 'basic_sli', 'request_based_sli',
                  'windows_based_sli'"
                properties:
                  distributionCut:
                    description: "Used when good_service is defined by a count of
                      values aggregated in a Distribution that fall into a good range.
                      The total_service is the total count of all values aggregated
                      in the Distribution. Defines a distribution TimeSeries filter
                      and thresholds used for measuring good service and total service.
                      \n Exactly one of 'distribution_cut' or 'good_total_ratio' can
                      be set."
                    properties:
                      distributionFilter:
                        description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                          aggregating values to quantify the good service provided.
                          \n Must have ValueType = DISTRIBUTION and MetricKind = DELTA
                          or MetricKind = CUMULATIVE."
                        type: string
                      range:
                        description: Range of numerical values. The computed good_service
                          will be the count of values x in the Distribution such that
                          range.min <= x < range.max. inclusive of min and exclusive
                          of max. Open ranges can be defined by setting just one of
                          min or max.
                        properties:
                          max:
                            description: max value for the range (inclusive). If not
                              given, will be set to "infinity", defining an open range
                              ">= range.min"
                            format: double
                            type: number
                          min:
                            description: Min value for the range (inclusive). If not
                              given, will be set to "-infinity", defining an open
                              range "< range.max"
                            format: double
                            type: number
                        type: object
                    required:
                    - distributionFilter
                    - range
                    type: object
                  goodTotalRatio:
                    description: "A means to compute a ratio of 'good_service' to
                      'total_service'. Defines computing this ratio with two TimeSeries
                      [monitoring filters](https://cloud.google.com/monitoring/api/v3/filters)
                      Must specify exactly two of good, bad, and total service filters.
                      The relationship good_service + bad_service = total_service
                      will be assumed. \n Exactly one of 'distribution_cut' or 'good_total_ratio'
                      can be set."
                    properties:
                      badServiceFilter:
                        description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                          quantifying bad service provided, either demanded service
                          that was not provided or demanded service that was of inadequate
                          quality. \n Must have ValueType = DOUBLE or ValueType =
                          INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.
                          \n Exactly two of 'good_service_filter','bad_service_filter','total_service_filter'
                          must be set (good + bad = total is assumed)."
                        type: string
                      goodServiceFilter:
                        description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                          quantifying good service provided. Must have ValueType =
                          DOUBLE or ValueType = INT64 and must have MetricKind = DELTA
                          or MetricKind = CUMULATIVE. \n Exactly two of 'good_service_filter','bad_service_filter','total_service_filter'
                          must be set (good + bad = total is assumed)."
                        type: string
                      totalServiceFilter:
                        description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                          quantifying total demanded service. \n Must have ValueType
                          = DOUBLE or ValueType = INT64 and must have MetricKind =
                          DELTA or MetricKind = CUMULATIVE. \n Exactly two of 'good_service_filter','bad_service_filter','total_service_filter'
                          must be set (good + bad = total is assumed)."
                        type: string
                    type: object
                type: object
              rollingPeriodDays:
                description: A rolling time period, semantically "in the past X days".
                  Must be between 1 to 30 days, inclusive.
                format: int64
                type: integer
              service:
                description: ID of the service to which this SLO belongs.
                type: string
              sloID:
                description: The id to use for this ServiceLevelObjective. If omitted,
                  an id will be generated instead.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              windowsBasedSli:
                description: "A windows-based SLI defines the criteria for time windows.
                  good_service is defined based off the count of these time windows
                  for which the provided service was of good quality. \n A SLI describes
                  a good service. It is used to measure and calculate the quality
                  of the Service's performance with respect to a single aspect of
                  service quality. \n Exactly one of the following must be set: 'basic_sli',
                  'request_based_sli', 'windows_based_sli'"
                properties:
                  goodBadMetricFilter:
                    description: A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                      with ValueType = BOOL. The window is good if any true values
                      appear in the window. One of 'good_bad_metric_filter', 'good_total_ratio_threshold',
                      'metric_mean_in_range', 'metric_sum_in_range' must be set for
                      'windows_based_sli'.
                    type: string
                  goodTotalRatioThreshold:
                    description: Criterion that describes a window as good if its
                      performance is high enough. One of 'good_bad_metric_filter',
                      'good_total_ratio_threshold', 'metric_mean_in_range', 'metric_sum_in_range'
                      must be set for 'windows_based_sli'.
                    properties:
                      basicSliPerformance:
                        description: Basic SLI to evaluate to judge window quality.
                        properties:
                          availability:
                            description: Availability based SLI, dervied from count
                              of requests made to this service that return successfully.
                            properties:
                              enabled:
                                description: Whether an availability SLI is enabled
                                  or not. Must be set to 'true. Defaults to 'true'.
                                type: boolean
                            type: object
                          latency:
                            description: Parameters for a latency threshold SLI.
                            properties:
                              threshold:
                                description: A duration string, e.g. 10s. Good service
                                  is defined to be the count of requests made to this
                                  service that return in no more than threshold.
                                type: string
                            required:
                            - threshold
                            type: object
                          location:
                            description: An optional set of locations to which this
                              SLI is relevant. Telemetry from other locations will
                              not be used to calculate performance for this SLI. If
                              omitted, this SLI applies to all locations in which
                              the Service has activity. For service types that don't
                              support breaking down by location, setting this field
                              will result in an error.
                            items:
                              type: string
                            type: array
                          method:
                            description: An optional set of RPCs to which this SLI
                              is relevant. Telemetry from other methods will not be
                              used to calculate performance for this SLI. If omitted,
                              this SLI applies to all the Service's methods. For service
                              types that don't support breaking down by method, setting
                              this field will result in an error.
                            items:
                              type: string
                            type: array
                          version:
                            description: The set of API versions to which this SLI
                              is relevant. Telemetry from other API versions will
                              not be used to calculate performance for this SLI. If
                              omitted, this SLI applies to all API versions. For service
                              types that don't support breaking down by version, setting
                              this field will result in an error.
                            items:
                              type: string
                            type: array
                        type: object
                      performance:
                        description: Request-based SLI to evaluate to judge window
                          quality.
                        properties:
                          distributionCut:
                            description: Used when good_service is defined by a count
                              of values aggregated in a Distribution that fall into
                              a good range. The total_service is the total count of
                              all values aggregated in the Distribution. Defines a
                              distribution TimeSeries filter and thresholds used for
                              measuring good service and total service.
                            properties:
                              distributionFilter:
                                description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                                  aggregating values to quantify the good service
                                  provided. \n Must have ValueType = DISTRIBUTION
                                  and MetricKind = DELTA or MetricKind = CUMULATIVE."
                                type: string
                              range:
                                description: Range of numerical values. The computed
                                  good_service will be the count of values x in the
                                  Distribution such that range.min <= x < range.max.
                                  inclusive of min and exclusive of max. Open ranges
                                  can be defined by setting just one of min or max.
                                properties:
                                  max:
                                    description: max value for the range (inclusive).
                                      If not given, will be set to "infinity", defining
                                      an open range ">= range.min"
                                    format: double
                                    type: number
                                  min:
                                    description: Min value for the range (inclusive).
                                      If not given, will be set to "-infinity", defining
                                      an open range "< range.max"
                                    format: double
                                    type: number
                                type: object
                            required:
                            - distributionFilter
                            - range
                            type: object
                          goodTotalRatio:
                            description: A means to compute a ratio of 'good_service'
                              to 'total_service'. Defines computing this ratio with
                              two TimeSeries [monitoring filters](https://cloud.google.com/monitoring/api/v3/filters)
                              Must specify exactly two of good, bad, and total service
                              filters. The relationship good_service + bad_service
                              = total_service will be assumed.
                            properties:
                              badServiceFilter:
                                description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                                  quantifying bad service provided, either demanded
                                  service that was not provided or demanded service
                                  that was of inadequate quality. Exactly two of good,
                                  bad, or total service filter must be defined (where
                                  good + bad = total is assumed) \n Must have ValueType
                                  = DOUBLE or ValueType = INT64 and must have MetricKind
                                  = DELTA or MetricKind = CUMULATIVE."
                                type: string
                              goodServiceFilter:
                                description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                                  quantifying good service provided. Exactly two of
                                  good, bad, or total service filter must be defined
                                  (where good + bad = total is assumed) \n Must have
                                  ValueType = DOUBLE or ValueType = INT64 and must
                                  have MetricKind = DELTA or MetricKind = CUMULATIVE."
                                type: string
                              totalServiceFilter:
                                description: "A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                                  quantifying total demanded service. Exactly two
                                  of good, bad, or total service filter must be defined
                                  (where good + bad = total is assumed) \n Must have
                                  ValueType = DOUBLE or ValueType = INT64 and must
                                  have MetricKind = DELTA or MetricKind = CUMULATIVE."
                                type: string
                            type: object
                        type: object
                      threshold:
                        description: If window performance >= threshold, the window
                          is counted as good.
                        format: double
                        type: number
                    type: object
                  metricMeanInRange:
                    description: "Criterion that describes a window as good if the
                      metric's value is in a good range, *averaged* across returned
                      streams. One of 'good_bad_metric_filter', \n 'good_total_ratio_threshold',
                      'metric_mean_in_range', 'metric_sum_in_range' must be set for
                      'windows_based_sli'. Average value X of 'time_series' should
                      satisfy 'range.min <= X < range.max' for a good window."
                    properties:
                      range:
                        description: Range of numerical values. The computed good_service
                          will be the count of values x in the Distribution such that
                          range.min <= x < range.max. inclusive of min and exclusive
                          of max. Open ranges can be defined by setting just one of
                          min or max. Mean value 'X' of 'time_series' values should
                          satisfy 'range.min <= X < range.max' for a good service.
                        properties:
                          max:
                            description: max value for the range (inclusive). If not
                              given, will be set to "infinity", defining an open range
                              ">= range.min"
                            format: double
                            type: number
                          min:
                            description: Min value for the range (inclusive). If not
                              given, will be set to "-infinity", defining an open
                              range "< range.max"
                            format: double
                            type: number
                        type: object
                      timeSeries:
                        description: A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                          specifying the TimeSeries to use for evaluating window The
                          provided TimeSeries must have ValueType = INT64 or ValueType
                          = DOUBLE and MetricKind = GAUGE. Mean value 'X' should satisfy
                          'range.min <= X < range.max' under good service.
                        type: string
                    required:
                    - range
                    - timeSeries
                    type: object
                  metricSumInRange:
                    description: "Criterion that describes a window as good if the
                      metric's value is in a good range, *summed* across returned
                      streams. Summed value 'X' of 'time_series' should satisfy 'range.min
                      <= X < range.max' for a good window. \n One of 'good_bad_metric_filter',
                      'good_total_ratio_threshold', 'metric_mean_in_range', 'metric_sum_in_range'
                      must be set for 'windows_based_sli'."
                    properties:
                      range:
                        description: Range of numerical values. The computed good_service
                          will be the count of values x in the Distribution such that
                          range.min <= x < range.max. inclusive of min and exclusive
                          of max. Open ranges can be defined by setting just one of
                          min or max. Summed value 'X' should satisfy 'range.min <=
                          X < range.max' for a good window.
                        properties:
                          max:
                            description: max value for the range (inclusive). If not
                              given, will be set to "infinity", defining an open range
                              ">= range.min"
                            format: double
                            type: number
                          min:
                            description: Min value for the range (inclusive). If not
                              given, will be set to "-infinity", defining an open
                              range "< range.max"
                            format: double
                            type: number
                        type: object
                      timeSeries:
                        description: "A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
                          specifying the TimeSeries to use for evaluating window quality.
                          The provided TimeSeries must have ValueType = INT64 or ValueType
                          = DOUBLE and MetricKind = GAUGE. \n Summed value 'X' should
                          satisfy 'range.min <= X < range.max' for a good window."
                        type: string
                    required:
                    - range
                    - timeSeries
                    type: object
                  windowPeriod:
                    description: Duration over which window quality is evaluated,
                      given as a duration string "{X}s" representing X seconds. Must
                      be an integer fraction of a day and at least 60s.
                    type: string
                type: object
            required:
            - goal
            - providerRef
            - service
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: uptimecheckconfigs.monitoring.google.kubeform.com
spec:
  group: monitoring.google.kubeform.com
  names:
    kind: UptimeCheckConfig
    listKind: UptimeCheckConfigList
    plural: uptimecheckconfigs
    singular: uptimecheckconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              contentMatchers:
                description: The expected content on the page the check is run against.
                  Currently, only the first entry in the list is supported, and other
                  entries will be ignored. The server will look for an exact match
                  of the string in the page response's content. This field is optional
                  and should only be specified if a content match is required.
                items:
                  properties:
                    content:
                      description: String or regex content to match (max 1024 bytes)
                      type: string
                    matcher:
                      description: 'The type of content matcher that will be applied
                        to the server output, compared to the content string when
                        the check is run. Default value: "CONTAINS_STRING" Possible
                        values: ["CONTAINS_STRING", "NOT_CONTAINS_STRING", "MATCHES_REGEX",
                        "NON_MATCHES_REGEX"]'
                      type: string
                  required:
                  - content
                  type: object
                type: array
              displayName:
                description: A human-friendly name for the uptime check configuration.
                  The display name should be unique within a Stackdriver Workspace
                  in order to make it easier to identify; however, uniqueness is not
                  enforced.
                type: string
              httpCheck:
                description: Contains information needed to make an HTTP or HTTPS
                  check.
                properties:
                  authInfo:
                    description: The authentication information. Optional when creating
                      an HTTP check; defaults to empty.
                    properties:
                      username:
                        description: The username to authenticate.
                        type: string
                    required:
                    - username
                    type: object
                  body:
                    description: The request body associated with the HTTP POST request.
                      If contentType is URL_ENCODED, the body passed in must be URL-encoded.
                      Users can provide a Content-Length header via the headers field
                      or the API will do so. If the requestMethod is GET and body
                      is not empty, the API will return an error. The maximum byte
                      size is 1 megabyte. Note - As with all bytes fields JSON representations
                      are base64 encoded. e.g. "foo=bar" in URL-encoded form is "foo%3Dbar"
                      and in base64 encoding is "Zm9vJTI1M0RiYXI=".
                    type: string
                  contentType:
                    description: 'The content type to use for the check. Possible
                      values: ["TYPE_UNSPECIFIED", "URL_ENCODED"]'
                    type: string
                  headers:
                    additionalProperties:
                      type: string
                    description: The list of headers to send as part of the uptime
                      check request. If two headers have the same key and different
                      values, they should be entered as a single header, with the
                      value being a comma-separated list of all the desired values
                      as described at https://www.w3.org/Protocols/rfc2616/rfc2616.txt
                      (page 31). Entering two separate headers with the same key in
                      a Create call will cause the first to be overwritten by the
                      second. The maximum number of headers allowed is 100.
                    type: object
                  maskHeaders:
                    description: Boolean specifying whether to encrypt the header
                      information. Encryption should be specified for any headers
                      related to authentication that you do not wish to be seen when
                      retrieving the configuration. The server will be responsible
                      for encrypting the headers. On Get/List calls, if mask_headers
                      is set to True then the headers will be obscured with ******.
                    type: boolean
                  path:
                    description: The path to the page to run the check against. Will
                      be combined with the host (specified within the MonitoredResource)
                      and port to construct the full URL. Optional (defaults to "/").
                    type: string
                  port:
                    description: The port to the page to run the check against. Will
                      be combined with host (specified within the MonitoredResource)
                      and path to construct the full URL. Optional (defaults to 80
                      without SSL, or 443 with SSL).
                    format: int64
                    type: integer
                  requestMethod:
                    description: 'The HTTP request method to use for the check. If
                      set to METHOD_UNSPECIFIED then requestMethod defaults to GET.
                      Default value: "GET" Possible values: ["METHOD_UNSPECIFIED",
                      "GET", "POST"]'
                    type: string
                  useSSL:
                    description: If true, use HTTPS instead of HTTP to run the check.
                    type: boolean
                  validateSSL:
                    description: Boolean specifying whether to include SSL certificate
                      validation as a part of the Uptime check. Only applies to checks
                      where monitoredResource is set to uptime_url. If useSsl is false,
                      setting validateSsl to true has no effect.
                    type: boolean
                type: object
              id:
                type: string
              kubeformOutput:
                properties:
                  contentMatchers:
                    description: The expected content on the page the check is run
                      against. Currently, only the first entry in the list is supported,
                      and other entries will be ignored. The server will look for
                      an exact match of the string in the page response's content.
                      This field is optional and should only be specified if a content
                      match is required.
                    items:
                      properties:
                        content:
                          description: String or regex content to match (max 1024
                            bytes)
                          type: string
                        matcher:
                          description: 'The type of content matcher that will be applied
                            to the server output, compared to the content string when
                            the check is run. Default value: "CONTAINS_STRING" Possible
                            values: ["CONTAINS_STRING", "NOT_CONTAINS_STRING", "MATCHES_REGEX",
                            "NON_MATCHES_REGEX"]'
                          type: string
                      required:
                      - content
                      type: object
                    type: array
                  displayName:
                    description: A human-friendly name for the uptime check configuration.
                      The display name should be unique within a Stackdriver Workspace
                      in order to make it easier to identify; however, uniqueness
                      is not enforced.
                    type: string
                  httpCheck:
                    description: Contains information needed to make an HTTP or HTTPS
                      check.
                    properties:
                      authInfo:
                        description: The authentication information. Optional when
                          creating an HTTP check; defaults to empty.
                        properties:
                          username:
                            description: The username to authenticate.
                            type: string
                        required:
                        - username
                        type: object
                      body:
                        description: The request body associated with the HTTP POST
                          request. If contentType is URL_ENCODED, the body passed
                          in must be URL-encoded. Users can provide a Content-Length
                          header via the headers field or the API will do so. If the
                          requestMethod is GET and body is not empty, the API will
                          return an error. The maximum byte size is 1 megabyte. Note
                          - As with all bytes fields JSON representations are base64
                          encoded. e.g. "foo=bar" in URL-encoded form is "foo%3Dbar"
                          and in base64 encoding is "Zm9vJTI1M0RiYXI=".
                        type: string
                      contentType:
                        description: 'The content type to use for the check. Possible
                          values: ["TYPE_UNSPECIFIED", "URL_ENCODED"]'
                        type: string
                      headers:
                        additionalProperties:
                          type: string
                        description: The list of headers to send as part of the uptime
                          check request. If two headers have the same key and different
                          values, they should be entered as a single header, with
                          the value being a comma-separated list of all the desired
                          values as described at https://www.w3.org/Protocols/rfc2616/rfc2616.txt
                          (page 31). Entering two separate headers with the same key
                          in a Create call will cause the first to be overwritten
                          by the second. The maximum number of headers allowed is
                          100.
                        type: object
                      maskHeaders:
                        description: Boolean specifying whether to encrypt the header
                          information. Encryption should be specified for any headers
                          related to authentication that you do not wish to be seen
                          when retrieving the configuration. The server will be responsible
                          for encrypting the headers. On Get/List calls, if mask_headers
                          is set to True then the headers will be obscured with ******.
                        type: boolean
                      path:
                        description: The path to the page to run the check against.
                          Will be combined with the host (specified within the MonitoredResource)
                          and port to construct the full URL. Optional (defaults to
                          "/").
                        type: string
                      port:
                        description: The port to the page to run the check against.
                          Will be combined with host (specified within the MonitoredResource)
                          and path to construct the full URL. Optional (defaults to
                          80 without SSL, or 443 with SSL).
                        format: int64
                        type: integer
                      requestMethod:
                        description: 'The HTTP request method to use for the check.
                          If set to METHOD_UNSPECIFIED then requestMethod defaults
                          to GET. Default value: "GET" Possible values: ["METHOD_UNSPECIFIED",
                          "GET", "POST"]'
                        type: string
                      useSSL:
                        description: If true, use HTTPS instead of HTTP to run the
                          check.
                        type: boolean
                      validateSSL:
                        description: Boolean specifying whether to include SSL certificate
                          validation as a part of the Uptime check. Only applies to
                          checks where monitoredResource is set to uptime_url. If
                          useSsl is false, setting validateSsl to true has no effect.
                        type: boolean
                    type: object
                  id:
                    type: string
                  monitoredResource:
                    description: 'The monitored resource (https://cloud.google.com/monitoring/api/resources)
                      associated with the configuration. The following monitored resource
                      types are supported for uptime checks:  uptime_url  gce_instance  gae_app  aws_ec2_instance  aws_elb_load_balancer'
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        description: Values for all of the labels listed in the associated
                          monitored resource descriptor. For example, Compute Engine
                          VM instances use the labels "project_id", "instance_id",
                          and "zone".
                        type: object
                      type:
                        description: The monitored resource type. This field must
                          match the type field of a MonitoredResourceDescriptor (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.monitoredResourceDescriptors#MonitoredResourceDescriptor)
                          object. For example, the type of a Compute Engine VM instance
                          is gce_instance. For a list of types, see Monitoring resource
                          types (https://cloud.google.com/monitoring/api/resources)
                          and Logging resource types (https://cloud.google.com/logging/docs/api/v2/resource-list).
                        type: string
                    required:
                    - labels
                    - type
                    type: object
                  name:
                    description: A unique resource name for this UptimeCheckConfig.
                      The format is projects/[PROJECT_ID]/uptimeCheckConfigs/[UPTIME_CHECK_ID].
                    type: string
                  period:
                    description: How often, in seconds, the uptime check is performed.
                      Currently, the only supported values are 60s (1 minute), 300s
                      (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional,
                      defaults to 300s.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  resourceGroup:
                    description: The group resource associated with the configuration.
                    properties:
                      groupID:
                        description: The group of resources being monitored. Should
                          be the 'name' of a group
                        type: string
                      resourceType:
                        description: 'The resource type of the group members. Possible
                          values: ["RESOURCE_TYPE_UNSPECIFIED", "INSTANCE", "AWS_ELB_LOAD_BALANCER"]'
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selectedRegions:
                    description: The list of regions from which the check will be
                      run. Some regions contain one location, and others contain more
                      than one. If this field is specified, enough regions to include
                      a minimum of 3 locations must be provided, or an error message
                      is returned. Not specifying this field will result in uptime
                      checks running from all regions.
                    items:
                      type: string
                    type: array
                  tcpCheck:
                    description: Contains information needed to make a TCP check.
                    properties:
                      port:
                        description: The port to the page to run the check against.
                          Will be combined with host (specified within the MonitoredResource)
                          to construct the full URL.
                        format: int64
                        type: integer
                    required:
                    - port
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeout:
                    description: The maximum amount of time to wait for the request
                      to complete (must be between 1 and 60 seconds). Accepted formats
                      https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  uptimeCheckID:
                    description: The id of the uptime check
                    type: string
                required:
                - displayName
                - providerRef
                - timeout
                type: object
              monitoredResource:
                description: 'The monitored resource (https://cloud.google.com/monitoring/api/resources)
                  associated with the configuration. The following monitored resource
                  types are supported for uptime checks:  uptime_url  gce_instance  gae_app  aws_ec2_instance  aws_elb_load_balancer'
                properties:
                  labels:
                    additionalProperties:
                      type: string
                    description: Values for all of the labels listed in the associated
                      monitored resource descriptor. For example, Compute Engine VM
                      instances use the labels "project_id", "instance_id", and "zone".
                    type: object
                  type:
                    description: The monitored resource type. This field must match
                      the type field of a MonitoredResourceDescriptor (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.monitoredResourceDescriptors#MonitoredResourceDescriptor)
                      object. For example, the type of a Compute Engine VM instance
                      is gce_instance. For a list of types, see Monitoring resource
                      types (https://cloud.google.com/monitoring/api/resources) and
                      Logging resource types (https://cloud.google.com/logging/docs/api/v2/resource-list).
                    type: string
                required:
                - labels
                - type
                type: object
              name:
                description: A unique resource name for this UptimeCheckConfig. The
                  format is projects/[PROJECT_ID]/uptimeCheckConfigs/[UPTIME_CHECK_ID].
                type: string
              period:
                description: How often, in seconds, the uptime check is performed.
                  Currently, the only supported values are 60s (1 minute), 300s (5
                  minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults
                  to 300s.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resourceGroup:
                description: The group resource associated with the configuration.
                properties:
                  groupID:
                    description: The group of resources being monitored. Should be
                      the 'name' of a group
                    type: string
                  resourceType:
                    description: 'The resource type of the group members. Possible
                      values: ["RESOURCE_TYPE_UNSPECIFIED", "INSTANCE", "AWS_ELB_LOAD_BALANCER"]'
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selectedRegions:
                description: The list of regions from which the check will be run.
                  Some regions contain one location, and others contain more than
                  one. If this field is specified, enough regions to include a minimum
                  of 3 locations must be provided, or an error message is returned.
                  Not specifying this field will result in uptime checks running from
                  all regions.
                items:
                  type: string
                type: array
              tcpCheck:
                description: Contains information needed to make a TCP check.
                properties:
                  port:
                    description: The port to the page to run the check against. Will
                      be combined with host (specified within the MonitoredResource)
                      to construct the full URL.
                    format: int64
                    type: integer
                required:
                - port
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeout:
                description: The maximum amount of time to wait for the request to
                  complete (must be between 1 and 60 seconds). Accepted formats https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              uptimeCheckID:
                description: The id of the uptime check
                type: string
            required:
            - displayName
            - providerRef
            - timeout
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: notificationchannels.monitoring.google.kubeform.com
spec:
  group: monitoring.google.kubeform.com
  names:
    kind: NotificationChannel
    listKind: NotificationChannelList
    plural: notificationchannels
    singular: notificationchannel
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: An optional human-readable description of this notification
                  channel. This description may provide additional details, beyond
                  the display name, for the channel. This may not exceed 1024 Unicode
                  characters.
                type: string
              displayName:
                description: An optional human-readable name for this notification
                  channel. It is recommended that you specify a non-empty and unique
                  name in order to make it easier to identify the channels in your
                  project, though this is not enforced. The display name is limited
                  to 512 Unicode characters.
                type: string
              enabled:
                description: Whether notifications are forwarded to the described
                  channel. This makes it possible to disable delivery of notifications
                  to a particular channel without removing the channel from all alerting
                  policies that reference the channel. This is a more convenient approach
                  when the change is temporary and you want to receive notifications
                  from the same set of alerting policies on the channel at some point
                  in the future.
                type: boolean
              id:
                type: string
              kubeformOutput:
                properties:
                  description:
                    description: An optional human-readable description of this notification
                      channel. This description may provide additional details, beyond
                      the display name, for the channel. This may not exceed 1024
                      Unicode characters.
                    type: string
                  displayName:
                    description: An optional human-readable name for this notification
                      channel. It is recommended that you specify a non-empty and
                      unique name in order to make it easier to identify the channels
                      in your project, though this is not enforced. The display name
                      is limited to 512 Unicode characters.
                    type: string
                  enabled:
                    description: Whether notifications are forwarded to the described
                      channel. This makes it possible to disable delivery of notifications
                      to a particular channel without removing the channel from all
                      alerting policies that reference the channel. This is a more
                      convenient approach when the change is temporary and you want
                      to receive notifications from the same set of alerting policies
                      on the channel at some point in the future.
                    type: boolean
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: "Configuration fields that define the channel and
                      its behavior. The permissible and required labels are specified
                      in the NotificationChannelDescriptor corresponding to the type
                      field. \n Labels with sensitive data are obfuscated by the API
                      and therefore Terraform cannot determine if there are upstream
                      changes to these fields. They can also be configured via the
                      sensitive_labels block, but cannot be configured in both places."
                    type: object
                  name:
                    description: 'The full REST resource name for this channel. The
                      syntax is: projects/[PROJECT_ID]/notificationChannels/[CHANNEL_ID]
                      The [CHANNEL_ID] is automatically assigned by the server on
                      creation.'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  sensitiveLabels:
                    description: "Different notification type behaviors are configured
                      primarily using the the 'labels' field on this resource. This
                      block contains the labels which contain secrets or passwords
                      so that they can be marked sensitive and hidden from plan output.
                      The name of the field, eg: password, will be the key in the
                      'labels' map in the api request. \n Credentials may not be specified
                      in both locations and will cause an error. Changing from one
                      location to a different credential configuration in the config
                      will require an apply to update state."
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    description: The type of the notification channel. This field
                      matches the value of the NotificationChannelDescriptor.type
                      field. See https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.notificationChannelDescriptors/list
                      to get the list of valid values such as "email", "slack", etc...
                    type: string
                  userLabels:
                    additionalProperties:
                      type: string
                    description: User-supplied key/value data that does not need to
                      conform to the corresponding NotificationChannelDescriptor's
                      schema, unlike the labels field. This field is intended to be
                      used for organizing and identifying the NotificationChannel
                      objects.The field can contain up to 64 entries. Each key and
                      value is limited to 63 Unicode characters or 128 bytes, whichever
                      is smaller. Labels and values can contain only lowercase letters,
                      numerals, underscores, and dashes. Keys must begin with a letter.
                    type: object
                  verificationStatus:
                    description: Indicates whether this channel has been verified
                      or not. On a ListNotificationChannels or GetNotificationChannel
                      operation, this field is expected to be populated.If the value
                      is UNVERIFIED, then it indicates that the channel is non-functioning
                      (it both requires verification and lacks verification); otherwise,
                      it is assumed that the channel works.If the channel is neither
                      VERIFIED nor UNVERIFIED, it implies that the channel is of a
                      type that does not require verification or that this specific
                      channel has been exempted from verification because it was created
                      prior to verification being required for channels of this type.This
                      field cannot be modified using a standard UpdateNotificationChannel
                      operation. To change the value of this field, you must call
                      VerifyNotificationChannel.
                    type: string
                required:
                - providerRef
                - type
                type: object
              labels:
                additionalProperties:
                  type: string
                description: "Configuration fields that define the channel and its
                  behavior. The permissible and required labels are specified in the
                  NotificationChannelDescriptor corresponding to the type field. \n
                  Labels with sensitive data are obfuscated by the API and therefore
                  Terraform cannot determine if there are upstream changes to these
                  fields. They can also be configured via the sensitive_labels block,
                  but cannot be configured in both places."
                type: object
              name:
                description: 'The full REST resource name for this channel. The syntax
                  is: projects/[PROJECT_ID]/notificationChannels/[CHANNEL_ID] The
                  [CHANNEL_ID] is automatically assigned by the server on creation.'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              sensitiveLabels:
                description: "Different notification type behaviors are configured
                  primarily using the the 'labels' field on this resource. This block
                  contains the labels which contain secrets or passwords so that they
                  can be marked sensitive and hidden from plan output. The name of
                  the field, eg: password, will be the key in the 'labels' map in
                  the api request. \n Credentials may not be specified in both locations
                  and will cause an error. Changing from one location to a different
                  credential configuration in the config will require an apply to
                  update state."
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              type:
                description: The type of the notification channel. This field matches
                  the value of the NotificationChannelDescriptor.type field. See https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.notificationChannelDescriptors/list
                  to get the list of valid values such as "email", "slack", etc...
                type: string
              userLabels:
                additionalProperties:
                  type: string
                description: User-supplied key/value data that does not need to conform
                  to the corresponding NotificationChannelDescriptor's schema, unlike
                  the labels field. This field is intended to be used for organizing
                  and identifying the NotificationChannel objects.The field can contain
                  up to 64 entries. Each key and value is limited to 63 Unicode characters
                  or 128 bytes, whichever is smaller. Labels and values can contain
                  only lowercase letters, numerals, underscores, and dashes. Keys
                  must begin with a letter.
                type: object
              verificationStatus:
                description: Indicates whether this channel has been verified or not.
                  On a ListNotificationChannels or GetNotificationChannel operation,
                  this field is expected to be populated.If the value is UNVERIFIED,
                  then it indicates that the channel is non-functioning (it both requires
                  verification and lacks verification); otherwise, it is assumed that
                  the channel works.If the channel is neither VERIFIED nor UNVERIFIED,
                  it implies that the channel is of a type that does not require verification
                  or that this specific channel has been exempted from verification
                  because it was created prior to verification being required for
                  channels of this type.This field cannot be modified using a standard
                  UpdateNotificationChannel operation. To change the value of this
                  field, you must call VerifyNotificationChannel.
                type: string
            required:
            - providerRef
            - type
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
