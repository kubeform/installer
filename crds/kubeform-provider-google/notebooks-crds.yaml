apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: environments.notebooks.google.kubeform.com
spec:
  group: notebooks.google.kubeform.com
  names:
    kind: Environment
    listKind: EnvironmentList
    plural: environments
    singular: environment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              containerImage:
                description: Use a container image to start the notebook instance.
                properties:
                  repository:
                    description: 'The path to the container image repository. For
                      example: gcr.io/{project_id}/{imageName}'
                    type: string
                  tag:
                    description: The tag of the container image. If not specified,
                      this defaults to the latest tag.
                    type: string
                required:
                - repository
                type: object
              createTime:
                description: Instance creation time
                type: string
              description:
                description: A brief description of this environment.
                type: string
              displayName:
                description: Display name of this environment for the UI.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  containerImage:
                    description: Use a container image to start the notebook instance.
                    properties:
                      repository:
                        description: 'The path to the container image repository.
                          For example: gcr.io/{project_id}/{imageName}'
                        type: string
                      tag:
                        description: The tag of the container image. If not specified,
                          this defaults to the latest tag.
                        type: string
                    required:
                    - repository
                    type: object
                  createTime:
                    description: Instance creation time
                    type: string
                  description:
                    description: A brief description of this environment.
                    type: string
                  displayName:
                    description: Display name of this environment for the UI.
                    type: string
                  id:
                    type: string
                  location:
                    description: A reference to the zone where the machine resides.
                    type: string
                  name:
                    description: 'The name specified for the Environment instance.
                      Format: projects/{project_id}/locations/{location}/environments/{environmentId}'
                    type: string
                  postStartupScript:
                    description: 'Path to a Bash script that automatically runs after
                      a notebook instance fully boots up. The path must be a URL or
                      Cloud Storage path. Example: "gs://path-to-file/file-name"'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  vmImage:
                    description: Use a Compute Engine VM image to start the notebook
                      instance.
                    properties:
                      imageFamily:
                        description: Use this VM image family to find the image; the
                          newest image in this family will be used.
                        type: string
                      imageName:
                        description: Use VM image name to find the image.
                        type: string
                      project:
                        description: 'The name of the Google Cloud project that this
                          VM image belongs to. Format: projects/{project_id}'
                        type: string
                    required:
                    - project
                    type: object
                required:
                - location
                - name
                - providerRef
                type: object
              location:
                description: A reference to the zone where the machine resides.
                type: string
              name:
                description: 'The name specified for the Environment instance. Format:
                  projects/{project_id}/locations/{location}/environments/{environmentId}'
                type: string
              postStartupScript:
                description: 'Path to a Bash script that automatically runs after
                  a notebook instance fully boots up. The path must be a URL or Cloud
                  Storage path. Example: "gs://path-to-file/file-name"'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              vmImage:
                description: Use a Compute Engine VM image to start the notebook instance.
                properties:
                  imageFamily:
                    description: Use this VM image family to find the image; the newest
                      image in this family will be used.
                    type: string
                  imageName:
                    description: Use VM image name to find the image.
                    type: string
                  project:
                    description: 'The name of the Google Cloud project that this VM
                      image belongs to. Format: projects/{project_id}'
                    type: string
                required:
                - project
                type: object
            required:
            - location
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: instances.notebooks.google.kubeform.com
spec:
  group: notebooks.google.kubeform.com
  names:
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              acceleratorConfig:
                description: The hardware accelerator used on this instance. If you
                  use accelerators, make sure that your configuration has enough vCPUs
                  and memory to support the machineType you have selected.
                properties:
                  coreCount:
                    description: Count of cores of this accelerator.
                    format: int64
                    type: integer
                  type:
                    description: 'Type of this accelerator. Possible values: ["ACCELERATOR_TYPE_UNSPECIFIED",
                      "NVIDIA_TESLA_K80", "NVIDIA_TESLA_P100", "NVIDIA_TESLA_V100",
                      "NVIDIA_TESLA_P4", "NVIDIA_TESLA_T4", "NVIDIA_TESLA_T4_VWS",
                      "NVIDIA_TESLA_P100_VWS", "NVIDIA_TESLA_P4_VWS", "NVIDIA_TESLA_A100",
                      "TPU_V2", "TPU_V3"]'
                    type: string
                required:
                - coreCount
                - type
                type: object
              bootDiskSizeGb:
                description: The size of the boot disk in GB attached to this instance,
                  up to a maximum of 64000 GB (64 TB). The minimum recommended value
                  is 100 GB. If not specified, this defaults to 100.
                format: int64
                type: integer
              bootDiskType:
                description: 'Possible disk types for notebook instances. Possible
                  values: ["DISK_TYPE_UNSPECIFIED", "PD_STANDARD", "PD_SSD", "PD_BALANCED"]'
                type: string
              containerImage:
                description: Use a container image to start the notebook instance.
                properties:
                  repository:
                    description: 'The path to the container image repository. For
                      example: gcr.io/{project_id}/{imageName}'
                    type: string
                  tag:
                    description: The tag of the container image. If not specified,
                      this defaults to the latest tag.
                    type: string
                required:
                - repository
                type: object
              createTime:
                description: Instance creation time
                type: string
              customGpuDriverPath:
                description: Specify a custom Cloud Storage path where the GPU driver
                  is stored. If not specified, we'll automatically choose from official
                  GPU drivers.
                type: string
              dataDiskSizeGb:
                description: The size of the data disk in GB attached to this instance,
                  up to a maximum of 64000 GB (64 TB). You can choose the size of
                  the data disk based on how big your notebooks and data are. If not
                  specified, this defaults to 100.
                format: int64
                type: integer
              dataDiskType:
                description: 'Possible disk types for notebook instances. Possible
                  values: ["DISK_TYPE_UNSPECIFIED", "PD_STANDARD", "PD_SSD", "PD_BALANCED"]'
                type: string
              diskEncryption:
                description: 'Disk encryption method used on the boot and data disks,
                  defaults to GMEK. Possible values: ["DISK_ENCRYPTION_UNSPECIFIED",
                  "GMEK", "CMEK"]'
                type: string
              id:
                type: string
              installGpuDriver:
                description: Whether the end user authorizes Google Cloud to install
                  GPU driver on this instance. If this field is empty or set to false,
                  the GPU driver won't be installed. Only applicable to instances
                  with GPUs.
                type: boolean
              instanceOwners:
                description: 'The list of owners of this instance after creation.
                  Format: alias@example.com. Currently supports one owner only. If
                  not specified, all of the service account users of your VM instance''s
                  service account can use the instance.'
                items:
                  type: string
                type: array
              kmsKey:
                description: 'The KMS key used to encrypt the disks, only applicable
                  if diskEncryption is CMEK. Format: projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}'
                type: string
              kubeformOutput:
                properties:
                  acceleratorConfig:
                    description: The hardware accelerator used on this instance. If
                      you use accelerators, make sure that your configuration has
                      enough vCPUs and memory to support the machineType you have
                      selected.
                    properties:
                      coreCount:
                        description: Count of cores of this accelerator.
                        format: int64
                        type: integer
                      type:
                        description: 'Type of this accelerator. Possible values: ["ACCELERATOR_TYPE_UNSPECIFIED",
                          "NVIDIA_TESLA_K80", "NVIDIA_TESLA_P100", "NVIDIA_TESLA_V100",
                          "NVIDIA_TESLA_P4", "NVIDIA_TESLA_T4", "NVIDIA_TESLA_T4_VWS",
                          "NVIDIA_TESLA_P100_VWS", "NVIDIA_TESLA_P4_VWS", "NVIDIA_TESLA_A100",
                          "TPU_V2", "TPU_V3"]'
                        type: string
                    required:
                    - coreCount
                    - type
                    type: object
                  bootDiskSizeGb:
                    description: The size of the boot disk in GB attached to this
                      instance, up to a maximum of 64000 GB (64 TB). The minimum recommended
                      value is 100 GB. If not specified, this defaults to 100.
                    format: int64
                    type: integer
                  bootDiskType:
                    description: 'Possible disk types for notebook instances. Possible
                      values: ["DISK_TYPE_UNSPECIFIED", "PD_STANDARD", "PD_SSD", "PD_BALANCED"]'
                    type: string
                  containerImage:
                    description: Use a container image to start the notebook instance.
                    properties:
                      repository:
                        description: 'The path to the container image repository.
                          For example: gcr.io/{project_id}/{imageName}'
                        type: string
                      tag:
                        description: The tag of the container image. If not specified,
                          this defaults to the latest tag.
                        type: string
                    required:
                    - repository
                    type: object
                  createTime:
                    description: Instance creation time
                    type: string
                  customGpuDriverPath:
                    description: Specify a custom Cloud Storage path where the GPU
                      driver is stored. If not specified, we'll automatically choose
                      from official GPU drivers.
                    type: string
                  dataDiskSizeGb:
                    description: The size of the data disk in GB attached to this
                      instance, up to a maximum of 64000 GB (64 TB). You can choose
                      the size of the data disk based on how big your notebooks and
                      data are. If not specified, this defaults to 100.
                    format: int64
                    type: integer
                  dataDiskType:
                    description: 'Possible disk types for notebook instances. Possible
                      values: ["DISK_TYPE_UNSPECIFIED", "PD_STANDARD", "PD_SSD", "PD_BALANCED"]'
                    type: string
                  diskEncryption:
                    description: 'Disk encryption method used on the boot and data
                      disks, defaults to GMEK. Possible values: ["DISK_ENCRYPTION_UNSPECIFIED",
                      "GMEK", "CMEK"]'
                    type: string
                  id:
                    type: string
                  installGpuDriver:
                    description: Whether the end user authorizes Google Cloud to install
                      GPU driver on this instance. If this field is empty or set to
                      false, the GPU driver won't be installed. Only applicable to
                      instances with GPUs.
                    type: boolean
                  instanceOwners:
                    description: 'The list of owners of this instance after creation.
                      Format: alias@example.com. Currently supports one owner only.
                      If not specified, all of the service account users of your VM
                      instance''s service account can use the instance.'
                    items:
                      type: string
                    type: array
                  kmsKey:
                    description: 'The KMS key used to encrypt the disks, only applicable
                      if diskEncryption is CMEK. Format: projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}'
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: 'Labels to apply to this instance. These can be later
                      modified by the setLabels method. An object containing a list
                      of "key": value pairs. Example: { "name": "wrench", "mass":
                      "1.3kg", "count": "3" }.'
                    type: object
                  location:
                    description: A reference to the zone where the machine resides.
                    type: string
                  machineType:
                    description: A reference to a machine type which defines VM kind.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: 'Custom metadata to apply to this instance. An object
                      containing a list of "key": value pairs. Example: { "name":
                      "wrench", "mass": "1.3kg", "count": "3" }.'
                    type: object
                  name:
                    description: The name specified for the Notebook instance.
                    type: string
                  network:
                    description: 'The name of the VPC that this instance is in. Format:
                      projects/{project_id}/global/networks/{network_id}'
                    type: string
                  noProxyAccess:
                    description: The notebook instance will not register with the
                      proxy..
                    type: boolean
                  noPublicIP:
                    description: No public IP will be assigned to this instance.
                    type: boolean
                  noRemoveDataDisk:
                    description: If true, the data disk will not be auto deleted when
                      deleting the instance.
                    type: boolean
                  postStartupScript:
                    description: Path to a Bash script that automatically runs after
                      a notebook instance fully boots up. The path must be a URL or
                      Cloud Storage path (gs://path-to-file/file-name).
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  proxyURI:
                    description: The proxy endpoint that is used to access the Jupyter
                      notebook.
                    type: string
                  serviceAccount:
                    description: The service account on this instance, giving access
                      to other Google Cloud services. You can use any service account
                      within the same project, but you must have the service account
                      user permission to use the instance. If not specified, the Compute
                      Engine default service account is used.
                    type: string
                  serviceAccountScopes:
                    description: 'Optional. The URIs of service account scopes to
                      be included in Compute Engine instances. If not specified, the
                      following scopes are defined: - https://www.googleapis.com/auth/cloud-platform
                      - https://www.googleapis.com/auth/userinfo.email'
                    items:
                      type: string
                    type: array
                  shieldedInstanceConfig:
                    description: A set of Shielded Instance options. Check [Images
                      using supported Shielded VM features] Not all combinations are
                      valid
                    properties:
                      enableIntegrityMonitoring:
                        description: Defines whether the instance has integrity monitoring
                          enabled. Enables monitoring and attestation of the boot
                          integrity of the instance. The attestation is performed
                          against the integrity policy baseline. This baseline is
                          initially derived from the implicitly trusted boot image
                          when the instance is created. Enabled by default.
                        type: boolean
                      enableSecureBoot:
                        description: Defines whether the instance has Secure Boot
                          enabled. Secure Boot helps ensure that the system only runs
                          authentic software by verifying the digital signature of
                          all boot components, and halting the boot process if signature
                          verification fails. Disabled by default.
                        type: boolean
                      enableVtpm:
                        description: Defines whether the instance has the vTPM enabled.
                          Enabled by default.
                        type: boolean
                    type: object
                  state:
                    description: The state of this instance.
                    type: string
                  subnet:
                    description: 'The name of the subnet that this instance is in.
                      Format: projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}'
                    type: string
                  tags:
                    description: The Compute Engine tags to add to runtime.
                    items:
                      type: string
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  updateTime:
                    description: Instance update time.
                    type: string
                  vmImage:
                    description: Use a Compute Engine VM image to start the notebook
                      instance.
                    properties:
                      imageFamily:
                        description: Use this VM image family to find the image; the
                          newest image in this family will be used.
                        type: string
                      imageName:
                        description: Use VM image name to find the image.
                        type: string
                      project:
                        description: 'The name of the Google Cloud project that this
                          VM image belongs to. Format: projects/{project_id}'
                        type: string
                    required:
                    - project
                    type: object
                required:
                - location
                - machineType
                - name
                - providerRef
                type: object
              labels:
                additionalProperties:
                  type: string
                description: 'Labels to apply to this instance. These can be later
                  modified by the setLabels method. An object containing a list of
                  "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg",
                  "count": "3" }.'
                type: object
              location:
                description: A reference to the zone where the machine resides.
                type: string
              machineType:
                description: A reference to a machine type which defines VM kind.
                type: string
              metadata:
                additionalProperties:
                  type: string
                description: 'Custom metadata to apply to this instance. An object
                  containing a list of "key": value pairs. Example: { "name": "wrench",
                  "mass": "1.3kg", "count": "3" }.'
                type: object
              name:
                description: The name specified for the Notebook instance.
                type: string
              network:
                description: 'The name of the VPC that this instance is in. Format:
                  projects/{project_id}/global/networks/{network_id}'
                type: string
              noProxyAccess:
                description: The notebook instance will not register with the proxy..
                type: boolean
              noPublicIP:
                description: No public IP will be assigned to this instance.
                type: boolean
              noRemoveDataDisk:
                description: If true, the data disk will not be auto deleted when
                  deleting the instance.
                type: boolean
              postStartupScript:
                description: Path to a Bash script that automatically runs after a
                  notebook instance fully boots up. The path must be a URL or Cloud
                  Storage path (gs://path-to-file/file-name).
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              proxyURI:
                description: The proxy endpoint that is used to access the Jupyter
                  notebook.
                type: string
              serviceAccount:
                description: The service account on this instance, giving access to
                  other Google Cloud services. You can use any service account within
                  the same project, but you must have the service account user permission
                  to use the instance. If not specified, the Compute Engine default
                  service account is used.
                type: string
              serviceAccountScopes:
                description: 'Optional. The URIs of service account scopes to be included
                  in Compute Engine instances. If not specified, the following scopes
                  are defined: - https://www.googleapis.com/auth/cloud-platform -
                  https://www.googleapis.com/auth/userinfo.email'
                items:
                  type: string
                type: array
              shieldedInstanceConfig:
                description: A set of Shielded Instance options. Check [Images using
                  supported Shielded VM features] Not all combinations are valid
                properties:
                  enableIntegrityMonitoring:
                    description: Defines whether the instance has integrity monitoring
                      enabled. Enables monitoring and attestation of the boot integrity
                      of the instance. The attestation is performed against the integrity
                      policy baseline. This baseline is initially derived from the
                      implicitly trusted boot image when the instance is created.
                      Enabled by default.
                    type: boolean
                  enableSecureBoot:
                    description: Defines whether the instance has Secure Boot enabled.
                      Secure Boot helps ensure that the system only runs authentic
                      software by verifying the digital signature of all boot components,
                      and halting the boot process if signature verification fails.
                      Disabled by default.
                    type: boolean
                  enableVtpm:
                    description: Defines whether the instance has the vTPM enabled.
                      Enabled by default.
                    type: boolean
                type: object
              state:
                description: The state of this instance.
                type: string
              subnet:
                description: 'The name of the subnet that this instance is in. Format:
                  projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}'
                type: string
              tags:
                description: The Compute Engine tags to add to runtime.
                items:
                  type: string
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              updateTime:
                description: Instance update time.
                type: string
              vmImage:
                description: Use a Compute Engine VM image to start the notebook instance.
                properties:
                  imageFamily:
                    description: Use this VM image family to find the image; the newest
                      image in this family will be used.
                    type: string
                  imageName:
                    description: Use VM image name to find the image.
                    type: string
                  project:
                    description: 'The name of the Google Cloud project that this VM
                      image belongs to. Format: projects/{project_id}'
                    type: string
                required:
                - project
                type: object
            required:
            - location
            - machineType
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: instanceiampolicies.notebooks.google.kubeform.com
spec:
  group: notebooks.google.kubeform.com
  names:
    kind: InstanceIamPolicy
    listKind: InstanceIamPolicyList
    plural: instanceiampolicies
    singular: instanceiampolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              etag:
                type: string
              id:
                type: string
              instanceName:
                type: string
              kubeformOutput:
                properties:
                  etag:
                    type: string
                  id:
                    type: string
                  instanceName:
                    type: string
                  location:
                    type: string
                  policyData:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - instanceName
                - policyData
                - providerRef
                type: object
              location:
                type: string
              policyData:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - instanceName
            - policyData
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: locations.notebooks.google.kubeform.com
spec:
  group: notebooks.google.kubeform.com
  names:
    kind: Location
    listKind: LocationList
    plural: locations
    singular: location
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              id:
                type: string
              kubeformOutput:
                properties:
                  id:
                    type: string
                  name:
                    description: Name of the Location resource.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - providerRef
                type: object
              name:
                description: Name of the Location resource.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: instanceiammembers.notebooks.google.kubeform.com
spec:
  group: notebooks.google.kubeform.com
  names:
    kind: InstanceIamMember
    listKind: InstanceIamMemberList
    plural: instanceiammembers
    singular: instanceiammember
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              instanceName:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  instanceName:
                    type: string
                  location:
                    type: string
                  member:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - instanceName
                - member
                - providerRef
                - role
                type: object
              location:
                type: string
              member:
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - instanceName
            - member
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: instanceiambindings.notebooks.google.kubeform.com
spec:
  group: notebooks.google.kubeform.com
  names:
    kind: InstanceIamBinding
    listKind: InstanceIamBindingList
    plural: instanceiambindings
    singular: instanceiambinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              instanceName:
                type: string
              kubeformOutput:
                properties:
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  instanceName:
                    type: string
                  location:
                    type: string
                  members:
                    items:
                      type: string
                    type: array
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - instanceName
                - members
                - providerRef
                - role
                type: object
              location:
                type: string
              members:
                items:
                  type: string
                type: array
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - instanceName
            - members
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
