apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: configpatchdeployments.os.google.kubeform.com
spec:
  group: os.google.kubeform.com
  names:
    kind: ConfigPatchDeployment
    listKind: ConfigPatchDeploymentList
    plural: configpatchdeployments
    singular: configpatchdeployment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              createTime:
                description: 'Time the patch deployment was created. Timestamp is
                  in RFC3339 text format. A timestamp in RFC3339 UTC "Zulu" format,
                  accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
                type: string
              description:
                description: Description of the patch deployment. Length of the description
                  is limited to 1024 characters.
                type: string
              duration:
                description: 'Duration of the patch. After the duration ends, the
                  patch times out. A duration in seconds with up to nine fractional
                  digits, terminated by ''s''. Example: "3.5s"'
                type: string
              id:
                type: string
              instanceFilter:
                description: VM instances to patch.
                properties:
                  all:
                    description: Target all VM instances in the project. If true,
                      no other criteria is permitted.
                    type: boolean
                  groupLabels:
                    description: Targets VM instances matching ANY of these GroupLabels.
                      This allows targeting of disparate groups of VM instances.
                    items:
                      properties:
                        labels:
                          additionalProperties:
                            type: string
                          description: Compute Engine instance labels that must be
                            present for a VM instance to be targeted by this filter
                          type: object
                      required:
                      - labels
                      type: object
                    type: array
                  instanceNamePrefixes:
                    description: Targets VMs whose name starts with one of these prefixes.
                      Similar to labels, this is another way to group VMs when targeting
                      configs, for example prefix="prod-".
                    items:
                      type: string
                    type: array
                  instances:
                    description: Targets any of the VM instances specified. Instances
                      are specified by their URI in the 'form zones/{{zone}}/instances/{{instance_name}}',
                      'projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}',
                      or 'https://www.googleapis.com/compute/v1/projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}'
                    items:
                      type: string
                    type: array
                  zones:
                    description: Targets VM instances in ANY of these zones. Leave
                      empty to target VM instances in any zone.
                    items:
                      type: string
                    type: array
                type: object
              kubeformOutput:
                properties:
                  createTime:
                    description: 'Time the patch deployment was created. Timestamp
                      is in RFC3339 text format. A timestamp in RFC3339 UTC "Zulu"
                      format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
                    type: string
                  description:
                    description: Description of the patch deployment. Length of the
                      description is limited to 1024 characters.
                    type: string
                  duration:
                    description: 'Duration of the patch. After the duration ends,
                      the patch times out. A duration in seconds with up to nine fractional
                      digits, terminated by ''s''. Example: "3.5s"'
                    type: string
                  id:
                    type: string
                  instanceFilter:
                    description: VM instances to patch.
                    properties:
                      all:
                        description: Target all VM instances in the project. If true,
                          no other criteria is permitted.
                        type: boolean
                      groupLabels:
                        description: Targets VM instances matching ANY of these GroupLabels.
                          This allows targeting of disparate groups of VM instances.
                        items:
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: Compute Engine instance labels that must
                                be present for a VM instance to be targeted by this
                                filter
                              type: object
                          required:
                          - labels
                          type: object
                        type: array
                      instanceNamePrefixes:
                        description: Targets VMs whose name starts with one of these
                          prefixes. Similar to labels, this is another way to group
                          VMs when targeting configs, for example prefix="prod-".
                        items:
                          type: string
                        type: array
                      instances:
                        description: Targets any of the VM instances specified. Instances
                          are specified by their URI in the 'form zones/{{zone}}/instances/{{instance_name}}',
                          'projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}',
                          or 'https://www.googleapis.com/compute/v1/projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}'
                        items:
                          type: string
                        type: array
                      zones:
                        description: Targets VM instances in ANY of these zones. Leave
                          empty to target VM instances in any zone.
                        items:
                          type: string
                        type: array
                    type: object
                  lastExecuteTime:
                    description: 'The last time a patch job was started by this deployment.
                      Timestamp is in RFC3339 text format. A timestamp in RFC3339
                      UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
                    type: string
                  name:
                    description: 'Unique name for the patch deployment resource in
                      a project. The patch deployment name is in the form: projects/{project_id}/patchDeployments/{patchDeploymentId}.'
                    type: string
                  oneTimeSchedule:
                    description: Schedule a one-time execution.
                    properties:
                      executeTime:
                        description: 'The desired patch job execution time. A timestamp
                          in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
                          "2014-10-02T15:01:23.045123456Z".'
                        type: string
                    required:
                    - executeTime
                    type: object
                  patchConfig:
                    description: Patch configuration that is applied.
                    properties:
                      apt:
                        description: Apt update settings. Use this setting to override
                          the default apt patch rules.
                        properties:
                          excludes:
                            description: List of packages to exclude from update.
                              These packages will be excluded.
                            items:
                              type: string
                            type: array
                          exclusivePackages:
                            description: An exclusive list of packages to be updated.
                              These are the only packages that will be updated. If
                              these packages are not installed, they will be ignored.
                              This field cannot be specified with any other patch
                              configuration fields.
                            items:
                              type: string
                            type: array
                          type:
                            description: 'By changing the type to DIST, the patching
                              is performed using apt-get dist-upgrade instead. Possible
                              values: ["DIST", "UPGRADE"]'
                            type: string
                        type: object
                      goo:
                        description: goo update settings. Use this setting to override
                          the default goo patch rules.
                        properties:
                          enabled:
                            description: goo update settings. Use this setting to
                              override the default goo patch rules.
                            type: boolean
                        required:
                        - enabled
                        type: object
                      postStep:
                        description: The ExecStep to run after the patch update.
                        properties:
                          linuxExecStepConfig:
                            description: The ExecStepConfig for all Linux VMs targeted
                              by the PatchJob.
                            properties:
                              allowedSuccessCodes:
                                description: Defaults to [0]. A list of possible return
                                  values that the execution can return to indicate
                                  a success.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              gcsObject:
                                description: A Cloud Storage object containing the
                                  executable.
                                properties:
                                  bucket:
                                    description: Bucket of the Cloud Storage object.
                                    type: string
                                  generationNumber:
                                    description: Generation number of the Cloud Storage
                                      object. This is used to ensure that the ExecStep
                                      specified by this PatchJob does not change.
                                    type: string
                                  object:
                                    description: Name of the Cloud Storage object.
                                    type: string
                                required:
                                - bucket
                                - generationNumber
                                - object
                                type: object
                              interpreter:
                                description: 'The script interpreter to use to run
                                  the script. If no interpreter is specified the script
                                  will be executed directly, which will likely only
                                  succeed for scripts with shebang lines. Possible
                                  values: ["SHELL", "POWERSHELL"]'
                                type: string
                              localPath:
                                description: An absolute path to the executable on
                                  the VM.
                                type: string
                            type: object
                          windowsExecStepConfig:
                            description: The ExecStepConfig for all Windows VMs targeted
                              by the PatchJob.
                            properties:
                              allowedSuccessCodes:
                                description: Defaults to [0]. A list of possible return
                                  values that the execution can return to indicate
                                  a success.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              gcsObject:
                                description: A Cloud Storage object containing the
                                  executable.
                                properties:
                                  bucket:
                                    description: Bucket of the Cloud Storage object.
                                    type: string
                                  generationNumber:
                                    description: Generation number of the Cloud Storage
                                      object. This is used to ensure that the ExecStep
                                      specified by this PatchJob does not change.
                                    type: string
                                  object:
                                    description: Name of the Cloud Storage object.
                                    type: string
                                required:
                                - bucket
                                - generationNumber
                                - object
                                type: object
                              interpreter:
                                description: 'The script interpreter to use to run
                                  the script. If no interpreter is specified the script
                                  will be executed directly, which will likely only
                                  succeed for scripts with shebang lines. Possible
                                  values: ["SHELL", "POWERSHELL"]'
                                type: string
                              localPath:
                                description: An absolute path to the executable on
                                  the VM.
                                type: string
                            type: object
                        type: object
                      preStep:
                        description: The ExecStep to run before the patch update.
                        properties:
                          linuxExecStepConfig:
                            description: The ExecStepConfig for all Linux VMs targeted
                              by the PatchJob.
                            properties:
                              allowedSuccessCodes:
                                description: Defaults to [0]. A list of possible return
                                  values that the execution can return to indicate
                                  a success.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              gcsObject:
                                description: A Cloud Storage object containing the
                                  executable.
                                properties:
                                  bucket:
                                    description: Bucket of the Cloud Storage object.
                                    type: string
                                  generationNumber:
                                    description: Generation number of the Cloud Storage
                                      object. This is used to ensure that the ExecStep
                                      specified by this PatchJob does not change.
                                    type: string
                                  object:
                                    description: Name of the Cloud Storage object.
                                    type: string
                                required:
                                - bucket
                                - generationNumber
                                - object
                                type: object
                              interpreter:
                                description: 'The script interpreter to use to run
                                  the script. If no interpreter is specified the script
                                  will be executed directly, which will likely only
                                  succeed for scripts with shebang lines. Possible
                                  values: ["SHELL", "POWERSHELL"]'
                                type: string
                              localPath:
                                description: An absolute path to the executable on
                                  the VM.
                                type: string
                            type: object
                          windowsExecStepConfig:
                            description: The ExecStepConfig for all Windows VMs targeted
                              by the PatchJob.
                            properties:
                              allowedSuccessCodes:
                                description: Defaults to [0]. A list of possible return
                                  values that the execution can return to indicate
                                  a success.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              gcsObject:
                                description: A Cloud Storage object containing the
                                  executable.
                                properties:
                                  bucket:
                                    description: Bucket of the Cloud Storage object.
                                    type: string
                                  generationNumber:
                                    description: Generation number of the Cloud Storage
                                      object. This is used to ensure that the ExecStep
                                      specified by this PatchJob does not change.
                                    type: string
                                  object:
                                    description: Name of the Cloud Storage object.
                                    type: string
                                required:
                                - bucket
                                - generationNumber
                                - object
                                type: object
                              interpreter:
                                description: 'The script interpreter to use to run
                                  the script. If no interpreter is specified the script
                                  will be executed directly, which will likely only
                                  succeed for scripts with shebang lines. Possible
                                  values: ["SHELL", "POWERSHELL"]'
                                type: string
                              localPath:
                                description: An absolute path to the executable on
                                  the VM.
                                type: string
                            type: object
                        type: object
                      rebootConfig:
                        description: 'Post-patch reboot settings. Possible values:
                          ["DEFAULT", "ALWAYS", "NEVER"]'
                        type: string
                      windowsUpdate:
                        description: Windows update settings. Use this setting to
                          override the default Windows patch rules.
                        properties:
                          classifications:
                            description: 'Only apply updates of these windows update
                              classifications. If empty, all updates are applied.
                              Possible values: ["CRITICAL", "SECURITY", "DEFINITION",
                              "DRIVER", "FEATURE_PACK", "SERVICE_PACK", "TOOL", "UPDATE_ROLLUP",
                              "UPDATE"]'
                            items:
                              type: string
                            type: array
                          excludes:
                            description: List of KBs to exclude from update.
                            items:
                              type: string
                            type: array
                          exclusivePatches:
                            description: An exclusive list of kbs to be updated. These
                              are the only patches that will be updated. This field
                              must not be used with other patch configurations.
                            items:
                              type: string
                            type: array
                        type: object
                      yum:
                        description: Yum update settings. Use this setting to override
                          the default yum patch rules.
                        properties:
                          excludes:
                            description: List of packages to exclude from update.
                              These packages will be excluded.
                            items:
                              type: string
                            type: array
                          exclusivePackages:
                            description: An exclusive list of packages to be updated.
                              These are the only packages that will be updated. If
                              these packages are not installed, they will be ignored.
                              This field cannot be specified with any other patch
                              configuration fields.
                            items:
                              type: string
                            type: array
                          minimal:
                            description: Will cause patch to run yum update-minimal
                              instead.
                            type: boolean
                          security:
                            description: Adds the --security flag to yum update. Not
                              supported on all platforms.
                            type: boolean
                        type: object
                      zypper:
                        description: zypper update settings. Use this setting to override
                          the default zypper patch rules.
                        properties:
                          categories:
                            description: Install only patches with these categories.
                              Common categories include security, recommended, and
                              feature.
                            items:
                              type: string
                            type: array
                          excludes:
                            description: List of packages to exclude from update.
                            items:
                              type: string
                            type: array
                          exclusivePatches:
                            description: An exclusive list of patches to be updated.
                              These are the only patches that will be installed using
                              'zypper patch patch:' command. This field must not be
                              used with any other patch configuration fields.
                            items:
                              type: string
                            type: array
                          severities:
                            description: Install only patches with these severities.
                              Common severities include critical, important, moderate,
                              and low.
                            items:
                              type: string
                            type: array
                          withOptional:
                            description: Adds the --with-optional flag to zypper patch.
                            type: boolean
                          withUpdate:
                            description: Adds the --with-update flag, to zypper patch.
                            type: boolean
                        type: object
                    type: object
                  patchDeploymentID:
                    description: 'A name for the patch deployment in the project.
                      When creating a name the following rules apply: * Must contain
                      only lowercase letters, numbers, and hyphens. * Must start with
                      a letter. * Must be between 1-63 characters. * Must end with
                      a number or a letter. * Must be unique within the project.'
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  recurringSchedule:
                    description: Schedule recurring executions.
                    properties:
                      endTime:
                        description: 'The end time at which a recurring patch deployment
                          schedule is no longer active. A timestamp in RFC3339 UTC
                          "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
                        type: string
                      lastExecuteTime:
                        description: 'The time the last patch job ran successfully.
                          A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
                          Example: "2014-10-02T15:01:23.045123456Z".'
                        type: string
                      monthly:
                        description: Schedule with monthly executions.
                        properties:
                          monthDay:
                            description: One day of the month. 1-31 indicates the
                              1st to the 31st day. -1 indicates the last day of the
                              month. Months without the target day will be skipped.
                              For example, a schedule to run "every month on the 31st"
                              will not run in February, April, June, etc.
                            format: int64
                            type: integer
                          weekDayOfMonth:
                            description: Week day in a month.
                            properties:
                              dayOfWeek:
                                description: 'A day of the week. Possible values:
                                  ["MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY",
                                  "SATURDAY", "SUNDAY"]'
                                type: string
                              weekOrdinal:
                                description: Week number in a month. 1-4 indicates
                                  the 1st to 4th week of the month. -1 indicates the
                                  last week of the month.
                                format: int64
                                type: integer
                            required:
                            - dayOfWeek
                            - weekOrdinal
                            type: object
                        type: object
                      nextExecuteTime:
                        description: 'The time the next patch job is scheduled to
                          run. A timestamp in RFC3339 UTC "Zulu" format, accurate
                          to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
                        type: string
                      startTime:
                        description: 'The time that the recurring schedule becomes
                          effective. Defaults to createTime of the patch deployment.
                          A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
                          Example: "2014-10-02T15:01:23.045123456Z".'
                        type: string
                      timeOfDay:
                        description: Time of the day to run a recurring deployment.
                        properties:
                          hours:
                            description: Hours of day in 24 hour format. Should be
                              from 0 to 23. An API may choose to allow the value "24:00:00"
                              for scenarios like business closing time.
                            format: int64
                            type: integer
                          minutes:
                            description: Minutes of hour of day. Must be from 0 to
                              59.
                            format: int64
                            type: integer
                          nanos:
                            description: Fractions of seconds in nanoseconds. Must
                              be from 0 to 999,999,999.
                            format: int64
                            type: integer
                          seconds:
                            description: Seconds of minutes of the time. Must normally
                              be from 0 to 59. An API may allow the value 60 if it
                              allows leap-seconds.
                            format: int64
                            type: integer
                        type: object
                      timeZone:
                        description: Defines the time zone that timeOfDay is relative
                          to. The rules for daylight saving time are determined by
                          the chosen time zone.
                        properties:
                          ID:
                            description: IANA Time Zone Database time zone, e.g. "America/New_York".
                            type: string
                          version:
                            description: IANA Time Zone Database version number, e.g.
                              "2019a".
                            type: string
                        required:
                        - ID
                        type: object
                      weekly:
                        description: Schedule with weekly executions.
                        properties:
                          dayOfWeek:
                            description: 'IANA Time Zone Database time zone, e.g.
                              "America/New_York". Possible values: ["MONDAY", "TUESDAY",
                              "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]'
                            type: string
                        required:
                        - dayOfWeek
                        type: object
                    required:
                    - timeOfDay
                    - timeZone
                    type: object
                  rollout:
                    description: Rollout strategy of the patch job.
                    properties:
                      disruptionBudget:
                        description: The maximum number (or percentage) of VMs per
                          zone to disrupt at any given moment. The number of VMs calculated
                          from multiplying the percentage by the total number of VMs
                          in a zone is rounded up. During patching, a VM is considered
                          disrupted from the time the agent is notified to begin until
                          patching has completed. This disruption time includes the
                          time to complete reboot and any post-patch steps. A VM contributes
                          to the disruption budget if its patching operation fails
                          either when applying the patches, running pre or post patch
                          steps, or if it fails to respond with a success notification
                          before timing out. VMs that are not running or do not have
                          an active agent do not count toward this disruption budget.
                          For zone-by-zone rollouts, if the disruption budget in a
                          zone is exceeded, the patch job stops, because continuing
                          to the next zone requires completion of the patch process
                          in the previous zone. For example, if the disruption budget
                          has a fixed value of 10, and 8 VMs fail to patch in the
                          current zone, the patch job continues to patch 2 VMs at
                          a time until the zone is completed. When that zone is completed
                          successfully, patching begins with 10 VMs at a time in the
                          next zone. If 10 VMs in the next zone fail to patch, the
                          patch job stops.
                        properties:
                          fixed:
                            description: Specifies a fixed value.
                            format: int64
                            type: integer
                          percentage:
                            description: Specifies the relative value defined as a
                              percentage, which will be multiplied by a reference
                              value.
                            format: int64
                            type: integer
                        type: object
                      mode:
                        description: 'Mode of the patch rollout. Possible values:
                          ["ZONE_BY_ZONE", "CONCURRENT_ZONES"]'
                        type: string
                    required:
                    - disruptionBudget
                    - mode
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  updateTime:
                    description: 'Time the patch deployment was last updated. Timestamp
                      is in RFC3339 text format. A timestamp in RFC3339 UTC "Zulu"
                      format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
                    type: string
                required:
                - instanceFilter
                - patchDeploymentID
                - providerRef
                type: object
              lastExecuteTime:
                description: 'The last time a patch job was started by this deployment.
                  Timestamp is in RFC3339 text format. A timestamp in RFC3339 UTC
                  "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
                type: string
              name:
                description: 'Unique name for the patch deployment resource in a project.
                  The patch deployment name is in the form: projects/{project_id}/patchDeployments/{patchDeploymentId}.'
                type: string
              oneTimeSchedule:
                description: Schedule a one-time execution.
                properties:
                  executeTime:
                    description: 'The desired patch job execution time. A timestamp
                      in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
                      "2014-10-02T15:01:23.045123456Z".'
                    type: string
                required:
                - executeTime
                type: object
              patchConfig:
                description: Patch configuration that is applied.
                properties:
                  apt:
                    description: Apt update settings. Use this setting to override
                      the default apt patch rules.
                    properties:
                      excludes:
                        description: List of packages to exclude from update. These
                          packages will be excluded.
                        items:
                          type: string
                        type: array
                      exclusivePackages:
                        description: An exclusive list of packages to be updated.
                          These are the only packages that will be updated. If these
                          packages are not installed, they will be ignored. This field
                          cannot be specified with any other patch configuration fields.
                        items:
                          type: string
                        type: array
                      type:
                        description: 'By changing the type to DIST, the patching is
                          performed using apt-get dist-upgrade instead. Possible values:
                          ["DIST", "UPGRADE"]'
                        type: string
                    type: object
                  goo:
                    description: goo update settings. Use this setting to override
                      the default goo patch rules.
                    properties:
                      enabled:
                        description: goo update settings. Use this setting to override
                          the default goo patch rules.
                        type: boolean
                    required:
                    - enabled
                    type: object
                  postStep:
                    description: The ExecStep to run after the patch update.
                    properties:
                      linuxExecStepConfig:
                        description: The ExecStepConfig for all Linux VMs targeted
                          by the PatchJob.
                        properties:
                          allowedSuccessCodes:
                            description: Defaults to [0]. A list of possible return
                              values that the execution can return to indicate a success.
                            items:
                              format: int64
                              type: integer
                            type: array
                          gcsObject:
                            description: A Cloud Storage object containing the executable.
                            properties:
                              bucket:
                                description: Bucket of the Cloud Storage object.
                                type: string
                              generationNumber:
                                description: Generation number of the Cloud Storage
                                  object. This is used to ensure that the ExecStep
                                  specified by this PatchJob does not change.
                                type: string
                              object:
                                description: Name of the Cloud Storage object.
                                type: string
                            required:
                            - bucket
                            - generationNumber
                            - object
                            type: object
                          interpreter:
                            description: 'The script interpreter to use to run the
                              script. If no interpreter is specified the script will
                              be executed directly, which will likely only succeed
                              for scripts with shebang lines. Possible values: ["SHELL",
                              "POWERSHELL"]'
                            type: string
                          localPath:
                            description: An absolute path to the executable on the
                              VM.
                            type: string
                        type: object
                      windowsExecStepConfig:
                        description: The ExecStepConfig for all Windows VMs targeted
                          by the PatchJob.
                        properties:
                          allowedSuccessCodes:
                            description: Defaults to [0]. A list of possible return
                              values that the execution can return to indicate a success.
                            items:
                              format: int64
                              type: integer
                            type: array
                          gcsObject:
                            description: A Cloud Storage object containing the executable.
                            properties:
                              bucket:
                                description: Bucket of the Cloud Storage object.
                                type: string
                              generationNumber:
                                description: Generation number of the Cloud Storage
                                  object. This is used to ensure that the ExecStep
                                  specified by this PatchJob does not change.
                                type: string
                              object:
                                description: Name of the Cloud Storage object.
                                type: string
                            required:
                            - bucket
                            - generationNumber
                            - object
                            type: object
                          interpreter:
                            description: 'The script interpreter to use to run the
                              script. If no interpreter is specified the script will
                              be executed directly, which will likely only succeed
                              for scripts with shebang lines. Possible values: ["SHELL",
                              "POWERSHELL"]'
                            type: string
                          localPath:
                            description: An absolute path to the executable on the
                              VM.
                            type: string
                        type: object
                    type: object
                  preStep:
                    description: The ExecStep to run before the patch update.
                    properties:
                      linuxExecStepConfig:
                        description: The ExecStepConfig for all Linux VMs targeted
                          by the PatchJob.
                        properties:
                          allowedSuccessCodes:
                            description: Defaults to [0]. A list of possible return
                              values that the execution can return to indicate a success.
                            items:
                              format: int64
                              type: integer
                            type: array
                          gcsObject:
                            description: A Cloud Storage object containing the executable.
                            properties:
                              bucket:
                                description: Bucket of the Cloud Storage object.
                                type: string
                              generationNumber:
                                description: Generation number of the Cloud Storage
                                  object. This is used to ensure that the ExecStep
                                  specified by this PatchJob does not change.
                                type: string
                              object:
                                description: Name of the Cloud Storage object.
                                type: string
                            required:
                            - bucket
                            - generationNumber
                            - object
                            type: object
                          interpreter:
                            description: 'The script interpreter to use to run the
                              script. If no interpreter is specified the script will
                              be executed directly, which will likely only succeed
                              for scripts with shebang lines. Possible values: ["SHELL",
                              "POWERSHELL"]'
                            type: string
                          localPath:
                            description: An absolute path to the executable on the
                              VM.
                            type: string
                        type: object
                      windowsExecStepConfig:
                        description: The ExecStepConfig for all Windows VMs targeted
                          by the PatchJob.
                        properties:
                          allowedSuccessCodes:
                            description: Defaults to [0]. A list of possible return
                              values that the execution can return to indicate a success.
                            items:
                              format: int64
                              type: integer
                            type: array
                          gcsObject:
                            description: A Cloud Storage object containing the executable.
                            properties:
                              bucket:
                                description: Bucket of the Cloud Storage object.
                                type: string
                              generationNumber:
                                description: Generation number of the Cloud Storage
                                  object. This is used to ensure that the ExecStep
                                  specified by this PatchJob does not change.
                                type: string
                              object:
                                description: Name of the Cloud Storage object.
                                type: string
                            required:
                            - bucket
                            - generationNumber
                            - object
                            type: object
                          interpreter:
                            description: 'The script interpreter to use to run the
                              script. If no interpreter is specified the script will
                              be executed directly, which will likely only succeed
                              for scripts with shebang lines. Possible values: ["SHELL",
                              "POWERSHELL"]'
                            type: string
                          localPath:
                            description: An absolute path to the executable on the
                              VM.
                            type: string
                        type: object
                    type: object
                  rebootConfig:
                    description: 'Post-patch reboot settings. Possible values: ["DEFAULT",
                      "ALWAYS", "NEVER"]'
                    type: string
                  windowsUpdate:
                    description: Windows update settings. Use this setting to override
                      the default Windows patch rules.
                    properties:
                      classifications:
                        description: 'Only apply updates of these windows update classifications.
                          If empty, all updates are applied. Possible values: ["CRITICAL",
                          "SECURITY", "DEFINITION", "DRIVER", "FEATURE_PACK", "SERVICE_PACK",
                          "TOOL", "UPDATE_ROLLUP", "UPDATE"]'
                        items:
                          type: string
                        type: array
                      excludes:
                        description: List of KBs to exclude from update.
                        items:
                          type: string
                        type: array
                      exclusivePatches:
                        description: An exclusive list of kbs to be updated. These
                          are the only patches that will be updated. This field must
                          not be used with other patch configurations.
                        items:
                          type: string
                        type: array
                    type: object
                  yum:
                    description: Yum update settings. Use this setting to override
                      the default yum patch rules.
                    properties:
                      excludes:
                        description: List of packages to exclude from update. These
                          packages will be excluded.
                        items:
                          type: string
                        type: array
                      exclusivePackages:
                        description: An exclusive list of packages to be updated.
                          These are the only packages that will be updated. If these
                          packages are not installed, they will be ignored. This field
                          cannot be specified with any other patch configuration fields.
                        items:
                          type: string
                        type: array
                      minimal:
                        description: Will cause patch to run yum update-minimal instead.
                        type: boolean
                      security:
                        description: Adds the --security flag to yum update. Not supported
                          on all platforms.
                        type: boolean
                    type: object
                  zypper:
                    description: zypper update settings. Use this setting to override
                      the default zypper patch rules.
                    properties:
                      categories:
                        description: Install only patches with these categories. Common
                          categories include security, recommended, and feature.
                        items:
                          type: string
                        type: array
                      excludes:
                        description: List of packages to exclude from update.
                        items:
                          type: string
                        type: array
                      exclusivePatches:
                        description: An exclusive list of patches to be updated. These
                          are the only patches that will be installed using 'zypper
                          patch patch:' command. This field must not be used with
                          any other patch configuration fields.
                        items:
                          type: string
                        type: array
                      severities:
                        description: Install only patches with these severities. Common
                          severities include critical, important, moderate, and low.
                        items:
                          type: string
                        type: array
                      withOptional:
                        description: Adds the --with-optional flag to zypper patch.
                        type: boolean
                      withUpdate:
                        description: Adds the --with-update flag, to zypper patch.
                        type: boolean
                    type: object
                type: object
              patchDeploymentID:
                description: 'A name for the patch deployment in the project. When
                  creating a name the following rules apply: * Must contain only lowercase
                  letters, numbers, and hyphens. * Must start with a letter. * Must
                  be between 1-63 characters. * Must end with a number or a letter.
                  * Must be unique within the project.'
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              recurringSchedule:
                description: Schedule recurring executions.
                properties:
                  endTime:
                    description: 'The end time at which a recurring patch deployment
                      schedule is no longer active. A timestamp in RFC3339 UTC "Zulu"
                      format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
                    type: string
                  lastExecuteTime:
                    description: 'The time the last patch job ran successfully. A
                      timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
                      Example: "2014-10-02T15:01:23.045123456Z".'
                    type: string
                  monthly:
                    description: Schedule with monthly executions.
                    properties:
                      monthDay:
                        description: One day of the month. 1-31 indicates the 1st
                          to the 31st day. -1 indicates the last day of the month.
                          Months without the target day will be skipped. For example,
                          a schedule to run "every month on the 31st" will not run
                          in February, April, June, etc.
                        format: int64
                        type: integer
                      weekDayOfMonth:
                        description: Week day in a month.
                        properties:
                          dayOfWeek:
                            description: 'A day of the week. Possible values: ["MONDAY",
                              "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY",
                              "SUNDAY"]'
                            type: string
                          weekOrdinal:
                            description: Week number in a month. 1-4 indicates the
                              1st to 4th week of the month. -1 indicates the last
                              week of the month.
                            format: int64
                            type: integer
                        required:
                        - dayOfWeek
                        - weekOrdinal
                        type: object
                    type: object
                  nextExecuteTime:
                    description: 'The time the next patch job is scheduled to run.
                      A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
                      Example: "2014-10-02T15:01:23.045123456Z".'
                    type: string
                  startTime:
                    description: 'The time that the recurring schedule becomes effective.
                      Defaults to createTime of the patch deployment. A timestamp
                      in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
                      "2014-10-02T15:01:23.045123456Z".'
                    type: string
                  timeOfDay:
                    description: Time of the day to run a recurring deployment.
                    properties:
                      hours:
                        description: Hours of day in 24 hour format. Should be from
                          0 to 23. An API may choose to allow the value "24:00:00"
                          for scenarios like business closing time.
                        format: int64
                        type: integer
                      minutes:
                        description: Minutes of hour of day. Must be from 0 to 59.
                        format: int64
                        type: integer
                      nanos:
                        description: Fractions of seconds in nanoseconds. Must be
                          from 0 to 999,999,999.
                        format: int64
                        type: integer
                      seconds:
                        description: Seconds of minutes of the time. Must normally
                          be from 0 to 59. An API may allow the value 60 if it allows
                          leap-seconds.
                        format: int64
                        type: integer
                    type: object
                  timeZone:
                    description: Defines the time zone that timeOfDay is relative
                      to. The rules for daylight saving time are determined by the
                      chosen time zone.
                    properties:
                      ID:
                        description: IANA Time Zone Database time zone, e.g. "America/New_York".
                        type: string
                      version:
                        description: IANA Time Zone Database version number, e.g.
                          "2019a".
                        type: string
                    required:
                    - ID
                    type: object
                  weekly:
                    description: Schedule with weekly executions.
                    properties:
                      dayOfWeek:
                        description: 'IANA Time Zone Database time zone, e.g. "America/New_York".
                          Possible values: ["MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY",
                          "FRIDAY", "SATURDAY", "SUNDAY"]'
                        type: string
                    required:
                    - dayOfWeek
                    type: object
                required:
                - timeOfDay
                - timeZone
                type: object
              rollout:
                description: Rollout strategy of the patch job.
                properties:
                  disruptionBudget:
                    description: The maximum number (or percentage) of VMs per zone
                      to disrupt at any given moment. The number of VMs calculated
                      from multiplying the percentage by the total number of VMs in
                      a zone is rounded up. During patching, a VM is considered disrupted
                      from the time the agent is notified to begin until patching
                      has completed. This disruption time includes the time to complete
                      reboot and any post-patch steps. A VM contributes to the disruption
                      budget if its patching operation fails either when applying
                      the patches, running pre or post patch steps, or if it fails
                      to respond with a success notification before timing out. VMs
                      that are not running or do not have an active agent do not count
                      toward this disruption budget. For zone-by-zone rollouts, if
                      the disruption budget in a zone is exceeded, the patch job stops,
                      because continuing to the next zone requires completion of the
                      patch process in the previous zone. For example, if the disruption
                      budget has a fixed value of 10, and 8 VMs fail to patch in the
                      current zone, the patch job continues to patch 2 VMs at a time
                      until the zone is completed. When that zone is completed successfully,
                      patching begins with 10 VMs at a time in the next zone. If 10
                      VMs in the next zone fail to patch, the patch job stops.
                    properties:
                      fixed:
                        description: Specifies a fixed value.
                        format: int64
                        type: integer
                      percentage:
                        description: Specifies the relative value defined as a percentage,
                          which will be multiplied by a reference value.
                        format: int64
                        type: integer
                    type: object
                  mode:
                    description: 'Mode of the patch rollout. Possible values: ["ZONE_BY_ZONE",
                      "CONCURRENT_ZONES"]'
                    type: string
                required:
                - disruptionBudget
                - mode
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              updateTime:
                description: 'Time the patch deployment was last updated. Timestamp
                  is in RFC3339 text format. A timestamp in RFC3339 UTC "Zulu" format,
                  accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
                type: string
            required:
            - instanceFilter
            - patchDeploymentID
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: loginsshpublickeys.os.google.kubeform.com
spec:
  group: os.google.kubeform.com
  names:
    kind: LoginSSHPublicKey
    listKind: LoginSSHPublicKeyList
    plural: loginsshpublickeys
    singular: loginsshpublickey
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              expirationTimeUsec:
                description: An expiration time in microseconds since epoch.
                type: string
              fingerprint:
                description: The SHA-256 fingerprint of the SSH public key.
                type: string
              id:
                type: string
              key:
                description: Public key text in SSH format, defined by RFC4253 section
                  6.6.
                type: string
              kubeformOutput:
                properties:
                  expirationTimeUsec:
                    description: An expiration time in microseconds since epoch.
                    type: string
                  fingerprint:
                    description: The SHA-256 fingerprint of the SSH public key.
                    type: string
                  id:
                    type: string
                  key:
                    description: Public key text in SSH format, defined by RFC4253
                      section 6.6.
                    type: string
                  project:
                    description: The project ID of the Google Cloud Platform project.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  user:
                    description: The user email.
                    type: string
                required:
                - key
                - providerRef
                - user
                type: object
              project:
                description: The project ID of the Google Cloud Platform project.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              user:
                description: The user email.
                type: string
            required:
            - key
            - providerRef
            - user
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
