apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: databases.sql.google.kubeform.com
spec:
  group: sql.google.kubeform.com
  names:
    kind: Database
    listKind: DatabaseList
    plural: databases
    singular: database
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              charset:
                description: The charset value. See MySQL's [Supported Character Sets
                  and Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html)
                  and Postgres' [Character Set Support](https://www.postgresql.org/docs/9.6/static/multibyte.html)
                  for more details and supported values. Postgres databases only support
                  a value of 'UTF8' at creation time.
                type: string
              collation:
                description: The collation value. See MySQL's [Supported Character
                  Sets and Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html)
                  and Postgres' [Collation Support](https://www.postgresql.org/docs/9.6/static/collation.html)
                  for more details and supported values. Postgres databases only support
                  a value of 'en_US.UTF8' at creation time.
                type: string
              id:
                type: string
              instance:
                description: The name of the Cloud SQL instance. This does not include
                  the project ID.
                type: string
              kubeformOutput:
                properties:
                  charset:
                    description: The charset value. See MySQL's [Supported Character
                      Sets and Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html)
                      and Postgres' [Character Set Support](https://www.postgresql.org/docs/9.6/static/multibyte.html)
                      for more details and supported values. Postgres databases only
                      support a value of 'UTF8' at creation time.
                    type: string
                  collation:
                    description: The collation value. See MySQL's [Supported Character
                      Sets and Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html)
                      and Postgres' [Collation Support](https://www.postgresql.org/docs/9.6/static/collation.html)
                      for more details and supported values. Postgres databases only
                      support a value of 'en_US.UTF8' at creation time.
                    type: string
                  id:
                    type: string
                  instance:
                    description: The name of the Cloud SQL instance. This does not
                      include the project ID.
                    type: string
                  name:
                    description: The name of the database in the Cloud SQL instance.
                      This does not include the project ID or instance name.
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - instance
                - name
                - providerRef
                type: object
              name:
                description: The name of the database in the Cloud SQL instance. This
                  does not include the project ID or instance name.
                type: string
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - instance
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: users.sql.google.kubeform.com
spec:
  group: sql.google.kubeform.com
  names:
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              deletionPolicy:
                description: "The deletion policy for the user. Setting ABANDON allows
                  the resource \t\t\t\tto be abandoned rather than deleted. This is
                  useful for Postgres, where users cannot be deleted from the API
                  if they \t\t\t\thave been granted SQL roles. Possible values are:
                  \"ABANDON\"."
                type: string
              host:
                description: The host the user can connect from. This is only supported
                  for MySQL instances. Don't set this field for PostgreSQL instances.
                  Can be an IP address. Changing this forces a new resource to be
                  created.
                type: string
              id:
                type: string
              instance:
                description: The name of the Cloud SQL instance. Changing this forces
                  a new resource to be created.
                type: string
              kubeformOutput:
                properties:
                  deletionPolicy:
                    description: "The deletion policy for the user. Setting ABANDON
                      allows the resource \t\t\t\tto be abandoned rather than deleted.
                      This is useful for Postgres, where users cannot be deleted from
                      the API if they \t\t\t\thave been granted SQL roles. Possible
                      values are: \"ABANDON\"."
                    type: string
                  host:
                    description: The host the user can connect from. This is only
                      supported for MySQL instances. Don't set this field for PostgreSQL
                      instances. Can be an IP address. Changing this forces a new
                      resource to be created.
                    type: string
                  id:
                    type: string
                  instance:
                    description: The name of the Cloud SQL instance. Changing this
                      forces a new resource to be created.
                    type: string
                  name:
                    description: The name of the user. Changing this forces a new
                      resource to be created.
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    description: The user type. It determines the method to authenticate
                      the user during login.                 The default is the database's
                      built-in user type. Flags include "BUILT_IN", "CLOUD_IAM_USER",
                      or "CLOUD_IAM_SERVICE_ACCOUNT".
                    type: string
                required:
                - instance
                - name
                - providerRef
                type: object
              name:
                description: The name of the user. Changing this forces a new resource
                  to be created.
                type: string
              project:
                description: The ID of the project in which the resource belongs.
                  If it is not provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              type:
                description: The user type. It determines the method to authenticate
                  the user during login.                 The default is the database's
                  built-in user type. Flags include "BUILT_IN", "CLOUD_IAM_USER",
                  or "CLOUD_IAM_SERVICE_ACCOUNT".
                type: string
            required:
            - instance
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: databaseinstances.sql.google.kubeform.com
spec:
  group: sql.google.kubeform.com
  names:
    kind: DatabaseInstance
    listKind: DatabaseInstanceList
    plural: databaseinstances
    singular: databaseinstance
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              clone:
                description: Configuration for creating a new instance as a clone
                  of another instance.
                properties:
                  pointInTime:
                    description: The timestamp of the point in time that should be
                      restored.
                    type: string
                  sourceInstanceName:
                    description: The name of the instance from which the point in
                      time should be restored.
                    type: string
                required:
                - pointInTime
                - sourceInstanceName
                type: object
              connectionName:
                description: The connection name of the instance to be used in connection
                  strings. For example, when connecting with Cloud SQL Proxy.
                type: string
              databaseVersion:
                description: The MySQL, PostgreSQL or SQL Server (beta) version to
                  use. Supported values include MYSQL_5_6, MYSQL_5_7, MYSQL_8_0, POSTGRES_9_6,POSTGRES_11,
                  SQLSERVER_2017_STANDARD, SQLSERVER_2017_ENTERPRISE, SQLSERVER_2017_EXPRESS,
                  SQLSERVER_2017_WEB. Database Version Policies includes an up-to-date
                  reference of supported versions.
                type: string
              deletionProtection:
                description: Used to block Terraform from deleting a SQL Instance.
                type: boolean
              firstIPAddress:
                description: The first IPv4 address of any type assigned. This is
                  to support accessing the first address in the list in a terraform
                  output when the resource is configured with a count.
                type: string
              id:
                type: string
              ipAddress:
                items:
                  properties:
                    ipAddress:
                      type: string
                    timeToRetire:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
              kubeformOutput:
                properties:
                  clone:
                    description: Configuration for creating a new instance as a clone
                      of another instance.
                    properties:
                      pointInTime:
                        description: The timestamp of the point in time that should
                          be restored.
                        type: string
                      sourceInstanceName:
                        description: The name of the instance from which the point
                          in time should be restored.
                        type: string
                    required:
                    - pointInTime
                    - sourceInstanceName
                    type: object
                  connectionName:
                    description: The connection name of the instance to be used in
                      connection strings. For example, when connecting with Cloud
                      SQL Proxy.
                    type: string
                  databaseVersion:
                    description: The MySQL, PostgreSQL or SQL Server (beta) version
                      to use. Supported values include MYSQL_5_6, MYSQL_5_7, MYSQL_8_0,
                      POSTGRES_9_6,POSTGRES_11, SQLSERVER_2017_STANDARD, SQLSERVER_2017_ENTERPRISE,
                      SQLSERVER_2017_EXPRESS, SQLSERVER_2017_WEB. Database Version
                      Policies includes an up-to-date reference of supported versions.
                    type: string
                  deletionProtection:
                    description: Used to block Terraform from deleting a SQL Instance.
                    type: boolean
                  firstIPAddress:
                    description: The first IPv4 address of any type assigned. This
                      is to support accessing the first address in the list in a terraform
                      output when the resource is configured with a count.
                    type: string
                  id:
                    type: string
                  ipAddress:
                    items:
                      properties:
                        ipAddress:
                          type: string
                        timeToRetire:
                          type: string
                        type:
                          type: string
                      type: object
                    type: array
                  masterInstanceName:
                    description: The name of the instance that will act as the master
                      in the replication setup. Note, this requires the master to
                      have binary_log_enabled set, as well as existing backups.
                    type: string
                  name:
                    description: The name of the instance. If the name is left blank,
                      Terraform will randomly generate one when the instance is first
                      created. This is done because after a name is used, it cannot
                      be reused for up to one week.
                    type: string
                  privateIPAddress:
                    description: IPv4 address assigned. This is a workaround for an
                      issue fixed in Terraform 0.12 but also provides a convenient
                      way to access an IP of a specific type without performing filtering
                      in a Terraform config.
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  publicIPAddress:
                    description: IPv4 address assigned. This is a workaround for an
                      issue fixed in Terraform 0.12 but also provides a convenient
                      way to access an IP of a specific type without performing filtering
                      in a Terraform config.
                    type: string
                  region:
                    description: The region the instance will sit in. Note, Cloud
                      SQL is not available in all regions. A valid region must be
                      provided to use this resource. If a region is not provided in
                      the resource definition, the provider region will be used instead,
                      but this will be an apply-time error for instances if the provider
                      region is not supported with Cloud SQL. If you choose not to
                      provide the region argument for this resource, make sure you
                      understand this.
                    type: string
                  replicaConfiguration:
                    description: The configuration for replication.
                    properties:
                      caCertificate:
                        description: PEM representation of the trusted CA's x509 certificate.
                        type: string
                      clientCertificate:
                        description: PEM representation of the replica's x509 certificate.
                        type: string
                      clientKey:
                        description: PEM representation of the replica's private key.
                          The corresponding public key in encoded in the client_certificate.
                        type: string
                      connectRetryInterval:
                        description: The number of seconds between connect retries.
                        format: int64
                        type: integer
                      dumpFilePath:
                        description: Path to a SQL file in Google Cloud Storage from
                          which replica instances are created. Format is gs://bucket/filename.
                        type: string
                      failoverTarget:
                        description: Specifies if the replica is the failover target.
                          If the field is set to true the replica will be designated
                          as a failover replica. If the master instance fails, the
                          replica instance will be promoted as the new master instance.
                        type: boolean
                      masterHeartbeatPeriod:
                        description: Time in ms between replication heartbeats.
                        format: int64
                        type: integer
                      sslCipher:
                        description: Permissible ciphers for use in SSL encryption.
                        type: string
                      username:
                        description: Username for replication connection.
                        type: string
                      verifyServerCertificate:
                        description: True if the master's common name value is checked
                          during the SSL handshake.
                        type: boolean
                    type: object
                  restoreBackupContext:
                    properties:
                      backupRunID:
                        description: The ID of the backup run to restore from.
                        format: int64
                        type: integer
                      instanceID:
                        description: The ID of the instance that the backup was taken
                          from.
                        type: string
                      project:
                        description: The full project ID of the source instance.
                        type: string
                    required:
                    - backupRunID
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                  serverCaCert:
                    items:
                      properties:
                        cert:
                          description: The CA Certificate used to connect to the SQL
                            Instance via SSL.
                          type: string
                        commonName:
                          description: The CN valid for the CA Cert.
                          type: string
                        createTime:
                          description: Creation time of the CA Cert.
                          type: string
                        expirationTime:
                          description: Expiration time of the CA Cert.
                          type: string
                        sha1Fingerprint:
                          description: SHA Fingerprint of the CA Cert.
                          type: string
                      type: object
                    type: array
                  serviceAccountEmailAddress:
                    description: The service account email address assigned to the
                      instance.
                    type: string
                  settings:
                    description: The settings to use for the database. The configuration
                      is detailed below.
                    properties:
                      activationPolicy:
                        description: This specifies when the instance should be active.
                          Can be either ALWAYS, NEVER or ON_DEMAND.
                        type: string
                      authorizedGaeApplications:
                        description: This property is only applicable to First Generation
                          instances. First Generation instances are now deprecated,
                          see https://cloud.google.com/sql/docs/mysql/deprecation-notice
                          for information on how to upgrade to Second Generation instances.
                          A list of Google App Engine project names that are allowed
                          to access this instance. Deprecated
                        items:
                          type: string
                        type: array
                      availabilityType:
                        description: The availability type of the Cloud SQL instance,
                          high availability (REGIONAL) or single zone (ZONAL). For
                          MySQL instances, ensure that settings.backup_configuration.enabled
                          and settings.backup_configuration.binary_log_enabled are
                          both set to true.
                        type: string
                      backupConfiguration:
                        properties:
                          backupRetentionSettings:
                            properties:
                              retainedBackups:
                                description: Number of backups to retain.
                                format: int64
                                type: integer
                              retentionUnit:
                                description: The unit that 'retainedBackups' represents.
                                  Defaults to COUNT
                                type: string
                            required:
                            - retainedBackups
                            type: object
                          binaryLogEnabled:
                            description: True if binary logging is enabled. If settings.backup_configuration.enabled
                              is false, this must be as well. Cannot be used with
                              Postgres.
                            type: boolean
                          enabled:
                            description: True if backup configuration is enabled.
                            type: boolean
                          location:
                            description: Location of the backup configuration.
                            type: string
                          pointInTimeRecoveryEnabled:
                            description: True if Point-in-time recovery is enabled.
                            type: boolean
                          startTime:
                            description: HH:MM format time indicating when backup
                              configuration starts.
                            type: string
                          transactionLogRetentionDays:
                            description: The number of days of transaction logs we
                              retain for point in time restore, from 1-7.
                            format: int64
                            type: integer
                        type: object
                      crashSafeReplication:
                        description: This property is only applicable to First Generation
                          instances. First Generation instances are now deprecated,
                          see here for information on how to upgrade to Second Generation
                          instances. Specific to read instances, indicates when crash-safe
                          replication flags are enabled. Deprecated
                        type: boolean
                      databaseFlags:
                        items:
                          properties:
                            name:
                              description: Name of the flag.
                              type: string
                            value:
                              description: Value of the flag.
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      diskAutoresize:
                        description: Configuration to increase storage size automatically.  Note
                          that future terraform apply calls will attempt to resize
                          the disk to the value specified in disk_size - if this is
                          set, do not set disk_size.
                        type: boolean
                      diskSize:
                        description: The size of data disk, in GB. Size of a running
                          instance cannot be reduced but can be increased.
                        format: int64
                        type: integer
                      diskType:
                        description: 'The type of data disk: PD_SSD or PD_HDD.'
                        type: string
                      insightsConfig:
                        description: Configuration of Query Insights.
                        properties:
                          queryInsightsEnabled:
                            description: True if Query Insights feature is enabled.
                            type: boolean
                          queryStringLength:
                            description: Maximum query length stored in bytes. Between
                              256 and 4500. Default to 1024.
                            format: int64
                            type: integer
                          recordApplicationTags:
                            description: True if Query Insights will record application
                              tags from query when enabled.
                            type: boolean
                          recordClientAddress:
                            description: True if Query Insights will record client
                              address when enabled.
                            type: boolean
                        type: object
                      ipConfiguration:
                        properties:
                          authorizedNetworks:
                            items:
                              properties:
                                expirationTime:
                                  type: string
                                name:
                                  type: string
                                value:
                                  type: string
                              required:
                              - value
                              type: object
                            type: array
                          ipv4Enabled:
                            description: Whether this Cloud SQL instance should be
                              assigned a public IPV4 address. At least ipv4_enabled
                              must be enabled or a private_network must be configured.
                            type: boolean
                          privateNetwork:
                            description: The VPC network from which the Cloud SQL
                              instance is accessible for private IP. For example,
                              projects/myProject/global/networks/default. Specifying
                              a network enables private IP. At least ipv4_enabled
                              must be enabled or a private_network must be configured.
                              This setting can be updated, but it cannot be removed
                              after it is set.
                            type: string
                          requireSSL:
                            type: boolean
                        type: object
                      locationPreference:
                        properties:
                          followGaeApplication:
                            description: A Google App Engine application whose zone
                              to remain in. Must be in the same region as this instance.
                            type: string
                          zone:
                            description: The preferred compute engine zone.
                            type: string
                        type: object
                      maintenanceWindow:
                        description: Declares a one-hour maintenance window when an
                          Instance can automatically restart to apply updates. The
                          maintenance window is specified in UTC time.
                        properties:
                          day:
                            description: Day of week (1-7), starting on Monday
                            format: int64
                            type: integer
                          hour:
                            description: Hour of day (0-23), ignored if day not set
                            format: int64
                            type: integer
                          updateTrack:
                            description: Receive updates earlier (canary) or later
                              (stable)
                            type: string
                        type: object
                      pricingPlan:
                        description: Pricing plan for this instance, can only be PER_USE.
                        type: string
                      replicationType:
                        description: This property is only applicable to First Generation
                          instances. First Generation instances are now deprecated,
                          see here for information on how to upgrade to Second Generation
                          instances. Replication type for this instance, can be one
                          of ASYNCHRONOUS or SYNCHRONOUS. Deprecated
                        type: string
                      tier:
                        description: The machine type to use. See tiers for more details
                          and supported versions. Postgres supports only shared-core
                          machine types such as db-f1-micro, and custom machine types
                          such as db-custom-2-13312. See the Custom Machine Type Documentation
                          to learn about specifying custom machine types.
                        type: string
                      userLabels:
                        additionalProperties:
                          type: string
                        description: A set of key/value user label pairs to assign
                          to the instance.
                        type: object
                      version:
                        description: Used to make sure changes to the settings block
                          are atomic.
                        format: int64
                        type: integer
                    required:
                    - tier
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - providerRef
                type: object
              masterInstanceName:
                description: The name of the instance that will act as the master
                  in the replication setup. Note, this requires the master to have
                  binary_log_enabled set, as well as existing backups.
                type: string
              name:
                description: The name of the instance. If the name is left blank,
                  Terraform will randomly generate one when the instance is first
                  created. This is done because after a name is used, it cannot be
                  reused for up to one week.
                type: string
              privateIPAddress:
                description: IPv4 address assigned. This is a workaround for an issue
                  fixed in Terraform 0.12 but also provides a convenient way to access
                  an IP of a specific type without performing filtering in a Terraform
                  config.
                type: string
              project:
                description: The ID of the project in which the resource belongs.
                  If it is not provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              publicIPAddress:
                description: IPv4 address assigned. This is a workaround for an issue
                  fixed in Terraform 0.12 but also provides a convenient way to access
                  an IP of a specific type without performing filtering in a Terraform
                  config.
                type: string
              region:
                description: The region the instance will sit in. Note, Cloud SQL
                  is not available in all regions. A valid region must be provided
                  to use this resource. If a region is not provided in the resource
                  definition, the provider region will be used instead, but this will
                  be an apply-time error for instances if the provider region is not
                  supported with Cloud SQL. If you choose not to provide the region
                  argument for this resource, make sure you understand this.
                type: string
              replicaConfiguration:
                description: The configuration for replication.
                properties:
                  caCertificate:
                    description: PEM representation of the trusted CA's x509 certificate.
                    type: string
                  clientCertificate:
                    description: PEM representation of the replica's x509 certificate.
                    type: string
                  clientKey:
                    description: PEM representation of the replica's private key.
                      The corresponding public key in encoded in the client_certificate.
                    type: string
                  connectRetryInterval:
                    description: The number of seconds between connect retries.
                    format: int64
                    type: integer
                  dumpFilePath:
                    description: Path to a SQL file in Google Cloud Storage from which
                      replica instances are created. Format is gs://bucket/filename.
                    type: string
                  failoverTarget:
                    description: Specifies if the replica is the failover target.
                      If the field is set to true the replica will be designated as
                      a failover replica. If the master instance fails, the replica
                      instance will be promoted as the new master instance.
                    type: boolean
                  masterHeartbeatPeriod:
                    description: Time in ms between replication heartbeats.
                    format: int64
                    type: integer
                  sslCipher:
                    description: Permissible ciphers for use in SSL encryption.
                    type: string
                  username:
                    description: Username for replication connection.
                    type: string
                  verifyServerCertificate:
                    description: True if the master's common name value is checked
                      during the SSL handshake.
                    type: boolean
                type: object
              restoreBackupContext:
                properties:
                  backupRunID:
                    description: The ID of the backup run to restore from.
                    format: int64
                    type: integer
                  instanceID:
                    description: The ID of the instance that the backup was taken
                      from.
                    type: string
                  project:
                    description: The full project ID of the source instance.
                    type: string
                required:
                - backupRunID
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                description: The URI of the created resource.
                type: string
              serverCaCert:
                items:
                  properties:
                    cert:
                      description: The CA Certificate used to connect to the SQL Instance
                        via SSL.
                      type: string
                    commonName:
                      description: The CN valid for the CA Cert.
                      type: string
                    createTime:
                      description: Creation time of the CA Cert.
                      type: string
                    expirationTime:
                      description: Expiration time of the CA Cert.
                      type: string
                    sha1Fingerprint:
                      description: SHA Fingerprint of the CA Cert.
                      type: string
                  type: object
                type: array
              serviceAccountEmailAddress:
                description: The service account email address assigned to the instance.
                type: string
              settings:
                description: The settings to use for the database. The configuration
                  is detailed below.
                properties:
                  activationPolicy:
                    description: This specifies when the instance should be active.
                      Can be either ALWAYS, NEVER or ON_DEMAND.
                    type: string
                  authorizedGaeApplications:
                    description: This property is only applicable to First Generation
                      instances. First Generation instances are now deprecated, see
                      https://cloud.google.com/sql/docs/mysql/deprecation-notice for
                      information on how to upgrade to Second Generation instances.
                      A list of Google App Engine project names that are allowed to
                      access this instance. Deprecated
                    items:
                      type: string
                    type: array
                  availabilityType:
                    description: The availability type of the Cloud SQL instance,
                      high availability (REGIONAL) or single zone (ZONAL). For MySQL
                      instances, ensure that settings.backup_configuration.enabled
                      and settings.backup_configuration.binary_log_enabled are both
                      set to true.
                    type: string
                  backupConfiguration:
                    properties:
                      backupRetentionSettings:
                        properties:
                          retainedBackups:
                            description: Number of backups to retain.
                            format: int64
                            type: integer
                          retentionUnit:
                            description: The unit that 'retainedBackups' represents.
                              Defaults to COUNT
                            type: string
                        required:
                        - retainedBackups
                        type: object
                      binaryLogEnabled:
                        description: True if binary logging is enabled. If settings.backup_configuration.enabled
                          is false, this must be as well. Cannot be used with Postgres.
                        type: boolean
                      enabled:
                        description: True if backup configuration is enabled.
                        type: boolean
                      location:
                        description: Location of the backup configuration.
                        type: string
                      pointInTimeRecoveryEnabled:
                        description: True if Point-in-time recovery is enabled.
                        type: boolean
                      startTime:
                        description: HH:MM format time indicating when backup configuration
                          starts.
                        type: string
                      transactionLogRetentionDays:
                        description: The number of days of transaction logs we retain
                          for point in time restore, from 1-7.
                        format: int64
                        type: integer
                    type: object
                  crashSafeReplication:
                    description: This property is only applicable to First Generation
                      instances. First Generation instances are now deprecated, see
                      here for information on how to upgrade to Second Generation
                      instances. Specific to read instances, indicates when crash-safe
                      replication flags are enabled. Deprecated
                    type: boolean
                  databaseFlags:
                    items:
                      properties:
                        name:
                          description: Name of the flag.
                          type: string
                        value:
                          description: Value of the flag.
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  diskAutoresize:
                    description: Configuration to increase storage size automatically.  Note
                      that future terraform apply calls will attempt to resize the
                      disk to the value specified in disk_size - if this is set, do
                      not set disk_size.
                    type: boolean
                  diskSize:
                    description: The size of data disk, in GB. Size of a running instance
                      cannot be reduced but can be increased.
                    format: int64
                    type: integer
                  diskType:
                    description: 'The type of data disk: PD_SSD or PD_HDD.'
                    type: string
                  insightsConfig:
                    description: Configuration of Query Insights.
                    properties:
                      queryInsightsEnabled:
                        description: True if Query Insights feature is enabled.
                        type: boolean
                      queryStringLength:
                        description: Maximum query length stored in bytes. Between
                          256 and 4500. Default to 1024.
                        format: int64
                        type: integer
                      recordApplicationTags:
                        description: True if Query Insights will record application
                          tags from query when enabled.
                        type: boolean
                      recordClientAddress:
                        description: True if Query Insights will record client address
                          when enabled.
                        type: boolean
                    type: object
                  ipConfiguration:
                    properties:
                      authorizedNetworks:
                        items:
                          properties:
                            expirationTime:
                              type: string
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - value
                          type: object
                        type: array
                      ipv4Enabled:
                        description: Whether this Cloud SQL instance should be assigned
                          a public IPV4 address. At least ipv4_enabled must be enabled
                          or a private_network must be configured.
                        type: boolean
                      privateNetwork:
                        description: The VPC network from which the Cloud SQL instance
                          is accessible for private IP. For example, projects/myProject/global/networks/default.
                          Specifying a network enables private IP. At least ipv4_enabled
                          must be enabled or a private_network must be configured.
                          This setting can be updated, but it cannot be removed after
                          it is set.
                        type: string
                      requireSSL:
                        type: boolean
                    type: object
                  locationPreference:
                    properties:
                      followGaeApplication:
                        description: A Google App Engine application whose zone to
                          remain in. Must be in the same region as this instance.
                        type: string
                      zone:
                        description: The preferred compute engine zone.
                        type: string
                    type: object
                  maintenanceWindow:
                    description: Declares a one-hour maintenance window when an Instance
                      can automatically restart to apply updates. The maintenance
                      window is specified in UTC time.
                    properties:
                      day:
                        description: Day of week (1-7), starting on Monday
                        format: int64
                        type: integer
                      hour:
                        description: Hour of day (0-23), ignored if day not set
                        format: int64
                        type: integer
                      updateTrack:
                        description: Receive updates earlier (canary) or later (stable)
                        type: string
                    type: object
                  pricingPlan:
                    description: Pricing plan for this instance, can only be PER_USE.
                    type: string
                  replicationType:
                    description: This property is only applicable to First Generation
                      instances. First Generation instances are now deprecated, see
                      here for information on how to upgrade to Second Generation
                      instances. Replication type for this instance, can be one of
                      ASYNCHRONOUS or SYNCHRONOUS. Deprecated
                    type: string
                  tier:
                    description: The machine type to use. See tiers for more details
                      and supported versions. Postgres supports only shared-core machine
                      types such as db-f1-micro, and custom machine types such as
                      db-custom-2-13312. See the Custom Machine Type Documentation
                      to learn about specifying custom machine types.
                    type: string
                  userLabels:
                    additionalProperties:
                      type: string
                    description: A set of key/value user label pairs to assign to
                      the instance.
                    type: object
                  version:
                    description: Used to make sure changes to the settings block are
                      atomic.
                    format: int64
                    type: integer
                required:
                - tier
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: sourcerepresentationinstances.sql.google.kubeform.com
spec:
  group: sql.google.kubeform.com
  names:
    kind: SourceRepresentationInstance
    listKind: SourceRepresentationInstanceList
    plural: sourcerepresentationinstances
    singular: sourcerepresentationinstance
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              databaseVersion:
                description: 'The MySQL version running on your source database server.
                  Possible values: ["MYSQL_5_5", "MYSQL_5_6", "MYSQL_5_7", "MYSQL_8_0"]'
                type: string
              host:
                description: The externally accessible IPv4 address for the source
                  database server.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  databaseVersion:
                    description: 'The MySQL version running on your source database
                      server. Possible values: ["MYSQL_5_5", "MYSQL_5_6", "MYSQL_5_7",
                      "MYSQL_8_0"]'
                    type: string
                  host:
                    description: The externally accessible IPv4 address for the source
                      database server.
                    type: string
                  id:
                    type: string
                  name:
                    description: The name of the source representation instance. Use
                      any valid Cloud SQL instance name.
                    type: string
                  port:
                    description: The externally accessible port for the source database
                      server. Defaults to 3306.
                    format: int64
                    type: integer
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  region:
                    description: The Region in which the created instance should reside.
                      If it is not provided, the provider region is used.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - databaseVersion
                - host
                - name
                - providerRef
                type: object
              name:
                description: The name of the source representation instance. Use any
                  valid Cloud SQL instance name.
                type: string
              port:
                description: The externally accessible port for the source database
                  server. Defaults to 3306.
                format: int64
                type: integer
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              region:
                description: The Region in which the created instance should reside.
                  If it is not provided, the provider region is used.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - databaseVersion
            - host
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: sslcerts.sql.google.kubeform.com
spec:
  group: sql.google.kubeform.com
  names:
    kind: SslCert
    listKind: SslCertList
    plural: sslcerts
    singular: sslcert
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              cert:
                description: The actual certificate data for this client certificate.
                type: string
              certSerialNumber:
                description: The serial number extracted from the certificate data.
                type: string
              commonName:
                description: The common name to be used in the certificate to identify
                  the client. Constrained to [a-zA-Z.-_ ]+. Changing this forces a
                  new resource to be created.
                type: string
              createTime:
                description: The time when the certificate was created in RFC 3339
                  format, for example 2012-11-15T16:19:00.094Z.
                type: string
              expirationTime:
                description: The time when the certificate expires in RFC 3339 format,
                  for example 2012-11-15T16:19:00.094Z.
                type: string
              id:
                type: string
              instance:
                description: The name of the Cloud SQL instance. Changing this forces
                  a new resource to be created.
                type: string
              kubeformOutput:
                properties:
                  cert:
                    description: The actual certificate data for this client certificate.
                    type: string
                  certSerialNumber:
                    description: The serial number extracted from the certificate
                      data.
                    type: string
                  commonName:
                    description: The common name to be used in the certificate to
                      identify the client. Constrained to [a-zA-Z.-_ ]+. Changing
                      this forces a new resource to be created.
                    type: string
                  createTime:
                    description: The time when the certificate was created in RFC
                      3339 format, for example 2012-11-15T16:19:00.094Z.
                    type: string
                  expirationTime:
                    description: The time when the certificate expires in RFC 3339
                      format, for example 2012-11-15T16:19:00.094Z.
                    type: string
                  id:
                    type: string
                  instance:
                    description: The name of the Cloud SQL instance. Changing this
                      forces a new resource to be created.
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  serverCaCert:
                    description: The CA cert of the server this client cert was generated
                      from.
                    type: string
                  sha1Fingerprint:
                    description: The SHA1 Fingerprint of the certificate.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - commonName
                - instance
                - providerRef
                type: object
              project:
                description: The ID of the project in which the resource belongs.
                  If it is not provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              serverCaCert:
                description: The CA cert of the server this client cert was generated
                  from.
                type: string
              sha1Fingerprint:
                description: The SHA1 Fingerprint of the certificate.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - commonName
            - instance
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
