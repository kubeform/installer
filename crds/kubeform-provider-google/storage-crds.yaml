apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: bucketiammembers.storage.google.kubeform.com
spec:
  group: storage.google.kubeform.com
  names:
    kind: BucketIamMember
    listKind: BucketIamMemberList
    plural: bucketiammembers
    singular: bucketiammember
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                type: string
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    type: string
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  member:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - bucket
                - member
                - providerRef
                - role
                type: object
              member:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - bucket
            - member
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: bucketiampolicies.storage.google.kubeform.com
spec:
  group: storage.google.kubeform.com
  names:
    kind: BucketIamPolicy
    listKind: BucketIamPolicyList
    plural: bucketiampolicies
    singular: bucketiampolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                type: string
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  policyData:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - bucket
                - policyData
                - providerRef
                type: object
              policyData:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - bucket
            - policyData
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: bucketacls.storage.google.kubeform.com
spec:
  group: storage.google.kubeform.com
  names:
    kind: BucketACL
    listKind: BucketACLList
    plural: bucketacls
    singular: bucketacl
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                description: The name of the bucket it applies to.
                type: string
              defaultACL:
                description: Configure this ACL to be the default ACL.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    description: The name of the bucket it applies to.
                    type: string
                  defaultACL:
                    description: Configure this ACL to be the default ACL.
                    type: string
                  id:
                    type: string
                  predefinedACL:
                    description: The canned GCS ACL to apply. Must be set if role_entity
                      is not.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  roleEntity:
                    description: List of role/entity pairs in the form ROLE:entity.
                      See GCS Bucket ACL documentation  for more details. Must be
                      set if predefined_acl is not.
                    items:
                      type: string
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - bucket
                - providerRef
                type: object
              predefinedACL:
                description: The canned GCS ACL to apply. Must be set if role_entity
                  is not.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              roleEntity:
                description: List of role/entity pairs in the form ROLE:entity. See
                  GCS Bucket ACL documentation  for more details. Must be set if predefined_acl
                  is not.
                items:
                  type: string
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - bucket
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: bucketaccesscontrols.storage.google.kubeform.com
spec:
  group: storage.google.kubeform.com
  names:
    kind: BucketAccessControl
    listKind: BucketAccessControlList
    plural: bucketaccesscontrols
    singular: bucketaccesscontrol
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                description: The name of the bucket.
                type: string
              domain:
                description: The domain associated with the entity.
                type: string
              email:
                description: The email address associated with the entity.
                type: string
              entity:
                description: 'The entity holding the permission, in one of the following
                  forms:   user-userId   user-email   group-groupId   group-email   domain-domain   project-team-projectId   allUsers   allAuthenticatedUsers
                  Examples:   The user liz@example.com would be user-liz@example.com.   The
                  group example@googlegroups.com would be   group-example@googlegroups.com.   To
                  refer to all members of the Google Apps for Business domain   example.com,
                  the entity would be domain-example.com.'
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    description: The name of the bucket.
                    type: string
                  domain:
                    description: The domain associated with the entity.
                    type: string
                  email:
                    description: The email address associated with the entity.
                    type: string
                  entity:
                    description: 'The entity holding the permission, in one of the
                      following forms:   user-userId   user-email   group-groupId   group-email   domain-domain   project-team-projectId   allUsers   allAuthenticatedUsers
                      Examples:   The user liz@example.com would be user-liz@example.com.   The
                      group example@googlegroups.com would be   group-example@googlegroups.com.   To
                      refer to all members of the Google Apps for Business domain   example.com,
                      the entity would be domain-example.com.'
                    type: string
                  id:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    description: 'The access permission for the entity. Possible values:
                      ["OWNER", "READER", "WRITER"]'
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - bucket
                - entity
                - providerRef
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                description: 'The access permission for the entity. Possible values:
                  ["OWNER", "READER", "WRITER"]'
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - bucket
            - entity
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: bucketiambindings.storage.google.kubeform.com
spec:
  group: storage.google.kubeform.com
  names:
    kind: BucketIamBinding
    listKind: BucketIamBindingList
    plural: bucketiambindings
    singular: bucketiambinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                type: string
              condition:
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              etag:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    type: string
                  condition:
                    properties:
                      description:
                        type: string
                      expression:
                        type: string
                      title:
                        type: string
                    required:
                    - expression
                    - title
                    type: object
                  etag:
                    type: string
                  id:
                    type: string
                  members:
                    items:
                      type: string
                    type: array
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - bucket
                - members
                - providerRef
                - role
                type: object
              members:
                items:
                  type: string
                type: array
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - bucket
            - members
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: buckets.storage.google.kubeform.com
spec:
  group: storage.google.kubeform.com
  names:
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucketPolicyOnly:
                description: Enables Bucket Policy Only access to a bucket. Deprecated
                type: boolean
              cors:
                description: The bucket's Cross-Origin Resource Sharing (CORS) configuration.
                items:
                  properties:
                    maxAgeSeconds:
                      description: The value, in seconds, to return in the Access-Control-Max-Age
                        header used in preflight responses.
                      format: int64
                      type: integer
                    method:
                      description: 'The list of HTTP methods on which to include CORS
                        response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted
                        in the list of methods, and means "any method".'
                      items:
                        type: string
                      type: array
                    origin:
                      description: 'The list of Origins eligible to receive CORS response
                        headers. Note: "*" is permitted in the list of origins, and
                        means "any Origin".'
                      items:
                        type: string
                      type: array
                    responseHeader:
                      description: The list of HTTP headers other than the simple
                        response headers to give permission for the user-agent to
                        share across domains.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              defaultEventBasedHold:
                type: boolean
              encryption:
                description: The bucket's encryption configuration.
                properties:
                  defaultKmsKeyName:
                    description: A Cloud KMS key that will be used to encrypt objects
                      inserted into this bucket, if no encryption method is specified.
                      You must pay attention to whether the crypto key is available
                      in the location that this bucket is created in. See the docs
                      for more details.
                    type: string
                required:
                - defaultKmsKeyName
                type: object
              forceDestroy:
                description: When deleting a bucket, this boolean option will delete
                  all contained objects. If you try to delete a bucket that contains
                  objects, Terraform will fail that run.
                type: boolean
              id:
                type: string
              kubeformOutput:
                properties:
                  bucketPolicyOnly:
                    description: Enables Bucket Policy Only access to a bucket. Deprecated
                    type: boolean
                  cors:
                    description: The bucket's Cross-Origin Resource Sharing (CORS)
                      configuration.
                    items:
                      properties:
                        maxAgeSeconds:
                          description: The value, in seconds, to return in the Access-Control-Max-Age
                            header used in preflight responses.
                          format: int64
                          type: integer
                        method:
                          description: 'The list of HTTP methods on which to include
                            CORS response headers, (GET, OPTIONS, POST, etc) Note:
                            "*" is permitted in the list of methods, and means "any
                            method".'
                          items:
                            type: string
                          type: array
                        origin:
                          description: 'The list of Origins eligible to receive CORS
                            response headers. Note: "*" is permitted in the list of
                            origins, and means "any Origin".'
                          items:
                            type: string
                          type: array
                        responseHeader:
                          description: The list of HTTP headers other than the simple
                            response headers to give permission for the user-agent
                            to share across domains.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  defaultEventBasedHold:
                    type: boolean
                  encryption:
                    description: The bucket's encryption configuration.
                    properties:
                      defaultKmsKeyName:
                        description: A Cloud KMS key that will be used to encrypt
                          objects inserted into this bucket, if no encryption method
                          is specified. You must pay attention to whether the crypto
                          key is available in the location that this bucket is created
                          in. See the docs for more details.
                        type: string
                    required:
                    - defaultKmsKeyName
                    type: object
                  forceDestroy:
                    description: When deleting a bucket, this boolean option will
                      delete all contained objects. If you try to delete a bucket
                      that contains objects, Terraform will fail that run.
                    type: boolean
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to the bucket.
                    type: object
                  lifecycleRule:
                    description: The bucket's Lifecycle Rules configuration.
                    items:
                      properties:
                        action:
                          description: The Lifecycle Rule's action configuration.
                            A single block of this type is supported.
                          properties:
                            storageClass:
                              description: 'The target Storage Class of objects affected
                                by this Lifecycle Rule. Supported values include:
                                MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.'
                              type: string
                            type:
                              description: 'The type of the action of this Lifecycle
                                Rule. Supported values include: Delete and SetStorageClass.'
                              type: string
                          required:
                          - type
                          type: object
                        condition:
                          description: The Lifecycle Rule's condition configuration.
                          properties:
                            age:
                              description: Minimum age of an object in days to satisfy
                                this condition.
                              format: int64
                              type: integer
                            createdBefore:
                              description: Creation date of an object in RFC 3339
                                (e.g. 2017-06-13) to satisfy this condition.
                              type: string
                            customTimeBefore:
                              description: Creation date of an object in RFC 3339
                                (e.g. 2017-06-13) to satisfy this condition.
                              type: string
                            daysSinceCustomTime:
                              description: Number of days elapsed since the user-specified
                                timestamp set on an object.
                              format: int64
                              type: integer
                            daysSinceNoncurrentTime:
                              description: "Number of days elapsed since the noncurrent
                                timestamp of an object. This \t\t\t\t\t\t\t\t\t\tcondition
                                is relevant only for versioned objects."
                              format: int64
                              type: integer
                            matchesStorageClass:
                              description: 'Storage Class of objects to satisfy this
                                condition. Supported values include: MULTI_REGIONAL,
                                REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, DURABLE_REDUCED_AVAILABILITY.'
                              items:
                                type: string
                              minItems: 1
                              type: array
                            noncurrentTimeBefore:
                              description: Creation date of an object in RFC 3339
                                (e.g. 2017-06-13) to satisfy this condition.
                              type: string
                            numNewerVersions:
                              description: Relevant only for versioned objects. The
                                number of newer versions of an object to satisfy this
                                condition.
                              format: int64
                              type: integer
                            withState:
                              description: 'Match to live and/or archived objects.
                                Unversioned buckets have only live objects. Supported
                                values include: "LIVE", "ARCHIVED", "ANY".'
                              type: string
                          type: object
                      required:
                      - action
                      - condition
                      type: object
                    maxItems: 100
                    type: array
                  location:
                    description: The Google Cloud Storage location
                    type: string
                  logging:
                    description: The bucket's Access & Storage Logs configuration.
                    properties:
                      logBucket:
                        description: The bucket that will receive log objects.
                        type: string
                      logObjectPrefix:
                        description: The object prefix for log objects. If it's not
                          provided, by default Google Cloud Storage sets this to this
                          bucket's name.
                        type: string
                    required:
                    - logBucket
                    type: object
                  name:
                    description: The name of the bucket.
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  requesterPays:
                    description: Enables Requester Pays on a storage bucket.
                    type: boolean
                  retentionPolicy:
                    description: Configuration of the bucket's data retention policy
                      for how long objects in the bucket should be retained.
                    properties:
                      isLocked:
                        description: 'If set to true, the bucket will be locked and
                          permanently restrict edits to the bucket''s retention policy.  Caution:
                          Locking a bucket is an irreversible action.'
                        type: boolean
                      retentionPeriod:
                        description: The period of time, in seconds, that objects
                          in the bucket must be retained and cannot be deleted, overwritten,
                          or archived. The value must be less than 3,155,760,000 seconds.
                        format: int64
                        type: integer
                    required:
                    - retentionPeriod
                    type: object
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                  storageClass:
                    description: 'The Storage Class of the new bucket. Supported values
                      include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE,
                      ARCHIVE.'
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  uniformBucketLevelAccess:
                    description: Enables uniform bucket-level access on a bucket.
                    type: boolean
                  url:
                    description: The base URL of the bucket, in the format gs://<bucket-name>.
                    type: string
                  versioning:
                    description: The bucket's Versioning configuration.
                    properties:
                      enabled:
                        description: While set to true, versioning is fully enabled
                          for this bucket.
                        type: boolean
                    required:
                    - enabled
                    type: object
                  website:
                    description: Configuration if the bucket acts as a website.
                    properties:
                      mainPageSuffix:
                        description: Behaves as the bucket's directory index where
                          missing objects are treated as potential directories.
                        type: string
                      notFoundPage:
                        description: The custom object to return when a requested
                          resource is not found.
                        type: string
                    type: object
                required:
                - name
                - providerRef
                type: object
              labels:
                additionalProperties:
                  type: string
                description: A set of key/value label pairs to assign to the bucket.
                type: object
              lifecycleRule:
                description: The bucket's Lifecycle Rules configuration.
                items:
                  properties:
                    action:
                      description: The Lifecycle Rule's action configuration. A single
                        block of this type is supported.
                      properties:
                        storageClass:
                          description: 'The target Storage Class of objects affected
                            by this Lifecycle Rule. Supported values include: MULTI_REGIONAL,
                            REGIONAL, NEARLINE, COLDLINE, ARCHIVE.'
                          type: string
                        type:
                          description: 'The type of the action of this Lifecycle Rule.
                            Supported values include: Delete and SetStorageClass.'
                          type: string
                      required:
                      - type
                      type: object
                    condition:
                      description: The Lifecycle Rule's condition configuration.
                      properties:
                        age:
                          description: Minimum age of an object in days to satisfy
                            this condition.
                          format: int64
                          type: integer
                        createdBefore:
                          description: Creation date of an object in RFC 3339 (e.g.
                            2017-06-13) to satisfy this condition.
                          type: string
                        customTimeBefore:
                          description: Creation date of an object in RFC 3339 (e.g.
                            2017-06-13) to satisfy this condition.
                          type: string
                        daysSinceCustomTime:
                          description: Number of days elapsed since the user-specified
                            timestamp set on an object.
                          format: int64
                          type: integer
                        daysSinceNoncurrentTime:
                          description: "Number of days elapsed since the noncurrent
                            timestamp of an object. This \t\t\t\t\t\t\t\t\t\tcondition
                            is relevant only for versioned objects."
                          format: int64
                          type: integer
                        matchesStorageClass:
                          description: 'Storage Class of objects to satisfy this condition.
                            Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE,
                            COLDLINE, ARCHIVE, STANDARD, DURABLE_REDUCED_AVAILABILITY.'
                          items:
                            type: string
                          minItems: 1
                          type: array
                        noncurrentTimeBefore:
                          description: Creation date of an object in RFC 3339 (e.g.
                            2017-06-13) to satisfy this condition.
                          type: string
                        numNewerVersions:
                          description: Relevant only for versioned objects. The number
                            of newer versions of an object to satisfy this condition.
                          format: int64
                          type: integer
                        withState:
                          description: 'Match to live and/or archived objects. Unversioned
                            buckets have only live objects. Supported values include:
                            "LIVE", "ARCHIVED", "ANY".'
                          type: string
                      type: object
                  required:
                  - action
                  - condition
                  type: object
                maxItems: 100
                type: array
              location:
                description: The Google Cloud Storage location
                type: string
              logging:
                description: The bucket's Access & Storage Logs configuration.
                properties:
                  logBucket:
                    description: The bucket that will receive log objects.
                    type: string
                  logObjectPrefix:
                    description: The object prefix for log objects. If it's not provided,
                      by default Google Cloud Storage sets this to this bucket's name.
                    type: string
                required:
                - logBucket
                type: object
              name:
                description: The name of the bucket.
                type: string
              project:
                description: The ID of the project in which the resource belongs.
                  If it is not provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              requesterPays:
                description: Enables Requester Pays on a storage bucket.
                type: boolean
              retentionPolicy:
                description: Configuration of the bucket's data retention policy for
                  how long objects in the bucket should be retained.
                properties:
                  isLocked:
                    description: 'If set to true, the bucket will be locked and permanently
                      restrict edits to the bucket''s retention policy.  Caution:
                      Locking a bucket is an irreversible action.'
                    type: boolean
                  retentionPeriod:
                    description: The period of time, in seconds, that objects in the
                      bucket must be retained and cannot be deleted, overwritten,
                      or archived. The value must be less than 3,155,760,000 seconds.
                    format: int64
                    type: integer
                required:
                - retentionPeriod
                type: object
              selfLink:
                description: The URI of the created resource.
                type: string
              storageClass:
                description: 'The Storage Class of the new bucket. Supported values
                  include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE,
                  ARCHIVE.'
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              uniformBucketLevelAccess:
                description: Enables uniform bucket-level access on a bucket.
                type: boolean
              url:
                description: The base URL of the bucket, in the format gs://<bucket-name>.
                type: string
              versioning:
                description: The bucket's Versioning configuration.
                properties:
                  enabled:
                    description: While set to true, versioning is fully enabled for
                      this bucket.
                    type: boolean
                required:
                - enabled
                type: object
              website:
                description: Configuration if the bucket acts as a website.
                properties:
                  mainPageSuffix:
                    description: Behaves as the bucket's directory index where missing
                      objects are treated as potential directories.
                    type: string
                  notFoundPage:
                    description: The custom object to return when a requested resource
                      is not found.
                    type: string
                type: object
            required:
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: bucketobjects.storage.google.kubeform.com
spec:
  group: storage.google.kubeform.com
  names:
    kind: BucketObject
    listKind: BucketObjectList
    plural: bucketobjects
    singular: bucketobject
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                description: The name of the containing bucket.
                type: string
              cacheControl:
                description: Cache-Control directive to specify caching behavior of
                  object data. If omitted and object is accessible to all anonymous
                  users, the default will be public, max-age=3600
                type: string
              contentDisposition:
                description: Content-Disposition of the object data.
                type: string
              contentEncoding:
                description: Content-Encoding of the object data.
                type: string
              contentLanguage:
                description: Content-Language of the object data.
                type: string
              contentType:
                description: Content-Type of the object data. Defaults to "application/octet-stream"
                  or "text/plain; charset=utf-8".
                type: string
              crc32c:
                description: Base 64 CRC32 hash of the uploaded data.
                type: string
              detectMd5hash:
                type: string
              id:
                type: string
              kmsKeyName:
                description: Resource name of the Cloud KMS key that will be used
                  to encrypt the object. Overrides the object metadata's kmsKeyName
                  value, if any.
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    description: The name of the containing bucket.
                    type: string
                  cacheControl:
                    description: Cache-Control directive to specify caching behavior
                      of object data. If omitted and object is accessible to all anonymous
                      users, the default will be public, max-age=3600
                    type: string
                  contentDisposition:
                    description: Content-Disposition of the object data.
                    type: string
                  contentEncoding:
                    description: Content-Encoding of the object data.
                    type: string
                  contentLanguage:
                    description: Content-Language of the object data.
                    type: string
                  contentType:
                    description: Content-Type of the object data. Defaults to "application/octet-stream"
                      or "text/plain; charset=utf-8".
                    type: string
                  crc32c:
                    description: Base 64 CRC32 hash of the uploaded data.
                    type: string
                  detectMd5hash:
                    type: string
                  id:
                    type: string
                  kmsKeyName:
                    description: Resource name of the Cloud KMS key that will be used
                      to encrypt the object. Overrides the object metadata's kmsKeyName
                      value, if any.
                    type: string
                  md5hash:
                    description: Base 64 MD5 hash of the uploaded data.
                    type: string
                  mediaLink:
                    description: A url reference to download this object.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: User-provided metadata, in key/value pairs.
                    type: object
                  name:
                    description: The name of the object. If you're interpolating the
                      name of this object, see output_name instead.
                    type: string
                  outputName:
                    description: The name of the object. Use this field in interpolations
                      with google_storage_object_acl to recreate google_storage_object_acl
                      resources when your google_storage_bucket_object is recreated.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    description: A url reference to this object.
                    type: string
                  source:
                    description: A path to the data you want to upload. Must be defined
                      if content is not.
                    type: string
                  storageClass:
                    description: 'The StorageClass of the new bucket object. Supported
                      values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE,
                      ARCHIVE. If not provided, this defaults to the bucket''s default
                      storage class or to a standard class.'
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - bucket
                - name
                - providerRef
                type: object
              md5hash:
                description: Base 64 MD5 hash of the uploaded data.
                type: string
              mediaLink:
                description: A url reference to download this object.
                type: string
              metadata:
                additionalProperties:
                  type: string
                description: User-provided metadata, in key/value pairs.
                type: object
              name:
                description: The name of the object. If you're interpolating the name
                  of this object, see output_name instead.
                type: string
              outputName:
                description: The name of the object. Use this field in interpolations
                  with google_storage_object_acl to recreate google_storage_object_acl
                  resources when your google_storage_bucket_object is recreated.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                description: A url reference to this object.
                type: string
              source:
                description: A path to the data you want to upload. Must be defined
                  if content is not.
                type: string
              storageClass:
                description: 'The StorageClass of the new bucket object. Supported
                  values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.
                  If not provided, this defaults to the bucket''s default storage
                  class or to a standard class.'
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - bucket
            - name
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: objectacls.storage.google.kubeform.com
spec:
  group: storage.google.kubeform.com
  names:
    kind: ObjectACL
    listKind: ObjectACLList
    plural: objectacls
    singular: objectacl
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    type: string
                  id:
                    type: string
                  object:
                    type: string
                  predefinedACL:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  roleEntity:
                    items:
                      type: string
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - bucket
                - object
                - providerRef
                type: object
              object:
                type: string
              predefinedACL:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              roleEntity:
                items:
                  type: string
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - bucket
            - object
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: hmackeys.storage.google.kubeform.com
spec:
  group: storage.google.kubeform.com
  names:
    kind: HmacKey
    listKind: HmacKeyList
    plural: hmackeys
    singular: hmackey
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              accessID:
                description: The access ID of the HMAC Key.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  accessID:
                    description: The access ID of the HMAC Key.
                    type: string
                  id:
                    type: string
                  project:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  serviceAccountEmail:
                    description: The email address of the key's associated service
                      account.
                    type: string
                  state:
                    description: 'The state of the key. Can be set to one of ACTIVE,
                      INACTIVE. Default value: "ACTIVE" Possible values: ["ACTIVE",
                      "INACTIVE"]'
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeCreated:
                    description: '''The creation time of the HMAC key in RFC 3339
                      format. '''
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  updated:
                    description: '''The last modification time of the HMAC key metadata
                      in RFC 3339 format.'''
                    type: string
                required:
                - providerRef
                - serviceAccountEmail
                type: object
              project:
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              serviceAccountEmail:
                description: The email address of the key's associated service account.
                type: string
              state:
                description: 'The state of the key. Can be set to one of ACTIVE, INACTIVE.
                  Default value: "ACTIVE" Possible values: ["ACTIVE", "INACTIVE"]'
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeCreated:
                description: '''The creation time of the HMAC key in RFC 3339 format.
                  '''
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              updated:
                description: '''The last modification time of the HMAC key metadata
                  in RFC 3339 format.'''
                type: string
            required:
            - providerRef
            - serviceAccountEmail
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: transferjobs.storage.google.kubeform.com
spec:
  group: storage.google.kubeform.com
  names:
    kind: TransferJob
    listKind: TransferJobList
    plural: transferjobs
    singular: transferjob
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              creationTime:
                description: When the Transfer Job was created.
                type: string
              deletionTime:
                description: When the Transfer Job was deleted.
                type: string
              description:
                description: Unique description to identify the Transfer Job.
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  creationTime:
                    description: When the Transfer Job was created.
                    type: string
                  deletionTime:
                    description: When the Transfer Job was deleted.
                    type: string
                  description:
                    description: Unique description to identify the Transfer Job.
                    type: string
                  id:
                    type: string
                  lastModificationTime:
                    description: When the Transfer Job was last modified.
                    type: string
                  name:
                    description: The name of the Transfer Job.
                    type: string
                  project:
                    description: The project in which the resource belongs. If it
                      is not provided, the provider project is used.
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  schedule:
                    description: Schedule specification defining when the Transfer
                      Job should be scheduled to start, end and what time to run.
                    properties:
                      scheduleEndDate:
                        description: The last day the recurring transfer will be run.
                          If schedule_end_date is the same as schedule_start_date,
                          the transfer will be executed only once.
                        properties:
                          day:
                            description: Day of month. Must be from 1 to 31 and valid
                              for the year and month.
                            format: int64
                            type: integer
                          month:
                            description: Month of year. Must be from 1 to 12.
                            format: int64
                            type: integer
                          year:
                            description: Year of date. Must be from 1 to 9999.
                            format: int64
                            type: integer
                        required:
                        - day
                        - month
                        - year
                        type: object
                      scheduleStartDate:
                        description: The first day the recurring transfer is scheduled
                          to run. If schedule_start_date is in the past, the transfer
                          will run for the first time on the following day.
                        properties:
                          day:
                            description: Day of month. Must be from 1 to 31 and valid
                              for the year and month.
                            format: int64
                            type: integer
                          month:
                            description: Month of year. Must be from 1 to 12.
                            format: int64
                            type: integer
                          year:
                            description: Year of date. Must be from 1 to 9999.
                            format: int64
                            type: integer
                        required:
                        - day
                        - month
                        - year
                        type: object
                      startTimeOfDay:
                        description: The time in UTC at which the transfer will be
                          scheduled to start in a day. Transfers may start later than
                          this time. If not specified, recurring and one-time transfers
                          that are scheduled to run today will run immediately; recurring
                          transfers that are scheduled to run on a future date will
                          start at approximately midnight UTC on that date. Note that
                          when configuring a transfer with the Cloud Platform Console,
                          the transfer's start time in a day is specified in your
                          local timezone.
                        properties:
                          hours:
                            description: Hours of day in 24 hour format. Should be
                              from 0 to 23.
                            format: int64
                            type: integer
                          minutes:
                            description: Minutes of hour of day. Must be from 0 to
                              59.
                            format: int64
                            type: integer
                          nanos:
                            description: Fractions of seconds in nanoseconds. Must
                              be from 0 to 999,999,999.
                            format: int64
                            type: integer
                          seconds:
                            description: Seconds of minutes of the time. Must normally
                              be from 0 to 59.
                            format: int64
                            type: integer
                        required:
                        - hours
                        - minutes
                        - nanos
                        - seconds
                        type: object
                    required:
                    - scheduleStartDate
                    type: object
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  status:
                    description: 'Status of the job. Default: ENABLED. NOTE: The effect
                      of the new job status takes place during a subsequent job run.
                      For example, if you change the job status from ENABLED to DISABLED,
                      and an operation spawned by the transfer is running, the status
                      change would not affect the current operation.'
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  transferSpec:
                    description: Transfer specification.
                    properties:
                      awsS3DataSource:
                        description: An AWS S3 data source.
                        properties:
                          awsAccessKey:
                            description: AWS credentials block.
                            type: object
                          bucketName:
                            description: S3 Bucket name.
                            type: string
                        required:
                        - awsAccessKey
                        - bucketName
                        type: object
                      gcsDataSink:
                        description: A Google Cloud Storage data sink.
                        properties:
                          bucketName:
                            description: Google Cloud Storage bucket name.
                            type: string
                        required:
                        - bucketName
                        type: object
                      gcsDataSource:
                        description: A Google Cloud Storage data source.
                        properties:
                          bucketName:
                            description: Google Cloud Storage bucket name.
                            type: string
                        required:
                        - bucketName
                        type: object
                      httpDataSource:
                        description: An HTTP URL data source.
                        properties:
                          listURL:
                            description: The URL that points to the file that stores
                              the object list entries. This file must allow public
                              access. Currently, only URLs with HTTP and HTTPS schemes
                              are supported.
                            type: string
                        required:
                        - listURL
                        type: object
                      objectConditions:
                        description: Only objects that satisfy these object conditions
                          are included in the set of data source and data sink objects.
                          Object conditions based on objects' last_modification_time
                          do not exclude objects in a data sink.
                        properties:
                          excludePrefixes:
                            description: exclude_prefixes must follow the requirements
                              described for include_prefixes.
                            items:
                              type: string
                            type: array
                          includePrefixes:
                            description: If include_refixes is specified, objects
                              that satisfy the object conditions must have names that
                              start with one of the include_prefixes and that do not
                              start with any of the exclude_prefixes. If include_prefixes
                              is not specified, all objects except those that have
                              names starting with one of the exclude_prefixes must
                              satisfy the object conditions.
                            items:
                              type: string
                            type: array
                          maxTimeElapsedSinceLastModification:
                            description: 'A duration in seconds with up to nine fractional
                              digits, terminated by ''s''. Example: "3.5s".'
                            type: string
                          minTimeElapsedSinceLastModification:
                            description: 'A duration in seconds with up to nine fractional
                              digits, terminated by ''s''. Example: "3.5s".'
                            type: string
                        type: object
                      transferOptions:
                        description: Characteristics of how to treat files from datasource
                          and sink during job. If the option delete_objects_unique_in_sink
                          is true, object conditions based on objects' last_modification_time
                          are ignored and do not exclude objects in a data source
                          or a data sink.
                        properties:
                          deleteObjectsFromSourceAfterTransfer:
                            description: Whether objects should be deleted from the
                              source after they are transferred to the sink. Note
                              that this option and delete_objects_unique_in_sink are
                              mutually exclusive.
                            type: boolean
                          deleteObjectsUniqueInSink:
                            description: Whether objects that exist only in the sink
                              should be deleted. Note that this option and delete_objects_from_source_after_transfer
                              are mutually exclusive.
                            type: boolean
                          overwriteObjectsAlreadyExistingInSink:
                            description: Whether overwriting objects that already
                              exist in the sink is allowed.
                            type: boolean
                        type: object
                    type: object
                required:
                - description
                - providerRef
                - schedule
                - transferSpec
                type: object
              lastModificationTime:
                description: When the Transfer Job was last modified.
                type: string
              name:
                description: The name of the Transfer Job.
                type: string
              project:
                description: The project in which the resource belongs. If it is not
                  provided, the provider project is used.
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              schedule:
                description: Schedule specification defining when the Transfer Job
                  should be scheduled to start, end and what time to run.
                properties:
                  scheduleEndDate:
                    description: The last day the recurring transfer will be run.
                      If schedule_end_date is the same as schedule_start_date, the
                      transfer will be executed only once.
                    properties:
                      day:
                        description: Day of month. Must be from 1 to 31 and valid
                          for the year and month.
                        format: int64
                        type: integer
                      month:
                        description: Month of year. Must be from 1 to 12.
                        format: int64
                        type: integer
                      year:
                        description: Year of date. Must be from 1 to 9999.
                        format: int64
                        type: integer
                    required:
                    - day
                    - month
                    - year
                    type: object
                  scheduleStartDate:
                    description: The first day the recurring transfer is scheduled
                      to run. If schedule_start_date is in the past, the transfer
                      will run for the first time on the following day.
                    properties:
                      day:
                        description: Day of month. Must be from 1 to 31 and valid
                          for the year and month.
                        format: int64
                        type: integer
                      month:
                        description: Month of year. Must be from 1 to 12.
                        format: int64
                        type: integer
                      year:
                        description: Year of date. Must be from 1 to 9999.
                        format: int64
                        type: integer
                    required:
                    - day
                    - month
                    - year
                    type: object
                  startTimeOfDay:
                    description: The time in UTC at which the transfer will be scheduled
                      to start in a day. Transfers may start later than this time.
                      If not specified, recurring and one-time transfers that are
                      scheduled to run today will run immediately; recurring transfers
                      that are scheduled to run on a future date will start at approximately
                      midnight UTC on that date. Note that when configuring a transfer
                      with the Cloud Platform Console, the transfer's start time in
                      a day is specified in your local timezone.
                    properties:
                      hours:
                        description: Hours of day in 24 hour format. Should be from
                          0 to 23.
                        format: int64
                        type: integer
                      minutes:
                        description: Minutes of hour of day. Must be from 0 to 59.
                        format: int64
                        type: integer
                      nanos:
                        description: Fractions of seconds in nanoseconds. Must be
                          from 0 to 999,999,999.
                        format: int64
                        type: integer
                      seconds:
                        description: Seconds of minutes of the time. Must normally
                          be from 0 to 59.
                        format: int64
                        type: integer
                    required:
                    - hours
                    - minutes
                    - nanos
                    - seconds
                    type: object
                required:
                - scheduleStartDate
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              status:
                description: 'Status of the job. Default: ENABLED. NOTE: The effect
                  of the new job status takes place during a subsequent job run. For
                  example, if you change the job status from ENABLED to DISABLED,
                  and an operation spawned by the transfer is running, the status
                  change would not affect the current operation.'
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              transferSpec:
                description: Transfer specification.
                properties:
                  awsS3DataSource:
                    description: An AWS S3 data source.
                    properties:
                      awsAccessKey:
                        description: AWS credentials block.
                        type: object
                      bucketName:
                        description: S3 Bucket name.
                        type: string
                    required:
                    - awsAccessKey
                    - bucketName
                    type: object
                  gcsDataSink:
                    description: A Google Cloud Storage data sink.
                    properties:
                      bucketName:
                        description: Google Cloud Storage bucket name.
                        type: string
                    required:
                    - bucketName
                    type: object
                  gcsDataSource:
                    description: A Google Cloud Storage data source.
                    properties:
                      bucketName:
                        description: Google Cloud Storage bucket name.
                        type: string
                    required:
                    - bucketName
                    type: object
                  httpDataSource:
                    description: An HTTP URL data source.
                    properties:
                      listURL:
                        description: The URL that points to the file that stores the
                          object list entries. This file must allow public access.
                          Currently, only URLs with HTTP and HTTPS schemes are supported.
                        type: string
                    required:
                    - listURL
                    type: object
                  objectConditions:
                    description: Only objects that satisfy these object conditions
                      are included in the set of data source and data sink objects.
                      Object conditions based on objects' last_modification_time do
                      not exclude objects in a data sink.
                    properties:
                      excludePrefixes:
                        description: exclude_prefixes must follow the requirements
                          described for include_prefixes.
                        items:
                          type: string
                        type: array
                      includePrefixes:
                        description: If include_refixes is specified, objects that
                          satisfy the object conditions must have names that start
                          with one of the include_prefixes and that do not start with
                          any of the exclude_prefixes. If include_prefixes is not
                          specified, all objects except those that have names starting
                          with one of the exclude_prefixes must satisfy the object
                          conditions.
                        items:
                          type: string
                        type: array
                      maxTimeElapsedSinceLastModification:
                        description: 'A duration in seconds with up to nine fractional
                          digits, terminated by ''s''. Example: "3.5s".'
                        type: string
                      minTimeElapsedSinceLastModification:
                        description: 'A duration in seconds with up to nine fractional
                          digits, terminated by ''s''. Example: "3.5s".'
                        type: string
                    type: object
                  transferOptions:
                    description: Characteristics of how to treat files from datasource
                      and sink during job. If the option delete_objects_unique_in_sink
                      is true, object conditions based on objects' last_modification_time
                      are ignored and do not exclude objects in a data source or a
                      data sink.
                    properties:
                      deleteObjectsFromSourceAfterTransfer:
                        description: Whether objects should be deleted from the source
                          after they are transferred to the sink. Note that this option
                          and delete_objects_unique_in_sink are mutually exclusive.
                        type: boolean
                      deleteObjectsUniqueInSink:
                        description: Whether objects that exist only in the sink should
                          be deleted. Note that this option and delete_objects_from_source_after_transfer
                          are mutually exclusive.
                        type: boolean
                      overwriteObjectsAlreadyExistingInSink:
                        description: Whether overwriting objects that already exist
                          in the sink is allowed.
                        type: boolean
                    type: object
                type: object
            required:
            - description
            - providerRef
            - schedule
            - transferSpec
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: notifications.storage.google.kubeform.com
spec:
  group: storage.google.kubeform.com
  names:
    kind: Notification
    listKind: NotificationList
    plural: notifications
    singular: notification
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                description: The name of the bucket.
                type: string
              customAttributes:
                additionalProperties:
                  type: string
                description: ' A set of key/value attribute pairs to attach to each
                  Cloud Pub/Sub message published for this notification subscription'
                type: object
              eventTypes:
                description: 'List of event type filters for this notification config.
                  If not specified, Cloud Storage will send notifications for all
                  event types. The valid types are: "OBJECT_FINALIZE", "OBJECT_METADATA_UPDATE",
                  "OBJECT_DELETE", "OBJECT_ARCHIVE"'
                items:
                  type: string
                type: array
              id:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    description: The name of the bucket.
                    type: string
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: ' A set of key/value attribute pairs to attach to
                      each Cloud Pub/Sub message published for this notification subscription'
                    type: object
                  eventTypes:
                    description: 'List of event type filters for this notification
                      config. If not specified, Cloud Storage will send notifications
                      for all event types. The valid types are: "OBJECT_FINALIZE",
                      "OBJECT_METADATA_UPDATE", "OBJECT_DELETE", "OBJECT_ARCHIVE"'
                    items:
                      type: string
                    type: array
                  id:
                    type: string
                  notificationID:
                    description: The ID of the created notification.
                    type: string
                  objectNamePrefix:
                    description: Specifies a prefix path filter for this notification
                      config. Cloud Storage will only send notifications for objects
                      in this bucket whose names begin with the specified prefix.
                    type: string
                  payloadFormat:
                    description: The desired content of the Payload. One of "JSON_API_V1"
                      or "NONE".
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  topic:
                    description: The Cloud Pub/Sub topic to which this subscription
                      publishes. Expects either the  topic name, assumed to belong
                      to the default GCP provider project, or the project-level name,  i.e.
                      projects/my-gcp-project/topics/my-topic or my-topic. If the
                      project is not set in the provider, you will need to use the
                      project-level name.
                    type: string
                required:
                - bucket
                - payloadFormat
                - providerRef
                - topic
                type: object
              notificationID:
                description: The ID of the created notification.
                type: string
              objectNamePrefix:
                description: Specifies a prefix path filter for this notification
                  config. Cloud Storage will only send notifications for objects in
                  this bucket whose names begin with the specified prefix.
                type: string
              payloadFormat:
                description: The desired content of the Payload. One of "JSON_API_V1"
                  or "NONE".
                type: string
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              selfLink:
                description: The URI of the created resource.
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              topic:
                description: The Cloud Pub/Sub topic to which this subscription publishes.
                  Expects either the  topic name, assumed to belong to the default
                  GCP provider project, or the project-level name,  i.e. projects/my-gcp-project/topics/my-topic
                  or my-topic. If the project is not set in the provider, you will
                  need to use the project-level name.
                type: string
            required:
            - bucket
            - payloadFormat
            - providerRef
            - topic
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: objectaccesscontrols.storage.google.kubeform.com
spec:
  group: storage.google.kubeform.com
  names:
    kind: ObjectAccessControl
    listKind: ObjectAccessControlList
    plural: objectaccesscontrols
    singular: objectaccesscontrol
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                description: The name of the bucket.
                type: string
              domain:
                description: The domain associated with the entity.
                type: string
              email:
                description: The email address associated with the entity.
                type: string
              entity:
                description: 'The entity holding the permission, in one of the following
                  forms:   * user-{{userId}}   * user-{{email}} (such as "user-liz@example.com")   *
                  group-{{groupId}}   * group-{{email}} (such as "group-example@googlegroups.com")   *
                  domain-{{domain}} (such as "domain-example.com")   * project-team-{{projectId}}   *
                  allUsers   * allAuthenticatedUsers'
                type: string
              entityID:
                description: The ID for the entity
                type: string
              generation:
                description: The content generation of the object, if applied to an
                  object.
                format: int64
                type: integer
              id:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    description: The name of the bucket.
                    type: string
                  domain:
                    description: The domain associated with the entity.
                    type: string
                  email:
                    description: The email address associated with the entity.
                    type: string
                  entity:
                    description: 'The entity holding the permission, in one of the
                      following forms:   * user-{{userId}}   * user-{{email}} (such
                      as "user-liz@example.com")   * group-{{groupId}}   * group-{{email}}
                      (such as "group-example@googlegroups.com")   * domain-{{domain}}
                      (such as "domain-example.com")   * project-team-{{projectId}}   *
                      allUsers   * allAuthenticatedUsers'
                    type: string
                  entityID:
                    description: The ID for the entity
                    type: string
                  generation:
                    description: The content generation of the object, if applied
                      to an object.
                    format: int64
                    type: integer
                  id:
                    type: string
                  object:
                    description: The name of the object to apply the access control
                      to.
                    type: string
                  projectTeam:
                    description: The project team associated with the entity
                    items:
                      properties:
                        projectNumber:
                          description: The project team associated with the entity
                          type: string
                        team:
                          description: 'The team. Possible values: ["editors", "owners",
                            "viewers"]'
                          type: string
                      type: object
                    type: array
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    description: 'The access permission for the entity. Possible values:
                      ["OWNER", "READER"]'
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - bucket
                - entity
                - object
                - providerRef
                - role
                type: object
              object:
                description: The name of the object to apply the access control to.
                type: string
              projectTeam:
                description: The project team associated with the entity
                items:
                  properties:
                    projectNumber:
                      description: The project team associated with the entity
                      type: string
                    team:
                      description: 'The team. Possible values: ["editors", "owners",
                        "viewers"]'
                      type: string
                  type: object
                type: array
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                description: 'The access permission for the entity. Possible values:
                  ["OWNER", "READER"]'
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - bucket
            - entity
            - object
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: defaultobjectacls.storage.google.kubeform.com
spec:
  group: storage.google.kubeform.com
  names:
    kind: DefaultObjectACL
    listKind: DefaultObjectACLList
    plural: defaultobjectacls
    singular: defaultobjectacl
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                type: string
              id:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    type: string
                  id:
                    type: string
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  roleEntity:
                    items:
                      type: string
                    type: array
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                required:
                - bucket
                - providerRef
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              roleEntity:
                items:
                  type: string
                type: array
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
            required:
            - bucket
            - providerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: metrics
  name: metricsconfigurations.metrics.appscode.com
spec:
  group: metrics.appscode.com
  names:
    categories:
    - metrics
    - appscode
    - all
    kind: MetricsConfiguration
    listKind: MetricsConfigurationList
    plural: metricsconfigurations
    singular: metricsconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetRef.apiVersion
      name: APIVersion
      type: string
    - jsonPath: .spec.targetRef.kind
      name: Kind
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricsConfigurationSpec is the spec of MetricsConfiguration
              object.
            properties:
              metrics:
                description: List of Metrics configuration for the resource object
                  defined in TargetRef
                items:
                  description: Metrics contains the configuration of a metric in prometheus
                    style.
                  properties:
                    field:
                      description: Field defines the metric value path of the manifest
                        file and the type of that value
                      properties:
                        path:
                          description: 'Path defines the json path of the object.
                            Example: For deployment spec replica count, the path will
                            be .spec.replicas'
                          type: string
                        type:
                          description: Type defines the type of the value in the given
                            Path Type can be "Integer" for integer value like .spec.replicas,
                            "DateTime" for time stamp value like .metadata.creationTimestamp
                            "Array" for array field like .spec.containers "String"
                            for string field like .statue.phase (for pod status)
                          enum:
                          - Integer
                          - DateTime
                          - Array
                          - String
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    help:
                      description: 'Help is used to describe the metrics. Example:
                        For kube_deployment_spec_replicas, help string can be "Number
                        of desired pods for a deployment."'
                      type: string
                    labels:
                      description: Labels defines the metric labels as a key-value
                        pair
                      items:
                        description: "Label contains the information of a metric label.
                          Given labels are always added in the metrics along with
                          resource name and namespace. Resource's name and namespace
                          are always added in the labels by default. No configuration
                          is needed for name and namespace labels. \n Example: kube_pod_info{pod=\"<pod_name>\",
                          namespace=\"<pod_namespace>\", host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                          node=\"kind-control-plane\"}  1 In the example pod, namespace,
                          host_ip, pod_ip, node are labels. pod(resource name) and
                          namespace are default labels. No configurations is needed
                          for those. \n To generate others labels, config should be
                          given in the following way \n labels:   - key: host_ip     valuePath:
                          .status.hostIP   - key: pod_ip     valuePath: .status.podIP
                          \  - key: node     valuePath: .spec.nodeName \n Either Value
                          or ValuePath must be specified for a Label. If both is specified,
                          ValuePath is ignored. Note that if a valuePath doesn't exist
                          for a label key, the label will be ignored."
                        properties:
                          key:
                            description: Key defines the label key
                            type: string
                          value:
                            description: 'Value defines the hard coded label value.
                              Example: labels:   - key: unit     value: byte   - key:
                              environment     value: production'
                            type: string
                          valuePath:
                            description: 'ValuePath defines the label value path.
                              Example: To add deployment''s resource version as labels,
                              labels:   - key: version     valuePath: .metadata.resourceVersion'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    metricValue:
                      description: "MetricValue defines the configuration to obtain
                        metric value. \n Metrics must contain either States or MetricValue.
                        If both are specified, MetricValue will be ignored."
                      properties:
                        value:
                          description: "Value contains the metric value. It is always
                            equal to 1. It is defined when some information of the
                            object is collected as labels but there is no specific
                            metric value. \n Example: For metrics \"kube_pod_info\",
                            there are some information like host_ip, pod_ip, node
                            name is collected as labels. As there must be a metric
                            value, metric value is kept as 1. The metric will look
                            like `kube_pod_info{host_ip=\"172.18.0.2\", pod_ip=\"10.244.0.14\",
                            node=\"kind-control-plane\" .....}  1`"
                          format: double
                          type: number
                        valueFromExpression:
                          description: "ValueFromExpression contains an expression
                            for the metric value expression can be a function as well.
                            Parameters is used in the expression string \n Available
                            expression evaluation functions are: \n toInt() returns
                            1 if the expression is true otherwise 0, example: toInt(phase
                            == 'Running') \n evaluatePercentage(a, b) returns the
                            value of (a * b%) example: evaluatePercentage(replicas,
                            maxUnavailable) \n calculateCPU() returns the cpu in unit
                            core example: calculateCPU(cpu), for cpu value 150m, it
                            will return 0.15 \n calculateMemory() returns the memory
                            size in byte example: calculateMemory(memory), for memory
                            value 1 ki, it will return 1024 \n toUnix() returns the
                            DateTime string into unix format. example: toUnix(dateTime)
                            will return the corresponding unix value for the given
                            dateTime \n in above examples phase, replicas, maxUnavailable,
                            cpu, memory, dateTime are Parameter's key those values
                            will come from corresponding Parameter's value"
                          type: string
                        valueFromPath:
                          description: "ValueFromPath contains the field path of the
                            manifest file of a object. ValueFromPath is used when
                            the metric value is coming from any specific json path
                            of the object. \n Example: For metrics \"kube_deployment_spec_replicas\",
                            the metricValue is coming from a specific path .spec.replicas
                            In this case, valueFromPath: .spec.replicas Some example
                            of json path: .metadata.observedGeneration, .spec.restartPolicy,
                            .status.startTime \n Some example of json path which is
                            coming from an element of an array: .spec.containers[*].image,
                            .status.containerStatuses[*].restartCount"
                          type: string
                      type: object
                    name:
                      description: 'Name defines the metrics name. Name should be
                        in snake case. Example: kube_deployment_spec_replicas'
                      type: string
                    params:
                      description: Params is list of parameters configuration used
                        in expression evaluation
                      items:
                        description: Parameter contains the information of a parameter
                          used in expression evaluation Parameter should contain an
                          user defined key and corresponding Value or ValuePath. Either
                          Value or ValuePath must be specified. If both are specified,
                          ValuePath is ignored.
                        properties:
                          key:
                            description: Key defines the parameter's key
                            type: string
                          value:
                            description: Value defines user defined parameter's value.
                            type: string
                          valuePath:
                            description: 'ValuePath defines the manifest field path
                              for the parameter''s value. Example: To add deployment''s
                              spec replica count as parameter, params:   - key: replica     valuePath:
                              .spec.replicas'
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    states:
                      description: "States handle metrics with label cardinality.
                        States specify the possible states for a label and their corresponding
                        MetricValue configuration. \n Metrics must contain either
                        States or MetricValue. If both are specified, MetricValue
                        will be ignored."
                      properties:
                        labelKey:
                          description: 'LabelKey defines an user defined label key
                            of the label which label cardinality is greater than one.
                            Example: For metric "kube_pod_status_phase", the LabelKey
                            can be "phase"'
                          type: string
                        values:
                          description: 'Values contains the list of state values.
                            The size of the list is always equal to the cardinality
                            of that label. Example: "kube_pod_statue_phase" metric
                            has a label "phase" which cardinality is equal to 5. So
                            Values should have StateValues config for all of them.'
                          items:
                            description: StateValues contains the information of a
                              state value. StateValues is used to define state with
                              all possible label values and corresponding MetricValue.
                            properties:
                              labelValue:
                                description: 'LabelValue defines the value of the
                                  label. Example: For labelKey "phase" (metric: kube_pod_status_phase
                                  path: .status.phase ) label value can be "Running",
                                  "Succeeded", "Failed", "Unknown" and "Pending"'
                                type: string
                              metricValue:
                                description: MetricValue defines the configuration
                                  of the metric value for the corresponding LabelValue
                                properties:
                                  value:
                                    description: "Value contains the metric value.
                                      It is always equal to 1. It is defined when
                                      some information of the object is collected
                                      as labels but there is no specific metric value.
                                      \n Example: For metrics \"kube_pod_info\", there
                                      are some information like host_ip, pod_ip, node
                                      name is collected as labels. As there must be
                                      a metric value, metric value is kept as 1. The
                                      metric will look like `kube_pod_info{host_ip=\"172.18.0.2\",
                                      pod_ip=\"10.244.0.14\", node=\"kind-control-plane\"
                                      .....}  1`"
                                    format: double
                                    type: number
                                  valueFromExpression:
                                    description: "ValueFromExpression contains an
                                      expression for the metric value expression can
                                      be a function as well. Parameters is used in
                                      the expression string \n Available expression
                                      evaluation functions are: \n toInt() returns
                                      1 if the expression is true otherwise 0, example:
                                      toInt(phase == 'Running') \n evaluatePercentage(a,
                                      b) returns the value of (a * b%) example: evaluatePercentage(replicas,
                                      maxUnavailable) \n calculateCPU() returns the
                                      cpu in unit core example: calculateCPU(cpu),
                                      for cpu value 150m, it will return 0.15 \n calculateMemory()
                                      returns the memory size in byte example: calculateMemory(memory),
                                      for memory value 1 ki, it will return 1024 \n
                                      toUnix() returns the DateTime string into unix
                                      format. example: toUnix(dateTime) will return
                                      the corresponding unix value for the given dateTime
                                      \n in above examples phase, replicas, maxUnavailable,
                                      cpu, memory, dateTime are Parameter's key those
                                      values will come from corresponding Parameter's
                                      value"
                                    type: string
                                  valueFromPath:
                                    description: "ValueFromPath contains the field
                                      path of the manifest file of a object. ValueFromPath
                                      is used when the metric value is coming from
                                      any specific json path of the object. \n Example:
                                      For metrics \"kube_deployment_spec_replicas\",
                                      the metricValue is coming from a specific path
                                      .spec.replicas In this case, valueFromPath:
                                      .spec.replicas Some example of json path: .metadata.observedGeneration,
                                      .spec.restartPolicy, .status.startTime \n Some
                                      example of json path which is coming from an
                                      element of an array: .spec.containers[*].image,
                                      .status.containerStatuses[*].restartCount"
                                    type: string
                                type: object
                            required:
                            - labelValue
                            - metricValue
                            type: object
                          type: array
                      required:
                      - labelKey
                      - values
                      type: object
                    type:
                      description: Type defines the metrics type. For kubernetes based
                        object, types can only be "gauge"
                      enum:
                      - gauge
                      type: string
                  required:
                  - help
                  - name
                  - type
                  type: object
                type: array
              targetRef:
                description: TargetRef defines the object for which metrics will be
                  collected
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - metrics
            - targetRef
            type: object
        type: object
    served: true
    storage: true
    subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubeform
  name: defaultobjectaccesscontrols.storage.google.kubeform.com
spec:
  group: storage.google.kubeform.com
  names:
    kind: DefaultObjectAccessControl
    listKind: DefaultObjectAccessControlList
    plural: defaultobjectaccesscontrols
    singular: defaultobjectaccesscontrol
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucket:
                description: The name of the bucket.
                type: string
              domain:
                description: The domain associated with the entity.
                type: string
              email:
                description: The email address associated with the entity.
                type: string
              entity:
                description: 'The entity holding the permission, in one of the following
                  forms:   * user-{{userId}}   * user-{{email}} (such as "user-liz@example.com")   *
                  group-{{groupId}}   * group-{{email}} (such as "group-example@googlegroups.com")   *
                  domain-{{domain}} (such as "domain-example.com")   * project-team-{{projectId}}   *
                  allUsers   * allAuthenticatedUsers'
                type: string
              entityID:
                description: The ID for the entity
                type: string
              generation:
                description: The content generation of the object, if applied to an
                  object.
                format: int64
                type: integer
              id:
                type: string
              kubeformOutput:
                properties:
                  bucket:
                    description: The name of the bucket.
                    type: string
                  domain:
                    description: The domain associated with the entity.
                    type: string
                  email:
                    description: The email address associated with the entity.
                    type: string
                  entity:
                    description: 'The entity holding the permission, in one of the
                      following forms:   * user-{{userId}}   * user-{{email}} (such
                      as "user-liz@example.com")   * group-{{groupId}}   * group-{{email}}
                      (such as "group-example@googlegroups.com")   * domain-{{domain}}
                      (such as "domain-example.com")   * project-team-{{projectId}}   *
                      allUsers   * allAuthenticatedUsers'
                    type: string
                  entityID:
                    description: The ID for the entity
                    type: string
                  generation:
                    description: The content generation of the object, if applied
                      to an object.
                    format: int64
                    type: integer
                  id:
                    type: string
                  object:
                    description: The name of the object, if applied to an object.
                    type: string
                  projectTeam:
                    description: The project team associated with the entity
                    items:
                      properties:
                        projectNumber:
                          description: The project team associated with the entity
                          type: string
                        team:
                          description: 'The team. Possible values: ["editors", "owners",
                            "viewers"]'
                          type: string
                      type: object
                    type: array
                  providerRef:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  role:
                    description: 'The access permission for the entity. Possible values:
                      ["OWNER", "READER"]'
                    type: string
                  terminationPolicy:
                    enum:
                    - Delete
                    - DoNotTerminate
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - bucket
                - entity
                - providerRef
                - role
                type: object
              object:
                description: The name of the object, if applied to an object.
                type: string
              projectTeam:
                description: The project team associated with the entity
                items:
                  properties:
                    projectNumber:
                      description: The project team associated with the entity
                      type: string
                    team:
                      description: 'The team. Possible values: ["editors", "owners",
                        "viewers"]'
                      type: string
                  type: object
                type: array
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              role:
                description: 'The access permission for the entity. Possible values:
                  ["OWNER", "READER"]'
                type: string
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              timeouts:
                properties:
                  create:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  default:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  delete:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  read:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  update:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
            required:
            - bucket
            - entity
            - providerRef
            - role
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
